{"version":3,"sources":["trainingModule/TrainingsList/RebTrainingList.tsx"],"names":["defaultAlert","target","msg","_RebTrainingList","props","selectTrainingToEdit","id","setState","selected_training_edit","clearError","setTimeout","alert","createTrainingDraft","window","confirm","loading_create_training_draft","FC_CreateTrainingDraft","auth","stakeholder","development_partner_id","status","data","err","trainings","state","deleteTraining","delete_training","toString","FC_DeleteTraining","filter","el","loading","selected_training_details","this","getTrainings","FC_GetListOfTrainings","training_id","close","deleteUpdate","editTraining","rebPreview","theme","fixed","className","size","onChange","value","error","label","placeholder","name","length","map","training","i","viewDetails","update_loading","delete_loading","React","Component","RebTrainingList","connect"],"mappings":"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","file":"static/js/81.676214e9.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_CreateTrainingDraft,\n  FC_DeleteTraining,\n  FC_GetListOfTrainings,\n  TrainingsItem,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { RequestTraining } from \"../RequestTraining/RequestTraining\";\nimport { TrainingDetails } from \"../TrainingDetails/TrainingDetails\";\nimport TrainingListItem from \"./TrainingListItem\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  alert: {\n    target: \"MAIN-ERROR\" | \"MAIN-SUCCESS\" | null;\n    msg: string;\n  };\n  selected_training_edit: string | null;\n  selected_training_details: string | null;\n  trainings: TrainingsItem[];\n  loading_create_training_draft: boolean;\n  delete_training: null | string;\n}\n\nconst defaultAlert = {\n  target: null,\n  msg: \"\",\n};\n\nclass _RebTrainingList extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      alert: defaultAlert,\n      selected_training_edit: null,\n      selected_training_details: null,\n      trainings: [],\n      loading_create_training_draft: false,\n      delete_training: null,\n    };\n  }\n\n  componentDidMount(): void {\n    if (!this.props.auth.stakeholder?.development_partner_id)\n      return this.setState({\n        loading: false,\n        alert: {\n          msg: \"No Training institution assigned to you\",\n          target: \"MAIN-ERROR\",\n        },\n      });\n    this.getTrainings(this.props.auth.stakeholder?.development_partner_id);\n  }\n\n  getTrainings(development_partner_id: string): void {\n    this.setState({\n      loading: true,\n    });\n    FC_GetListOfTrainings(development_partner_id, (status, data, err) => {\n      this.setState({\n        loading: false,\n        alert: status\n          ? defaultAlert\n          : {\n              target: \"MAIN-ERROR\",\n              msg: err,\n            },\n        trainings: data,\n      });\n\n      this.clearError();\n    });\n  }\n\n  selectTrainingToEdit = (id: string) => {\n    this.setState({ selected_training_edit: id });\n  };\n\n  clearError = () =>\n    setTimeout(() => {\n      this.setState({\n        alert: defaultAlert,\n      });\n    }, 3000);\n\n  createTrainingDraft = () => {\n    if (\n      !window.confirm(\n        \"Are you sure you want to request for training application?\"\n      )\n    )\n      return;\n\n    this.setState({ loading_create_training_draft: true });\n    FC_CreateTrainingDraft(\n      this.props.auth.stakeholder?.development_partner_id + \"\",\n      (status, data, err) => {\n        this.setState({\n          loading_create_training_draft: false,\n          trainings:\n            status && data\n              ? [data, ...this.state.trainings]\n              : this.state.trainings,\n          selected_training_edit:\n            status && data ? data.id : this.state.selected_training_edit,\n          alert: status\n            ? defaultAlert\n            : {\n                target: \"MAIN-ERROR\",\n                msg: `Error: ${err}`,\n              },\n        });\n        this.clearError();\n      }\n    );\n  };\n\n  deleteTraining = (id: string | number) => {\n    if (!window.confirm(\"Are you sure you want to delete the training?\"))\n      return;\n    this.setState({\n      delete_training: id.toString(),\n    });\n    FC_DeleteTraining(id.toString(), (status, err) => {\n      this.setState({\n        delete_training: null,\n        trainings: status\n          ? this.state.trainings.filter(\n              (el) => el.id.toString() !== id.toString()\n            )\n          : this.state.trainings,\n        alert: status\n          ? {\n              target: \"MAIN-SUCCESS\",\n              msg: \"Training has been deleted successfully!\",\n            }\n          : {\n              target: \"MAIN-ERROR\",\n              msg: `Error: ${err}`,\n            },\n      });\n\n      this.clearError();\n    });\n  };\n\n  render() {\n    if (this.state.selected_training_edit !== null) {\n      return (\n        <RequestTraining\n          training_id={this.state.selected_training_edit}\n          close={() => this.setState({ selected_training_edit: null })}\n        />\n      );\n    }\n\n    if (this.state.selected_training_details !== null)\n      return (\n        <TrainingDetails\n          deleteUpdate={() => {}}\n          training_id={this.state.selected_training_details}\n          close={() => this.setState({ selected_training_details: null })}\n          editTraining={(id) => {}}\n          rebPreview\n        />\n      );\n\n    return (\n      <>\n        {this.state.alert.target === \"MAIN-ERROR\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.alert.msg}\n          </Alert>\n        )}\n        {this.state.alert.target === \"MAIN-SUCCESS\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.alert.msg}\n          </Alert>\n        )}\n        <div className=\"lg:sticky top-3 z-50 mb-4\">\n          <DashboardContainer>\n            <div className=\"flex w-full items-center py-2\">\n              <div className=\"pr-4 text-4xl\">\n                <FaChalkboardTeacher />\n              </div>\n              <div className=\"flex-1\">\n                <Heading size=\"md\">Review Training applications</Heading>\n                <p className=\"text-gray-600 text-sm\">Training institution</p>\n              </div>\n              <div className=\"pr-2 w-24\">\n                <InputSelect\n                  onChange={() => {}}\n                  value={\"\"}\n                  error={\"\"}\n                  label={\"\"}\n                  placeholder={\"\"}\n                  name={\"\"}\n                  data={[]}\n                />\n              </div>\n              <div className=\"p-1 text-center bg-blue-100 text-blue-800 px-4 rounded-lg\">\n                <section className=\"text-sm opacity-50\">Total</section>\n                <h2 className=\"font-bold text-xl\">\n                  {this.state.trainings.length}\n                </h2>\n              </div>\n            </div>\n          </DashboardContainer>\n        </div>\n\n        <div className=\"container mx-auto px-2\">\n          {this.state.loading === true && (\n            <div className=\"mx-auto py-6 text-center\">\n              <div className=\"inline\">\n                <Loading />\n              </div>\n            </div>\n          )}\n          {this.state.trainings.length <= 0 && this.state.loading === false && (\n            <div className=\"mx-auto py-8 text-center opacity-50\">\n              <h1 className=\"text-9xl text-center mx-auto\">\n                <FaChalkboardTeacher className=\"inline\" />\n              </h1>\n              <h2 className=\"text-2xl font-bold\">No Training requests found</h2>\n            </div>\n          )}\n\n          {this.state.trainings.map((training, i) => (\n            <TrainingListItem\n              key={i}\n              training={training}\n              viewDetails={(id) =>\n                this.setState({\n                  selected_training_details: id.toString(),\n                })\n              }\n              deleteTraining={this.deleteTraining}\n              update_loading={null}\n              editTraining={(id) =>\n                this.setState({ selected_training_edit: id.toString() })\n              }\n              delete_loading={this.state.delete_training}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const RebTrainingList = connect(mapStateToProps, {})(_RebTrainingList);\n"],"sourceRoot":""}