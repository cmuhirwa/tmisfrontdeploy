{"version":3,"sources":["containers/InternalTransfer/InternalTransferExcel.tsx","containers/InternalTransfer/InternalTransfer.tsx"],"names":["InternalTransferExcel","close","district_id","district_name","useState","loading","setLoading","data","setData","error","setError","useEffect","FC_GetInternalTransferReportExcel","status","msg","console","log","Modal","backDrop","theme","Themes","default","backDropClose","widthSizeClass","ModalSize","large","displayClose","padding","title","body","footer","className","Alert","Loading","ExportToExcel","fileData","map","el","teacher_id","teacher_first_name","teacher_last_name","teacher_full_name","teacher_phone_number","position_code","position_name","qualification","qualification_name","school_from_code","school_from_info","school_code","school_form_name","school_name","district_from_name","approved_school_code","approved_school_info","approved_school_name","approved_district_name","transfer_reason","transfer_type","teacher_requested_transfer_date","fileName","btnName","errorDefault","target","_InternalTransfer","props","setOpenDownload","setState","open_download_excel","state","loadingData","district","page","selected_transfer_id","transfer_issue","FC_GetInternalTransfers","district_code","limit","status_req","district_transfer_request","total","total_transfer","next","previous","paginateData","auth","selected_district","submitIssue","length","loading_request","FC_SendTransferIssue","teacher_transfer_id","transfer_issue_comment","changeStatus","value","this","total_pages","toFixed","fixed","Heading","Button","onClick","DashboardContainer","transparent","colSpan","itm","i","Array","fill","e","bind","React","Component","InternalTransfer","connect"],"mappings":"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","file":"static/js/67.4ec80aab.chunk.js","sourcesContent":["import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport {\n  FC_GetInternalTransferReportExcel,\n  GetTransferForUser__Interface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n\ntype InternalTransferExcelProps = {\n  close: () => void;\n  district_id: string;\n  district_name: string | null;\n};\n\nconst InternalTransferExcel: FC<InternalTransferExcelProps> = ({\n  close,\n  district_id,\n  district_name = null,\n}): ReactElement => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<GetTransferForUser__Interface[]>([]);\n  const [error, setError] = useState(\"\");\n  /* function body */\n  useEffect(() => {\n    if (loading === true)\n      FC_GetInternalTransferReportExcel(district_id, (status, data, msg) => {\n        setLoading(false);\n        setData(data);\n        setError(msg);\n        // GetTransferForUser__Interface\n        console.log({ data });\n      });\n  }, [loading, district_id]);\n\n  return (\n    <Modal\n      backDrop={true}\n      theme={Themes.default}\n      close={close}\n      backDropClose={false}\n      widthSizeClass={ModalSize.large}\n      displayClose={true}\n      padding={{\n        title: true,\n        body: false,\n        footer: false,\n      }}\n      title=\"Export report\"\n    >\n      <div className=\"border-t p-4 py-8\">\n        {error !== \"\" && <Alert theme=\"danger\">{error}</Alert>}\n        {loading === true ? (\n          <div className=\"text-xl text-center\">\n            <Loading />\n\n            <h2 className=\"text-2xl font-bold pt-2\">Preparing report</h2>\n            <h4 className=\"text-gray-500 text-sm\">Please wait...</h4>\n          </div>\n        ) : (\n          <div className=\"text-center\">\n            <h1 className=\"text-3xl\">\n              Your <b>Internal Transfer</b> report is ready\n            </h1>\n            <h1>You can download it now</h1>\n            <div className=\"inline-block pt-5\">\n              <ExportToExcel\n                fileData={data.map((el) => ({\n                  teacher_id: el.teacher_id,\n                  teacher_first_name: el.teacher_first_name,\n                  teacher_last_name: el.teacher_last_name,\n                  teacher_full_name: el.teacher_full_name,\n                  teacher_phone_number: el.teacher_phone_number,\n                  position_code: el.position_code,\n                  position_name: el.position_name,\n                  qualification: el.qualification_name,\n\n                  school_from_code: el.school_from_info?.school_code,\n                  school_form_name: el.school_from_info?.school_name,\n                  district_from_name: el.school_from_info?.district_name,\n\n                  approved_school_code: el.approved_school_info?.school_code,\n                  approved_school_name: el.approved_school_info?.school_name,\n                  approved_district_name:\n                    el.approved_school_info?.district_name,\n\n                  transfer_reason: el.transfer_reason,\n                  transfer_type: el.transfer_type,\n                  teacher_requested_transfer_date:\n                    el.teacher_requested_transfer_date,\n                }))}\n                fileName={`INTERNAL TRANSFERS - ${district_id}  ${\n                  district_name ? \" - \" + district_name : \"\"\n                }`}\n                btnName=\"Download EXCEL\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\nexport default InternalTransferExcel;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_GetInternalTransfers,\n  FC_SendTransferIssue,\n  GetTransferForUser__Interface,\n  TransferStatus,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport InternalTransferExcel from \"./InternalTransferExcel\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  district_code?: string;\n  district_name?: string;\n}\n\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\" | null | \"request-input\";\n    msg: string;\n  };\n  limit: number;\n  page: number;\n  data: GetTransferForUser__Interface[];\n  total: number;\n  next: number;\n  previous: number;\n  selected_transfer_id: string | null;\n  transfer_issue: string;\n  loading_request: boolean;\n  status: TransferStatus;\n  open_download_excel: boolean;\n  selected_district: string;\n}\n\nconst errorDefault = {\n  target: null,\n  msg: \"\",\n};\n\nclass _InternalTransfer extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: errorDefault,\n      data: [],\n      limit: 14,\n      page: 1,\n      total: 0,\n      next: 0,\n      previous: 0,\n      selected_transfer_id: null,\n      transfer_issue: \"\",\n      loading_request: false,\n      status: \"NO-ISSUE\",\n      open_download_excel: false,\n      selected_district: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.district_code) {\n      this.setState({\n        selected_district: this.props.district_code,\n      });\n      this.loadingData(\n        this.props.district_code,\n        this.state.page,\n        this.state.status\n      );\n    } else {\n      if (\n        !this.props.auth.district ||\n        !this.props.auth.district.district_code\n      ) {\n        return this.setState({\n          error: {\n            target: \"main-error\",\n            msg: \"There is no district assigned to you!\",\n          },\n        });\n      }\n\n      this.setState({\n        selected_district: this.props.auth.district.district_code,\n      });\n\n      this.loadingData(\n        this.props.auth.district.district_code,\n        this.state.page,\n        this.state.status\n      );\n    }\n  }\n\n  setOpenDownload = () =>\n    this.setState({\n      open_download_excel: !this.state.open_download_excel,\n    });\n\n  loadingData = (district: string, page: number, status?: TransferStatus) => {\n    this.setState({\n      loading: true,\n      selected_transfer_id: null,\n      data: [],\n      transfer_issue: \"\",\n    });\n    FC_GetInternalTransfers(\n      {\n        district_code: district,\n        limit: this.state.limit,\n        page: page,\n        status: status ? status : this.state.status,\n      },\n      (status_req, data, msg) => {\n        this.setState({\n          loading: false,\n          data: data?.district_transfer_request\n            ? data?.district_transfer_request\n            : [],\n          total: data?.total_transfer ? data.total_transfer : 0,\n          next: data?.next ? +data?.next : 0,\n          previous: data?.previous ? +data?.previous : 0,\n          error: !status_req\n            ? {\n                target: \"main-error\",\n                msg: `Error: ${msg}`,\n              }\n            : errorDefault,\n          page: page,\n        });\n      }\n    );\n  };\n\n  paginateData = (page: number) => {\n    if (this.props.auth.district?.district_code)\n      this.loadingData(this.state.selected_district, page);\n  };\n\n  submitIssue = () => {\n    if (this.state.transfer_issue.length <= 20)\n      return this.setState({\n        error: {\n          target: \"request-input\",\n          msg: \"Your message is too short, minimum characters are 20\",\n        },\n      });\n\n    if (\n      this.state.selected_transfer_id === \"\" ||\n      this.state.selected_transfer_id === null\n    )\n      return this.setState({\n        error: {\n          target: \"request-input\",\n          msg: \"Your message is too short, minimum characters are 20\",\n        },\n      });\n\n    this.setState({\n      loading_request: true,\n    });\n\n    FC_SendTransferIssue(\n      {\n        teacher_transfer_id: this.state.selected_transfer_id,\n        transfer_issue_comment: this.state.transfer_issue,\n      },\n      (status, data, msg) => {\n        this.setState({\n          loading_request: false,\n          error:\n            status === true\n              ? {\n                  target: \"main-success\",\n                  msg: \"The request has been submitted successfully.\",\n                }\n              : {\n                  target: \"main-error\",\n                  msg: msg,\n                },\n          data: this.state.data.map((el) =>\n            el.teacher_transfer_id === this.state.selected_transfer_id\n              ? { ...el, transfer_issue_comment: this.state.transfer_issue }\n              : el\n          ),\n        });\n      }\n    );\n  };\n\n  changeStatus = (value: TransferStatus) => {\n    if (this.state.status === value || !this.props.auth.district) return;\n    this.setState({\n      status: value,\n    });\n    this.loadingData(this.state.selected_district, 1, value);\n  };\n\n  render() {\n    let total_pages = (this.state.total / this.state.limit).toFixed(0);\n    // let foundTransfer = this.state.data.find(\n    //   (transf) => transf.teacher_transfer_id === this.state.selected_transfer_id\n    // );\n    return (\n      <>\n        {this.state.open_download_excel === true &&\n          this.props.auth.district && (\n            <InternalTransferExcel\n              district_id={this.state.selected_district}\n              close={this.setOpenDownload}\n              district_name={\n                this.props.district_name ? this.props.district_name : null\n              }\n            />\n          )}\n\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"container mx-auto px-4 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading className=\"\">Internal transfers</Heading>\n          </div>\n\n          <section className=\"pr-3\">\n            <Button onClick={this.setOpenDownload} theme=\"success\">\n              Generate Excel\n            </Button>\n          </section>\n          <section className=\"text-center p-1 bg-accent-800 bg-opacity-20 text-accent-900 px-4 rounded\">\n            <span className=\"text-sm block text-gray-500 -mb-1\">Total:</span>\n            <h3 className=\"font-bold text-xl\">{this.state.total}</h3>\n          </section>\n        </div>\n        <DashboardContainer transparent>\n          <table className=\"w-full\">\n            <thead className=\"text-left bg-white\">\n              <tr className=\"bg-accent-900 bg-opacity-10\">\n                <th className=\"p-2 border-gray-300 border\">#</th>\n                <th className=\"p-2 border-gray-300 border\">Names</th>\n                <th className=\"p-2 border-gray-300 border\">School Code</th>\n                <th className=\"p-2 border-gray-300 border\">School name</th>\n                <th className=\"p-2 border-gray-300 border\">Position code</th>\n                <th className=\"p-2 border-gray-300 border\">Position name</th>\n                <th className=\"p-2 border-gray-300 border\">Qualification</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.loading === true ? (\n                <tr className=\" \">\n                  <td colSpan={8} className=\"py-4 text-center border\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : this.state.data.length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"py-4 text-center border\">\n                    <h1 className=\"text-2xl text-gray-400\">No data found</h1>\n                    {/* <p className=\"text-gray\"></p> */}\n                  </td>\n                </tr>\n              ) : (\n                this.state.data.map((itm, i) => (\n                  <tr\n                    key={i}\n                    className=\"bg-white  hover:bg-yellow-400 hover:bg-opacity-30\"\n                    // onClick={() =>\n                    //   this.setState({\n                    //     selected_transfer_id: itm.teacher_transfer_id,\n                    //     transfer_issue: itm.transfer_issue_comment\n                    //       ? itm.transfer_issue_comment\n                    //       : \"\",\n                    //   })\n                    // }\n                  >\n                    <td className=\"border p-2\">{i + 1}</td>\n                    <td className=\"p-2 border\">{itm.teacher_full_name}</td>\n                    <td className=\"p-2 border\">\n                      {itm.school_from_info?.school_code}\n                    </td>\n                    <td className=\"p-2 border\">\n                      {itm.school_from_info?.school_name}\n                    </td>\n                    <td className=\"p-2 border\">{itm.position_code}</td>\n                    <td className=\"p-2 border text-sm\">{itm.position_name}</td>\n                    <td className=\"p-2 border\">{itm.qualification_name}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n\n          <div className=\"flex gap-3 mx-auto pt-3\">\n            {Array(+total_pages)\n              .fill(\"0\")\n              .map((e, i) => (\n                <button\n                  className={`p-2 py-1 ${\n                    +this.state.page === i + 1\n                      ? \"bg-accent-800 text-black font-bold\"\n                      : \"bg-opacity-25\"\n                  } rounded-full bg-accent-800 `}\n                  onClick={this.paginateData.bind(this, i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const InternalTransfer = connect(mapStateToProps, {})(_InternalTransfer);\n"],"sourceRoot":""}