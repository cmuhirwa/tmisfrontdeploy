{"version":3,"sources":["actions/transfer.action.ts","components/Inputs/TextArea.tsx","components/UserDocuments/UserDocuments.tsx","containers/RequestTransfer/CardTransferRequest.tsx","containers/RequestTransfer/RequestTransfeForm.tsx","containers/RequestTransfer/TransferItem.tsx","containers/RequestTransfer/TransfersList.tsx"],"names":["FC_GetAllTransfers","callBack","dispatch","a","setAxiosToken","axios","get","APP_URL","res","console","log","getAllTransfers","needed_data","data","filter","item","requested_status","type","ActionTypes","GET_ALL_TRANSFER","payload","errorToText","FC_GetDistricts","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","TextArea","onChange","value","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","labelColor","size","className","htmlFor","InputSize","DOC_TYPE_ADD","validateFile","file","UserDocuments","props","setLoadingSaving","status","setState","loading_saving","UpdateUserDocuments","e","preventDefault","success","state","addDocType","RESIDENCE","resident_district_id","element","msg","resident_surpoting_document","DISABILITY","disability_surpoting_document","toString","resident_district_name","districts","find","itm","district_code","undefined","district_name","values","setInterval","FC_UpdateUserDocuments","disability","disabilityNewFileName","residentNewFileName","SubmitNoDisability","auth","user","alert","componentDidMount","loading","addDocuments","ALL","this","onClick","href","APP_URL_FILE","target","onSubmit","map","i","files","Component","CardTransferRequest","number","title","description","theme","active","priority","_RequestTransferUI","loading_district","length","selectDistrict","district","selected_district","step","loading_schools","FC_GetFreeVacanciesByDistrictAndUser","user_id","schools","selectSchool","school","add","selected_schools","sc","school_code","loadReasons","reasons","loading_reasons","FC_GetTransfersReasons","submitTransferRequest","basic","academic_calender","academic_year_id","distrct_from_id","district_to_id","requested_school_id","school_from_id","teacher_comment","candidate_comment","teacher_reason_id","teacher_supporting_document","transfer_type","loading_submit_transfer","FC_SendTransferRequest","staff_code","transfer_success","reloadTransfers","selected_qualification","search","search_district","search_school","selected_reasons","Alert","fixed","DistrictResults","SchoolsResults","school_name","sector_name","DashboardContainer","full_name","Button","close","Heading","window","confirm","TextInput","Loading","dist","bind","selectedSchool","vacant_posts","found","React","RequestTransferUI","connect","placement","RequestItem","transf","position_code","position_name","school_from_info","requested_school_info","teacher_requested_transfer_date","_TransfersList","openForm","add_transfer","transfers","startComponent","mount","FC_GetTransferForUser","transparent","TransferItem","TransfersList"],"mappings":"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","file":"static/js/23.a7f8f154.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      console.log(\"=================FC_GetTransferReasons===================\");\n      console.log({ FC_GetTransferReasons: res });\n      console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n    console.log(\"=================FC_GetDistricts===================\");\n    console.log({ FC_GetDistricts: res });\n    console.log(\"=================FC_GetDistricts===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n    //   callBack(\n    //     false,\n    //     errorToText(error, () => {})\n    //   );\n  }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype TextAreaProps = {\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst TextArea: FC<TextAreaProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n  size = \"md\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <textarea\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TextArea;\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { FaRegFilePdf } from \"react-icons/fa\";\nimport { ImFilePdf } from \"react-icons/im\";\nimport { MdAttachFile, MdEdit, MdPersonAddDisabled } from \"react-icons/md\";\nimport { Auth } from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { errorToText } from \"../../utils/errors\";\nimport DashboardContainer from \"../DashboardContainer/DashboardContainer\";\nimport Loading from \"../Loading/Loading\";\nimport { FiDownload } from \"react-icons/fi\";\nimport { MdHearingDisabled } from \"react-icons/md\";\n\nexport interface UserDocumentsInterface {\n  resident_district_id: string | null;\n  disability: string | null;\n  disability_surpoting_document: string | null;\n  resident_surpoting_document: string | null;\n}\n\nconst validateFile = (file: File): string => {\n  let error = \"\";\n  if (file.size === 0) {\n    error = \"Invalid file\";\n  }\n  if (file.size > 1038221) {\n    // 1MB\"jpg\",\n    error = \"File should not be greater than 1MB\";\n  }\n  if (\n    file.type !== \"application/pdf\" &&\n    file.type !== \"image/png\" &&\n    file.type !== \"image/jpeg\" &&\n    file.type !== \"image/webp\" &&\n    file.type !== \"image/tiff\" &&\n    file.type !== \"image/bmp\" &&\n    file.type !== \"image/gif\" &&\n    file.type !== \"image/jfif\" &&\n    file.type !==\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n  ) {\n    error =\n      \"Invalid file type, accepted files(PDF, IMAGES(png, jpeg, webp, tiff, bmp, gif, jfif))\";\n  }\n  console.log(\"File details: \", file.type);\n  if (error !== \"\") {\n    return error;\n  }\n  return \"\";\n};\n\nenum DOC_TYPE_ADD {\n  RESIDENCE = \"RESIDENCE\",\n  DISABILITY = \"DISABILITY\",\n  ALL = \"ALL\",\n}\n\ninterface UserDocumentsProps {\n  auth: Auth;\n  FC_UpdateUserDocuments: (data: UserDocumentsInterface) => void;\n}\ninterface UserDocumentsState {\n  districts: DistrictTypes[] | null;\n  loading: boolean;\n  loading_saving: boolean;\n  addDocuments: boolean;\n  addDocType: DOC_TYPE_ADD;\n  resident_district_id: string | null;\n  disability_surpoting_document: File | null;\n  resident_surpoting_document: File | null;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  success: string;\n}\n\nexport class UserDocuments extends Component<\n  UserDocumentsProps,\n  UserDocumentsState\n> {\n  constructor(props: UserDocumentsProps) {\n    super(props);\n\n    this.state = {\n      districts: null,\n      loading: false,\n      loading_saving: false,\n      addDocuments: false,\n      addDocType: DOC_TYPE_ADD.ALL,\n      resident_district_id: null,\n      disability_surpoting_document: null,\n      resident_surpoting_document: null,\n      error: null,\n      success: \"\",\n    };\n  }\n\n  setLoadingSaving = (status: boolean) =>\n    this.setState({ loading_saving: status });\n\n  UpdateUserDocuments = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.setState({\n      error: null,\n      success: \"\",\n    });\n    if (this.state.addDocType === DOC_TYPE_ADD.RESIDENCE) {\n      if (\n        this.state.resident_district_id === null ||\n        this.state.resident_district_id === \"\"\n      ) {\n        return this.setState({\n          error: {\n            element: \"main\",\n            msg: \"Please select residence district!\",\n          },\n        });\n      }\n      if (this.state.resident_surpoting_document === null) {\n        return this.setState({\n          error: {\n            element: \"resident_surpoting_document\",\n            msg: \"Please select resident surpoting document!\",\n          },\n        });\n      } else {\n        if (validateFile(this.state.resident_surpoting_document) !== \"\") {\n          return this.setState({\n            error: {\n              element: \"main\",\n              msg: validateFile(this.state.resident_surpoting_document),\n            },\n          });\n        }\n      }\n    }\n    if (this.state.addDocType === DOC_TYPE_ADD.DISABILITY) {\n      if (this.state.disability_surpoting_document === null) {\n        return this.setState({\n          error: {\n            element: \"disability_surpoting_document\",\n            msg: \"Please select disability surpoting document!\",\n          },\n        });\n      } else {\n        if (validateFile(this.state.disability_surpoting_document) !== \"\") {\n          return this.setState({\n            error: {\n              element: \"main\",\n              msg: validateFile(this.state.disability_surpoting_document),\n            },\n          });\n        }\n      }\n    }\n\n    const formData = new FormData();\n    formData.append(\n      \"disability\",\n      (this.state.addDocType === DOC_TYPE_ADD.DISABILITY ? true : \"\").toString()\n    );\n    formData.append(\n      \"resident_district_id\",\n      this.state.resident_district_id === null\n        ? \"\"\n        : this.state.resident_district_id\n    );\n    formData.append(\n      \"disability_surpoting_document\",\n      this.state.disability_surpoting_document === null\n        ? \"\"\n        : this.state.disability_surpoting_document\n    );\n    formData.append(\n      \"resident_surpoting_document\",\n      this.state.resident_surpoting_document === null\n        ? \"\"\n        : this.state.resident_surpoting_document\n    );\n    const resident_district_name = this.state.districts?.find(\n      (itm) => itm.district_code === this.state.resident_district_id\n    );\n    formData.append(\n      \"resident_district_name\",\n      resident_district_name === undefined\n        ? \"\"\n        : resident_district_name.district_name\n    );\n\n    console.log(\"FormData: \", formData.values());\n    this.setState({ loading_saving: true });\n    try {\n      const res = await axios.post(\n        `${APP_URL}/user/account/updateprofile`,\n        formData\n      );\n      this.setState({\n        success: \"Document added successfully!\",\n      });\n      if (this.state.loading_saving === true) {\n        setInterval(() => {\n          this.props.FC_UpdateUserDocuments({\n            resident_district_id: this.state.resident_district_id,\n            disability: (this.state.addDocType === DOC_TYPE_ADD.DISABILITY\n              ? true\n              : false\n            ).toString(),\n            disability_surpoting_document: res.data.disabilityNewFileName,\n            resident_surpoting_document: res.data.residentNewFileName,\n          });\n          this.setState({\n            loading_saving: false,\n          });\n        }, 3000);\n      }\n      console.log(\"Success: \", res.data);\n      console.log(\"Success test: \", {\n        resident_district_id: this.state.resident_district_id,\n        disability: (this.state.addDocType === DOC_TYPE_ADD.DISABILITY\n          ? true\n          : false\n        ).toString(),\n        disability_surpoting_document: res.data.disabilityNewFileName,\n        resident_surpoting_document: res.data.residentNewFileName,\n      });\n    } catch (error: any) {\n      this.setState({\n        error: {\n          element: \"main\",\n          msg: errorToText(error),\n        },\n        loading_saving: false,\n      });\n      console.log(\"error: \", { ...error });\n    }\n  };\n\n  SubmitNoDisability = async () => {\n    this.setState({ loading_saving: true });\n    try {\n      const resident_district_id = this.props.auth.user?.resident_district_id;\n      const disability_surpoting_document =\n        this.props.auth.user?.disability_surpoting_document;\n      const resident_surpoting_document =\n        this.props.auth.user?.resident_surpoting_document;\n      const resident_district_name =\n        this.props.auth.user?.resident_district_name;\n      const res = await axios.post(`${APP_URL}/user/account/updateprofile`, {\n        disability: false.toString(),\n        resident_district_id:\n          resident_district_id === null || resident_district_id === undefined\n            ? \"\"\n            : resident_district_id,\n        disability_surpoting_document:\n          disability_surpoting_document === null ||\n          disability_surpoting_document === undefined\n            ? \"\"\n            : disability_surpoting_document,\n        resident_surpoting_document:\n          resident_surpoting_document === null ||\n          resident_surpoting_document === undefined\n            ? \"\"\n            : resident_surpoting_document,\n        resident_district_name:\n          resident_district_name === null ||\n          resident_district_name === undefined\n            ? \"\"\n            : resident_district_name,\n      });\n      this.setState({\n        success: \"Submitted successfully!\",\n      });\n      setInterval(() => {\n        this.props.FC_UpdateUserDocuments({\n          resident_district_id:\n            resident_district_id === null || resident_district_id === undefined\n              ? \"\"\n              : resident_district_id,\n          disability: false.toString(),\n          disability_surpoting_document: res.data.disabilityNewFileName,\n          resident_surpoting_document: res.data.residentNewFileName,\n        });\n        this.setState({\n          loading_saving: false,\n        });\n      }, 3000);\n      alert(\"Submitted successfully!\");\n      console.log(\"Success: \", res.data);\n    } catch (error: any) {\n      this.setState({\n        error: {\n          element: \"main\",\n          msg: errorToText(error),\n        },\n        loading_saving: false,\n      });\n      console.log(\"error: \", { ...error });\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.state.districts === null) {\n      this.setState({ loading: true });\n      FC_GetDistricts(\n        (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n          if (data !== null) {\n            this.setState({\n              districts: data,\n              loading: false,\n            });\n            console.log(data);\n          }\n          this.setState({ loading: false });\n        }\n      );\n    }\n  };\n  render() {\n    if (this.state.districts === null || this.state.loading === true) {\n      return (\n        <DashboardContainer>\n          <div className=\"flex flex-col items-center justify-center gap-3 w-full text-center py-5\">\n            <Loading />\n            <div>Loading...</div>\n          </div>\n        </DashboardContainer>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.success !== \"\" && (\n          <div className=\"text-green-700 bg-green-100 rounded px-3 py-2\">\n            {this.state.success}\n          </div>\n        )}\n        {this.state.error !== null && (\n          <div className=\"text-red-700 bg-red-100 rounded px-3 py-2\">\n            {this.state.error.msg}\n          </div>\n        )}\n        {this.state.addDocuments === false ? (\n          <div>\n            <div className=\"py-2 border-b\">\n              <span className=\"text-xl font-bold uppercase\">My documents</span>\n            </div>\n            <div className=\"py-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div\n                className={`col-span-1 flex items-center gap-3 ${\n                  this.props.auth.user?.resident_surpoting_document === null ||\n                  this.props.auth.user?.resident_surpoting_document === \"\"\n                    ? \"bg-yellow-100\"\n                    : \"bg-gray-100\"\n                } rounded-lg p-3 py-4 hover:bg-blue-100 hover:text-primary-800 group`}\n              >\n                <div>\n                  {this.props.auth.user?.resident_surpoting_document === null ||\n                  this.props.auth.user?.resident_surpoting_document === \"\" ? (\n                    <MdAttachFile className=\"text-gray-400 group-hover:text-primary-800 text-6xl\" />\n                  ) : (\n                    <ImFilePdf className=\"text-primary-800 group-hover:text-primary-800 text-6xl\" />\n                  )}\n                </div>\n                <div>\n                  {this.props.auth.user?.resident_surpoting_document === null ||\n                  this.props.auth.user?.resident_surpoting_document === \"\" ? (\n                    <div className=\"text-accent-900 font-bold group-hover:text-primary-800\">\n                      Resident district is missing!\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-900 font-bold group-hover:text-primary-800\">\n                      My resident district\n                    </div>\n                  )}\n                  <div\n                    onClick={() => {\n                      (this.props.auth.user?.resident_surpoting_document ===\n                        null ||\n                        this.props.auth.user?.resident_surpoting_document ===\n                          undefined ||\n                        this.props.auth.user?.resident_surpoting_document ===\n                          \"\") &&\n                        this.setState({\n                          addDocuments: true,\n                          addDocType: DOC_TYPE_ADD.RESIDENCE,\n                        });\n                    }}\n                    className=\"text-xl font-bold cursor-pointer\"\n                  >\n                    {this.props.auth.user?.resident_surpoting_document ===\n                      null ||\n                    this.props.auth.user?.resident_surpoting_document === \"\" ? (\n                      <span className=\"underline\">Choose your residence</span>\n                    ) : (\n                      <span className=\"text-primary-800\">\n                        {\n                          this.state.districts.find(\n                            (itm) =>\n                              itm.district_code ===\n                              this.props.auth.user?.resident_district_id\n                          )?.district_name\n                        }\n                      </span>\n                    )}\n                  </div>\n                  {this.props.auth.user?.resident_surpoting_document !== null &&\n                    this.props.auth.user?.resident_surpoting_document !==\n                      undefined &&\n                    this.props.auth.user?.resident_surpoting_document !==\n                      \"\" && (\n                      <div className=\"flex flex-row items-center w-full gap-2 mt-2\">\n                        <div\n                          onClick={() => {\n                            this.setState({\n                              addDocuments: true,\n                              addDocType: DOC_TYPE_ADD.RESIDENCE,\n                            });\n                          }}\n                          className=\"bg-white cursor-pointer rounded flex items-center gap-2 px-2 py-1 hover:bg-primary-800 hover:text-white\"\n                        >\n                          <div>\n                            <MdEdit className=\"text-lg\" />\n                          </div>\n\n                          <span>Update</span>\n                        </div>\n                        <a\n                          href={`${APP_URL_FILE}/${this.props.auth.user.resident_surpoting_document}`}\n                          target=\"__blank\"\n                          className=\"bg-white cursor-pointer rounded flex items-center gap-2 px-2 py-1 hover:bg-primary-800 hover:text-white\"\n                        >\n                          <div>\n                            <FiDownload className=\"text-lg\" />\n                          </div>\n\n                          <span>Download</span>\n                        </a>\n                      </div>\n                    )}\n                </div>\n              </div>\n              {this.props.auth.user?.disability !== true.toString() && (\n                <div className=\"col-span-1 flex items-center gap-3 bg-gray-50 rounded-lg p-3 py-4 hover:bg-gray-100  group\">\n                  <div>\n                    {this.props.auth.user?.disability_surpoting_document ===\n                      null ||\n                    this.props.auth.user?.disability_surpoting_document ===\n                      \"\" ? (\n                      <MdPersonAddDisabled className=\"text-gray-400  text-6xl\" />\n                    ) : (\n                      <ImFilePdf className=\"text-primary-800 group-hover:text-primary-800 text-6xl\" />\n                    )}\n                  </div>\n                  <div>\n                    <div className=\"text-gray-600 \">\n                      Do you have a disability?\n                    </div>\n                    <div className=\"text-xl font-bold cursor-pointer\">\n                      {this.props.auth.user?.disability_surpoting_document ===\n                        null ||\n                      this.props.auth.user?.disability_surpoting_document ===\n                        \"\" ? (\n                        <div className=\"flex flex-row items-center gap-3\">\n                          <div\n                            onClick={() => {\n                              (this.props.auth.user\n                                ?.disability_surpoting_document === null ||\n                                this.props.auth.user\n                                  ?.disability_surpoting_document ===\n                                  undefined ||\n                                this.props.auth.user\n                                  ?.disability_surpoting_document === \"\") &&\n                                this.setState({\n                                  addDocuments: true,\n                                  addDocType: DOC_TYPE_ADD.DISABILITY,\n                                });\n                            }}\n                            className=\"bg-gray-200 group-hover:bg-white rounded px-3 border border-gray-200 group-hover:border-accent-900 group-hover:text-accent-900\"\n                          >\n                            Yes\n                          </div>\n                          {/* <div\n                            onClick={() => {\n                              // this.SubmitNoDisability();\n                              this.setState({\n                                loading_saving: true,\n                              });\n                              setInterval(() => {\n                                this.setState({\n                                  success: \"Submitted successfully!\",\n                                  loading_saving: false,\n                                });\n                              }, 3000);\n                              this.setState({ addDocuments: false });\n                            }}\n                            className=\"bg-gray-200 group-hover:bg-white rounded px-3 border border-gray-200 group-hover:border-accent-900 group-hover:text-accent-900\"\n                          >\n                            No\n                          </div> */}\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                    {this.props.auth.user?.disability_surpoting_document !==\n                      null &&\n                      this.props.auth.user?.disability_surpoting_document !==\n                        undefined &&\n                      this.props.auth.user?.disability_surpoting_document !==\n                        \"\" && (\n                        <div className=\"flex flex-row items-center w-full gap-2 mt-2\">\n                          <div\n                            onClick={() => {\n                              this.setState({\n                                addDocuments: true,\n                                addDocType: DOC_TYPE_ADD.DISABILITY,\n                              });\n                            }}\n                            className=\"bg-white cursor-pointer rounded flex items-center gap-2 px-2 py-1 hover:bg-primary-800 hover:text-white\"\n                          >\n                            <div>\n                              <MdEdit className=\"text-lg\" />\n                            </div>\n\n                            <span>Update</span>\n                          </div>\n                          <a\n                            href={`${APP_URL_FILE}/${this.props.auth.user.disability_surpoting_document}`}\n                            target=\"__blank\"\n                            className=\"bg-white cursor-pointer rounded flex items-center gap-2 px-2 py-1 hover:bg-primary-800 hover:text-white\"\n                          >\n                            <div>\n                              <FiDownload className=\"text-lg\" />\n                            </div>\n\n                            <span>Download</span>\n                          </a>\n                        </div>\n                      )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"p-5 bg-white animate__animated animate__fadeIn animate__faster\">\n            <form\n              onSubmit={this.UpdateUserDocuments}\n              className=\"flex flex-col md:flex-row items-center gap-6\"\n            >\n              <div className=\"flex flex-col text-base\">\n                {this.state.addDocType === DOC_TYPE_ADD.RESIDENCE && (\n                  <>\n                    <label className=\"font-bold\">\n                      Choose resident district\n                    </label>\n                    <select\n                      value={\n                        this.state.resident_district_id === null\n                          ? \"\"\n                          : this.state.resident_district_id\n                      }\n                      onChange={(e) =>\n                        this.setState({ resident_district_id: e.target.value })\n                      }\n                      className=\"border border-gray-400 rounded px-3 py-2 mb-5\"\n                    >\n                      <option value=\"\">Choose district</option>\n                      {this.state.districts.map((item, i) => (\n                        <option key={i + 1} value={item.district_code}>\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    <label className=\"font-bold\">\n                      Residence supporting document {\"(Size < 1MB)\"}\n                    </label>\n                    <input\n                      type=\"file\"\n                      onChange={(e) =>\n                        this.setState({\n                          resident_surpoting_document:\n                            e.target.files === null ? null : e.target.files[0],\n                        })\n                      }\n                      className=\"border border-gray-400 rounded px-3 py-2\"\n                    />\n                  </>\n                )}\n              </div>\n              <div className=\"flex flex-col text-base\">\n                {this.state.addDocType === DOC_TYPE_ADD.DISABILITY && (\n                  <>\n                    <label className=\"font-bold\">\n                      Disability supporting document {\"(Size < 1MB)\"}\n                    </label>\n                    <input\n                      type=\"file\"\n                      onChange={(e) =>\n                        this.setState({\n                          disability_surpoting_document:\n                            e.target.files === null ? null : e.target.files[0],\n                        })\n                      }\n                      className=\"border border-gray-400 rounded px-3 py-2\"\n                    />\n                  </>\n                )}\n                {/* Warning */}\n                <div className=\"px-3 py-2 rounded bg-yellow-100 gap-3\">\n                  <span className=\"font-extrabold\">Warning</span> Make sure you\n                  are providing correct information. For any inconvenience,\n                  rules will be applied\n                </div>\n                {this.state.loading_saving === false ? (\n                  <div className=\"flex items-center gap-3 mt-6\">\n                    <div\n                      onClick={() =>\n                        this.setState({\n                          addDocuments: false,\n                          addDocType: DOC_TYPE_ADD.ALL,\n                          resident_district_id: null,\n                          disability_surpoting_document: null,\n                          resident_surpoting_document: null,\n                          success: \"\",\n                          error: null,\n                        })\n                      }\n                      className=\"text-center px-3 py-2 rounded bg-gray-100 cursor-pointer font-bold\"\n                    >\n                      Back\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"text-center px-3 py-2 rounded bg-primary-800 text-white cursor-pointer font-bold\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"text-accent-900\">Loading, please wait...</div>\n                )}\n              </div>\n            </form>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default UserDocuments;\n","import React, { FC, ReactElement } from \"react\";\n\ntype CardTransferRequestProps = {\n  number: number;\n  title: string;\n  description: string;\n  theme: \"blue\" | \"green\" | \"gray\" | \"yellow\";\n  active: boolean;\n  priority: boolean;\n  onClick: () => void;\n};\n\nconst CardTransferRequest: FC<CardTransferRequestProps> = ({\n  number,\n  title,\n  description,\n  theme,\n  active,\n  priority,\n  onClick,\n}): ReactElement => {\n  /* function body */\n  return (\n    <div\n      onClick={onClick}\n      className={`p-2 rounded-t-md cursor-pointer border-b-4 flex flex-col text-center lg:text-left lg:flex-row items-center border-${theme}-500 ${\n        active === true ? `bg-${theme}-100` : \"\"\n      } ${priority === false ? \"opacity-60\" : \"\"}`}\n    >\n      <section\n        className={`p-2 lg:p-3 rounded-full border-4 ${\n          theme === \"yellow\" ? `bg-${theme}-500` : `bg-${theme}-500`\n        } 0 ${\n          theme === \"yellow\" ? `border-${theme}-600` : `border-${theme}-200`\n        }  ${\n          theme === \"yellow\" ? \"text-black\" : \"text-white\"\n        } w-9 h-9 lg:w-14 lg:h-14 flex items-center text-center`}\n      >\n        <h3 className=\"text-center w-full text-xl lg:text-3xl font-bold \">\n          {number}\n        </h3>\n      </section>\n      <section className=\"pl-2\">\n        <h3 className=\"lg:text-xl text-lg font-bold\">{title}</h3>\n        <p className=\"text-gray-400 text-sm\">{description}</p>\n      </section>\n    </div>\n  );\n};\n\nexport default CardTransferRequest;\n","import React, { Fragment } from \"react\";\nimport { ImSad } from \"react-icons/im\";\nimport {\n  // MdArrowBack,\n  // MdCancel,\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdCheckCircle,\n  MdOutlineArrowForward,\n  MdOutlineFilePresent,\n  MdSearch,\n} from \"react-icons/md\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetFreeVacanciesByDistrictAndUser,\n  FC_GetTransfersReasons,\n  FC_SendTransferRequest,\n  GetFreeVacanciesByDistrictAndUser_Interface,\n  Placement,\n  ReasonsTransfers,\n  SendTransferRequestInterface,\n  FC_UpdateUserDocuments,\n  FT_UpdateUserDocuments,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TextArea from \"../../components/Inputs/TextArea\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport UserDocuments, {\n  UserDocumentsInterface,\n} from \"../../components/UserDocuments/UserDocuments\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { search } from \"../../utils/functions\";\nimport CardTransferRequest from \"./CardTransferRequest\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  onClick: Function;\n  reloadTransfers: () => void;\n  FC_UpdateUserDocuments: FT_UpdateUserDocuments;\n  close: () => void;\n}\n\ninterface AppState {\n  loading_district: boolean;\n  error: {\n    target:\n      | \"main-success\"\n      | \"main-error\"\n      | \"error\"\n      | \"transfer-error\"\n      | \"transfer-success\"\n      | null;\n    msg: string;\n  };\n  districts: DistrictTypes[];\n  schools: GetFreeVacanciesByDistrictAndUser_Interface[];\n  selected_district: DistrictTypes | null;\n  loading_schools: boolean;\n  selected_qualification: string;\n  search: string;\n  step: number;\n  search_district: string;\n  search_school: string;\n  selected_schools: GetFreeVacanciesByDistrictAndUser_Interface[];\n  reasons: ReasonsTransfers[];\n  selected_reasons: ReasonsTransfers[];\n  loading_reasons: boolean;\n  candidate_comment: string;\n  transfer_success: boolean;\n  loading_submit_transfer: boolean;\n}\n\nclass _RequestTransferUI extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_schools: false,\n      loading_district: true,\n      districts: [],\n      schools: [],\n      selected_district: null,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      selected_qualification: \"\",\n      search: \"\",\n      step: 1,\n      search_district: \"\",\n      search_school: \"\",\n      selected_schools: [],\n      reasons: [],\n      selected_reasons: [],\n      loading_reasons: false,\n      candidate_comment: \"\",\n      transfer_success: false,\n      loading_submit_transfer: false,\n    };\n  }\n\n  componentDidMount = () => {\n    FC_GetDistricts((status, data, msg) => {\n      this.setState({\n        loading_district: status,\n        districts: data === null ? [] : data,\n        error:\n          data?.length === 0\n            ? {\n                target: \"main-error\",\n                msg: \"msg\",\n              }\n            : {\n                target: null,\n                msg: \"\",\n              },\n      });\n    });\n  };\n\n  selectDistrict = (district: DistrictTypes | null) => {\n    if (district !== null && this.props.auth.user) {\n      this.setState({\n        selected_district: district,\n        step: 2,\n        loading_schools: true,\n      });\n\n      FC_GetFreeVacanciesByDistrictAndUser(\n        district.district_code,\n        this.props.auth.user.user_id,\n        (status, data, error) => {\n          this.setState({\n            loading_schools: false,\n            schools: data,\n          });\n        }\n      );\n    }\n  };\n\n  selectSchool = (\n    school: GetFreeVacanciesByDistrictAndUser_Interface,\n    add: boolean = true\n  ) => {\n    if (this.state.selected_schools.length >= 3 && add) return;\n\n    if (add) {\n      this.setState({\n        selected_schools: [...this.state.selected_schools, school],\n      });\n    } else {\n      this.setState({\n        selected_schools: this.state.selected_schools.filter(\n          (sc) => sc.school_code !== school.school_code\n        ),\n      });\n    }\n  };\n\n  loadReasons = () => {\n    if (this.state.reasons.length <= 0) {\n      this.setState({\n        loading_reasons: true,\n      });\n      FC_GetTransfersReasons((status, data, error) => {\n        this.setState({\n          loading_reasons: false,\n          reasons: data,\n          error:\n            status === false\n              ? { msg: \"\", target: null }\n              : { target: \"error\", msg: error },\n        });\n      });\n    }\n  };\n\n  submitTransferRequest = () => {\n    if (\n      !this.props.basic.academic_calender ||\n      !this.props.auth ||\n      !this.props.auth.school ||\n      !this.state.selected_district ||\n      !this.props.auth.user\n    ) {\n      return this.setState({\n        error: {\n          target: \"transfer-error\",\n          msg: \"Incomplete profile info\",\n        },\n      });\n    }\n\n    let district = this.props.auth.school.school_code;\n\n    let data: SendTransferRequestInterface = {\n      academic_year_id: this.props.basic.academic_calender.academic_year_id,\n      distrct_from_id: district,\n      district_to_id: this.state.selected_district.district_code,\n      requested_school_id: this.state.selected_schools.map(\n        (itm) => itm.school_code\n      ),\n      school_from_id: this.props.auth.school.school_code,\n      teacher_comment: this.state.candidate_comment,\n      teacher_reason_id: [],\n      teacher_supporting_document: [],\n      transfer_type:\n        district !== this.state.selected_district.district_code\n          ? \"External\"\n          : \"Internal\",\n    };\n\n    this.setState({\n      loading_submit_transfer: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    FC_SendTransferRequest(\n      data,\n      this.props.auth.user?.staff_code,\n      (status, data, msg) => {\n        console.log({ res: data });\n        if (status === true) {\n          this.setState({\n            loading_submit_transfer: false,\n            transfer_success: true,\n          });\n        } else {\n          console.log({ msg: msg });\n\n          this.setState({\n            loading_submit_transfer: false,\n            error: {\n              target: \"transfer-error\",\n              msg: msg,\n            },\n            // refresh the other transfers\n          });\n          this.props.reloadTransfers();\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.auth.user?.resident_surpoting_document === null)\n      return (\n        <UserDocuments\n          auth={this.props.auth}\n          FC_UpdateUserDocuments={this.props.FC_UpdateUserDocuments}\n        />\n      );\n\n    // if (this.state.loading_district === true)\n    //   return (\n    //     <div className=\"p-8 text-center\">\n    //       <div className=\"mx-auto\">\n    //         <Loading />\n    //       </div>\n    //     </div>\n    //   );\n\n    if (this.state.error.target === \"main-error\") {\n      return (\n        <Alert theme=\"danger\" fixed>\n          {this.state.error.msg}\n        </Alert>\n      );\n    }\n\n    let DistrictResults: DistrictTypes[] = search(\n      this.state.districts,\n      this.state.search_district,\n      { district_code: true, district_name: true }\n    );\n\n    let SchoolsResults: GetFreeVacanciesByDistrictAndUser_Interface[] = search(\n      this.state.schools,\n      this.state.search_school,\n      { school_code: true, school_name: true, sector_name: true }\n    );\n\n    if (this.state.transfer_success === true)\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          <div className=\"py-4 text-center\">\n            <MdCheckCircle size={90} className=\"mx-auto text-green-500\" />\n\n            <h2 className=\"text-3xl pt-2 pb-1 text-green-600\">\n              Congratulation!\n            </h2>\n            <h3 className=\"font-bold text-lg\">\n              {this.props.auth.user?.full_name}\n            </h3>\n\n            <p className=\"text-gray-500 pb-4\">\n              Your transfer request has been submitted successfully{\" \"}\n            </p>\n\n            <Button\n              theme=\"accent-light\"\n              size=\"md\"\n              onClick={() => this.props.close()}\n            >\n              View transfer request\n            </Button>\n          </div>\n        </DashboardContainer>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <>\n          <div className=\"sticky top-14 z-50 \">\n            <DashboardContainer>\n              <div className=\"flex items-center\">\n                <div className=\"flex-1\">\n                  <Heading className=\" py-2 lg:pb-3 lg:pt-2 font-light text-left text-gray-500\">\n                    Apply for transfer\n                  </Heading>\n                  {/* <p className=\"-mt-3 pb-2 text-gray-400\">\n                    Position name:{\" \"}\n                    <b className=\"text-primary-800\">Position for mathematics</b>\n                  </p> */}\n                </div>\n\n                {this.state.loading_submit_transfer === false && (\n                  <Button\n                    size=\"md\"\n                    theme=\"danger-light\"\n                    onClick={() =>\n                      window.confirm(\n                        \"Are you sure you want to stop the request process \\n All your previous choices will be lost\"\n                      )\n                        ? this.props.onClick()\n                        : null\n                    }\n                  >\n                    Close\n                  </Button>\n                )}\n              </div>\n\n              <div className=\"pt-2 grid  grid-cols-3 border p-2 rounded-md\">\n                {[\n                  {\n                    step: 1,\n                    title: \"Choose a district\",\n                    description:\n                      \"Select a district where you want to be transferred\",\n                  },\n                  {\n                    step: 2,\n                    title: \"Choose school\",\n                    description: \"Please choose at least 3 schools\",\n                  },\n                  {\n                    step: 3,\n                    title: \"Complete transfer\",\n                    description: \"Complete the information\",\n                  },\n                ].map((itm) => (\n                  <CardTransferRequest\n                    onClick={() => {\n                      if (this.state.loading_submit_transfer === true) return;\n\n                      if (itm.step === 1) {\n                        this.setState({\n                          step: 1,\n                          schools: [],\n                          loading_schools: false,\n                          selected_schools: [],\n                        });\n                      }\n\n                      // go back to step 2\n                      if (itm.step === 2) {\n                        if (this.state.step === 3)\n                          this.setState({\n                            step: 2,\n                          });\n                      }\n                    }}\n                    key={itm.step}\n                    active={itm.step === this.state.step}\n                    description={itm.description}\n                    number={itm.step}\n                    theme={\n                      itm.step === this.state.step\n                        ? \"yellow\"\n                        : this.state.step > itm.step\n                        ? \"green\"\n                        : \"gray\"\n                    }\n                    title={itm.title}\n                    priority={itm.step <= this.state.step}\n                  />\n                ))}\n              </div>\n            </DashboardContainer>\n          </div>\n\n          {this.state.step === 1 && (\n            <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n              <div>\n                <div className=\"p-2\">\n                  <TextInput\n                    error=\"\"\n                    label=\"\"\n                    name=\"\"\n                    onChange={(e) =>\n                      this.setState({ search_district: e.target.value })\n                    }\n                    placeholder=\"Search district by name\"\n                    value={this.state.search_district}\n                  />\n                </div>\n\n                {this.state.loading_district === true ? (\n                  <div className=\"py-8 text-center text-8xl text-accent-900\">\n                    <Loading className=\"mx-auto\" />\n                  </div>\n                ) : this.state.districts.length >= 1 ? (\n                  <>\n                    {DistrictResults.length <= 0 ? (\n                      <div className=\"py-4 \">\n                        <h2 className=\"text-lg\">No results found</h2>\n                        <p className=\"text-gray-500\">\n                          Please use a correct district name\n                        </p>\n                      </div>\n                    ) : (\n                      <div className=\"grid lg:grid-cols-2 gap-2 \">\n                        {DistrictResults.map((dist) => (\n                          <div\n                            onClick={this.selectDistrict.bind(this, dist)}\n                            key={dist.district_code}\n                            className=\"p-2 flex cursor-pointer rounded border  px-3 hover:text-yellow-600 hover:border-yellow-600 hover:bg-yellow-50 bg-white text-lg\"\n                          >\n                            <h4 className=\"flex-1 text-lg\">\n                              {\" \"}\n                              <b>{dist.district_name}</b> district\n                            </h4>\n                            <button className=\"\">\n                              <MdOutlineArrowForward />\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  <div>\n                    <h2 className=\"text-center p-4 text-gray-400  text-2xl\">\n                      Something went wrong, <br /> please try again later\n                    </h2>\n                  </div>\n                )}\n              </div>\n            </DashboardContainer>\n          )}\n\n          {this.state.step === 2 && (\n            <>\n              {this.state.loading_schools === true ? (\n                <div className=\"py-4 text-center\">\n                  <MdSearch\n                    size={\"160px\"}\n                    className=\"text-gray-600 mx-auto animate__animated animate__swing animate__slow animate__infinite\"\n                  />\n                  <h2 className=\"text-3xl text-gray-600 pb-2 pt-4\">\n                    Looking for the vacancies\n                  </h2>\n                  <p className=\"text-gray-500\">Please wait</p>\n                </div>\n              ) : (\n                <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n                  <div>\n                    <div className=\"p-2\">\n                      <TextInput\n                        error=\"\"\n                        label=\"\"\n                        name=\"\"\n                        onChange={(e) =>\n                          this.setState({ search_school: e.target.value })\n                        }\n                        placeholder=\"Search schools by name\"\n                        value={this.state.search_school}\n                      />\n                    </div>\n\n                    {this.state.schools.length >= 1 ? (\n                      <>\n                        {DistrictResults.length <= 0 ? (\n                          <div className=\"py-4 \">\n                            <h2 className=\"text-lg\">No results found</h2>\n                            <p className=\"text-gray-500\">\n                              Please use a correct school name\n                            </p>\n                          </div>\n                        ) : (\n                          <div className=\"grid lg:grid-cols-2 gap-2 pb-20\">\n                            {SchoolsResults.map((dist) => {\n                              let selectedSchool =\n                                this.state.selected_schools.find(\n                                  (itm) => itm.school_code === dist.school_code\n                                );\n\n                              return (\n                                <div\n                                  onClick={this.selectSchool.bind(\n                                    this,\n                                    dist,\n                                    selectedSchool === undefined ? true : false\n                                  )}\n                                  key={dist.school_code}\n                                  className={`pr-2 pl-1 py-1 flex cursor-pointer rounded border  px-3 ${\n                                    selectedSchool === undefined\n                                      ? \"hover:text-yellow-600 hover:border-yellow-600 hover:bg-yellow-50\"\n                                      : \"hover:text-green-600 border-green-600 bg-green-100\"\n                                  }  bg-white text-lg`}\n                                >\n                                  <button className=\"pr-2 text-3xl\">\n                                    {selectedSchool === undefined ? (\n                                      <MdCheckBoxOutlineBlank\n                                        className={`${\n                                          this.state.selected_schools.length >=\n                                          3\n                                            ? \"text-gray-400\"\n                                            : \"text-gray-800\"\n                                        }`}\n                                      />\n                                    ) : (\n                                      <MdCheckBox className=\"text-green-500\" />\n                                    )}\n                                  </button>\n\n                                  <section className=\"flex-1\">\n                                    <h4 className=\"\">\n                                      <span>{dist.school_code}</span>{\" \"}\n                                      <b>{dist.school_name}</b>\n                                    </h4>\n                                    <p className=\"text-sm text-gray-600\">\n                                      Sector: <b>{dist.sector_name}</b>\n                                    </p>\n                                  </section>\n                                  <section>\n                                    <p className=\"text-xs text-gray-400\">\n                                      Vacant{`(s)`}\n                                    </p>\n                                    <h4 className={` font-bold text-right   `}>\n                                      {dist.vacant_posts}\n                                    </h4>\n                                  </section>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        )}\n                      </>\n                    ) : (\n                      <div className=\"py-6 text-center\">\n                        <ImSad\n                          size={\"120px\"}\n                          className=\"text-gray-600 mx-auto animate__animated animate__zoomIn animate__slow \"\n                        />\n                        <h2 className=\"text-3xl text-gray-600 pb-2 pt-4\">\n                          Sorry, there is no vacancies for you in{\" \"}\n                          <b>{this.state.selected_district?.district_name}</b>\n                        </h2>\n                        <p className=\"text-gray-500\">\n                          Please look for another district, <br /> or try again\n                          next time\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </DashboardContainer>\n              )}\n\n              {this.state.selected_schools.length >= 1 && (\n                <div\n                  className={`p-2 bottom-0 items-center right-0 left-0 lg:pl-72 fixed bg-white border-t flex`}\n                >\n                  <section className=\"flex-1\">\n                    <label className=\"block px-0.5 m-0 text-sm\">\n                      Selected schools:{\" \"}\n                      <b>{this.state.selected_schools.length}</b>\n                    </label>\n                    <section className=\"pt-0.5\">\n                      {this.state.selected_schools.map((itm) => (\n                        <section\n                          key={itm.school_code}\n                          className=\"inline-block m-0.5 p-0.5 px-1 rounded-md bg-yellow-100 font-bold text-yellow-600 text-sm\"\n                        >\n                          {itm.school_name}\n                        </section>\n                      ))}\n                    </section>\n                  </section>\n                  <div className=\"\">\n                    <Button\n                      size=\"lg\"\n                      onClick={() => {\n                        this.setState({\n                          step: 3,\n                        });\n                        this.loadReasons();\n                      }}\n                    >\n                      Continue\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          {this.state.step === 3 && (\n            <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n              {this.state.error.target === \"transfer-error\" && (\n                <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n              )}\n              <div className=\"p-1\">\n                <h5 className=\"pt-2 pb-1 text-gray-500\">Found documents</h5>\n                <div className=\"border-b flex gap-2 pb-4\">\n                  {[\n                    {\n                      title: \"Residence document\",\n                      found:\n                        this.props.auth.user?.resident_surpoting_document !==\n                          \"\" &&\n                        this.props.auth.user?.resident_surpoting_document !==\n                          null\n                          ? true\n                          : false,\n                    },\n                    {\n                      title: \"Disability\",\n                      found:\n                        this.props.auth.user?.disability_surpoting_document !==\n                          \"\" &&\n                        this.props.auth.user?.disability_surpoting_document !==\n                          null\n                          ? true\n                          : false,\n                    },\n                  ].map((itm, i) => {\n                    if (itm.found === false) return null;\n                    return (\n                      <div\n                        className=\"p-2 rounded border flex flex-1 items-center\"\n                        key={i}\n                      >\n                        <section className=\"\">\n                          <MdOutlineFilePresent\n                            className=\"text-2xl text-accent-900 opacity-60\"\n                            size={50}\n                          />\n                        </section>\n                        <section className=\"flex-1 pl-1\">\n                          <h2 className=\"text-xl font-bold\">{itm.title}</h2>\n                          <h4 className=\"text-gray-400 text-sm\">\n                            Can be found on <b>Irembo</b>\n                          </h4>\n                        </section>\n                        <section>\n                          <MdCheckCircle className=\"text-green-500\" size={30} />\n                        </section>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <div className=\"pt-3\">\n                  <h4>Add reason</h4>\n                  <TextArea\n                    onChange={(e) =>\n                      this.setState({ candidate_comment: e.target.value })\n                    }\n                    value={this.state.candidate_comment}\n                    error={\"\"}\n                    label={\"\"}\n                    placeholder={\"Explain your reasons\"}\n                    name={\"\"}\n                    disabled={this.state.loading_submit_transfer}\n                  />\n                </div>\n\n                <div className=\"text-right\">\n                  <Button\n                    size=\"lg\"\n                    onClick={this.submitTransferRequest}\n                    loading={this.state.loading_submit_transfer}\n                  >\n                    Submit transfer request\n                  </Button>\n                </div>\n              </div>\n            </DashboardContainer>\n          )}\n        </>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n} => {\n  return {\n    auth: auth,\n    basic: basic,\n    placement: placement,\n  };\n};\n\nexport const RequestTransferUI = connect(mapStateToProps, {\n  FC_UpdateUserDocuments,\n})(_RequestTransferUI);\n","import React, { FC, ReactElement } from \"react\";\nimport { MdDoubleArrow, MdTransferWithinAStation } from \"react-icons/md\";\nimport { GetTransferForUser__Interface } from \"../../actions\";\n\ntype RequestItemProps = {\n  transf: GetTransferForUser__Interface;\n};\n\nconst RequestItem: FC<RequestItemProps> = ({ transf }): ReactElement => {\n  return (\n    <div className=\"p-2 bg-white mb-3 border rounded flex\">\n      <div\n        className={`p-3 hidden lg:block ${\n          transf.requested_status === \"APPROVED\"\n            ? \"text-green-700 bg-green-100\"\n            : \"text-accent-800 bg-accent-400\"\n        } rounded flex items-center`}\n      >\n        <MdTransferWithinAStation size={80} />\n      </div>\n      <div className=\"flex-1 pl-3 pt-1\">\n        <span\n          className={`p-1 rounded px-2 py-0.5 text-sm  ${\n            transf.requested_status === \"APPROVED\"\n              ? \"bg-green-600 text-white\"\n              : \"bg-accent-900 text-white\"\n          }`}\n        >\n          {transf.requested_status}\n        </span>\n\n        <h2 className=\"text-lg font-bold\">\n          {transf.position_code} {transf.position_name}\n        </h2>\n        <div className=\"pt-1\">\n          <section className=\"flex items-center pt-2\">\n            <section className=\"border flex-1 pl-2 rounded rounded-r-full\">\n              <h3 className=\" font-bold\">\n                {transf.school_from_info?.school_code}\n                {\" - \"}\n                {transf.school_from_info?.school_name}\n              </h3>\n              <h4 className=\"text-sm -mt-1 text-gray-500\">\n                {transf.school_from_info?.district_name} -{\" \"}\n                {transf.school_from_info?.sector_name}\n              </h4>\n            </section>\n            <section className=\"text-gray-500\">\n              <MdDoubleArrow size={40} />\n            </section>\n            <section className=\"border flex-1 pl-4 rounded rounded-l-full\">\n              <h3 className=\" font-bold\">\n                {transf.requested_school_info?.school_code}\n                {\" - \"}\n                {transf.requested_school_info?.school_name}\n              </h3>\n              <h4 className=\"text-sm -mt-1 text-gray-500\">\n                {transf.school_from_info?.district_name} -{\" \"}\n                {transf.school_from_info?.sector_name}\n              </h4>\n            </section>\n          </section>\n\n          <section className=\"pt-2\">\n            <label className=\"text-gray-500 inline-block pr-1\">Date: </label>{\" \"}\n            <b>{transf.teacher_requested_transfer_date}</b>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RequestItem;\n","import React from \"react\";\nimport { MdDoubleArrow, MdTransferWithinAStation } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetTransferForUser,\n  GetTransferForUser__Interface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { RequestTransferUI } from \"./RequestTransfeForm\";\nimport TransferItem from \"./TransferItem\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n}\n\ninterface AppState {\n  loading: boolean;\n  add_transfer: boolean;\n  transfers: GetTransferForUser__Interface[];\n  error: {\n    target: \"main-error\" | \"main-success\" | null;\n    msg: string;\n  };\n}\n\nclass _TransfersList extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      add_transfer: false,\n      transfers: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.startComponent(true);\n  }\n\n  startComponent(mount: boolean = false) {\n    if (mount === true)\n      this.setState({\n        loading: true,\n        // add_transfer: false,\n      });\n    FC_GetTransferForUser((status, data, msg) => {\n      if (status === true) {\n        this.setState({\n          loading: false,\n          transfers: data,\n        });\n      } else {\n        if (mount === true) {\n          this.setState({\n            transfers: [],\n            loading: false,\n            error: {\n              target: \"main-error\",\n              msg: msg,\n            },\n          });\n        }\n      }\n    });\n  }\n\n  openForm = (status: boolean) => this.setState({ add_transfer: status });\n\n  render() {\n    // let newTransferButton = false;\n    // if (this.state.loading === false && this.props.basic.academic_calender) {\n    //   let foundAccademic = this.state.transfers.find(\n    //     (el) =>\n    //       el.academic_year_id ===\n    //       this.props.basic.academic_calender?.academic_year_id\n    //   );\n    //   if (foundAccademic === undefined) newTransferButton = true;\n    // }\n\n    if (this.state.add_transfer === true)\n      return (\n        <RequestTransferUI\n          onClick={this.openForm.bind(this, false)}\n          reloadTransfers={this.startComponent}\n          close={() => {\n            this.setState({\n              add_transfer: false,\n            });\n            this.startComponent();\n          }}\n        />\n      );\n\n    return (\n      <>\n        <div className=\"bg-white\">\n          <DashboardContainer transparent className=\"\">\n            <div className=\"flex items-center\">\n              <section className=\"flex-1 text-gray-600\">\n                <Heading>My Transfers</Heading>\n                {this.state.loading === false && (\n                  <p>Total transfers: {this.state.transfers.length}</p>\n                )}\n              </section>\n              <section>\n                {/* {newTransferButton === true && ( */}\n                <Button onClick={this.openForm.bind(this, true)}>\n                  Request new transfer\n                </Button>\n                {/* )} */}\n              </section>\n            </div>\n          </DashboardContainer>\n        </div>\n\n        <DashboardContainer transparent className=\"\">\n          {this.state.error.target === \"main-error\" && (\n            <Alert theme=\"danger\">{this.state.error.target}</Alert>\n          )}\n          <div className=\"pt-5\">\n            {this.state.loading === true ? (\n              <div className=\"py-8 text-center text-6xl\">\n                <Loading className=\"mx-auto\" />\n              </div>\n            ) : this.state.transfers.length <= 0 ? (\n              <div className=\"text-3xl py-8 text-center text-gray-500\">\n                No transfers found!\n              </div>\n            ) : (\n              this.state.transfers.map((transf, i) => (\n                <TransferItem transf={transf} key={i} />\n              ))\n            )}\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n} => {\n  return { auth: auth, basic: basic };\n};\n\nexport const TransfersList = connect(mapStateToProps, {})(_TransfersList);\n"],"sourceRoot":""}