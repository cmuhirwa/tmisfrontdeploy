{"version":3,"sources":["components/TableLoading/TableLoading.tsx","containers/Reports/PostsRequestsReport/DistrictsLabel.tsx","containers/DoPlacement/SelectPosition.tsx","containers/DoPlacement/DoPlacement.tsx"],"names":["TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","DistrictsLabel","useState","searchData","setSearchData","style","width","type","value","onChange","e","target","placeholder","onClick","setVisibility","search","districts","length","item","i","district_code","selected_district","district_name","SelectPosition","positions","position_code","selected_position","position_name","_DoPlacement","FC_GetDistrictDistribution","district_id","basic","academic_calender","FC_GetDistributionSchools","academic_id","academic_year_id","status","data","msg","setState","loadingDistribution","distributionList","FC_ChangeCustomVacant","default_value","new_value","custom_vacant_copy","state","customVacant","thisVacantCustom","findIndex","selected_request_id","new_value_copy","isEmptyOrSpaces","Number","toString","console","log","FC_GetDistributionValue","result","find","post_request_id","dde_post_distribution","FC_FilterByPosition","academic_distributed","filter","FC_CalculateRequests","forEach","itemDistributed","FC_GetRequestsForTRS","distributed","requestArray","school_code","sector_code","substring","province_code","gender","in_education","disability","available_places","requested_teacher","submitDataRequestTRS","requestToSend","loading_candidates_from_trs","error","FC_RequestTeachersInTRS_NEW","err","collected_teachers","collected_candidates_open","loading","showDistrictsList","showPositionList","waiting_list_total","this","auth","role","role_id","FC_GetDistricts","FC_GetAllPositions","FC_GetWaitingList","access_list","access","checkAccess","UsersAccess","DO_PLACEMENT","to","DashboardContainer","Loading","selected_district_name","itm","DATA_Result","DATA_TotalRequests","DATA_waitingList","_id","undefined","Heading","size","title","special","colSpan","cand","school","user_info","n_id","fname","lname","phone_number","email","sex","school_name","Button","theme","waiting","shortString","distributionValue","existing_post","onBlur","max","autoFocus","min","Component","DoPlacement","connect"],"mappings":"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","file":"static/js/36.ffa00396.chunk.js","sourcesContent":["import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { useState } from \"react\";\nimport { MdCheckCircle, MdClose, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { DistrictTypes } from \"../../../types/TransferTypes\";\nimport { search } from \"../../../utils/functions\";\n\ninterface DistrictsLabelProps {\n  onChange: (value: string) => void;\n  districts: DistrictTypes[];\n  selected_district: string;\n  setVisibility: (status: boolean) => void;\n}\n\nconst DistrictsLabel = (props: DistrictsLabelProps) => {\n  const [searchData, setSearchData] = useState<string>(\"\");\n  return (\n    <div\n      className=\"absolute animate__animated animate__fadeIn animate__faster\"\n      style={{ width: \"500px\" }}\n    >\n      <div className=\"bg-white rounded shadow-xl mb-10\">\n        <div className=\"p-3 flex flex-row items-center justify-between gap-3\">\n          <input\n            type=\"search\"\n            value={searchData}\n            onChange={(e) => setSearchData(e.target.value)}\n            placeholder=\"Type district name...\"\n            className=\"bg-white rounded px-3 py-2 border border-primary-800 w-full\"\n          />\n          <div onClick={() => props.setVisibility(false)}>\n            <div className=\"h-8 w-8 rounded-full bg-red-100 hover:bg-red-200 flex items-center justify-center\">\n              <MdClose className=\"text-red-600 text-2xl cursor-pointer\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"max-h-80 overflow-y-auto pb-3\">\n          {(search(props.districts, searchData) as DistrictTypes[]).length ===\n          0 ? (\n            <div className=\"text-gray-500 font-extrabold text-xl text-center p-4\">\n              No data found!\n            </div>\n          ) : (\n            (search(props.districts, searchData) as DistrictTypes[]).map(\n              (item, i) => (\n                <div\n                  onClick={() => {\n                    props.onChange(item.district_code);\n                    props.setVisibility(false);\n                  }}\n                  className={`border-b py-2 px-3 group ${\n                    props.selected_district === item.district_code\n                      ? \"bg-blue-200 font-extrabold text-primary-800\"\n                      : \"\"\n                  } hover:bg-primary-800 hover:text-white cursor-pointer hover:border-blue-500`}\n                  key={i + 1}\n                >\n                  <div className=\"flex flex-row items-center gap-4\">\n                    <div>\n                      {props.selected_district === item.district_code ? (\n                        <MdCheckCircle className=\"text-2xl\" />\n                      ) : (\n                        <MdRadioButtonUnchecked className=\"text-2xl\" />\n                      )}\n                    </div>\n                    <div>{item.district_name}</div>\n                  </div>\n                </div>\n              )\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DistrictsLabel;\n","import React, { useState } from \"react\";\nimport { MdCheckCircle, MdClose, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { SchoolPositionApiResponse } from \"../../types/HeadTeacherRequesTypes\";\nimport { search } from \"../../utils/functions\";\n\ninterface SelectPositionProps {\n  onChange: (value: string) => void;\n  positions: SchoolPositionApiResponse[];\n  selected_position: string;\n  setVisibility: (status: boolean) => void;\n}\n\nconst SelectPosition = (props: SelectPositionProps) => {\n  const [searchData, setSearchData] = useState<string>(\"\");\n  return (\n    <div\n      className=\"absolute animate__animated animate__fadeIn animate__faster\"\n      style={{ width: \"500px\" }}\n    >\n      <div className=\"bg-white rounded shadow-xl mb-10\">\n        <div className=\"p-3 flex flex-row items-center justify-between gap-3\">\n          <input\n            type=\"search\"\n            value={searchData}\n            onChange={(e) => setSearchData(e.target.value)}\n            placeholder=\"Type district name...\"\n            className=\"bg-white rounded px-3 py-2 border border-primary-800 w-full\"\n          />\n          <div onClick={() => props.setVisibility(false)}>\n            <div className=\"h-8 w-8 rounded-full bg-red-100 hover:bg-red-200 flex items-center justify-center\">\n              <MdClose className=\"text-red-600 text-2xl cursor-pointer\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"max-h-80 overflow-y-auto pb-3\">\n          {(search(props.positions, searchData) as SchoolPositionApiResponse[])\n            .length === 0 ? (\n            <div className=\"text-gray-500 font-extrabold text-xl text-center p-4\">\n              No data found!\n            </div>\n          ) : (\n            (\n              search(props.positions, searchData) as SchoolPositionApiResponse[]\n            ).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.onChange(item.position_code);\n                  props.setVisibility(false);\n                }}\n                className={`border-b py-2 px-3 group ${\n                  props.selected_position === item.position_code\n                    ? \"bg-blue-200 font-extrabold text-primary-800\"\n                    : \"\"\n                } hover:bg-primary-800 hover:text-white cursor-pointer hover:border-blue-500`}\n                key={i + 1}\n              >\n                <div className=\"flex flex-row items-center gap-4\">\n                  <div>\n                    {props.selected_position === item.position_code ? (\n                      <MdCheckCircle className=\"text-2xl\" />\n                    ) : (\n                      <MdRadioButtonUnchecked className=\"text-2xl\" />\n                    )}\n                  </div>\n                  <div>{item.position_name}</div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectPosition;\n","import React, { Component, Fragment } from \"react\";\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  AcademicDDEDistribution,\n  API_DistributedDDE,\n  Auth,\n  Basic,\n  FC_GetAllPositions,\n  FC_GetDistributionSchools,\n  FC_GetWaitingList,\n  FC_RequestTeachersInTRS_NEW,\n  RequestInTRS,\n  ReturnedCandidates,\n  WaitingList,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { checkAccess, UsersAccess } from \"../../utils/access\";\nimport { isEmptyOrSpaces, shortString } from \"../../utils/functions\";\nimport DistrictsLabel from \"../Reports/PostsRequestsReport/DistrictsLabel\";\nimport SelectPosition from \"./SelectPosition\";\n\ninterface DoPlacementProps {\n  auth: Auth;\n  basic: Basic;\n\n  FC_GetAllPositions: Function;\n}\n\ninterface DoPlacementStates {\n  loading: boolean;\n  loadingDistribution: boolean;\n  loading_candidates_from_trs: boolean;\n  districts: DistrictTypes[] | null;\n  showDistrictsList: boolean;\n  selected_district: string;\n  showPositionList: boolean;\n  selected_position: string;\n  distributionList: API_DistributedDDE | null;\n  searchData: string;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"main-error\"\n      | \"update-error\";\n    msg: string;\n  } | null;\n  selected_request_id: string;\n  new_value: string;\n  customVacant: { selected_request_id: string; new_value: string }[];\n  waiting_list_total: WaitingList[] | null;\n  collected_teachers: ReturnedCandidates[];\n  collected_candidates_open: boolean;\n}\n\nclass _DoPlacement extends Component<DoPlacementProps, DoPlacementStates> {\n  constructor(props: DoPlacementProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingDistribution: false,\n      loading_candidates_from_trs: false,\n      districts: null,\n      showDistrictsList: false,\n      selected_district: \"\",\n      showPositionList: false,\n      selected_position: \"\",\n      distributionList: null,\n      searchData: \"\",\n      error: null,\n      selected_request_id: \"\",\n      new_value: \"0\",\n      customVacant: [],\n      waiting_list_total: null,\n      collected_teachers: [],\n      collected_candidates_open: false,\n    };\n  }\n\n  componentDidMount() {\n    // Get Districts Function\n    if (\n      this.props.auth.role &&\n      this.props.auth.role.role_id.toString() === \"4\"\n    ) {\n      FC_GetDistricts(\n        (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n          this.setState({ loading: status });\n          if (data !== null && status === false) {\n            this.setState({\n              loading: false,\n              districts: data,\n            });\n          }\n          // else if (status === false) {\n          //   this.setState({\n          //     loading: false,\n          //   });\n          // }\n        }\n      );\n\n      if (this.props.basic.positions === null)\n        this.props.FC_GetAllPositions((status: boolean, msg: string) => {\n          this.setState({ loading: status });\n        });\n\n      if (\n        this.state.waiting_list_total === null ||\n        this.state.waiting_list_total.length === 0\n      )\n        FC_GetWaitingList(\n          (status: boolean, data: WaitingList[] | null, msg: string) => {\n            this.setState({ loading: true });\n            if (status === true) {\n              this.setState({\n                loading: false,\n                waiting_list_total: data,\n              });\n            } else if (status === false) {\n              this.setState({\n                loading: false,\n              });\n            }\n          }\n        );\n    }\n  }\n\n  FC_GetDistrictDistribution = (district_id: string) => {\n    if (this.props.basic.academic_calender)\n      FC_GetDistributionSchools(\n        {\n          academic_id: this.props.basic.academic_calender.academic_year_id,\n          district_id: district_id,\n        },\n        (status: boolean, data: API_DistributedDDE | null, msg: string) => {\n          this.setState({ loadingDistribution: true, distributionList: null });\n          if (data !== null && status === true) {\n            this.setState({\n              loadingDistribution: false,\n              distributionList: data,\n            });\n          } else if (status === true) {\n            this.setState({\n              loadingDistribution: false,\n            });\n          }\n        }\n      );\n  };\n\n  FC_ChangeCustomVacant = (default_value: number, new_value: string) => {\n    let custom_vacant_copy = [...this.state.customVacant];\n    let thisVacantCustom = custom_vacant_copy.findIndex(\n      (item) => item.selected_request_id === this.state.selected_request_id\n    );\n    const new_value_copy: string =\n      isEmptyOrSpaces(new_value) || Number(new_value) < 0 ? \"0\" : new_value;\n    if (thisVacantCustom >= 0) {\n      custom_vacant_copy[thisVacantCustom] = {\n        selected_request_id: this.state.selected_request_id,\n        new_value:\n          Number(new_value_copy) > Number(default_value)\n            ? default_value.toString()\n            : new_value_copy,\n      };\n    } else {\n      custom_vacant_copy.push({\n        selected_request_id: this.state.selected_request_id,\n        new_value:\n          Number(new_value_copy) > Number(default_value)\n            ? default_value.toString()\n            : new_value_copy,\n      });\n    }\n\n    console.log(\"================new_value_copy====================\");\n    console.log({ new_value_copy });\n    console.log(\"================new_value_copy====================\");\n\n    this.setState({\n      customVacant: custom_vacant_copy,\n      selected_request_id: \"\",\n      new_value: \"\",\n    });\n  };\n\n  FC_GetDistributionValue = (data: AcademicDDEDistribution): string => {\n    let result = this.state.customVacant.find(\n      (item) => item.selected_request_id === data.post_request_id\n    );\n    if (result) return result.new_value;\n    return data.dde_post_distribution.toString();\n  };\n\n  FC_FilterByPosition = (\n    data: API_DistributedDDE | null,\n    position_code: string\n  ): AcademicDDEDistribution[] => {\n    return data\n      ? data.academic_distributed.filter(\n          (item) => item.position_code.toString() === position_code.toString()\n        )\n      : [];\n  };\n\n  FC_CalculateRequests = (data: AcademicDDEDistribution[]): number => {\n    let result: number = 0;\n\n    data.forEach((itemDistributed) => {\n      result += Number(this.FC_GetDistributionValue(itemDistributed));\n    });\n\n    return result;\n  };\n\n  FC_GetRequestsForTRS = (data: AcademicDDEDistribution[]): RequestInTRS[] => {\n    let distributed: number = 0,\n      requestArray: RequestInTRS[] = [];\n\n    data.forEach((itemDistributed) => {\n      // CALCULATING NUMBER OF POST REQUEST ==========================\n      distributed = Number(this.FC_GetDistributionValue(itemDistributed));\n      requestArray.push({\n        post_request_id: itemDistributed.post_request_id,\n        school_code: itemDistributed.school_code,\n        district_code: itemDistributed.district_code,\n        sector_code: itemDistributed.school_code.substring(0, 4),\n        province_code: itemDistributed.school_code.substring(0, 1),\n        gender: \"\",\n        in_education: false,\n        disability: false,\n        academic_year_id: this.props.basic.academic_calender\n          ? this.props.basic.academic_calender.academic_year_id\n          : \"\",\n        available_places: [\n          {\n            position_code: itemDistributed.position_code,\n            requested_teacher: distributed,\n          },\n        ],\n      });\n      distributed = 0;\n    });\n\n    return requestArray;\n  };\n\n  submitDataRequestTRS = (data: AcademicDDEDistribution[]) => {\n    const requestToSend = this.FC_GetRequestsForTRS(data);\n\n    //\n    this.setState({\n      loading_candidates_from_trs: true,\n      error: null,\n    });\n    FC_RequestTeachersInTRS_NEW(\n      this.state.selected_position,\n      requestToSend,\n      (status, data, err) => {\n        if (status === true && data !== null) {\n          this.setState({\n            loading_candidates_from_trs: false,\n            error: {\n              target: \"main-error\",\n              msg: err,\n            },\n            collected_teachers: data,\n            // loading_send_list_to_tmis: true,\n            collected_candidates_open: true,\n          });\n\n          // this.SendTeachersInTMIS(data);\n        } else {\n          this.setState({\n            loading_candidates_from_trs: false,\n            error: {\n              target: \"main-error\",\n              msg: err,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    // Check access\n    let access_list = this.props.auth.role?.access;\n    if (checkAccess(access_list, UsersAccess.DO_PLACEMENT) === false) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n\n    if (this.state.loading === true) {\n      return (\n        <DashboardContainer className=\"flex flex-col items-center justify-center\">\n          <Loading />\n          <div>Loading, please wait... {this.props.auth.role?.role_id}</div>\n        </DashboardContainer>\n      );\n    }\n\n    let selected_district_name = this.state.districts?.find(\n      (itm) => itm.district_code === this.state.selected_district\n    );\n\n    let selected_position = this.props.basic.positions?.find(\n      (itm) => itm.position_code === this.state.selected_position\n    );\n\n    const DATA_Result: AcademicDDEDistribution[] = this.FC_FilterByPosition(\n      this.state.distributionList,\n      this.state.selected_position\n    );\n\n    const DATA_TotalRequests: number = this.FC_CalculateRequests(DATA_Result);\n\n    const DATA_waitingList: WaitingList | undefined = this.state\n      .waiting_list_total\n      ? this.state.waiting_list_total.find(\n          (item) =>\n            item._id.toString() === this.state.selected_position.toString()\n        )\n      : undefined;\n\n    // Render the list\n    if (this.state.collected_candidates_open === true)\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          <div className=\"flex border-b p-2\">\n            <div className=\"flex-1 text-center\">\n              <Heading size=\"md\">\n                List of teachers form TRS waiting list\n              </Heading>\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <div className=\"grid grid-cols-2 gap-3 w-full\">\n              {[\n                {\n                  title: \"Position\",\n                  value: `(${selected_position?.position_code}) ${selected_position?.position_name}`,\n                  special: false,\n                },\n                {\n                  title: \"Total vacant post\",\n                  value: DATA_TotalRequests,\n                  special: false,\n                },\n              ].map((itm, i) => (\n                <div\n                  key={i}\n                  className={`bg-gray-50 py-1 px-2 border rounded flex-1 `}\n                >\n                  <span className=\"text-gray-500 block\">{itm.title}:</span>{\" \"}\n                  <b>{itm.value}</b>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <table className=\"w-full\">\n              <thead>\n                <tr>\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">NID</th>\n                  <th className=\"p-2 border\">Names</th>\n                  <th className=\"p-2 border\">Phone</th>\n                  <th className=\"p-2 border\">Email</th>\n                  <th className=\"p-2 border\">Gender</th>\n                  <th className=\"p-2 border\">School</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.collected_teachers.length <= 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"py-5 text-center\">\n                      <Heading>No candidates found!</Heading>\n                      <p>No results found</p>\n                    </td>\n                  </tr>\n                ) : (\n                  this.state.collected_teachers.map((cand, i) => {\n                    const school = DATA_Result.find(\n                      (item) =>\n                        item.school_code.toString() ===\n                        cand?.school_code.toString()\n                    );\n                    return (\n                      <tr key={i}>\n                        <td className=\"p-2 border\">{i + 1}</td>\n                        <td className=\"p-2 border\">{cand?.user_info?.n_id}</td>\n                        <td className=\"p-2 border\">\n                          {cand?.user_info?.user_info?.fname}{\" \"}\n                          {cand?.user_info?.user_info?.lname}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {cand?.user_info?.phone_number}\n                        </td>\n                        <td className=\"p-2 border\">{cand?.user_info?.email}</td>\n                        <td className=\"p-2 border\">\n                          {cand?.user_info?.user_info?.sex}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {school\n                            ? `${school.school_code} - ` + school.school_name\n                            : \"\"}\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n            <div className=\"p-2 text-right\">\n              <Button\n                onClick={() =>\n                  this.setState({\n                    collected_candidates_open: false,\n                    collected_teachers: [],\n                    customVacant: [],\n                    selected_position: \"\",\n                  })\n                }\n                theme=\"primary-light\"\n                className=\"mt-1\"\n              >\n                Add teacher to others position / district\n              </Button>\n            </div>\n          </div>\n        </DashboardContainer>\n      );\n\n    return (\n      <>\n        {!isEmptyOrSpaces(this.state.selected_district.toString()) &&\n          !isEmptyOrSpaces(this.state.selected_position.toString()) &&\n          DATA_waitingList && (\n            <div className=\"fixed bottom-0 right-0 flex left-0 bg-white shadow-lg border-t-2 px-3 items-center\">\n              <div className=\"main-side-spacer\"></div>\n              <div className=\"flex-1 p-2 flex justify-between items-center\">\n                <div className=\"flex items-center\">\n                  <div className=\"px-2 bg-gray-50 rounded\">\n                    <span className=\"text-sm\">Waiting list</span>\n                    <h3 className=\"font-bold text-2xl -mt-1\">\n                      {DATA_waitingList.waiting}\n                    </h3>\n                  </div>\n                  <div\n                    className={`mr-4 bg-green-50 ${\n                      DATA_waitingList.waiting >= DATA_TotalRequests &&\n                      DATA_TotalRequests > 0\n                        ? \"text-green-700\"\n                        : \"text-red-700\"\n                    } px-2`}\n                  >\n                    <span className=\"text-sm\">Total requests</span>\n                    <h3 className=\"font-bold text-2xl -mt-1\">\n                      {DATA_TotalRequests}\n                    </h3>\n                  </div>\n                </div>\n                <div className=\"\">\n                  {DATA_waitingList.waiting >= DATA_TotalRequests &&\n                  DATA_TotalRequests > 0 ? (\n                    <Button\n                      theme=\"accent\"\n                      onClick={() => this.submitDataRequestTRS(DATA_Result)}\n                      loading={this.state.loading_candidates_from_trs}\n                      className=\"animate__animated animate__zoomIn animate__faster\"\n                    >\n                      Do placement\n                    </Button>\n                  ) : (\n                    <span className=\"text-red-500\">\n                      {DATA_TotalRequests === 0\n                        ? \"Vacant post is zero!\"\n                        : \"Vacant post is greater than waiting list!\"}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n        <DashboardContainer>\n          {/* HEADER TITLE ============== */}\n\n          <div className=\"flex items-start\">\n            <div className=\"flex-1 mb-3\">\n              {/* <Heading>Do placement</Heading> */}\n              <div className=\"text-primary-800 text-2xl font-extrabold mb-2\">\n                Do placement\n              </div>\n              <Heading size=\"sm\" theme=\"accent\">\n                <b>\n                  {selected_district_name\n                    ? `${selected_district_name.district_name}`\n                    : \"\"}\n                  {selected_position\n                    ? ` / ${selected_position.position_name}`\n                    : \"\"}\n                </b>\n              </Heading>\n            </div>\n\n            {/* {waitingList && (\n              <div className=\"flex items-center\">\n                <div className=\"p-1 px-3 bg-blue-100 rounded mx-2\">\n                  <p className=\"text-sm\">Waiting list</p>\n                  <h2 className=\"text-2xl -mt-1 font-bold\">\n                    {isNaN(waitingList.waiting) ? \"\" : waitingList.waiting}\n                  </h2>\n                </div>\n              </div>\n            )} */}\n          </div>\n\n          {/* FILTER DATA ======================== */}\n\n          <div className=\"flex flex-col sm:flex-row items-start gap-3 justify-between\">\n            {/* FILTER DISTRICT DATA ======================== */}\n            <div className=\"flex flex-row items-center gap-3 w-full\">\n              {this.state.districts === null ? (\n                <div className=\"font-bold\">Loading, please wait...</div>\n              ) : (\n                <div className=\"w-full\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        showDistrictsList: !this.state.showDistrictsList,\n                      })\n                    }\n                    className={`border font-bold ${\n                      this.state.showDistrictsList === false\n                        ? \"border-gray-400 hover:border-primary-800 hover:bg-blue-100\"\n                        : \"border\"\n                    } hover:text-primary-800 w-full rounded px-3 py-2 bg-white cursor-pointer flex flex-row items-center gap-3 justify-between`}\n                  >\n                    <div className={`flex flex-row items-center gap-3`}>\n                      {this.state.selected_district !== \"\" &&\n                        selected_district_name && (\n                          <div className=\"rounded-full px-2 bg-blue-200 text-primary-800\">\n                            {shortString(selected_district_name.district_name)}\n                          </div>\n                        )}\n                      <span>\n                        {this.state.selected_district === \"\"\n                          ? \"Choose a district\"\n                          : \"Change district\"}\n                      </span>\n                    </div>\n\n                    <div>\n                      {this.state.showDistrictsList === false ? (\n                        <IoIosArrowDown className=\"text-xl\" />\n                      ) : (\n                        <IoIosArrowUp className=\"text-xl\" />\n                      )}\n                    </div>\n                  </div>\n                  {this.state.showDistrictsList === true && (\n                    <DistrictsLabel\n                      onChange={(value: string) => {\n                        this.setState({ selected_district: value });\n                        this.FC_GetDistrictDistribution(value);\n                      }}\n                      districts={this.state.districts}\n                      selected_district={this.state.selected_district}\n                      setVisibility={(status: boolean) => {\n                        this.setState({ showDistrictsList: status });\n                      }}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* FILTER POSITION DATA ======================== */}\n            <div className=\"flex flex-row items-center gap-3 w-full\">\n              {this.props.basic.positions === null ? (\n                <div className=\"font-bold\">Loading, please wait...</div>\n              ) : (\n                <div className=\"w-full\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        showPositionList: !this.state.showPositionList,\n                      })\n                    }\n                    className={`border font-bold ${\n                      this.state.showPositionList === false\n                        ? \"border-gray-400 hover:border-primary-800 hover:bg-blue-100\"\n                        : \"border\"\n                    } hover:text-primary-800 w-full rounded px-3 py-2 bg-white cursor-pointer flex flex-row items-center gap-3 justify-between`}\n                  >\n                    <div className=\"flex flex-row items-center gap-3\">\n                      {this.state.selected_position !== \"\" &&\n                        selected_position && (\n                          <div className=\"rounded-full px-2 bg-blue-200 text-primary-800\">\n                            {shortString(selected_position.position_name)}\n                          </div>\n                        )}\n                      <span>\n                        {this.state.selected_position === \"\"\n                          ? \"Choose a position\"\n                          : \"Change position\"}\n                      </span>\n                    </div>\n\n                    <div>\n                      {this.state.showPositionList === false ? (\n                        <IoIosArrowDown className=\"text-xl\" />\n                      ) : (\n                        <IoIosArrowUp className=\"text-xl\" />\n                      )}\n                    </div>\n                  </div>\n                  {this.state.showPositionList === true && (\n                    <SelectPosition\n                      onChange={(value: string) => {\n                        this.setState({ selected_position: value });\n                      }}\n                      positions={this.props.basic.positions}\n                      selected_position={this.state.selected_position}\n                      setVisibility={(status: boolean) => {\n                        this.setState({ showPositionList: status });\n                      }}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* BODY DATA ======================== */}\n          <div>\n            {(isEmptyOrSpaces(this.state.selected_district.toString()) ||\n              isEmptyOrSpaces(this.state.selected_position.toString())) && (\n              <div\n                onClick={() =>\n                  this.setState({\n                    showDistrictsList: !this.state.showDistrictsList,\n                  })\n                }\n                className=\"underline px-5 py-5 cursor-pointer rounded-md mt-5 bg-blue-50 text-gray-900 font-extrabold text-center w-full text-2xl\"\n              >\n                {isEmptyOrSpaces(this.state.selected_district)\n                  ? \"No district selected!\"\n                  : \"No position selected!\"}\n              </div>\n            )}\n\n            {/* {this.state.distributionList&&this.state.distributionList} */}\n            {!isEmptyOrSpaces(this.state.selected_district.toString()) &&\n              !isEmptyOrSpaces(this.state.selected_position.toString()) && (\n                <div className=\"my-3\">\n                  <table className=\"w-full text-left table-auto\">\n                    <thead>\n                      <tr>\n                        <th className=\"p-2 border\">#</th>\n                        <th className=\"p-2 border\">School name</th>\n                        <th className=\"p-2 border\">Post name</th>\n                        <th className=\"p-2 border\">\n                          Existing post{\"(\"}s{\")\"}\n                        </th>\n                        <th className=\"p-2 border \">Vacant posts</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.loadingDistribution ? (\n                        <TableLoading cols={5} />\n                      ) : this.state.distributionList === null ||\n                        this.state.distributionList.academic_distributed\n                          .length === 0 ||\n                        DATA_Result.length === 0 ? (\n                        <tr>\n                          <td\n                            colSpan={5}\n                            className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                          >\n                            <Heading size=\"md\">No results found</Heading>\n                          </td>\n                        </tr>\n                      ) : (\n                        DATA_Result.map(\n                          (itemDistributed: AcademicDDEDistribution, i) => {\n                            let distributionValue =\n                              this.FC_GetDistributionValue(itemDistributed);\n                            return (\n                              <Fragment key={i}>\n                                <tr className=\"border rounded hover:bg-blue-500 hover:bg-opacity-20\">\n                                  <td className=\"p-2 border\" key={i}>\n                                    {i + 1}\n                                  </td>\n                                  <td className=\"p-2 border\">\n                                    {itemDistributed.school_name}\n                                  </td>\n                                  <td className=\"p-2 border\">\n                                    {itemDistributed.position_name}\n                                  </td>\n                                  <td className=\"p-2 border\">\n                                    {itemDistributed.existing_post}\n                                  </td>\n\n                                  {this.state.selected_request_id ===\n                                  itemDistributed.post_request_id ? (\n                                    <td className=\" border  w-20 relative\">\n                                      <input\n                                        type=\"number\"\n                                        className=\"w-full p-1 border-4 rounded-t border-primary-800 font-bold bg-transparent\"\n                                        value={this.state.new_value}\n                                        onChange={(e) => {\n                                          Number(e.target.value) < 0\n                                            ? this.setState({\n                                                new_value: \"0\",\n                                              })\n                                            : this.setState({\n                                                new_value: e.target.value,\n                                              });\n                                        }}\n                                        onBlur={(e) =>\n                                          this.FC_ChangeCustomVacant(\n                                            itemDistributed.dde_post_distribution,\n                                            e.target.value\n                                          )\n                                        }\n                                        max={\n                                          itemDistributed.dde_post_distribution\n                                        }\n                                        autoFocus\n                                        min={0}\n                                      />\n                                    </td>\n                                  ) : (\n                                    <td\n                                      className=\"p-2 border w-20 font-bold bg-green-100 bg-opacity-40 text-green-800 cursor-pointer\"\n                                      onClick={() =>\n                                        this.setState({\n                                          selected_request_id:\n                                            itemDistributed.post_request_id,\n                                          new_value: distributionValue,\n                                        })\n                                      }\n                                    >\n                                      {distributionValue}\n                                    </td>\n                                  )}\n                                </tr>\n                              </Fragment>\n                            );\n                          }\n                        )\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\nexport const DoPlacement = connect(mapStateToProps, { FC_GetAllPositions })(\n  _DoPlacement\n);\n"],"sourceRoot":""}