{"version":3,"sources":["components/Inputs/InputSelect.tsx","components/Inputs/TextArea.tsx","components/SelectCustom/SelectCustom.tsx","components/TableLoading/TableLoading.tsx","actions/transfer.action.ts","components/DownloadLink/DownloadLink.tsx","components/Inputs/InputFile.tsx","containers/Trensfer/Teacher/RequestForm.tsx","containers/Trensfer/Teacher/RequestView.tsx","containers/Trensfer/Teacher/index.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","TextArea","labelColor","SelectCustom","loading","id","close","click","useState","searchText","setSearch","dataList","search","type","e","target","onClick","length","itm","key","TableLoading","props","displayCols","colsArray","index","cols","push","element","FC_GetAllTransfers","callBack","dispatch","a","setAxiosToken","axios","get","APP_URL","res","console","log","getAllTransfers","ActionTypes","GET_ALL_TRANSFER","payload","errorToText","FC_GetMyTransfers","GET_MY_TRANSFER","FC_GetTransferReasons","GET_TRANSFER_REASON","FC_GetDistricts","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","FC_GetSchoolByDistrict","district_code","FC_GetSchoolByDistrict_2","position_code","qualification_id","FC_RespondLeave","selectedUserId","comment","selectedFile","decision","doc_title","status","uploadingPercentage","msg","isEmptyOrSpaces","teacher_transfer_id","outgoing_status","outgoing_dde_comment","mayor_letter","RESPOND_TO_LEAVE","FC_RespondTransfer","approved_school_id","requested_status","requested_comment","RESPOND_TO_TRANSFER","DownloadLink","this_URL","linkFor","APP_URL_FILE","first_id","last_id","href","rel","supportedFileTypes","acceptAllEnum","InputFile","multiple","accept","ALL","RequestForm","componentDidMount","transferReasons","setState","districts","handleSchools","thisDistrict","loadingSchools","schools","getSchoolsForm","result","state","forEach","school","auth","school_code","school_name","onFileChange","files","thisFile","onSubmitTeacherTransferReq","fromSchool","toSchool","selectedSchool","teacherReason","tranferReason","thisReason","loadingRequest","upload_percentage","teacher_supporting_document","school_from_id","requested_school_id","teacher_comment","teacher_reason_id","transfer_reason_id","setTimeout","selectedDistrict","setIsRequestFormOn","selectReason","this","Loading","DashboardContainer","Alert","theme","Heading","Button","el","district_name","reason_name","PDF","Component","connect","transfer","setLoadingRequest","setError","requesteTransferHandler","setTransferId","selectedTransfer","requested_school_name","DATE","teacher_requested_transfer_date","approved_school_name","incoming_decision_date","then","response","leavingRequestHandler","catch","err","outgoing_decision_date","user","isRequestFormOn","transferId","isSchoolRequestedAllowed","myTransfers","find","item","inputSearch","TextInput","colSpan","teacher_reason","requested","outGoing","RequestTransfer"],"mappings":"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","file":"static/js/14.ec77452b.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        <label\n          htmlFor=\"login-form-email\"\n          className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n        >\n          {label}\n        </label>\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype TextAreaProps = {\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst TextArea: FC<TextAreaProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n  size = \"md\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <textarea\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TextArea;\n","import React, { FC, Fragment, ReactElement, useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\n// import Spinner from \"../Loading/Spinner\";\n\nimport { search } from \"../../utils/functions\";\nimport Loading from \"../Loading/Loading\";\ntype SelectCustomProps = {\n  loading: boolean;\n  id: string;\n  title: string;\n  close: Function;\n  data: any;\n  click: Function;\n};\n\nconst SelectCustom: FC<SelectCustomProps> = ({\n  loading,\n  id,\n  title,\n  close,\n  data,\n  click,\n}): ReactElement => {\n  const [searchText, setSearch] = useState(\"\");\n  let dataList = search(data, searchText, {\n    [title]: true,\n  });\n  /* function body */\n  return (\n    <div className=\" bg-gray-100 shadow-lg border-gray-500 border-2 h-64 rounded-md flex flex-col\">\n      <div className=\"p-1 bg-white rounded flex items-center\">\n        <label htmlFor=\"search-input-data\">\n          <MdSearch className=\"text-2xl\" />\n        </label>\n        <input\n          type=\"search\"\n          className=\"py-1 px-1 flex-1\"\n          placeholder=\"Search\"\n          value={searchText}\n          id=\"search-input-data\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        {loading === false && (\n          <button\n            onClick={() => close()}\n            className=\"px-2 py-0.5 rounded text-sm ml-3 bg-red-200 text-red-800\"\n          >\n            Cancel\n          </button>\n        )}\n      </div>\n      <div className=\"flex-1 p-2 overflow-y-auto border-t \">\n        {loading === true ? (\n          <div className=\"my-4\">\n            {/* <Spinner /> */}\n            <div className=\"mx-auto text-center\">\n              <Loading />\n            </div>\n\n            <p className=\"text-center text-gray-500\">Loading</p>\n          </div>\n        ) : (\n          <Fragment>\n            {dataList.length === 0 ? (\n              <section className=\"p-4 text-center\">\n                <h2 className=\"text-lg text-gray-400\">No results found</h2>\n              </section>\n            ) : (\n              dataList.map((itm: any, key: number) => (\n                <button\n                  onClick={() => click(itm)}\n                  className=\"block p-1 border-b w-full text-left border-gray-300 hover:text-white hover:bg-blue-600\"\n                  key={key}\n                  type=\"button\"\n                >\n                  {itm[title]}\n                </button>\n              ))\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default SelectCustom;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedToLeave,\n  RequestedTransfer,\n  SchoolsType,\n  SchoolsType_2,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: RequestedToLeave[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface RespondToLeaveAction {\n  type: ActionTypes.RESPOND_TO_LEAVE;\n  payload: {\n    teacher_transfer_id: string;\n    outgoing_status: \"REJECTED\" | \"APPROVED\";\n    outgoing_dde_comment: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school_id: string;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedToLeave[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedToLeave[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedToLeave[]>(\n        `${APP_URL}/teachertransfers/requesteddde`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      console.log(\"=================FC_GetTransferReasons===================\");\n      console.log({ FC_GetTransferReasons: res });\n      console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n    console.log(\"=================FC_GetDistricts===================\");\n    console.log({ FC_GetDistricts: res });\n    console.log(\"=================FC_GetDistricts===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n    //   callBack(\n    //     false,\n    //     errorToText(error, () => {})\n    //   );\n  }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  position_code: string,\n  qualification_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        position_code,\n        qualification_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_RespondLeave = (\n  selectedUserId: string,\n  comment: string,\n  selectedFile: File,\n  decision: \"REJECTED\" | \"APPROVED\",\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    await FC_UploadFile(\n      selectedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        callBack(status, \"\");\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        console.log({ data });\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n        return;\n      }\n    );\n    if (!isEmptyOrSpaces(doc_title)) {\n      callBack(true, \"\");\n      const data = {\n        teacher_transfer_id: selectedUserId,\n        outgoing_status: decision,\n        outgoing_dde_comment: comment,\n        mayor_letter: doc_title,\n      };\n\n      console.log(\"==================*********************==================\");\n      console.log({ doc_title });\n      console.log(\"==================*********************==================\");\n\n      try {\n        setAxiosToken();\n        const res = await axios.post<string>(\n          `${APP_URL}/teachertransfers/outgoing`,\n          data\n        );\n        console.log(\"Uploaded document: \", res.data);\n        dispatch<RespondToLeaveAction>({\n          type: ActionTypes.RESPOND_TO_LEAVE,\n          payload: data,\n        });\n        callBack(false, \"\");\n        // console.log(\"Questions: \", res);\n      } catch (error: any) {\n        console.error(error);\n        callBack(false, errorToText(error));\n      }\n    }\n  };\n};\n\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school_id: string,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school_id,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: data,\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\n\ntype DownloadLinkProps = {\n  linkFor: \"uploaded\" | \"termination\" | \"suspension\" | \"transfer\";\n  first_id: string | number;\n  last_id: string | number;\n  title: string;\n};\n\nconst DownloadLink: React.FC<DownloadLinkProps> = (props) => {\n  const this_URL: string =\n    props.linkFor === \"uploaded\"\n      ? `${APP_URL_FILE}/${props.first_id}`\n      : `${APP_URL}/generateletter/${props.linkFor}/${props.first_id}/${props.last_id}`;\n  return (\n    <a\n      href={this_URL}\n      className=\"py-2 px-4 text-md font-bold rounded bg-primary-800 hover:bg-opacity-90 text-white flex items-center gap-2\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <ImAttachment />\n      <span>{props.title}</span>\n    </a>\n  );\n};\n\nexport default DownloadLink;\n","import React, { ChangeEvent, useState, FC, ReactElement } from \"react\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\nexport enum supportedFileTypes {\n  PDF = \"PDF\",\n  IMAGES = \"IMAGES\",\n  ANY = \"ANY\",\n}\n\n// export const validateFileType = async (\n//   file: File,\n//   fileType: supportedFileTypes = supportedFileTypes.PDF\n// ) => {\n//   if (\n//     file.type !==\n//       \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" &&\n//     file.type !== \"application/vnd.ms-excel\" &&\n//     file.type !== \"text/csv\"\n//   ) {\n//     return setFormError({\n//       element: \"questions\",\n//       msg: \"Invalid file, Please choose excel file or svg file\",\n//     });\n//   } else {\n//     return null;\n//   }\n// };\n\nexport enum acceptAllEnum {\n  ALL = \"\",\n  IMAGES = \"image/*\",\n  EXCEL = \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n  PDF = \"application/pdf\",\n}\n\ntype InputFileProps = {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  error: string;\n  label: string;\n  disabled?: boolean;\n  type: \"file\" | \"image\";\n  name: string;\n  accept?: acceptAllEnum;\n  multiple?: boolean;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst InputFile: FC<InputFileProps> = ({\n  onChange,\n  error,\n  label,\n  multiple,\n  disabled = false,\n  accept = acceptAllEnum.ALL,\n  name,\n  type,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <input\n            name={name}\n            multiple={multiple}\n            accept={accept}\n            type={type}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputFile;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../../actions\";\nimport {\n  TransferReasonsType,\n  FC_GetTransferReasons,\n  FT_GetTransferReasons,\n  FC_GetSchoolByDistrict,\n  FC_UploadFile,\n  FC_GetMyTransfers,\n  FT_GetMyTransfer,\n  FC_GetDistricts,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport InputFile, { acceptAllEnum } from \"../../../components/Inputs/InputFile\";\nimport InputSelect from \"../../../components/Inputs/InputSelect\";\nimport TextArea from \"../../../components/Inputs/TextArea\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport SelectCustom from \"../../../components/SelectCustom/SelectCustom\";\nimport { APP_URL } from \"../../../config/app.config\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolsType,\n} from \"../../../types/TransferTypes\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { isEmptyOrSpaces } from \"../../../utils/functions\";\n\ntype RequestFormProps = {\n  setIsRequestFormOn: (value: boolean) => void;\n\n  // form redux\n  auth: Auth;\n  transferReasons: TransferReasonsType[] | null;\n  FC_GetTransferReasons: FT_GetTransferReasons;\n  FC_GetMyTransfers: FT_GetMyTransfer;\n};\n\ntype RequestFormState = {\n  loading: boolean;\n  error: {\n    target:\n      | \"main-error\"\n      | \"main-success\"\n      | \"reason_id\"\n      | \"approved_doc\"\n      | \"school-code\"\n      | \"comment\";\n    msg: string;\n  } | null;\n  selectedFile: File | null;\n  selectReason: boolean;\n  thisReason: TransferReasonsType | null;\n  districts: DistrictTypes[] | null;\n  selectedDistrict: string;\n  schools: SchoolsType[];\n  loadingSchools: boolean;\n  selectedSchool: string;\n  tranferReason: string;\n  loadingRequest: boolean;\n  upload_percentage: number;\n};\n\nclass RequestForm extends Component<RequestFormProps, RequestFormState> {\n  constructor(props: RequestFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: null,\n      selectedFile: null,\n      selectReason: false,\n      thisReason: null,\n      districts: null,\n      selectedDistrict: \"\",\n      schools: [],\n      loadingSchools: false,\n      tranferReason: \"\",\n      selectedSchool: \"\",\n      loadingRequest: false,\n      upload_percentage: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.transferReasons === null)\n      this.props.FC_GetTransferReasons((status: boolean, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n        else this.setState({ loading: status });\n      });\n    else this.setState({ loading: false });\n\n    FC_GetDistricts(\n      (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n        else if (!status && data)\n          this.setState({ loading: status, districts: data });\n      }\n    );\n  };\n\n  handleSchools = (thisDistrict: string) => {\n    FC_GetSchoolByDistrict(\n      thisDistrict,\n      (status: boolean, data: SchoolsType[] | null, msg: string) => {\n        this.setState({ loadingSchools: status });\n\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n        else if (!status && data)\n          this.setState({ loadingSchools: status, schools: data });\n      }\n    );\n  };\n\n  getSchoolsForm = (): { title: string; value: string }[] => {\n    let result: { title: string; value: string }[] = [\n      { title: \"All Schools\", value: \"\" },\n    ];\n    // this.props.auth.user.\n    this.state.schools.forEach((school) => {\n      if (\n        this.props.auth.school &&\n        this.props.auth.school.school_code !== school.school_code\n      )\n        result.push({\n          title: school.school_name,\n          value: school.school_code,\n        });\n    });\n    return result;\n  };\n\n  onFileChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({ error: null });\n    // this.setState({ selectedFile: event.target.files[0] });\n\n    // check if the file is available\n    if (e.target.files === null)\n      return this.setState({\n        selectedFile: null,\n        error: {\n          msg: \"Please select a valid file\",\n          target: \"approved_doc\",\n        },\n      });\n\n    const thisFile = e.target.files[0];\n\n    // check the file type\n    if (thisFile.type !== \"application/pdf\")\n      return this.setState({\n        selectedFile: null,\n        error: {\n          msg: \"The system accept pdf only\",\n          target: \"approved_doc\",\n        },\n      });\n\n    // check if the size is valued\n    if (thisFile.size <= 0)\n      return this.setState({\n        selectedFile: null,\n        error: {\n          msg: \"Invalid file, Please choose a real file\",\n          target: \"approved_doc\",\n        },\n      });\n\n    // Add image\n    this.setState({\n      selectedFile: thisFile,\n      error: null,\n    });\n  };\n\n  // On file upload (click the upload button)\n  onSubmitTeacherTransferReq = async () => {\n    // Create an object of formData\n    const fromSchool = this.props.auth.school;\n    const toSchool = this.state.selectedSchool;\n    const teacherReason = this.state.tranferReason;\n\n    // checking errors\n    if (!fromSchool?.school_code) {\n      this.setState({\n        error: {\n          target: \"school-code\",\n          msg: \"Required!\",\n        },\n      });\n      return;\n    }\n\n    //checking input\n    if (this.state.thisReason === null) {\n      this.setState({\n        error: {\n          target: \"reason_id\",\n          msg: \"Required!\",\n        },\n      });\n      return;\n    }\n\n    if (teacherReason === \"\") {\n      this.setState({\n        error: {\n          target: \"comment\",\n          msg: \"Required!\",\n        },\n      });\n      return;\n    }\n\n    // Document validation\n    if (this.state.selectedFile === null)\n      return this.setState({\n        error: {\n          target: \"approved_doc\",\n          msg: \"Required!\",\n        },\n        loadingRequest: false,\n      });\n\n    let doc_title: string = \"\";\n    await FC_UploadFile(\n      this.state.selectedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        this.setState({\n          loadingRequest: status,\n        });\n        if (status)\n          this.setState({\n            upload_percentage: uploadingPercentage,\n          });\n\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: {\n              target: \"main-error\",\n              msg: msg,\n            },\n            loadingRequest: false,\n          });\n      }\n    );\n\n    console.log(\"=================doc_title===================\");\n    console.log({ doc_title });\n    console.log(\"=================doc_title===================\");\n\n    // Json Data\n    if (!isEmptyOrSpaces(doc_title)) {\n      const formData = {\n        teacher_supporting_document: doc_title,\n        school_from_id: fromSchool.school_code,\n        requested_school_id: toSchool,\n        teacher_comment: teacherReason,\n        teacher_reason_id: this.state.thisReason.transfer_reason_id,\n      };\n      try {\n        setAxiosToken();\n        const dataRes = await axios.post<RequestedTransfer>(\n          `${APP_URL}/teachertransfers/request`,\n          formData\n        );\n\n        // console.log(\"====================================\");\n        // console.log({ dataRes });\n        // console.log(\"====================================\");\n\n        if (dataRes.status === 200) {\n          this.props.FC_GetMyTransfers(\n            (\n              status: boolean,\n              data: RequestedTransfer[] | null,\n              msg: string\n            ) => {\n              this.setState({ loadingRequest: status });\n\n              if (!status && data) this.setState({ loadingRequest: status });\n              else if (!status && !isEmptyOrSpaces(msg))\n                this.setState({\n                  error: { target: \"main-error\", msg: msg },\n                });\n            }\n          );\n          this.setState({\n            error: {\n              target: \"main-success\",\n              msg: \"Transfer Request Send Successfully!\",\n            },\n          });\n          setTimeout(() => {\n            this.setState({\n              error: null,\n              thisReason: null,\n              selectedDistrict: \"\",\n              selectedSchool: \"\",\n              schools: [],\n              tranferReason: \"\",\n            });\n            this.props.setIsRequestFormOn(false);\n          }, 2000);\n          return;\n        }\n      } catch (error) {\n        //checking input\n        console.error({ error });\n\n        // this.cleanAlert();\n        this.setState({\n          error: {\n            target: \"main-error\",\n            msg: \"Something went Wrong, Transfer Request Failed!\",\n          },\n        });\n        return;\n      }\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.state.districts === null)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    return (\n      <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n        {this.state.error && this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error && this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>Staff transfer request form</Heading>\n          </div>\n          <div className=\"\">\n            <Button\n              onClick={() => this.props.setIsRequestFormOn(false)}\n              theme=\"default\"\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"relative p-6 flex-auto\">\n          <div className=\"flex gap-6\">\n            <InputSelect\n              data={[\n                { title: \"All District\", value: \"\" },\n                ...this.state.districts.map((el) => ({\n                  title: el.district_name,\n                  value: el.district_code,\n                })),\n              ]}\n              error=\"\"\n              name=\"select_district\"\n              onChange={(e) => {\n                this.setState({\n                  selectedDistrict: e.target.value,\n                });\n                this.handleSchools(e.target.value);\n              }}\n              label=\"District\"\n              placeholder=\"Select\"\n              value={this.state.selectedDistrict}\n              size=\"md\"\n            />\n            <InputSelect\n              data={this.getSchoolsForm()}\n              error={\n                this.state.error && this.state.error.target === \"school-code\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n              name=\"select_school\"\n              onChange={(e) =>\n                this.setState({\n                  selectedSchool: e.target.value,\n                })\n              }\n              label=\"Schools\"\n              placeholder=\"Select\"\n              value={this.state.selectedSchool}\n              size=\"md\"\n            />\n          </div>\n\n          {/* ---------------- */}\n          <div className=\"w-full py-1\">\n            <div className={`w-full my-2`}>\n              <label\n                htmlFor=\"login-form-email\"\n                className={`text-primary-900 dark:text-primary-100`}\n              >\n                Transfer reasons\n              </label>\n              {!this.state.selectReason ? (\n                <div className={`rounded relative`}>\n                  <div\n                    className={`w-full text-lg rounded border-2 p-2 px-4 text-md ${\n                      !this.state.thisReason && \"text-gray-500\"\n                    } ${\n                      this.props.transferReasons\n                        ? \"cursor-pointer\"\n                        : \"cursor-wait\"\n                    } ${\n                      this.state.error &&\n                      this.state.error.target === \"reason_id\"\n                        ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                        : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900\"\n                    } px-3`}\n                    onClick={() =>\n                      this.props.transferReasons &&\n                      this.setState({ selectReason: true })\n                    }\n                  >\n                    {this.state.thisReason\n                      ? this.state.thisReason.reason_name\n                      : \"Select transfer reason\"}\n                  </div>\n\n                  {this.state.error &&\n                    this.state.error.target === \"reason_id\" && (\n                      <p className=\"text-sm text-red-600 dark:text-red-500\">\n                        {this.state.error.msg}\n                      </p>\n                    )}\n                </div>\n              ) : (\n                <SelectCustom\n                  title=\"reason_name\"\n                  id=\"transfer_reason_id\"\n                  data={this.props.transferReasons}\n                  loading={this.props.transferReasons === null}\n                  click={(value: any) =>\n                    this.setState({\n                      selectReason: false,\n                      thisReason: value as TransferReasonsType | null,\n                    })\n                  }\n                  close={() => this.setState({ selectReason: true })}\n                />\n              )}\n            </div>\n          </div>\n          {/* ---------------------- */}\n          <div className=\"\">\n            <TextArea\n              label=\"Transfer comment\"\n              value={this.state.tranferReason}\n              name=\"transfer_comment\"\n              onChange={(e) =>\n                this.setState({\n                  tranferReason: e.target.value,\n                })\n              }\n              placeholder=\"Write reason in summary\"\n              size=\"lg\"\n              error={\n                this.state.error && this.state.error.target === \"comment\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n            />\n            <div className=\"\">\n              <InputFile\n                disabled={this.state.loadingRequest}\n                label=\"Supporting document\"\n                name=\"approved_doc\"\n                className=\"p-2\"\n                onChange={(e) => this.onFileChange(e)}\n                error={\n                  this.state.error && this.state.error.target === \"approved_doc\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                type={\"file\"}\n                accept={acceptAllEnum.PDF}\n              />\n            </div>\n          </div>\n        </div>\n        {/*footer*/}\n        <div className=\"flex items-center justify-end py-3 gap-2 border-t border-solid border-blueGray-200 rounded-b\">\n          <Button\n            theme=\"default\"\n            onClick={() =>\n              this.setState({\n                error: null,\n                thisReason: null,\n                selectedDistrict: \"\",\n                selectedSchool: \"\",\n                schools: [],\n                tranferReason: \"\",\n              })\n            }\n            loading={this.state.loadingRequest}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => this.onSubmitTeacherTransferReq()}\n            loading={this.state.loadingRequest}\n          >\n            Save\n          </Button>\n        </div>\n      </DashboardContainer>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  transfer,\n  auth,\n}: StoreState): {\n  auth: Auth;\n  transferReasons: TransferReasonsType[] | null;\n} => {\n  return { auth, transferReasons: transfer.transferReasons };\n};\nexport default connect(mapStateToProps, {\n  FC_GetTransferReasons,\n  FC_GetMyTransfers,\n})(RequestForm);\n","import axios from \"axios\";\nimport React, { Fragment, useState } from \"react\";\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { MdOutlinePending } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../../actions\";\nimport {\n  FC_GetMyTransfers,\n  FT_GetMyTransfer,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport DownloadLink from \"../../../components/DownloadLink/DownloadLink\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport { APP_URL, APP_URL_FILE } from \"../../../config/app.config\";\nimport { StoreState } from \"../../../reducers\";\nimport { RequestedTransfer, SchoolsType } from \"../../../types/TransferTypes\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { DATE, isEmptyOrSpaces } from \"../../../utils/functions\";\n\ntype RequestViewProps = {\n  selectedTransfer: RequestedTransfer;\n  setTransferId: (value: string) => void;\n\n  //   redux ==========\n  auth: Auth;\n  FC_GetMyTransfers: FT_GetMyTransfer;\n};\n\nconst RequestView: React.FC<RequestViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [error, setError] = useState<{\n    target: \"main-error\" | \"main-success\";\n    msg: string;\n  } | null>(null);\n  // on chacking request transfer Approved\n  const requesteTransferHandler = (value: string | null) => {\n    if (value === null || value === \"PENDING\") {\n      return (\n        <span className={`text-accent-800`}>\n          <MdOutlinePending size={30} className=\"fill-current\" />\n        </span>\n      );\n    }\n    return value === \"APPROVED\" ? (\n      <span className={`text-primary-800`}>\n        <AiOutlineCheckCircle size={30} className=\"fill-current\" />\n      </span>\n    ) : (\n      <span className={`text-red-800`}>\n        <AiOutlineCloseCircle size={30} className=\"fill-current\" />\n      </span>\n    );\n  };\n\n  // Sending Leaving Request Handler\n  const leavingRequestHandler = (value: string) => {\n    setAxiosToken();\n    axios\n      .post(`${APP_URL}/teachertransfers/leaving`, {\n        teacher_transfer_id: value,\n      })\n      .then((response): SchoolsType => response.data)\n      .then((data) => {\n        console.log(\"====================================\");\n        console.log({ leavingRequestHandler: data });\n        console.log(\"====================================\");\n        props.FC_GetMyTransfers(\n          (status: boolean, data: RequestedTransfer[] | null, msg: string) => {\n            setLoadingRequest(status);\n\n            if (!status && data) setLoadingRequest(status);\n            else if (!status && !isEmptyOrSpaces(msg))\n              setError({ target: \"main-error\", msg: msg });\n          }\n        );\n        // let thisTransfer = { ...this.state.selectedTransfer };\n        props.FC_GetMyTransfers(\n          (status: boolean, data: RequestedTransfer[] | null, msg: string) => {\n            setLoadingRequest(status);\n\n            if (!status && data) setLoadingRequest(status);\n            else if (!status && !isEmptyOrSpaces(msg))\n              setError({ target: \"main-error\", msg: msg });\n          }\n        );\n        setError({\n          target: \"main-success\",\n          msg: \"Leaving Request Send Successfully!\",\n        });\n      })\n      .catch((err) => {\n        setError({\n          target: \"main-error\",\n          msg: \"Something went Wrong, Sending Request Failed!\",\n        });\n      });\n  };\n  return (\n    <>\n      {error && error.target === \"main-success\" && (\n        <Alert theme=\"success\">{error.msg}</Alert>\n      )}\n      {error && error.target === \"main-error\" && (\n        <Alert theme=\"danger\">{error.msg}</Alert>\n      )}\n      <DashboardContainer>\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>Request Transfer Progress</Heading>\n          </div>\n          <div className=\"\">\n            <Button onClick={() => props.setTransferId(\"\")} theme=\"default\">\n              Close\n            </Button>\n          </div>\n        </div>\n        <h2 className=\"opacity-60 -mt-1 font-bold text-accent-900 dark:text-accent-800\">\n          {props.selectedTransfer.requested_school_name}\n        </h2>\n        <div className=\"mt-4\">\n          <ul>\n            {/* Request Transfer Send */}\n            <li className=\"flex text-base text-body-color mb-4 \">\n              <div className=\"flex\">\n                <div>\n                  <span className=\"text-primary-800\">\n                    <AiOutlineCheckCircle size={30} className=\"fill-current\" />\n                  </span>\n                </div>\n                <div className=\"ml-2\">\n                  <span className=\"\">\n                    Requested school:{\" \"}\n                    {props.selectedTransfer.requested_school_name}\n                  </span>\n                  <br />\n                  <span className=\"\">\n                    On:{\" \"}\n                    {DATE(\n                      props.selectedTransfer.teacher_requested_transfer_date\n                    )}\n                  </span>{\" \"}\n                  {/* <br />\n                            <span className=\"\">Send Transfer Request</span> */}\n                </div>\n              </div>\n            </li>\n            {/* When Requested districted Appreved or Rejected */}\n            {\n              <li className=\"flex text-base text-body-color mb-4\">\n                <div className=\"flex\">\n                  <div>\n                    {requesteTransferHandler(\n                      props.selectedTransfer.requested_status\n                    )}\n                  </div>\n                  {props.selectedTransfer.requested_status !== \"PENDING\" && (\n                    <div className=\"ml-2\">\n                      <span className=\"\">\n                        Approved school:{\" \"}\n                        {props.selectedTransfer.approved_school_name}\n                      </span>\n                      <br />\n                      <span className=\"\">\n                        On:{\" \"}\n                        {DATE(props.selectedTransfer.incoming_decision_date)}\n                      </span>\n                      <br />\n                    </div>\n                  )}\n                </div>\n              </li>\n            }\n            {/* When Send Requested to Leave School */}\n            {props.selectedTransfer.requested_status !== \"PENDING\" &&\n              props.selectedTransfer.requested_status !== \"REJECTED\" &&\n              props.selectedTransfer.requested_status !== null && (\n                <Fragment>\n                  <li className=\"flex text-base text-body-color mb-4\">\n                    <div className=\"flex\">\n                      {props.selectedTransfer.outgoing_status === null && (\n                        <div>\n                          {\" \"}\n                          <Button\n                            onClick={(e) =>\n                              leavingRequestHandler(\n                                props.selectedTransfer.teacher_transfer_id\n                              )\n                            }\n                          >\n                            Send Leave Request\n                          </Button>\n                        </div>\n                      )}\n                      {props.selectedTransfer.outgoing_status !== null && (\n                        <Fragment>\n                          <div>\n                            <span className=\"text-primary-800\">\n                              <AiOutlineCheckCircle\n                                size={30}\n                                className=\"fill-current\"\n                              />\n                            </span>\n                          </div>\n                          <div className=\"ml-2\">\n                            <span className=\"\">\n                              Requested to leave:{\" \"}\n                              {props.auth.school\n                                ? props.auth.school.school_name\n                                : \"\"}\n                            </span>\n                            <br />\n                            <span className=\"\">\n                              On:{\" \"}\n                              {DATE(\n                                props.selectedTransfer\n                                  .teacher_requested_transfer_date\n                              )}\n                            </span>\n                          </div>\n                        </Fragment>\n                      )}\n                    </div>\n                  </li>\n                  {/* When Dde Commirfmed Requested to Leave School */}\n                  <li className=\"flex text-base text-body-color mb-4\"></li>\n                  {props.selectedTransfer.outgoing_status && (\n                    <li className=\"flex text-base text-body-color mb-4\">\n                      <div className=\"flex\">\n                        <div>\n                          {requesteTransferHandler(\n                            props.selectedTransfer.outgoing_status\n                          )}\n                        </div>\n                        <div className=\"ml-2\">\n                          {props.selectedTransfer.outgoing_status !==\n                            \"PENDING\" && (\n                            <>\n                              <span className=\"\">\n                                Date:{\" \"}\n                                {props.selectedTransfer.outgoing_decision_date}\n                              </span>{\" \"}\n                              <br />\n                            </>\n                          )}\n                          <span className=\"capitalize\">\n                            Leave Request:{\" \"}\n                            {props.selectedTransfer.outgoing_status}\n                          </span>\n                          <br />\n                          {props.auth.user &&\n                            props.selectedTransfer.outgoing_status !==\n                              \"PENDING\" &&\n                            props.selectedTransfer.mayor_letter && (\n                              <DownloadLink\n                                linkFor=\"uploaded\"\n                                first_id={props.selectedTransfer.mayor_letter}\n                                last_id={\"\"}\n                                title={\"Transfer letter\"}\n                              />\n                            )}\n                          {/* <span className=\"\">Current School</span> */}\n                        </div>\n                      </div>\n                    </li>\n                  )}\n                </Fragment>\n              )}\n          </ul>\n        </div>\n      </DashboardContainer>\n    </>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return { auth };\n};\nexport default connect(mapStateToProps, {\n  FC_GetMyTransfers,\n})(RequestView);\n","import React, { Component } from \"react\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_GetMyTransfers,\n  FT_GetMyTransfer,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport Container from \"../../../components/ContainerComponents/Container\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport { StoreState } from \"../../../reducers\";\nimport { RequestedTransfer } from \"../../../types/TransferTypes\";\nimport { DATE, isEmptyOrSpaces, search } from \"../../../utils/functions\";\nimport RequestForm from \"./RequestForm\";\nimport RequestView from \"./RequestView\";\n\nconst FC_TransferRequestedDate = (\n  requested: string | null,\n  outGoing: string | null\n): JSX.Element => {\n  if (requested === \"PENDING\")\n    return (\n      <span className=\"font-bold rounded py-2 px-4 text-md bg-accent-800 text-black group-hover:bg-opacity-90\">\n        Transfer in progress\n      </span>\n    );\n  if (requested === \"REJECTED\")\n    return (\n      <span className=\"font-bold rounded py-2 px-4 text-md bg-red-700 text-black group-hover:bg-opacity-90\">\n        Transfer rejected\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === null)\n    return (\n      <span className=\"font-bold rounded py-2 px-4 text-md bg-green-700 text-black group-hover:bg-opacity-90\">\n        Apply for leave\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"APPROVED\")\n    return (\n      <span className=\"font-bold rounded py-2 px-4 text-md bg-green-600 text-black group-hover:bg-opacity-90\">\n        Transfer Completed\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"REJECTED\")\n    return (\n      <span className=\"font-bold rounded py-2 px-4 text-md bg-red-700 text-black group-hover:bg-opacity-90\">\n        Leave rejected\n      </span>\n    );\n\n  return <></>;\n};\n\n// status Handler\nconst FC_TransferRequestedStatus = (\n  requested: string | null,\n  outGoing: string | null\n): JSX.Element => {\n  if (requested === \"PENDING\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-accent-800 text-black group-hover:bg-opacity-90\">\n        Transfer in progress\n      </span>\n    );\n  if (requested === \"REJECTED\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-red-700 text-red-50 group-hover:bg-opacity-90\">\n        Transfer rejected\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === null)\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-green-700 text-green-50 group-hover:bg-opacity-90\">\n        Apply for leave\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"PENDING\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-accent-800 text-black group-hover:bg-opacity-90\">\n        Leave in progress\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"APPROVED\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-green-600 text-green-50 group-hover:bg-opacity-90\">\n        Transfer Completed\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"REJECTED\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-red-700 text-red-50 group-hover:bg-opacity-90\">\n        Leave rejected\n      </span>\n    );\n\n  return <></>;\n};\n\ntype RequestTransferProps = {\n  myTransfers: RequestedTransfer[] | null;\n  FC_GetMyTransfers: FT_GetMyTransfer;\n};\n\ntype RequestTransferState = {\n  loading: boolean;\n  loadingRequest: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\";\n    msg: string;\n  } | null;\n  inputSearch: string;\n  transferId: string;\n  isRequestFormOn: boolean;\n};\n\nclass index extends Component<RequestTransferProps, RequestTransferState> {\n  constructor(props: RequestTransferProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingRequest: false,\n      error: null,\n      inputSearch: \"\",\n      transferId: \"\",\n      isRequestFormOn: false,\n    };\n  }\n\n  setIsRequestFormOn = (value: boolean) => {\n    this.setState({ isRequestFormOn: value });\n  };\n\n  setTransferId = (value: string) => {\n    this.setState({ transferId: value });\n  };\n\n  componentDidMount = () => {\n    this.props.FC_GetMyTransfers(\n      (status: boolean, data: RequestedTransfer[] | null, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && data) this.setState({ loading: status });\n        else if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n      }\n    );\n  };\n\n  isSchoolRequestedAllowed = (): boolean => {\n    const result =\n      this.props.myTransfers &&\n      this.props.myTransfers.find(\n        (item) => item.outgoing_status !== \"APPROVED\"\n      );\n\n    return result ? false : true;\n  };\n\n  render() {\n    if (this.state.loading)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.isRequestFormOn)\n      return <RequestForm setIsRequestFormOn={this.setIsRequestFormOn} />;\n\n    if (\n      this.props.myTransfers &&\n      this.props.myTransfers.find(\n        (item) => item.teacher_transfer_id === this.state.transferId\n      )\n    )\n      return (\n        <RequestView\n          selectedTransfer={\n            this.props.myTransfers.find(\n              (item) => item.teacher_transfer_id === this.state.transferId\n            )!\n          }\n          setTransferId={this.setTransferId}\n        />\n      );\n\n    return (\n      <>\n        {this.state.error && this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error && this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n        <DashboardContainer>\n          {/* TITLE ======= */}\n          <section className=\"flex flex-col sm:flex-row justify-between\">\n            <div className=\"px-3\">\n              <Heading size=\"lg\">Transfer request(s)</Heading>\n            </div>\n\n            {this.isSchoolRequestedAllowed() && (\n              <Button\n                theme=\"primary-light\"\n                onClick={() => this.setIsRequestFormOn(true)}\n              >\n                Request Transfer\n              </Button>\n            )}\n          </section>\n\n          {/* BODY=================== */}\n          <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n            <div className=\"w-full sm:flex-1 pr-2\">\n              <TextInput\n                error=\"\"\n                label=\"Search\"\n                name=\"\"\n                type=\"search\"\n                onChange={(e) => this.setState({ inputSearch: e.target.value })}\n                placeholder=\"Search by name, reason, date, status\"\n                value={this.state.inputSearch}\n                size=\"sm\"\n                disabled={\n                  this.props.myTransfers === null ||\n                  this.props.myTransfers.length === 0\n                }\n              />\n            </div>\n            {/* <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                { title: \"Pending\", value: TerminationStatusEnum.PENDING },\n                {\n                  title: \"Terminated\",\n                  value: TerminationStatusEnum.TERMINATED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div> */}\n            {/* {this.props.terminations && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n          </div>\n          <div className=\"my-3 w-full overflow-x-auto\">\n            <table className=\"w-full text-left table-auto\">\n              <thead>\n                <tr>\n                  <th className=\"p-2\">#</th>\n                  <th className=\"p-2\">Requested school</th>\n                  <th className=\"p-2\">Reason</th>\n                  <th className=\"p-2\">Date</th>\n                  <th className=\"p-2\">Status</th>\n                  <th className=\"p-2\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={6} />\n                ) : this.props.myTransfers === null ||\n                  this.props.myTransfers.length <= 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : search(this.props.myTransfers, this.state.inputSearch)\n                    .length === 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  search(this.props.myTransfers, this.state.inputSearch).map(\n                    (transfer: RequestedTransfer, i: number) => {\n                      return (\n                        <tr\n                          className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                          onClick={() =>\n                            this.setState({\n                              transferId: transfer.teacher_transfer_id,\n                            })\n                          }\n                          key={i + transfer.teacher_transfer_id}\n                        >\n                          <td className=\"p-2\">{i + 1}</td>\n                          <td className=\"p-2\">\n                            {transfer.requested_school_name}\n                          </td>\n                          <td className=\"p-2\">{transfer.teacher_reason}</td>\n                          <td className=\"p-2\">\n                            {transfer.outgoing_decision_date\n                              ? DATE(transfer.outgoing_decision_date)\n                              : transfer.incoming_decision_date\n                              ? DATE(transfer.incoming_decision_date)\n                              : DATE(transfer.teacher_requested_transfer_date)}\n                          </td>\n                          <td className=\"p-2\">\n                            {FC_TransferRequestedStatus(\n                              transfer.requested_status,\n                              transfer.outgoing_status\n                            )}\n                          </td>\n                          <td className=\"p-1 text-center\">\n                            <Button\n                              theme=\"accent-light\"\n                              onClick={() =>\n                                this.setState({\n                                  transferId: transfer.teacher_transfer_id,\n                                })\n                              }\n                            >\n                              View\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    }\n                  )\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  transfer,\n}: StoreState): {\n  myTransfers: RequestedTransfer[] | null;\n} => {\n  return { myTransfers: transfer.myTransfers };\n};\n\nexport const RequestTransfer = connect(mapStateToProps, { FC_GetMyTransfers })(\n  index\n);\n"],"sourceRoot":""}