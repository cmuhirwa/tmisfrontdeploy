{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/TransferREB/TransferREB.tsx","containers/TransferREB/TransferAnimation.tsx","containers/TransferREB/CandidatesListByDIstrict.tsx","containers/TransferREB/SelectedDistrictTransferRequest.tsx","containers/TransferREB/TransferRequestDashboard.tsx","containers/TransferREB/RoundItemTransfer.tsx"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","Tabs","TransferAnimation","loading","startAlgorithm","publishTransfer","loading_publish","className","Loading","map","el","size","onClick","disabled","CandidatesListByDIstrict","close","district","useState","setLoading","dataRes","setData","error","setError","useEffect","FC_CandidatesTransferByDistrict","district_code","status","data","msg","DashboardContainer","Alert","theme","Button","district_name","ExportToExcel","fileData","itm","names","teacher_full_name","phone","teacher_phone_number","position_code","position_name","qualification","qualification_name","current_school","school_from_info","school_code","school_name","requested_schools","requested_school_info","comment","teacher_comment","requested_date","teacher_requested_transfer_date","transfer_status","requested_status","approved_school","approved_school_info","transfer_date","incoming_decision_date","fileName","btnName","SelectedDistrictTransferRequest","target","candidates_list","setCandidates_list","FC_GetTransferDistrictById","chartData","plotOptions","bar","horizontal","dataLabels","enabled","chart","id","stacked","toolbar","show","zoom","xaxis","categories","transfers_requests","series","name","female","male","noPadding","transparent","icon","MdGroup","title","value","FaFemale","FaMale","MdOutlineHouse","married","value_2","MdAccessible","disability","Icon","type","width","height","single","TransferRequestDashboard","total_transfer_request","transfer_total","setTransfer_total","setTransfers_requests","vacant_posts","setVacant_posts","selected_position","setSelectedPosition","main_loading","setMainLoading","FC_GetTransferDashboardCountry","tabGraph","settabGraph","selectedDistrict","setSelectedDistrict","dataPointSelection","e","opts","selectedData","dataPointIndex","chartDataVacantVsRequests","events","district_vacant","colors","total_female","total_male","InputSelect","onChange","position","Label_className","label","placeholder","RoundItemTransfer","round","candidates","email","full_name","phone_numbers","round_id","schools","total_candidate_request_transfer","total_schools","total_transferred","tab","setTab","position_id","colSpan","Heading","dob","hire_date","martial_status","sex","date_of_application","_TransferREB","props","window","confirm","user_id","auth","user","academic_id","basic","academic_calender","academic_year_id","UUID","setState","loading_algorithm","generated_round_id","FC_RunPlacementAlgorithm","RecursiveResultsCheck","FC_PublishTransfer","selectTab","TRANSFER_LOGS","getRounds","state","ALGORITHM","rounds","all_rounds","loading_logs","this","FC_GetRoundDataByAcademic","FC_GetRoundDataByRoundId","setTimeout","key","REQUEST_DASHBOARD","React","Component","TransferREB","connect"],"mappings":"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","file":"static/js/58.f346c4f5.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetRoundDataByAcademic,\n  FC_GetRoundDataByRoundId,\n  FC_PublishTransfer,\n  FC_RunPlacementAlgorithm,\n  RoundData_Interface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport TransferAnimation from \"./TransferAnimation\";\nimport TransferRequestDashboard from \"./TransferRequestDashboard\";\nimport { v4 as UUID } from \"uuid\";\nimport RoundItemTransfer from \"./RoundItemTransfer\";\n// import TransferLogs from \"./TransferLogs\";\nimport Alert from \"../../components/Alert/Alert\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n}\n\nenum Tabs {\n  ALGORITHM = \"ALGORITHM\",\n  REQUEST_DASHBOARD = \"REQUEST-DASHBOARD\",\n  TRANSFER_LOGS = \"TRANSFER-LOGS\",\n}\n\ninterface AppState {\n  loading: boolean;\n  tab: Tabs;\n  loading_algorithm: boolean;\n  loading_publish: boolean;\n  generated_round_id: string | null;\n  error: {\n    target: \"main-error\" | \"main-success\" | null;\n    msg: string;\n  };\n  rounds: RoundData_Interface[];\n  all_rounds: RoundData_Interface[];\n  loading_logs: boolean;\n}\n\nclass _TransferREB extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loading_publish: false,\n      tab: Tabs.ALGORITHM,\n      loading_algorithm: false,\n      generated_round_id: null,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      rounds: [],\n      all_rounds: [],\n      loading_logs: false,\n    };\n  }\n\n  // componentDidMount() {\n\n  // }\n  getRounds() {\n    if (this.props.basic.academic_calender) {\n      this.setState({\n        loading_logs: true,\n      });\n      FC_GetRoundDataByAcademic(\n        this.props.basic.academic_calender?.academic_year_id,\n        (status, data, msg) => {\n          // console.log({ FC_GetRoundDataByAcademic: data });\n\n          if (status) {\n            this.setState({\n              all_rounds: data,\n              loading_logs: false,\n            });\n          } else {\n            this.setState({\n              loading_logs: false,\n              error: {\n                target: \"main-error\",\n                msg: msg,\n              },\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({\n        error: {\n          msg: \"Academic year does not found!\",\n          target: \"main-error\",\n        },\n      });\n    }\n  }\n\n  startAlgorithm = () => {\n    if (!window.confirm(\"Are you sure you want to run the algorithm?\")) return;\n\n    const user_id = this.props.auth.user?.user_id;\n    const academic_id = this.props.basic.academic_calender?.academic_year_id;\n    const round_id = UUID();\n    if (!user_id)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"Your credentials are not valid, please refresh your browser\",\n        },\n      });\n\n    if (!academic_id)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No academic calendar found, please refresh your browser\",\n        },\n      });\n\n    this.setState({\n      loading_algorithm: true,\n      generated_round_id: round_id,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    FC_RunPlacementAlgorithm(\n      { academic_id: academic_id, round_id: round_id, user_id: user_id },\n      (status, msg) => {\n        // no need to check for error because there are no rounds\n        this.RecursiveResultsCheck(round_id);\n      }\n    );\n  };\n\n  publishTransfer = () => {\n    if (\n      !window.confirm(\"Are you sure you want to publish the algorithm results?\")\n    )\n      return;\n\n    const user_id = this.props.auth.user?.user_id;\n    const academic_id = this.props.basic.academic_calender?.academic_year_id;\n    const round_id = UUID();\n\n    if (!user_id)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"Your credentials are not valid, please refresh your browser\",\n        },\n      });\n\n    if (!academic_id)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No academic calendar found, please refresh your browser\",\n        },\n      });\n\n    this.setState({\n      loading_publish: true,\n      generated_round_id: round_id,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    FC_PublishTransfer(\n      { academic_id: academic_id, round_id: round_id, user_id: user_id },\n      (status, msg) => {\n        this.setState({\n          error:\n            status === false\n              ? { msg: msg, target: \"main-error\" }\n              : {\n                  target: \"main-success\",\n                  msg: \"Placement has been published successfully.\",\n                },\n          loading_publish: false,\n        });\n      }\n    );\n  };\n\n  // recursive round\n  RecursiveResultsCheck(round_id: string) {\n    FC_GetRoundDataByRoundId(round_id, (status, data, msg) => {\n      if (status === true) {\n        this.setState({\n          rounds: data,\n          loading_algorithm: false,\n          error: {\n            target: \"main-success\",\n            msg: \"The process executed successfully, check the results below\",\n          },\n        });\n      } else {\n        setTimeout(() => {\n          this.RecursiveResultsCheck(round_id);\n        }, 7000);\n      }\n    });\n  }\n\n  selectTab = (el: Tabs) => {\n    this.setState({\n      tab: el,\n    });\n\n    // load the rounds once we get them\n    if (el === Tabs.TRANSFER_LOGS) this.getRounds();\n  };\n\n  render() {\n    return (\n      <div\n        className={`mx-auto ${\n          this.state.tab === Tabs.ALGORITHM ? \"max-w-screen-lg\" : \"\"\n        }`}\n      >\n        <div className=\"container mx-auto\">\n          {this.state.error.target === \"main-error\" && (\n            <Alert\n              theme=\"danger\"\n              onClick={() =>\n                this.setState({\n                  error: {\n                    target: null,\n                    msg: \"\",\n                  },\n                })\n              }\n            >\n              {this.state.error.msg}\n            </Alert>\n          )}\n          {this.state.error.target === \"main-success\" && (\n            <Alert\n              theme=\"success\"\n              onClick={() =>\n                this.setState({\n                  error: {\n                    target: null,\n                    msg: \"\",\n                  },\n                })\n              }\n            >\n              {this.state.error.msg}\n            </Alert>\n          )}\n        </div>\n\n        <div className=\"p-2\">\n          <section className=\" max-w-screen-sm mx-auto grid grid-cols-3 text-center p-1 rounded-lg border  bg-white  w-auto\">\n            {[\n              {\n                key: Tabs.REQUEST_DASHBOARD,\n                title: \"Transfer requests\",\n              },\n              {\n                key: Tabs.ALGORITHM,\n                title: \"Algorithm\",\n              },\n              {\n                key: Tabs.TRANSFER_LOGS,\n                title: \"Transfer logs\",\n              },\n            ].map((itm) => (\n              <button\n                onClick={this.selectTab.bind(this, itm.key)}\n                key={itm.key}\n                className={`p-1.5 rounded-lg font-bold ${\n                  this.state.tab === itm.key ? \"text-white  bg-yellow-600\" : \"\"\n                }`}\n              >\n                {itm.title}\n              </button>\n            ))}\n          </section>\n        </div>\n\n        {this.state.tab === Tabs.ALGORITHM && (\n          <>\n            <TransferAnimation\n              loading={this.state.loading_algorithm}\n              startAlgorithm={this.startAlgorithm}\n              loading_publish={this.state.loading_publish}\n              publishTransfer={this.publishTransfer}\n            />\n\n            {this.state.rounds.length >= 1 && (\n              <div className=\"rounded border mx-3 mt-4\">\n                <div className=\"border-b flex items-center p-3 \">\n                  <h2 className=\"text-xl\">Results</h2>\n                </div>\n                {this.state.rounds.map((itm, i) => (\n                  <RoundItemTransfer round={itm} key={i} />\n                ))}\n              </div>\n            )}\n          </>\n        )}\n\n        {this.state.tab === Tabs.REQUEST_DASHBOARD && (\n          <>\n            <TransferRequestDashboard />\n          </>\n        )}\n\n        {this.state.tab === Tabs.TRANSFER_LOGS && (\n          <>\n            {/* <TransferLogs\n              rounds={this.state.all_rounds}\n              loading={this.state.loading_logs}\n              getRounds={this.getRounds}\n            /> */}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const TransferREB = connect(mapStateToProps, {})(_TransferREB);\n","import React, { FC, ReactElement } from \"react\";\nimport { SiProbot } from \"react-icons/si\";\nimport Loading from \"../../components/Loading/Loading\";\n\ntype TransferAnimationProps = {\n  loading: boolean;\n  loading_publish: boolean;\n  startAlgorithm: () => void;\n  publishTransfer: () => void;\n};\n\nconst TransferAnimation: FC<TransferAnimationProps> = ({\n  loading,\n  startAlgorithm,\n  publishTransfer,\n  loading_publish,\n}): ReactElement => {\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     console.log(\"yey\");\n  //   }, 6000);\n  // }, []);\n  /* function body */\n  return (\n    <div className=\"px-3 animate__animated animate__zoomIn animate__faster\">\n      <div className=\"p-2 bg-gradient-to-r shadow-sm from-blue-400 to-blue-700 container mx-auto rounded mt-2 text-center py-8 text-white max-w-screen-lg\">\n        {/* <MdTransferWithinAStation /> */}\n        {loading ? (\n          <div className=\"text-center\">\n            <div className=\"text-6xl\">\n              <Loading className=\"text-white \" />\n            </div>\n            <h2 className=\"text-2xl font-bold pt-2 \">\n              The algorithm is running, please wait\n            </h2>\n            <p className=\"text-gray-300\">\n              Please don't close the window before the algorithm finish\n              executing\n            </p>\n\n            <div className=\"flex  px-10 pt-6 border-t mt-3 border-blue-900\">\n              <div className=\" border-r flex-1 border-white p-2 max-w-screen-md mx-auto \">\n                <h3 className=\"pb-2 text-2xl font-bold text-left\">Process</h3>\n                {[\n                  \"Getting a district\",\n                  \"Getting candidates who requested this district\",\n                  \"Getting vacants\",\n                  \"Picking the righ candidates based on the (criterials)\",\n                  \"Transfering selected candidate\",\n                  \"Finalizing transfer on the selected district\",\n                ].map((el, i) => (\n                  <section\n                    key={i}\n                    className={`text-left text-lg px-2 bg-blue-800 bg-opacity-30 rounded mb-1 animate__animated animate__fadeIn animate__slow ${\n                      i >= 6 ? `animate__delay-1m` : `animate__delay-${i}s`\n                    }  `}\n                  >\n                    {el}\n                  </section>\n                ))}\n              </div>\n              <div className=\"p-2 flex-1 pl-8\">\n                <h3 className=\"pb-2 text-2xl font-bold text-left\">Criteria</h3>\n\n                <ul className=\"text-left\">\n                  <li>Disability</li>\n                  <li>Martial status</li>\n                  <li>Sex {\"(Female)\"}</li>\n                  <li>DOB {\"(oldest)\"}</li>\n                  <li>Experience {\"(hire date)\"} highest</li>\n                  <li>Date of application</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            {loading_publish === true ? (\n              <div className=\"text-center\">\n                <div className=\"text-6xl\">\n                  <Loading className=\"text-white \" />\n                </div>\n                <h2 className=\"text-2xl font-bold pt-2 \">\n                  Publish marks, please wait\n                </h2>\n                <p className=\"text-gray-300\">\n                  This may take a while to finish <br /> Please don't close the\n                  window before the system finish publishing\n                </p>\n\n                <div className=\"flex  px-10 pt-6 border-t mt-3 border-blue-900\">\n                  <div className=\" flex-1  p-2 max-w-screen-md mx-auto \">\n                    <h3 className=\"pb-2 text-2xl font-bold text-left\">\n                      Process\n                    </h3>\n                    {[\n                      \"Select approved teachers\",\n                      \"Transfer approved teachers\",\n                      \"Reject the remaining teachers\",\n                      \"Update district reports\",\n                    ].map((el, i) => (\n                      <section\n                        key={i}\n                        className={`text-left text-lg px-2 bg-blue-800 bg-opacity-30 rounded mb-1 animate__animated animate__fadeIn animate__slow ${\n                          i >= 6 ? `animate__delay-1m` : `animate__delay-${i}s`\n                        }  `}\n                      >\n                        {el}\n                      </section>\n                    ))}\n                  </div>\n                  {/* <div className=\"p-2 flex-1 pl-8\">\n                    <h3 className=\"pb-2 text-2xl font-bold text-left\">\n                      Criteria\n                    </h3>\n\n                    <ul className=\"text-left\">\n                      <li>Disability</li>\n                      <li>Martial status</li>\n                      <li>Sex {\"(Female)\"}</li>\n                      <li>DOB {\"(oldest)\"}</li>\n                      <li>Experience {\"(hire date)\"} highest</li>\n                      <li>Date of application</li>\n                    </ul>\n                  </div> */}\n                </div>\n              </div>\n            ) : (\n              <>\n                <SiProbot size={100} className=\"mx-auto opacity-40\" />\n                <h2 className=\"text-3xl pt-3\">Start transfer algorithm </h2>\n                <p className=\"opacity-80\">\n                  The algorithm will start transferring <br /> the candidates\n                  who match the criteria\n                </p>\n\n                <div className=\" gap-2 mx-auto text-center \">\n                  <button\n                    onClick={startAlgorithm}\n                    disabled={true}\n                    className=\"p-3 border opacity-50 border-white rounded  hover:to-yellow-600 hover:from-yellow-700 bg-gradient-to-r from-yellow-600 to-yellow-700 text-lg font-bold px-3 mt-4 inline-block mx-1\"\n                  >\n                    Start algorithm\n                  </button>\n\n                  <button\n                    onClick={publishTransfer}\n                    disabled={loading_publish}\n                    className=\"p-3 border border-white rounded  hover:to-yellow-600 hover:from-yellow-700 bg-gradient-to-r from-yellow-600 to-yellow-700 text-lg font-bold px-3 mt-4 inline-block mx-1\"\n                  >\n                    Publish transfer\n                  </button>\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default TransferAnimation;\n","import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport {\n  FC_CandidatesTransferByDistrict,\n  TransferDashboard_Request,\n  TransferRequestsListInterface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\n\ntype CandidatesListByDIstrictProps = {\n  close: () => void;\n  district: TransferDashboard_Request;\n};\n\nconst CandidatesListByDIstrict: FC<CandidatesListByDIstrictProps> = ({\n  close,\n  district,\n}): ReactElement => {\n  const [loading, setLoading] = useState(true);\n  const [dataRes, setData] = useState<TransferRequestsListInterface[]>([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (loading === true) {\n      FC_CandidatesTransferByDistrict(\n        district.district_code,\n        (status, data, msg) => {\n          setLoading(false);\n          if (status === true) {\n            setData(data);\n          } else {\n            setError(msg);\n          }\n        }\n      );\n    }\n  }, [district.district_code, loading]);\n\n  /* function body */\n  return (\n    <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n      {error !== \"\" && <Alert theme=\"danger\">{error}</Alert>}\n      <div className=\"p-1 pb-4 flex items-center border-b\">\n        <section className=\"flex-1  flex items-center\">\n          <Button size=\"md\" theme=\"accent-light\" onClick={close}>\n            Back\n          </Button>\n          <h3 className=\"text-3xl pl-2 font-bold text-gray-600\">\n            {district.district_name} district's candidates\n          </h3>\n        </section>\n        <section>\n          {loading === false && (\n            <ExportToExcel\n              fileData={dataRes.map((itm) => ({\n                names: itm.teacher_full_name,\n                phone: itm.teacher_phone_number,\n                position_code: itm.position_code,\n                position_name: itm.position_name,\n                qualification: itm.qualification_name,\n                current_school: `${itm.school_from_info.school_code} - ${itm.school_from_info.school_name} (${itm.school_from_info.district_name})`,\n                requested_schools: itm.requested_school_info.map(\n                  (itm) =>\n                    ` ${itm.school_code} - ${itm.school_name} (${itm.district_name}), `\n                ),\n                comment: itm.teacher_comment,\n                requested_date: itm.teacher_requested_transfer_date,\n                transfer_status: itm.requested_status,\n                approved_school: itm.approved_school_info?.school_code\n                  ? `${itm.approved_school_info?.school_code} - ${itm.approved_school_info?.school_name}`\n                  : \"\",\n                transfer_date: itm.incoming_decision_date,\n              }))}\n              fileName={`${district.district_name} Transfer requests candidates`}\n              btnName=\"Download EXCEL\"\n            />\n          )}\n        </section>\n      </div>\n\n      {loading ? (\n        <div className=\"p-1 text-center py-8\">\n          <Loading />\n        </div>\n      ) : (\n        <div className=\"t-2\">\n          <table>\n            <thead>\n              <tr>\n                <td className=\"p-2 border-1\">#</td>\n                <td className=\"p-2 border\">Names</td>\n                <td className=\"p-2 border\">Phone</td>\n                <td className=\"p-2 border\">Position code</td>\n                <td className=\"p-2 border\">Position name</td>\n                <td className=\"p-2 border\">Qualification</td>\n\n                <td className=\"p-2 border\">Current school{`(current)`}</td>\n                <td className=\"p-2 border\">Requested school{`(s)`}</td>\n                <td className=\"p-2 border\">Comment</td>\n                <td className=\"p-2 border\">Requested date</td>\n                <td className=\"p-2 border\">Status</td>\n                <td className=\"p-2 border\">Approved school</td>\n                <td className=\"p-2 border\">Transferred date</td>\n              </tr>\n            </thead>\n            <tbody>\n              {dataRes.map((itm, i) => (\n                <tr key={i}>\n                  <td className=\"p-2 border-1\">{i + 1}</td>\n                  <td className=\"p-2 border\">{itm.teacher_full_name}</td>\n                  <td className=\"p-2 border\">{itm.teacher_phone_number}</td>\n                  <td className=\"p-2 border\">{itm.position_code}</td>\n                  <td className=\"p-2 border\">{itm.position_name}</td>\n                  <td className=\"p-2 border\">{itm.qualification_name}</td>\n\n                  <td className=\"p-2 border\">\n                    {itm.school_from_info.school_code} {\"(\"}\n                    {itm.school_from_info.district_name}\n                    {\") \"}\n                  </td>\n                  <td className=\"p-2 border\">\n                    {itm.requested_school_info.map(\n                      (itm) =>\n                        `${itm.school_code} - ${itm.school_name} (${itm.district_name})`\n                    )}\n                  </td>\n                  <td className=\"p-2 border\">{itm.teacher_comment}</td>\n                  <td className=\"p-2 border\">\n                    {itm.teacher_requested_transfer_date}\n                  </td>\n                  <td className=\"p-2 border\">{itm.requested_status}</td>\n                  <td className=\"p-2 border\">\n                    {itm.approved_school_info\n                      ? `${itm.approved_school_info?.school_code} - ${itm.approved_school_info?.school_name}`\n                      : \"\"}\n                  </td>\n                  <td className=\"p-2 border\">{itm.incoming_decision_date}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </DashboardContainer>\n  );\n};\nexport default CandidatesListByDIstrict;\n","import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport { FaFemale, FaMale } from \"react-icons/fa\";\nimport { MdAccessible, MdGroup, MdOutlineHouse } from \"react-icons/md\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Chart from \"react-apexcharts\";\nimport Button from \"../../components/Buttons/Button\";\nimport {\n  FC_GetTransferDistrictById,\n  TransferDashboard_Request,\n  TransferRequestByDIstrict__Interface,\n} from \"../../actions\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Alert from \"../../components/Alert/Alert\";\nimport CandidatesListByDIstrict from \"./CandidatesListByDIstrict\";\n\ntype SelectedDistrictTransferRequestProps = {\n  district: TransferDashboard_Request;\n  close: () => void;\n};\n\nconst SelectedDistrictTransferRequest: FC<\n  SelectedDistrictTransferRequestProps\n> = ({ close, district }): ReactElement => {\n  const [error, setError] = useState<{\n    target: \"error\" | \"success\" | null;\n    msg: string;\n  }>({ msg: \"\", target: null });\n  const [loading, setLoading] = useState(true);\n  const [candidates_list, setCandidates_list] = useState(false);\n  const [dataRes, setData] =\n    useState<TransferRequestByDIstrict__Interface | null>(null);\n  useEffect(() => {\n    if (loading === true) {\n      FC_GetTransferDistrictById(\n        district.district_code,\n        \"1\",\n        (status, data, msg) => {\n          if (status) {\n            setData(data);\n          } else {\n            setError({ target: \"error\", msg: msg });\n          }\n          setLoading(false);\n        }\n      );\n    }\n  }, [district.district_code, loading]);\n\n  let chartData = {\n    options: {\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: true,\n      },\n\n      chart: {\n        id: \"basic-bar\",\n        stacked: true,\n\n        toolbar: {\n          show: true,\n        },\n        zoom: {\n          enabled: true,\n        },\n      },\n\n      xaxis: {\n        categories: dataRes\n          ? dataRes.transfers_requests.map((itm) => [\n              itm.position_code,\n              itm.position_name,\n            ])\n          : [],\n      },\n    },\n    series: [\n      {\n        name: \"Female\",\n        data: dataRes\n          ? dataRes.transfers_requests.map((itm) => itm.female)\n          : [],\n      },\n      {\n        name: \"Male\",\n        data: dataRes ? dataRes.transfers_requests.map((itm) => itm.male) : [],\n      },\n    ],\n  };\n\n  if (dataRes == null)\n    return (\n      <DashboardContainer>\n        <h2>No data found</h2>\n      </DashboardContainer>\n    );\n\n  if (candidates_list === true)\n    return (\n      <CandidatesListByDIstrict\n        district={district}\n        close={() => setCandidates_list(false)}\n      />\n    );\n\n  return (\n    <>\n      <div className=\"lg:sticky top-10 z-50\">\n        <DashboardContainer\n          noPadding\n          className=\"flex py-2 mx-2 px-3 flex-col items-center lg:flex-row\"\n        >\n          {error.target === \"error\" && (\n            <Alert theme=\"danger\">{error.msg}</Alert>\n          )}\n          {error.target === \"success\" && (\n            <Alert theme=\"success\">{error.msg}</Alert>\n          )}\n          <div className=\"pr-2\">\n            <Button theme=\"danger-light\" onClick={close}>\n              Back\n            </Button>\n          </div>\n          <div className=\"flex-1\">\n            <h1 className=\"text-2xl font-bold\">\n              {district.district_name} district{\" \"}\n            </h1>\n          </div>\n          <div className=\"\">\n            <Button\n              theme=\"accent-light\"\n              onClick={() => setCandidates_list(true)}\n            >\n              View candidates list\n            </Button>\n          </div>\n        </DashboardContainer>\n      </div>\n\n      <div className=\"animate__animated animate__zoomIn animate__faster\">\n        <DashboardContainer\n          className=\"px-2 grid-col-2 grid sm:grid-cols-3 xl:grid-cols-6 gap-2 pt-3\"\n          noPadding\n          transparent\n        >\n          {/* {console.log(dataRes)} */}\n          {[\n            {\n              icon: MdGroup,\n              title: \"Total candidates\",\n              value: dataRes.male + dataRes.female,\n            },\n            { icon: FaFemale, title: \"Female\", value: dataRes.female },\n            { icon: FaMale, title: \"Total male\", value: dataRes.male },\n            {\n              icon: MdGroup,\n              title: \"Total positions\",\n              value: dataRes.transfers_requests.length,\n            },\n            {\n              icon: MdOutlineHouse,\n              title: \"Married\",\n              value: dataRes.married,\n              value_2: dataRes.transfers_requests.length,\n            },\n            {\n              icon: MdAccessible,\n              title: \"With disability\",\n              value: dataRes.disability,\n            },\n          ].map((itm, i) => {\n            let Icon = itm.icon;\n            return (\n              <div\n                key={i}\n                className=\"flex items-center p-1 rounded border bg-white\"\n              >\n                <section className=\"m-3 text-4xl bg-yellow-600 bg-opacity-10 rounded-full p-2 text-yellow-800\">\n                  <Icon />\n                </section>\n                <section>\n                  <h5 className=\"text-gray-500 m-0\">{itm.title}</h5>\n                  <h2 className=\"text-yellow-800 font-bold text-3xl -mt-1\">\n                    {itm.value}{\" \"}\n                    {itm?.value_2 && (\n                      <span className=\"font-light text-gray-400\">\n                        of {itm?.value_2}\n                      </span>\n                    )}\n                  </h2>\n                </section>\n              </div>\n            );\n          })}\n        </DashboardContainer>\n\n        <DashboardContainer className=\"\">\n          <Chart\n            options={chartData.options}\n            series={chartData.series}\n            type=\"bar\"\n            width=\"100%\"\n            height={500}\n          />\n        </DashboardContainer>\n        <DashboardContainer className=\"\">\n          <div className=\"p-1 pb-4 flex items-center\">\n            <section className=\"flex-1\">\n              <h3 className=\"text-2xl font-bold text-gray-600\">\n                Transfer requests\n              </h3>\n            </section>\n            <section>\n              <ExportToExcel\n                fileData={dataRes.transfers_requests}\n                fileName={`${district.district_name} District Total Transfer`}\n                btnName=\"Download EXCEL\"\n              />\n            </section>\n          </div>\n          <table className=\"w-full text-left border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"p-2 border\">#</th>\n                <th className=\"p-2 border\">Position code</th>\n                <th className=\"p-2 border\">Position name</th>\n                <th className=\"p-2 border\">Qualification</th>\n                <th className=\"p-2 border\">Male</th>\n                <th className=\"p-2 border\">Female</th>\n                <th className=\"p-2 border\">Married</th>\n                <th className=\"p-2 border\">Single</th>\n                <th className=\"p-2 border\">Disability</th>\n                <th className=\"p-2 border\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataRes.transfers_requests.map((itm, i) => (\n                <tr\n                  key={i}\n                  className={`${\n                    i % 2 ? \"\" : \"bg-gray-100\"\n                  } hover:bg-blue-300 bg-opacity-20 cursor-pointer`}\n                >\n                  <td className={`p-2 border`}>{i + 1}</td>\n                  <td className={`p-2 border`}>{itm.position_code}</td>\n                  <td className={`p-2 border`}>{itm.position_name}</td>\n                  <td className=\"p-2 border\">{itm.qualification_name}</td>\n                  <td\n                    className={`p-2 border bg-green-200 bg-opacity-30 font-bold text-green-900`}\n                  >\n                    {itm.male}\n                  </td>\n                  <td\n                    className={`p-2 border bg-blue-200 bg-opacity-30 font-bold text-blue-800`}\n                  >\n                    {itm.female}\n                  </td>\n\n                  <td\n                    className={`p-2 border bg-blue-200 bg-opacity-30 font-bold text-blue-800`}\n                  >\n                    {itm.married}\n                  </td>\n                  <td\n                    className={`p-2 border bg-blue-200 bg-opacity-30 font-bold text-blue-800`}\n                  >\n                    {itm.single}\n                  </td>\n                  <td\n                    className={`p-2 border bg-yellow-200 bg-opacity-30 font-bold text-yellow-700`}\n                  >\n                    {itm.disability}\n                  </td>\n                  <td\n                    className={`p-2 border bg-yellow-200 bg-opacity-30 font-bold text-yellow-700`}\n                  >\n                    {itm.male + itm.female}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </DashboardContainer>\n      </div>\n    </>\n  );\n};\nexport default SelectedDistrictTransferRequest;\n","import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport { FaFemale, FaMale } from \"react-icons/fa\";\nimport { MdAccessible, MdGroup, MdOutlineHouse } from \"react-icons/md\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport Chart from \"react-apexcharts\";\nimport SelectedDistrictTransferRequest from \"./SelectedDistrictTransferRequest\";\nimport {\n  FC_GetTransferDashboardCountry,\n  Total_transfer_request_Numbers__Interface,\n  TransferDashboard_Request,\n  VacantPosts__Dashboard_Interface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Loading from \"../../components/Loading/Loading\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\n\ntype TransferRequestDashboardProps = {};\n\nconst TransferRequestDashboard: FC<\n  TransferRequestDashboardProps\n> = (): ReactElement => {\n  const [transfer_total, setTransfer_total] =\n    useState<Total_transfer_request_Numbers__Interface>({\n      total_transfer_request: 0,\n      female: 0,\n      male: 0,\n      single: 0,\n      married: 0,\n      disability: 0,\n    });\n  const [transfers_requests, setTransfers_requests] = useState<\n    TransferDashboard_Request[]\n  >([]);\n  const [vacant_posts, setVacant_posts] = useState<\n    VacantPosts__Dashboard_Interface[]\n  >([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [selected_position, setSelectedPosition] = useState<string>(\"0\");\n  const [main_loading, setMainLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{\n    target: \"main-success\" | \"main-error\" | null;\n    msg: string;\n  }>({\n    msg: \"\",\n    target: null,\n  });\n\n  useEffect(() => {\n    if (main_loading === true) {\n      FC_GetTransferDashboardCountry(\"1\", \"0\", (status, data, msg) => {\n        if (status === false)\n          setError({\n            target: \"main-error\",\n            msg: msg,\n          });\n\n        if (data !== null) {\n          setTransfer_total(data.transfer_total);\n\n          // let data_new = data.vacant_posts.map(el => el.)\n          // let data_new = data.transfers_requests.map(el => el.)\n          setTransfers_requests(data.transfers_requests);\n          setVacant_posts(data.vacant_posts);\n        }\n\n        setMainLoading(false);\n      });\n    }\n  }, [main_loading]);\n  const [tabGraph, settabGraph] = useState<boolean>(true);\n  const [selectedDistrict, setSelectedDistrict] =\n    useState<TransferDashboard_Request | null>(null);\n\n  const loadDataByPositionCode = (position: string) => {\n    setSelectedPosition(position);\n    setLoading(true);\n    FC_GetTransferDashboardCountry(\"1\", position, (status, data, msg) => {\n      if (status === false)\n        setError({\n          target: \"main-error\",\n          msg: msg,\n        });\n\n      if (data !== null) {\n        setTransfers_requests(data.transfers_requests);\n        setTransfer_total(data.transfer_total);\n        if (position === \"0\") setVacant_posts(data.vacant_posts);\n      }\n\n      setMainLoading(false);\n      setLoading(false);\n    });\n  };\n\n  const dataPointSelection = (e: any, chart: any, opts: any) => {\n    let selectedData = transfers_requests[opts.dataPointIndex];\n    if (selectedData) setSelectedDistrict(selectedData);\n  };\n\n  let chartDataVacantVsRequests = {\n    options: {\n      chart: {\n        id: \"basic-bar-vacant-vs-bar\",\n        stacked: false,\n        toolbar: {\n          show: true,\n        },\n        zoom: {\n          enabled: true,\n        },\n        events: {\n          dataPointSelection: dataPointSelection,\n        },\n      },\n\n      xaxis: {\n        categories: transfers_requests.map((el) => el.district_name),\n      },\n    },\n    series: [\n      {\n        name: \"Vacant posts\",\n        data: transfers_requests.map((el) => el.district_vacant),\n      },\n      {\n        name: \"Requests\",\n        data: transfers_requests.map((el) => el.total_transfer_request),\n      },\n    ],\n  };\n\n  let chartData = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n        stacked: true,\n        toolbar: {\n          show: true,\n        },\n        zoom: {\n          enabled: true,\n        },\n\n        events: {\n          dataPointSelection: dataPointSelection,\n        },\n      },\n      colors: [\"#b73377\", \"#2ea9d9\"],\n      xaxis: {\n        categories: transfers_requests.map((el) => el.district_name),\n      },\n    },\n    series: [\n      {\n        name: \"Female\",\n        data: transfers_requests.map((el) => el.total_female),\n      },\n      {\n        name: \"Male\",\n        data: transfers_requests.map((el) => el.total_male),\n      },\n    ],\n  };\n\n  if (selectedDistrict !== null)\n    return (\n      <SelectedDistrictTransferRequest\n        district={selectedDistrict}\n        close={setSelectedDistrict.bind(this, null)}\n      />\n    );\n\n  /* function body */\n  return (\n    <>\n      <div className=\"lg:sticky top-10 z-50\">\n        {error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{error.msg}</Alert>\n        )}\n        {error.target === \"main-success\" && (\n          <Alert theme=\"success\">{error.msg}</Alert>\n        )}\n        <DashboardContainer\n          noPadding\n          className=\"flex p-0.5 mx-2 px-3 flex-col items-center lg:flex-row\"\n        >\n          <div className=\"flex-1\">\n            <h1 className=\"text-2xl font-bold\">Transfer Requests</h1>\n            <h2 className=\"text-lg text-accent-900\">2020 - 2022</h2>\n          </div>\n          <div className=\"p-1  flex-1 gap-x-2\">\n            <InputSelect\n              onChange={(e) => loadDataByPositionCode(e.target.value)}\n              size=\"xs\"\n              Label_className=\"text-sm opacity-80\"\n              value={selected_position}\n              error={\"\"}\n              label={\"Position\"}\n              placeholder={\"\"}\n              name={\"\"}\n              disabled={loading}\n              data={[\n                { title: \"All positions\", value: \"0\" },\n                ...vacant_posts.map((itm) => ({\n                  title: `${itm.position_code} - ${itm.position_name}`,\n                  value: itm.position_code,\n                })),\n              ]}\n            />\n          </div>\n        </DashboardContainer>\n      </div>\n\n      {/* <Button onClick={loadData}>Load data</Button> */}\n      {loading === true || main_loading === true ? (\n        <>\n          <div className=\"py-10 text-center\">\n            <Loading />\n          </div>\n        </>\n      ) : (\n        <>\n          <DashboardContainer\n            className=\"px-2 grid-col-2 grid md:grid-cols-3 lg:grid-cols-5 gap-2 pt-3\"\n            noPadding\n            transparent\n          >\n            {[\n              {\n                icon: MdGroup,\n                title: \"Transfers request\",\n                value: transfer_total.total_transfer_request,\n              },\n              { icon: FaFemale, title: \"Female\", value: transfer_total.female },\n              { icon: FaMale, title: \"Total male\", value: transfer_total.male },\n              {\n                icon: MdOutlineHouse,\n                title: \"Married\",\n                value: transfer_total.married,\n                value_2: transfer_total.total_transfer_request,\n              },\n              {\n                icon: MdAccessible,\n                title: \"With disability\",\n                value: transfer_total.disability,\n              },\n            ].map((itm, i) => {\n              let Icon = itm.icon;\n              return (\n                <div\n                  key={i}\n                  className=\"flex items-center p-1 rounded border bg-white\"\n                >\n                  <section className=\"m-3 text-4xl bg-yellow-600 bg-opacity-10 rounded-full p-2 text-yellow-800\">\n                    <Icon />\n                  </section>\n                  <section>\n                    <h5 className=\"text-gray-500 m-0\">{itm.title}</h5>\n                    <h2 className=\"text-yellow-800 font-bold text-3xl -mt-1\">\n                      {itm.value}{\" \"}\n                      {itm?.value_2 && (\n                        <span className=\"font-light text-gray-400\">\n                          of {itm?.value_2}\n                        </span>\n                      )}\n                    </h2>\n                  </section>\n                </div>\n              );\n            })}\n          </DashboardContainer>\n\n          <DashboardContainer className=\"\">\n            <section className=\"p-1 bg-yellow-700 bg-opacity-10 rounded-lg text-sm w-80 mx-auto flex\">\n              <button\n                className={`px-2 flex-1 ${\n                  tabGraph === true ? \"bg-yellow-600 text-white\" : \"text-black\"\n                } py-1 rounded-lg`}\n                onClick={settabGraph.bind(this, true)}\n              >\n                Vacant vs Requests\n              </button>\n              <button\n                className={`px-2 flex-1 ${\n                  tabGraph === false ? \"bg-yellow-600 text-white\" : \"text-black\"\n                } py-1 rounded-lg`}\n                onClick={settabGraph.bind(this, false)}\n              >\n                District {\"&\"} Gender\n              </button>\n            </section>\n            <Chart\n              options={\n                tabGraph ? chartDataVacantVsRequests.options : chartData.options\n              }\n              series={\n                tabGraph ? chartDataVacantVsRequests.series : chartData.series\n              }\n              type=\"bar\"\n              width=\"100%\"\n              height={500}\n            />\n          </DashboardContainer>\n\n          {transfers_requests.length >= 1 && (\n            <DashboardContainer className=\"\">\n              <div className=\"p-1 pb-4 flex items-center\">\n                <section className=\"flex-1\">\n                  <h3 className=\"text-2xl font-bold text-gray-600\">\n                    Transfer requests\n                  </h3>\n                </section>\n                <section>\n                  <ExportToExcel\n                    fileData={transfers_requests}\n                    fileName={`TRANSFER REQUESTS REPORT ${\n                      selected_position === \"0\"\n                        ? \"on country level\"\n                        : ` on ${selectedDistrict} position`\n                    }`}\n                    btnName=\"Download EXCEL\"\n                  />\n                </section>\n              </div>\n              <table className=\"w-full text-left border-collapse\">\n                <thead>\n                  <tr>\n                    <th className=\"p-2 border\">#</th>\n                    <th className=\"p-2 border\">District id</th>\n                    <th className=\"p-2 border\">DIstrict name</th>\n                    <th className=\"p-2 border\">Male</th>\n                    <th className=\"p-2 border\">Female</th>\n                    <th className=\"p-2 border\">Total</th>\n                    <th className=\"p-2 border\">Vacant posts</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {transfers_requests.map((itm, i) => (\n                    <tr\n                      key={i}\n                      className={`${\n                        i % 2 ? \"\" : \"bg-gray-100\"\n                      } hover:bg-blue-300 bg-opacity-20 cursor-pointer`}\n                    >\n                      <td className={`p-2 border`}>{i + 1}</td>\n                      <td className={`p-2 border`}>{itm.district_code}</td>\n                      <td className={`p-2 border`}>{itm.district_name}</td>\n                      <td\n                        className={`p-2 border ${\n                          tabGraph === false\n                            ? \"bg-green-200 bg-opacity-30 font-bold text-green-900\"\n                            : \"\"\n                        }`}\n                      >\n                        {itm.total_male}\n                      </td>\n                      <td\n                        className={`p-2 border ${\n                          tabGraph === false\n                            ? \"bg-blue-200 bg-opacity-30 font-bold text-blue-800\"\n                            : \"\"\n                        }`}\n                      >\n                        {itm.total_female}\n                      </td>\n                      <td\n                        className={`p-2 border ${\n                          tabGraph === true\n                            ? \"bg-yellow-200 bg-opacity-30 font-bold text-yellow-700\"\n                            : \"\"\n                        }`}\n                      >\n                        {itm.total_transfer_request}\n                      </td>\n                      <td\n                        className={`p-2 border ${\n                          tabGraph === true\n                            ? \"bg-blue-200 bg-opacity-30 font-bold text-blue-800\"\n                            : \"\"\n                        }`}\n                      >\n                        {itm.district_vacant}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </DashboardContainer>\n          )}\n        </>\n      )}\n    </>\n  );\n};\nexport default TransferRequestDashboard;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport { HiChip } from \"react-icons/hi\";\nimport { RoundData_Interface } from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\n\ntype RoundItemTransferProps = {\n  round: RoundData_Interface;\n};\n\nconst RoundItemTransfer: FC<RoundItemTransferProps> = ({\n  round,\n}): ReactElement => {\n  const {\n    candidates,\n    district_name,\n    email,\n    full_name,\n    phone_numbers,\n    round_id,\n    schools,\n    total_candidate_request_transfer,\n    total_schools,\n    total_transferred,\n  } = round;\n  /* function body */\n  const [tab, setTab] = useState<\"1\" | \"2\">(\"2\");\n  return (\n    <div className=\"p-2 bg-white mb-3 rounded shadow \">\n      <div className=\"flex items-center\">\n        <section className=\"text-3xl text-blue-400 pr-2\">\n          <HiChip />\n        </section>\n        <section className=\"flex-1\">\n          <h3 className=\"font-bold text-lg\">{district_name} district</h3>\n          <p className=\"text-sm -mt-1 text-gray-400\">\n            Round: <b>{round_id}</b>\n          </p>\n        </section>\n\n        <div className=\"flex\">\n          {[\n            {\n              title: \"Total requests\",\n              value: total_candidate_request_transfer,\n              className:\n                \"text-yellow-800 bg-yellow-800 bg-opacity-5 rounded mx-1 border\",\n            },\n            {\n              title: \"Total schools\",\n              value: total_schools,\n              className:\n                \"text-blue-800 bg-blue-800 bg-opacity-5 rounded mx-1 border\",\n            },\n            {\n              title: \"Transferred\",\n              value: total_transferred,\n              className:\n                \"text-green-800 bg-green-800 bg-opacity-5 rounded mx-1 border\",\n            },\n          ].map((el, i) => (\n            <section key={i} className={`px-2  ${el.className}`}>\n              <label className=\"text-sm \">{el.title}</label>\n              <h2 className=\"text-xl font-bold -mt-1\">{el.value}</h2>\n            </section>\n          ))}\n        </div>\n      </div>\n      <div className=\"mx-auto text-center\">\n        <Button\n          theme={tab === \"2\" ? \"accent-light\" : \"default\"}\n          size=\"sm\"\n          onClick={() => setTab(\"2\")}\n        >\n          Transferred candidates\n        </Button>\n        <Button\n          theme={tab === \"1\" ? \"accent-light\" : \"default\"}\n          size=\"sm\"\n          onClick={() => setTab(\"1\")}\n        >\n          Transfers requests\n        </Button>\n      </div>\n\n      <div className=\"border-t mt-2\">\n        {tab === \"1\" && (\n          <table className=\"border w-full\">\n            <thead>\n              <tr>\n                <th className=\"p-1 border\">#</th>\n                <th className=\"p-1 border\">Position code</th>\n                <th className=\"p-1 border\">School code</th>\n                <th className=\"p-1 border\">Vacant</th>\n              </tr>\n            </thead>\n            <tbody>\n              {schools.length <= 0 ? (\n                <tr>\n                  <td className=\"py-8 text-center\"></td>\n                </tr>\n              ) : (\n                schools.map((itm, i) => (\n                  <tr\n                    key={i}\n                    className=\"hover:bg-yellow-800 hover:bg-opacity-20\"\n                  >\n                    <td className=\"p-1 border\">{i + 1}</td>\n                    <td className=\"p-1 border\">{itm.position_id}</td>\n                    <td className=\"p-1 border\">{itm.school_code}</td>\n                    <td className=\"p-1 border\">{itm.vacant_posts}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        )}\n\n        {tab === \"2\" && (\n          <table className=\"border w-full\">\n            <thead>\n              <tr>\n                <th className=\"p-1 border\">#</th>\n                <th className=\"p-1 border\">Candidate</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">School</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Hire date</th>\n                <th className=\"p-1 border\">Martial..</th>\n                <th className=\"p-1 border\">Gender</th>\n                <th className=\"p-1 border\">Disability</th>\n                <th className=\"p-1 border\">Schools</th>\n                <th className=\"p-1 border\">Date of app</th>\n              </tr>\n            </thead>\n            <tbody>\n              {candidates.length <= 0 ? (\n                <tr>\n                  <td colSpan={20} className=\"py-8 text-center\">\n                    <Heading theme=\"default\" className=\"opacity-50\">\n                      No candidates found!\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                candidates.map((itm, i) => (\n                  <tr\n                    key={i}\n                    className=\"text-sm text-center hover:bg-yellow-800 hover:bg-opacity-10\"\n                  >\n                    <td className=\"p-0.5 border\">{i + 1}</td>\n                    <td className=\"p-0.5 border\" title=\"Candidate\">\n                      {itm.name}\n                    </td>\n                    <td className=\"p-0.5 border\" title=\"Position id\">\n                      {itm.position_id}\n                    </td>\n                    <td className=\"p-0.5 border\" title=\"School code\">\n                      {itm.school_code}\n                    </td>\n                    <td className=\"p-0.5 border text-sm\" title=\"DOB\">\n                      {itm.dob}\n                    </td>\n                    <td className=\"p-0.5 border text-sm\" title=\"Hired date\">\n                      {itm.hire_date}\n                    </td>\n                    <td className=\"p-0.5 border\" title=\"Martial status\">\n                      {itm.martial_status}\n                    </td>\n                    <td className=\"p-0.5 border\" title=\"Gender\">\n                      {itm.sex}\n                    </td>\n                    <td className=\"p-0.5 border text-center\" title=\"Disability\">\n                      {itm.disability === true ? (\n                        <span className=\"p-1 rounded bg-red-200 text-red-800 font-bold px-2\">\n                          No\n                        </span>\n                      ) : (\n                        <span className=\"p-1 rounded bg-red-200 text-red-800 font-bold px-2\">\n                          Yes\n                        </span>\n                      )}\n                    </td>\n                    <td className=\"p-0.5 border\">\n                      {itm.schools.map((el) => (\n                        <span\n                          key={el}\n                          className={`inline-block p-1 ${\n                            itm.school_code === el\n                              ? \"text-green-800 bg-green-200\"\n                              : \"bg-gray-200 text-black\"\n                          }  mx-1 rounded font-bold`}\n                          title={\n                            itm.school_code === el ? \"Approved\" : \"Rejected\"\n                          }\n                        >\n                          {el}\n                        </span>\n                      ))}\n                    </td>\n\n                    <td className=\"p-0.5 border\" title=\"Date of application\">\n                      {itm.date_of_application}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        )}\n        <div className=\"py-2 text-sm text-gray-500\">\n          Done by:{\" \"}\n          <label className=\"font-bold text-black\">\n            {full_name} {\"(\"}\n            {email} | {phone_numbers}\n            {\")\"}\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RoundItemTransfer;\n"],"sourceRoot":""}