{"version":3,"sources":["components/Inputs/InputSelect.tsx","components/GenerateReport/ExportToExcel.tsx","types/PlacementReportTypes.ts","components/TableLoading/TableLoading.tsx","containers/Reports/PlacementReport/PlacementReport.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","React","memo","SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","staff_code","status","isChangeAllowed","nid","full_name","first_name","middle_name","last_name","phone_numbers","email","dob","sex","marital_status","qualification","specialization","rssb_number","bank_name","bank_account","position","role","district_code","district_name","school_code","school_name","school_category","school_status","nationality","date_of_hire","date_in_school","subjects","grades","periods","forReportRoles","system","country","district","school","FC_GetStringValue","FC_isDateValid","DATE","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","element","includes","push","isEmptyOrSpaces","course_name","grade_code","findIndex","item","index","JSON","parse","grade_group","length","grade_name","FC_ConvertArrayToString","Number","teaching_period","toString","dateWrapper","Date","isNaN","getDate","TableLoading","props","displayCols","colsArray","cols","TodayDate","_PlacementReport","setDownloading","setState","downloading","setSortProperty","sortProperty","setSortOrder","sortOrder","setSearchInput","searchInput","setReportTitle","reportTitle","setSelectAll","selectAll","setFormError","formError","setSort","thisProperty","state","setGenerateReport","generateReport","setReportContent","reportContent","setCurrentPage","currentPage","loadDataFormAPI","month","academic_id","auth","FC_GetReportByDistrict","msg","loading","reportAPIData","console","log","report","FC_GetReportBySchoolMonthly","selectedMonth","filter","selected_district","loadCountryDataAPI","componentDidMount","districtList","FC_GetDistrictList","basic","academic_calender","academic_year_id","placement","academics","FC_GetAcademics","loadingAcademics","updateDataToPrint","academic_year_name","thisDistrict","FC_GetDistrictByCode","arrayNew","n","allData","getUserList","dataArray","no","location","undefined","staff_category","start_date_in_the_school","hired_date","region_code","village_name","cell_name","cell_code","sector_name","sector_code","province_name","province_code","Object","prototype","hasOwnProperty","call","reportToPrint","resetReportContent","currentState","newArray","updateReportContent","find","result","list","updatedElement","changeSchoolData","code","thisData","teacher","thisSchool","generatePages","total_users","totalPages","Math","ceil","tablePageLength","_pages","Array","from","keys","slice","jumpToFirst","jumpToLast","moveBack","moveNext","random","countTeacherByGender","teachers","gender","toLocaleLowerCase","MONTHS_LIST","getMonth","selectedAcademic","export_type","DT_GetUserList","this","theme","el","target","displayNumbers","id","colSpan","search","sortThisArray","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","Component","PlacementReport","connect","FC_GetPlacementByDistrict"],"mappings":"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","file":"static/js/21.1b69c5e2.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label && (\n          <label\n            htmlFor=\"login-form-email\"\n            className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default React.memo(ExportToExcel);\n","import {\n  DATE,\n  FC_ConvertArrayToString,\n  isEmptyOrSpaces,\n} from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  staff_code: string;\n  full_name: string;\n  first_name: string;\n  last_name: string;\n  nid: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  // nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  staff_category: string;\n  rssb_number: string;\n  bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  region_code: string;\n  // LOCATION INFO ##############\n  village_name: string;\n  cell_name: string;\n  cell_code: string;\n  sector_name: string;\n  sector_code: string;\n  district_name: string;\n  district_code: string;\n  province_name: string;\n  province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  periods: string;\n  // NEW FIELD =====================\n  date_in_school: string;\n  date_of_hire: string;\n  nationality: string;\n  middle_name: string;\n  bank_name: string;\n  // END NEW FIELD =================\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  nid = \"nid\",\n  rssb_number = \"rssb_number\",\n  // nationality_id = \"nationality_id\",\n  bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  staff_category = \"staff_category\",\n  staff_code = \"staff_code\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  region_code = \"region_code\",\n  village_name = \"village_name\",\n  cell_name = \"cell_name\",\n  cell_code = \"cell_code\",\n  sector_name = \"sector_name\",\n  sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  district_code = \"district_code\",\n  province_name = \"province_name\",\n  province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  periods = \"periods\",\n\n  // NEW FIELDS ================\n  date_in_school = \"date_in_school\",\n  date_of_hire = \"date_of_hire\",\n  nationality = \"nationality\",\n  middle_name = \"middle_name\",\n  bank_name = \"bank_name\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.staff_code,\n      title: \"Staff code\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.first_name,\n      title: \"Staff First Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.middle_name,\n      title: \"Staff Middle Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.last_name,\n      title: \"Staff Last Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.rssb_number,\n      title: \"RSSB\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_name,\n      title: \"Bank name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_account,\n      title: \"Bank account\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_code,\n      title: \"District Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nationality,\n      title: \"Nationality\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_in_school,\n      title: \"Date in school\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.periods,\n      title: \"Periods\",\n      status: true,\n      isChangeAllowed: true,\n    },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  system: string[];\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  system: [\"26\", \"Admin\"],\n  country: [\"REB\", \"4\", \"RTB\", \"300\", \"MINECOFIN\", \"27\", \"26\", \"Admin\"],\n  district: [\"DDE\", \"3\", \"Human Resource\", \"25\"],\n  school: [\"Head Teacher\", \"Teacher\", \"2\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | Date | null): string => {\n  if (value === null) return \"\";\n  if (FC_isDateValid(value)) return DATE(value);\n  return value as string;\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: string[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(\n          FC_ConvertArrayToString(JSON.parse(element.grade_group))\n        );\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | Date | null): boolean => {\n  if (value === null) return false;\n  var dateWrapper = new Date(value);\n  return !isNaN(dateWrapper.getDate());\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { connect } from \"react-redux\";\nimport {\n  API_GetPlacementBySchoolUpdated,\n  Auth,\n  Basic,\n  DistrictList,\n  FC_GetAcademics,\n  FC_GetDistrictByCode,\n  FC_GetDistrictList,\n  FC_GetPlacementByDistrict,\n  FC_GetReportByDistrict,\n  FC_GetReportBySchoolMonthly,\n  FT_GetPlacementByDistrict,\n  Placement,\n  TeacherData,\n} from \"../../../actions\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  DATE,\n  displayNumbers,\n  isEmptyOrSpaces,\n  MONTHS_LIST,\n  search,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport {\n  defaultPlacementReportActiveContent,\n  FC_GetHierarchStrings,\n  FC_GetStringValue,\n  FC_isDateValid,\n  forReportRoles,\n  PlacementReportActiveContentInterface,\n  PlacementReportActiveContentKeyInterface,\n  ReportAcademicYearType,\n  reportToPrintListType,\n  tablePageLimit,\n} from \"../../../types/PlacementReportTypes\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport InputSelect from \"../../../components/Inputs/InputSelect\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\nimport Button from \"../../../components/Buttons/Button\";\nimport { BsFileEarmarkPdf } from \"react-icons/bs\";\nimport { SiMicrosoftexcel } from \"react-icons/si\";\n\nconst TodayDate = new Date();\n\ninterface PlacementReportProps {\n  // REDUX PROPS ======\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  FC_GetPlacementByDistrict: FT_GetPlacementByDistrict;\n  FC_GetAcademics: Function;\n}\n\ninterface PlacementReportState {\n  loading: boolean;\n  loadingAcademics: boolean;\n  downloading: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  sortProperty: string;\n  searchInput: string;\n  reportTitle: string;\n  selectAll: boolean;\n  generateReport: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  reportContent: PlacementReportActiveContentInterface[];\n  reportToPrint: reportToPrintListType[] | null;\n  selectedMonth: string;\n  reportAPIData: API_GetPlacementBySchoolUpdated[] | null;\n  currentPage: number;\n  tablePageLength: number;\n  selectedAcademic: string;\n  districtList: DistrictList[] | null;\n  selected_district: string;\n  export_type: \"Excel\" | \"PDF\";\n}\n\nexport class _PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingAcademics: false,\n      downloading: false,\n      sortOrder: \"ASC\",\n      sortProperty: \"\",\n      searchInput: \"\",\n      reportTitle: \"\",\n      selectAll: true,\n      generateReport: false,\n      formError: null,\n      reportContent: defaultPlacementReportActiveContent,\n      reportToPrint: null,\n      selectedMonth: MONTHS_LIST[TodayDate.getMonth()],\n      reportAPIData: null,\n      currentPage: 1,\n      tablePageLength: tablePageLimit,\n      selectedAcademic: this.props.basic.academic_calender\n        ? this.props.basic.academic_calender.academic_year_id\n        : \"\",\n      districtList: null,\n      selected_district: \"\",\n      export_type: \"Excel\",\n    };\n  }\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setSortProperty = (value: string) => {\n    this.setState({ sortProperty: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n  };\n\n  setGenerateReport = (value: boolean) => {\n    this.setState({ generateReport: value });\n  };\n\n  setReportContent = (value: PlacementReportActiveContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  loadDataFormAPI = (month: string, academic_id: string) => {\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      forReportRoles.district.includes(this.props.auth.role.role)\n    )\n      FC_GetReportByDistrict(\n        this.props.auth.district.district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.school &&\n      this.props.auth.role &&\n      forReportRoles.school.includes(this.props.auth.role.role)\n    )\n      FC_GetReportBySchoolMonthly(\n        this.props.auth.school.school_code,\n        academic_id,\n        this.state.selectedMonth,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          if (status === false && data !== null) {\n            console.log(\n              \"=================reportsss SCHOOL LEVEL ===================\"\n            );\n            console.log({ report: data });\n            console.log(\n              \"=================reportsss SCHOOL LEVEL ===================\"\n            );\n            this.setState({\n              reportAPIData: data.filter((item) => item.month === month),\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role) &&\n      !isEmptyOrSpaces(this.state.selected_district)\n    )\n      FC_GetReportByDistrict(\n        this.state.selected_district,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    // else if (\n    //   this.props.auth.role &&\n    //   forReportRoles.country.includes(this.props.auth.role.role)\n    // )\n    //   FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n    //     this.setState({\n    //       loading: status,\n    //       reportAPIData: null,\n    //     });\n    //     if (status === false && data !== null) {\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       console.log({ report: data });\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       this.setState({\n    //         reportAPIData: data.filter((item) => item.month === month),\n    //       });\n    //     } else if (!status && !isEmptyOrSpaces(msg)) {\n    //       console.error({ status, msg });\n    //       // this.setState({\n    //       //   loading: false,\n    //       //   error: {\n    //       //     msg: msg,\n    //       //     target: \"main-error\",\n    //       //   },\n    //       // });\n    //     }\n    //   });\n  };\n\n  loadCountryDataAPI = (\n    month: string,\n    academic_id: string,\n    district_code: string\n  ) => {\n    if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role) &&\n      !isEmptyOrSpaces(district_code)\n    )\n      FC_GetReportByDistrict(\n        district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    // else if (\n    //   this.props.auth.role &&\n    //   forReportRoles.country.includes(this.props.auth.role.role)\n    // )\n    //   FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n    //     this.setState({\n    //       loading: status,\n    //       reportAPIData: null,\n    //     });\n    //     if (status === false && data !== null) {\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       console.log({ report: data });\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       this.setState({\n    //         reportAPIData: data.filter((item) => item.month === month),\n    //       });\n    //     } else if (!status && !isEmptyOrSpaces(msg)) {\n    //       console.error({ status, msg });\n    //       // this.setState({\n    //       //   loading: false,\n    //       //   error: {\n    //       //     msg: msg,\n    //       //     target: \"main-error\",\n    //       //   },\n    //       // });\n    //     }\n    //   });\n  };\n\n  componentDidMount = () => {\n    if (\n      (this.state.districtList === null ||\n        this.state.districtList.length !== 30) &&\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role)\n    ) {\n      FC_GetDistrictList((status, data, msg) => {\n        this.setState({\n          loading: true,\n          districtList: null,\n        });\n        if (status === true) {\n          console.log(\n            \"================= districts COUNTRY LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"================= districts COUNTRY LEVEL ===================\"\n          );\n          this.setState({\n            loading: false,\n            districtList: data,\n            // selected_district: data[0].district_code,\n          });\n        } else if (!isEmptyOrSpaces(msg)) {\n          this.setState({\n            formError: {\n              element: \"main-error\",\n              msg: msg,\n            },\n            loading: false,\n          });\n        }\n      });\n    }\n    if (this.props.basic.academic_calender)\n      this.loadDataFormAPI(\n        this.state.selectedMonth,\n        this.props.basic.academic_calender.academic_year_id\n      );\n    if (\n      this.props.placement.academics === null ||\n      this.props.placement.academics.length === 0\n    )\n      this.props.FC_GetAcademics(\n        (status: boolean, data: ReportAcademicYearType[], msg: string) => {\n          this.setState({ loadingAcademics: status });\n          // if (!status && !isEmptyOrSpaces(msg)) this.setState({});\n        }\n      );\n    else this.setState({ loadingAcademics: false });\n  };\n\n  updateDataToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      forReportRoles.district.includes(this.props.auth.role.role)\n    ) {\n      let title =\n        \"Placement Report / \" +\n        this.props.auth.district.district_name +\n        \" district\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.school &&\n      this.props.auth.role &&\n      forReportRoles.school.includes(this.props.auth.role.role)\n    ) {\n      let title =\n        \"Placement Report / \" + this.props.auth.school.school_name + \" school\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role) &&\n      this.state.districtList\n    ) {\n      const thisDistrict = FC_GetDistrictByCode(\n        this.state.districtList,\n        this.state.selected_district\n      );\n      let title = \"Placement Report / \" + this.props.auth.role.role;\n      title = thisDistrict\n        ? title + \" / \" + thisDistrict.district_name + \" district\"\n        : title;\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    let arrayNew: reportToPrintListType[] = [];\n    let n: number = 1;\n    const allData = this.getUserList();\n\n    if (allData) {\n      for (const key in allData) {\n        // if (Object.prototype.hasOwnProperty.call(allData, key)) {\n        let dataArray: reportToPrintListType = {\n          no: n,\n          full_name: allData[key].full_name ? allData[key].full_name! : \"\",\n          first_name: allData[key].first_name ? allData[key].first_name! : \"\",\n          middle_name: allData[key].middle_name\n            ? allData[key].middle_name!\n            : \"\",\n          last_name: allData[key].last_name ? allData[key].last_name! : \"\",\n          nid: allData[key].nid ? allData[key].nid! : \"\",\n          sex: allData[key].sex ? allData[key].sex! : \"\",\n          qualification: allData[key].qualification\n            ? allData[key].qualification!\n            : \"\",\n          position: allData[key].position ? allData[key].position! : \"\",\n          school_name: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_name)\n            : \"\",\n          district_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.district_name)\n            : \"\",\n          role: allData[key].role ? allData[key].role! : \"\",\n          phone_numbers: allData[key].phone_numbers\n            ? allData[key].phone_numbers!\n            : \"\",\n          email: allData[key].email ? allData[key].email! : \"\",\n          dob: FC_isDateValid(allData[key].dob) ? allData[key].dob! : \"\",\n          marital_status: allData[key].marital_status\n            ? allData[key].marital_status!\n            : \"\",\n          rssb_number: allData[key].rssb_number\n            ? allData[key].rssb_number!\n            : \"\",\n          nationality:\n            allData[key].nationality !== undefined &&\n            allData[key].nationality !== null\n              ? allData[key].nationality!\n              : \"\",\n          bank_name: allData[key].bank_name ? allData[key].bank_name! : \"\",\n          bank_account: allData[key].bank_account\n            ? allData[key].bank_account!\n            : \"\",\n          specialization: allData[key].specialization\n            ? allData[key].specialization!\n            : \"\",\n          staff_category: allData[key].staff_category\n            ? allData[key].staff_category!\n            : \"\",\n          staff_code: allData[key].staff_code ? allData[key].staff_code! : \"\",\n          date_in_school: FC_isDateValid(allData[key].start_date_in_the_school)\n            ? allData[key].start_date_in_the_school!\n            : \"\",\n          date_of_hire:\n            allData[key].hired_date !== undefined\n              ? FC_GetStringValue(allData[key].hired_date!)\n              : \"\",\n          status: allData[key].status ? allData[key].status! : \"\",\n          school_code: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_code)\n            : \"\",\n          school_category: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_category)\n            : \"\",\n          school_status: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_status)\n            : \"\",\n          region_code: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.region_code)\n            : \"\",\n          village_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.village_name)\n            : \"\",\n          cell_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.cell_name)\n            : \"\",\n          cell_code: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.cell_code)\n            : \"\",\n          sector_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.sector_name)\n            : \"\",\n          sector_code: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.sector_code)\n            : \"\",\n\n          district_code: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.district_code)\n            : \"\",\n          province_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.province_name)\n            : \"\",\n          province_code: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.province_code)\n            : \"\",\n          subjects: FC_GetHierarchStrings(allData[key].teacher_hierarch)\n            .courses,\n          grades: FC_GetHierarchStrings(allData[key].teacher_hierarch).grades,\n          periods: FC_GetHierarchStrings(allData[key].teacher_hierarch).periods,\n        };\n        for (const key in this.state.reportContent) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.state.reportContent, key)\n          ) {\n            if (!this.state.reportContent[key].status) {\n              delete dataArray[this.state.reportContent[key].key];\n            }\n          }\n        }\n        arrayNew.push(dataArray);\n        n++;\n        // }\n      }\n      this.setState({ reportToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (newArray[key].isChangeAllowed) newArray[key].status = !currentState;\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateDataToPrint();\n  };\n\n  updateReportContent = (key: PlacementReportActiveContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateDataToPrint();\n  };\n\n  getUserList = (): TeacherData[] | null => {\n    let result: TeacherData[] = [];\n\n    if (this.state.reportAPIData === null) return null;\n    const reportAPIData = this.state.reportAPIData.filter(\n      (item) => (item.month = this.state.selectedMonth)\n    );\n    for (const key in reportAPIData) {\n      const element: TeacherData[] = JSON.parse(reportAPIData[key].list);\n\n      const updatedElement: TeacherData[] = this.changeSchoolData(element, {\n        name: reportAPIData[key].school_name,\n        code: reportAPIData[key].school_code,\n      });\n\n      result = [...result, ...updatedElement];\n    }\n\n    console.log(\"=================getUserList===================\");\n    console.log({ getUserList: result });\n    console.log(\"=================getUserList===================\");\n\n    return result;\n  };\n\n  changeSchoolData = (\n    thisData: TeacherData[],\n    school: { code: string; name: string }\n  ): TeacherData[] => {\n    let newArray: TeacherData[] = [];\n    for (const teacher of thisData) {\n      let thisSchool = teacher.school;\n      if (thisSchool) {\n        thisSchool.school_code = school.code;\n        thisSchool.school_name = school.name;\n      }\n      newArray.push({ ...teacher, school: thisSchool });\n    }\n\n    return newArray;\n  };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / this.state.tablePageLength);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) moveBack = true;\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages)\n      moveNext = true;\n\n    if (totalPages > 3 && this.state.currentPage > 3) jumpToFirst = true;\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    )\n      jumpToLast = true;\n\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                // this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              // this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              // this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  countTeacherByGender = (\n    teachers: TeacherData[],\n    gender: \"female\" | \"male\"\n  ): number => {\n    return teachers.filter(\n      (item) => item.sex && item.sex.toLocaleLowerCase() === gender\n    ).length;\n  };\n\n  render() {\n    const DT_GetUserList: TeacherData[] | null = this.getUserList();\n\n    return (\n      <>\n        {/* REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n        <DashboardContainer>\n          <section className=\"flex flex-col sm:flex-row justify-between\">\n            <div className=\"px-3\">\n              <Heading size=\"lg\" className=\"\">\n                Monthly Teacher Placement Report\n              </Heading>\n              {/* <p className=\"opacity-50\">Placement report</p> */}\n              <div className=\"flex flex-row items-center justify-start gap-1 text-base\">\n                <span className=\"text-gray-500\">Done on</span>\n                <p>{DATE(Date())}</p>\n              </div>\n            </div>\n            <div className=\"px-3 float-right\">\n              <div className=\"float-right -mr-2 mt-2\">\n                <div className=\"flex flex-row items-center justify-end font-bold\">\n                  <span className=\"\">Download:</span>\n                  <Button\n                    theme=\"default\"\n                    disabled={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                    }\n                    className={`${\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"cursor-not-allowed\"\n                        : \"\"\n                    } mx-3 bg-gray-200 hover:bg-gray-300`}\n                    onClick={() => {\n                      this.setState({ export_type: \"Excel\" });\n                      this.updateDataToPrint();\n                      this.setGenerateReport(true);\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center w-full gap-2\">\n                      <span>Excel format</span>\n                    </div>\n                  </Button>\n                  <Button\n                    theme=\"primary-light\"\n                    disabled={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                    }\n                    className={`${\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"cursor-not-allowed\"\n                        : \"\"\n                    }`}\n                    onClick={() => {\n                      this.updateDataToPrint();\n                      this.setGenerateReport(true);\n                      this.setState({ export_type: \"PDF\" });\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center w-full gap-2\">\n                      <span>PDF format</span>\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"flex flex-col sm:flex-row justify-between bg-accent-400 w-max rounded-md mx-2\">\n            <div className=\"px-3\">\n              {this.props.auth.role &&\n              forReportRoles.school.includes(this.props.auth.role.role) ? (\n                <>\n                  <Heading size=\"sm\">\n                    {this.props.auth.school\n                      ? this.props.auth.school.school_name\n                      : \"\"}\n                  </Heading>\n                  <p className=\"opacity-50\">\n                    {this.props.auth.district\n                      ? this.props.auth.district.district_name + \" district\"\n                      : \"\"}\n                  </p>\n                </>\n              ) : this.props.auth.role &&\n                forReportRoles.district.includes(this.props.auth.role.role) ? (\n                <Heading size=\"sm\">\n                  {this.props.auth.district\n                    ? this.props.auth.district.district_name + \" district\"\n                    : \"\"}\n                </Heading>\n              ) : (\n                this.props.auth.role &&\n                forReportRoles.country.includes(this.props.auth.role.role) && (\n                  <Heading size=\"sm\">\n                    {this.props.auth.role ? this.props.auth.role.role : \"\"}\n                  </Heading>\n                )\n              )}\n            </div>\n          </section>\n\n          {/* END REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n\n          {/* *********************************************************************** */}\n\n          {/* FILTER BY ACADEMIC & MONTH ================ */}\n\n          <div className=\"border-t border-gray-400 mt-4 mb-1 flex flex-col md:flex-row items-center justify-between px-3 gap-2\">\n            <div className=\"flex flex-col md:flex-row items-center gap-2\">\n              <div className=\"\">\n                <InputSelect\n                  data={\n                    this.props.placement.academics\n                      ? [\n                          ...this.props.placement.academics.map((el) => ({\n                            title: el.academic_year_name,\n                            value: el.academic_year_id,\n                          })),\n                        ]\n                      : []\n                  }\n                  error=\"\"\n                  name=\"select_academic\"\n                  onChange={(e) => {\n                    this.setState({ selectedAcademic: e.target.value });\n                    this.loadDataFormAPI(\n                      this.state.selectedMonth,\n                      e.target.value\n                    );\n                  }}\n                  label=\"Select academic\"\n                  placeholder=\"Select academic\"\n                  value={this.state.selectedAcademic}\n                  size=\"sm\"\n                  disabled={\n                    this.state.loadingAcademics ||\n                    this.state.loading ||\n                    this.props.placement.academics === null\n                  }\n                />\n              </div>\n              {this.props.auth.role &&\n                forReportRoles.country.includes(this.props.auth.role.role) && (\n                  <div className=\"\">\n                    <InputSelect\n                      data={\n                        this.state.districtList\n                          ? [\n                              {\n                                title: \"Select district\",\n                                value: \"\",\n                              },\n                              ...this.state.districtList.map((el) => ({\n                                title: el.district_name,\n                                value: el.district_code,\n                              })),\n                            ]\n                          : []\n                      }\n                      error=\"\"\n                      name=\"select_district\"\n                      onChange={(e) => {\n                        this.setState({ selected_district: e.target.value });\n                        this.loadCountryDataAPI(\n                          this.state.selectedMonth,\n                          this.state.selectedAcademic,\n                          e.target.value\n                        );\n                      }}\n                      label=\"Select district\"\n                      placeholder=\"Select district\"\n                      value={this.state.selected_district}\n                      size=\"sm\"\n                      disabled={\n                        this.state.loadingAcademics ||\n                        this.state.loading ||\n                        this.state.districtList === null\n                      }\n                    />\n                  </div>\n                )}\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    ...MONTHS_LIST.map((el) => ({\n                      title: el,\n                      value: el,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_month\"\n                  onChange={(e) => {\n                    this.setState({ selectedMonth: e.target.value });\n                    this.loadDataFormAPI(\n                      e.target.value,\n                      this.state.selectedAcademic\n                    );\n                  }}\n                  label=\"Select month\"\n                  placeholder=\"Select month\"\n                  value={this.state.selectedMonth}\n                  size=\"sm\"\n                  disabled={\n                    this.state.loadingAcademics ||\n                    this.state.loading ||\n                    this.props.placement.academics === null\n                  }\n                />\n              </div>\n            </div>\n            {DT_GetUserList && (\n              <div className=\"py-1\">\n                <div className=\"flex justify-between space-x-4 text-right\">\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Female</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(\n                        this.countTeacherByGender(DT_GetUserList, \"female\")\n                      )}\n                    </h2>\n                  </div>\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Male</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(\n                        this.countTeacherByGender(DT_GetUserList, \"male\")\n                      )}\n                    </h2>\n                  </div>\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Total</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(DT_GetUserList.length)}\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </DashboardContainer>\n        {/* END FILTER BY ACADEMIC & MONTH ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT SUMMARY ================ */}\n        {/* <DashboardContainer>\n          <ReportSummary />\n        </DashboardContainer> */}\n        {/* END REPORT SUMMARY ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT CONTENT ================ */}\n        <DashboardContainer>\n          <div className=\"border border-t mt-2 mb-1 flex flex-col md:flex-row items-center px-3 rounded\">\n            <div className=\"flex-1 pr-2\">\n              <TextInput\n                label=\"Search\"\n                name=\"search\"\n                type=\"search\"\n                onChange={(e: any) => this.setSearchInput(e.target.value)}\n                placeholder=\"Search by names, codes,...\"\n                value={this.state.searchInput}\n                disabled={\n                  !DT_GetUserList ||\n                  DT_GetUserList!.slice(\n                    this.state.currentPage - 1,\n                    this.state.currentPage - 1 + this.state.tablePageLength\n                  ).length === 0\n                }\n                size=\"sm\"\n                error=\"\"\n              />\n            </div>\n            <div className=\"\">\n              <InputSelect\n                data={[\n                  { title: tablePageLimit.toString(), value: tablePageLimit },\n                  {\n                    title: (tablePageLimit * 2).toString(),\n                    value: tablePageLimit * 2,\n                  },\n                  {\n                    title: (tablePageLimit * 3).toString(),\n                    value: tablePageLimit * 3,\n                  },\n                  {\n                    title: (tablePageLimit * 4).toString(),\n                    value: tablePageLimit * 4,\n                  },\n                  {\n                    title: (tablePageLimit * 5).toString(),\n                    value: tablePageLimit * 5,\n                  },\n                ]}\n                error=\"\"\n                name=\"page_limit\"\n                onChange={(e) =>\n                  this.setState({\n                    tablePageLength: Number(e.target.value),\n                    currentPage: 1,\n                  })\n                }\n                label=\"Show\"\n                placeholder=\"page limit\"\n                value={this.state.tablePageLength}\n                size=\"sm\"\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_code\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff Code <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_nid\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff NID <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"full_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"dob\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      DOB <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"sex\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Sex <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"qualification\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Qualification <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2 cursor-pointer\">School</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={11} />\n                ) : isEmptyOrSpaces(this.state.selected_district) &&\n                  this.props.auth.role &&\n                  forReportRoles.country.includes(this.props.auth.role.role) ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-base font-bold\">\n                          Please select district to get data!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : DT_GetUserList === null ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          Something went wrong, try again!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : search(\n                    DT_GetUserList!.slice(\n                      this.state.currentPage - 1,\n                      this.state.currentPage - 1 + this.state.tablePageLength\n                    ),\n                    this.state.searchInput\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    !isEmptyOrSpaces(this.state.sortProperty),\n                    search(\n                      DT_GetUserList!.slice(\n                        this.state.currentPage - 1,\n                        this.state.currentPage - 1 + this.state.tablePageLength\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item: TeacherData, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-accent-100 hover:text-accent-700 border-b border-gray-300 hover:border-accent-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">\n                        {(this.state.currentPage - 1) *\n                          this.state.tablePageLength +\n                          i +\n                          1}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.staff_code ? item.staff_code : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.nid ? item.nid : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.full_name ? item.full_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.dob ? item.dob : \"\"}</td>\n                      <td className=\"px-2 py-2\">{item.sex ? item.sex : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.qualification ? item.qualification : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.school ? item.school.school_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.position ? item.position : \"\"}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n          {/* pagination ========= */}\n          {!this.state.loading && (\n            <div className=\"flex flex-col items-center mt-3 mb-2 overflow-x-auto\">\n              {DT_GetUserList && this.generatePages(DT_GetUserList!.length)}\n            </div>\n          )}\n        </DashboardContainer>\n        {/* END REPORT CONTENT ================ */}\n\n        {/* ********************************************************************************** */}\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReport && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.export_type === \"Excel\" ? (\n                  <SiMicrosoftexcel className=\"text-5xl text-gray-900\" />\n                ) : (\n                  <BsFileEarmarkPdf className=\"text-5xl text-gray-900\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-900\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    {this.state.export_type === \"Excel\"\n                      ? \"Generating Excel Report\"\n                      : \"Generating PDF Report\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setGenerateReport(false)}\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <TextInput\n                  disabled={this.state.loading}\n                  label=\"Report title\"\n                  name=\"report_title\"\n                  type=\"text\"\n                  value={this.state.reportTitle}\n                  placeholder={\"Report title\"}\n                  className=\"p-2\"\n                  onChange={(e) => {\n                    this.setFormError(null);\n                    this.setReportTitle(e.target.value);\n                  }}\n                  error={\n                    this.state.formError &&\n                    this.state.formError.element === \"report_title\"\n                      ? this.state.formError.msg\n                      : \"\"\n                  }\n                />\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                    {this.state.reportContent.map((item, index) => (\n                      <div\n                        key={index}\n                        className={`flex items-center gap-1 ${\n                          item.isChangeAllowed\n                            ? \"cursor-pointer\"\n                            : \"cursor-not-allowed\"\n                        }`}\n                        onClick={() =>\n                          item.isChangeAllowed &&\n                          this.updateReportContent(item.key)\n                        }\n                        title={\n                          !item.isChangeAllowed\n                            ? \"Required for every report!\"\n                            : \"\"\n                        }\n                      >\n                        {item.status ? (\n                          <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                        ) : (\n                          <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                        )}\n                        <span>{item.title}</span>\n                      </div>\n                    ))}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"report_content\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => this.resetReportContent(this.state.selectAll)}\n                >\n                  {this.state.selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {!this.state.loading &&\n                  this.state.reportToPrint &&\n                  this.state.export_type === \"Excel\" && (\n                    <ExportToExcel\n                      fileData={this.state.reportToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Download\"\n                    />\n                  )}\n                {!this.state.loading &&\n                  this.state.reportToPrint &&\n                  this.state.export_type === \"PDF\" && <div>Export to PDF</div>}\n              </div>\n            </div>\n          </Modal>\n        )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): { auth: Auth; basic: Basic; placement: Placement } => {\n  return { auth: auth, basic: basic, placement: placement };\n};\n\nexport const PlacementReport = connect(mapStateToProps, {\n  FC_GetPlacementByDistrict,\n  FC_GetAcademics,\n})(_PlacementReport);\n"],"sourceRoot":""}