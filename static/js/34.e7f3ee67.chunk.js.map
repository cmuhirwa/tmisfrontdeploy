{"version":3,"sources":["components/Modal/Modal.tsx","containers/RequestTransfer/TransferItem.tsx","containers/RebTransferWithIssue/RebTransferWithIssue.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","RequestItem","transf","expand","remove_loading","removeTransfer","useState","open","setOpen","console","log","requested_status","size","position_code","position_name","school_from_info","school_code","school_name","district_name","sector_name","requested_school_info","map","itm","i","approved_school_id","teacher_requested_transfer_date","value","transfer_type","transfer_reason","incoming_decision_date","teacher_comment","length","teacher_transfer_id","bind","loading","mayor_letter","href","APP_URL_FILE","target","rel","download","defaultError","msg","_RebTransferWithIssue","loadingData","district","page","status","setState","selected_transfer_id","data","FC_GetOutGoingTransfers","district_code","limit","state","status_req","district_transfer_request","total","total_transfer","next","previous","error","changeTransferStatus","transfer_id","new_status","window","confirm","transfer_update_loading","FC_ChangeTransferIssue","transfer_issue_status","selectDistrict","selected_district","changeStatus","paginateData","loading_districts","districts","tab","search_district","loading_request","this","FC_GetDistrictList","DistrictResults","search","total_pages","toFixed","foundTransfer","find","fixed","extraLarge","teacher_full_name","teacher_phone_number","transfer_issue_comment","label","name","onChange","e","placeholder","dist","colSpan","qualification_name","Array","fill","React","Component","RebTransferWithIssue","connect","auth"],"mappings":"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","file":"static/js/34.e7f3ee67.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-primary\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <div>\n      <div\n        onClick={(): void => backDropClose && close()}\n        className={`fixed bg-black bg-opacity-${\n          backDrop === true ? \"60\" : \"0\"\n        } h-full w-full left-0 top-0 z-50 animate__animated animate__fadeIn animate__faster`}\n      ></div>\n      <div\n        className={`fixed items-center justify-items-center ${\n          props.marginTop === undefined ? ModalMarginTop.none : props.marginTop\n        } left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${\n          props.marginTop !== undefined &&\n          props.marginTop !== ModalMarginTop.none\n            ? \"animate__fadeInUp\"\n            : \"animate__zoomIn\"\n        } animate__faster`}\n        style={{\n          width: \"100%\",\n          maxHeight: \"99vh\",\n          height: `${\n            widthSizeClass === ModalSize.maxWidth\n              ? props.marginTop === undefined\n                ? \"100%\"\n                : \"unset\"\n              : \"fit-content\"\n          }`,\n          overflowY: \"auto\",\n          margin: \"auto\",\n          zIndex: 99999999,\n        }}\n      >\n        <div\n          className={`flex justify-between bg-${themeColor} ${\n            padding.title === true ? \"py-4 px-4\" : \"\"\n          } rounded-t text-${\n            theme === Themes.default || theme === Themes.secondary\n              ? \"black\"\n              : \"white\"\n          }`}\n        >\n          {!title || title === \"\" ? (\n            <div></div>\n          ) : (\n            <h4 className={`text-lg font-bold `}>{title}</h4>\n          )}\n          {displayClose === false ? (\n            \"\"\n          ) : (\n            <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\">\n              <MdClose\n                className=\"cursor-pointer font-extrabold text-2xl\"\n                onClick={(): void => close()}\n              />\n            </div>\n          )}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport { MdDoubleArrow, MdTransferWithinAStation } from \"react-icons/md\";\n// import { Link } from \"react-router-dom\";\nimport { GetTransferForUser__Interface } from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport { APP_URL_FILE } from \"../../config/app.config\";\n\ntype RequestItemProps = {\n  transf: GetTransferForUser__Interface;\n  expand?: boolean;\n  removeTransfer?: (transfer_id: string) => void;\n  remove_loading?: boolean;\n};\n\nconst RequestItem: FC<RequestItemProps> = ({\n  transf,\n  expand = false,\n  remove_loading = false,\n  removeTransfer,\n}): ReactElement => {\n  const [open, setOpen] = useState(false);\n  console.log(transf);\n\n  return (\n    <div className=\"p-2 bg-white mb-3 border rounded \">\n      <div className=\"flex\">\n        <div\n          className={`p-3 hidden lg:flex items-center  ${\n            transf.requested_status === \"APPROVED\"\n              ? \"text-green-700 bg-green-100\"\n              : \"text-accent-800 bg-accent-400\"\n          } rounded flex items-center`}\n        >\n          <MdTransferWithinAStation size={80} />\n        </div>\n        <div className=\"flex-1 pl-3 pt-1\">\n          <section\n            className=\"hover:underline cursor-pointer\"\n            onClick={() => setOpen(!open)}\n          >\n            <span\n              className={`p-1 rounded px-2 py-0.5 text-sm  ${\n                transf.requested_status === \"APPROVED\"\n                  ? \"bg-green-600 text-white\"\n                  : \"bg-accent-900 text-white\"\n              }`}\n            >\n              {transf.requested_status}\n            </span>{\" \"}\n            <h2 className=\"text-lg font-bold\">\n              {transf.position_code} {transf.position_name}\n            </h2>\n          </section>\n\n          <div className=\"pt-1\">\n            <section className=\"flex flex-col lg:flex-row gap-1 lg:gap-0 lg:items-center pt-2\">\n              <section className=\"border pl-2 hover:bg-gray-200 pr-4 rounded  lg:--rounded-r-full\">\n                <h6 className=\" font-light text-sm text-yellow-600\">\n                  Current school\n                </h6>\n                <h3 className=\" font-bold\">\n                  {transf.school_from_info?.school_code}\n                  {\" - \"}\n                  {transf.school_from_info?.school_name}\n                </h3>\n                <h4 className=\"text-sm -mt-1 text-gray-500\">\n                  {transf.school_from_info?.district_name} -{\" \"}\n                  {transf.school_from_info?.sector_name}\n                </h4>\n              </section>\n              <section className=\"text-gray-500\">\n                <MdDoubleArrow size={40} />\n              </section>\n              {transf.requested_school_info?.map((itm, i) => (\n                <section\n                  key={i}\n                  className={` flex-1 pl-4 bg-gray-100 rounded hover:bg-gray-200 ${\n                    i === 0\n                      ? \"lg:--rounded-l-full rounded-r p-1 mr-2 \"\n                      : \" px-1 rounded mr-2 py-2\"\n                  }  ${\n                    transf.approved_school_id === itm.school_code\n                      ? \"text-green-800 bg-green-100 hover:bg-green-200 border-green-400 border-2\"\n                      : \"border\"\n                  }`}\n                >\n                  <h6 className=\" font-light text-sm text-yellow-600\">\n                    Requested school {i + 1}\n                  </h6>\n                  <h4 className=\" font-bold\">\n                    {itm?.school_code}\n                    {\" - \"}\n                    {itm?.school_name}\n                  </h4>\n                  <h4 className=\"text-sm -mt-1 opacity-70\">\n                    {itm.district_name} - {itm?.sector_name}\n                  </h4>\n                </section>\n              ))}\n            </section>\n\n            <section className=\"pt-2\">\n              <label className=\"text-gray-500 inline-block pr-1\">Date: </label>{\" \"}\n              <b>{transf.teacher_requested_transfer_date}</b>\n            </section>\n          </div>\n        </div>\n      </div>\n      {(open || expand) && (\n        <div className=\"animate__animated  animate__fadeIn animate__faster mt-2 border-t pt-2 grid grid-cols-2\">\n          {[\n            { title: \"Transfer type\", value: transf.transfer_type },\n            { title: \"transfer_reason\", value: transf.transfer_reason },\n            {\n              title: \"Requested transfer date\",\n              value: transf.teacher_requested_transfer_date,\n            },\n            {\n              title: \"Decision provided on\",\n              value: transf.incoming_decision_date,\n            },\n          ].map((itm, i) =>\n            !itm.value ? null : (\n              <div key={i} className=\"border px-2 py-1.5  flex items-center\">\n                <span className=\"text-gray-500\">{itm.title}: </span>{\" \"}\n                <h6 className=\"font-bold text-black\">{itm.value}</h6>\n              </div>\n            )\n          )}\n        </div>\n      )}\n      {transf.teacher_comment && transf.teacher_comment?.length >= 1 && (\n        <div className=\"p-2 my-2 rounded border\">\n          <span className=\"text-gray-500\">Transfer reason: </span>{\" \"}\n          <h6 className=\"font-bold text-black\">{transf.teacher_comment}</h6>\n        </div>\n      )}\n\n      {removeTransfer &&\n        transf.teacher_transfer_id &&\n        transf.requested_status !== \"APPROVED\" && (\n          <div className=\"pt-4 text-right\">\n            <Button\n              onClick={removeTransfer.bind(this, transf.teacher_transfer_id)}\n              theme=\"danger-light\"\n              loading={remove_loading}\n            >\n              Remove transfer request\n            </Button>\n          </div>\n        )}\n      {transf.mayor_letter !== null && (\n        <div className=\"p-2 text-right\">\n          <a\n            href={`${APP_URL_FILE}/${transf.mayor_letter}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            download\n          >\n            <Button theme=\"accent-light\">Download transfer letter</Button>\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default RequestItem;\n","import React from \"react\";\nimport { ImSad } from \"react-icons/im\";\nimport { MdArrowBack, MdOutlineArrowForward } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictList,\n  FC_ChangeTransferIssue,\n  FC_GetDistrictList,\n  FC_GetOutGoingTransfers,\n  GetTransferForUser__Interface,\n  TransferStatus,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { Themes, ModalSize } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\nimport { search } from \"../../utils/functions\";\nimport TransferItem from \"../RequestTransfer/TransferItem\";\n// import Alert, { AlertInterface } from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  loading_districts: boolean;\n  districts: DistrictList[];\n  tab: \"DISTRICT-LIST\" | \"TRANSFER-ISSUES-LIST\";\n  search_district: string;\n  selected_district: DistrictList | null;\n  error: {\n    target: null | \"main-error\" | \"main-success\";\n    msg: string;\n  };\n  limit: number;\n  page: number;\n  data: GetTransferForUser__Interface[];\n  total: number;\n  next: number;\n  previous: number;\n  selected_transfer_id: string | null;\n  loading_request: boolean;\n  status: TransferStatus;\n  transfer_update_loading: boolean;\n}\n\nlet defaultError = {\n  target: null,\n  msg: \"\",\n};\n\nclass _RebTransferWithIssue extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loading_districts: false,\n      districts: [],\n      tab: \"DISTRICT-LIST\",\n      search_district: \"\",\n      selected_district: null,\n      error: defaultError,\n      data: [],\n      limit: 10,\n      page: 1,\n      total: 0,\n      next: 0,\n      previous: 0,\n      status: \"ISSUED\",\n      selected_transfer_id: null,\n      loading_request: false,\n      transfer_update_loading: false,\n    };\n  }\n\n  loadingData = (district: string, page: number, status?: TransferStatus) => {\n    this.setState({\n      loading: true,\n      selected_transfer_id: null,\n      data: [],\n      //   transfer_issue: \"\",\n    });\n    FC_GetOutGoingTransfers(\n      {\n        district_code: district,\n        limit: this.state.limit,\n        page: page,\n        status: status ? status : this.state.status,\n      },\n      (status_req, data, msg) => {\n        this.setState({\n          loading: false,\n          data: data?.district_transfer_request\n            ? data?.district_transfer_request\n            : [],\n          total: data?.total_transfer ? data.total_transfer : 0,\n          next: data?.next ? +data?.next : 0,\n          previous: data?.previous ? +data?.previous : 0,\n          error: !status_req\n            ? {\n                target: \"main-error\",\n                msg: msg,\n              }\n            : defaultError,\n          page: page,\n        });\n      }\n    );\n  };\n\n  changeTransferStatus = (transfer_id: string, new_status: TransferStatus) => {\n    if (!transfer_id || !new_status) return;\n\n    if (!window.confirm(`Are you sure you want to change the status?`)) return;\n\n    this.setState({\n      transfer_update_loading: true,\n    });\n    FC_ChangeTransferIssue(\n      {\n        teacher_transfer_id: transfer_id,\n        transfer_issue_status: new_status,\n      },\n      (status, data, msg) => {\n        this.setState({\n          transfer_update_loading: false,\n          error: status\n            ? {\n                target: \"main-success\",\n                msg: \"The transfer has been updated successful\",\n              }\n            : { target: \"main-error\", msg: msg },\n        });\n      }\n    );\n  };\n\n  componentDidMount(): void {\n    this.setState({ loading_districts: true });\n    FC_GetDistrictList((status, districts, msg) => {\n      this.setState({\n        loading_districts: false,\n        districts: districts,\n        error: status\n          ? defaultError\n          : {\n              target: \"main-error\",\n              msg: msg,\n            },\n      });\n    });\n  }\n\n  selectDistrict = (district: DistrictList | null) => {\n    if (this.state.transfer_update_loading === true) return;\n    this.setState({ selected_district: district });\n    if (district === null) return;\n    this.loadingData(district.district_code, 1, this.state.status);\n  };\n\n  changeStatus = (value: TransferStatus) => {\n    if (this.state.transfer_update_loading === true) return;\n    if (this.state.status === value || this.state.selected_district === null)\n      return;\n    this.setState({\n      status: value,\n    });\n    this.loadingData(this.state.selected_district.district_code, 1, value);\n  };\n\n  paginateData = (page: number) => {\n    if (this.state.transfer_update_loading === true) return;\n    if (this.state.selected_district !== null)\n      this.loadingData(this.state.selected_district.district_code, page);\n  };\n\n  render() {\n    let DistrictResults: DistrictList[] = search(\n      this.state.districts,\n      this.state.search_district,\n      {\n        district_code: true,\n        district_name: true,\n      }\n    );\n\n    let total_pages = (this.state.total / this.state.limit).toFixed(0);\n    let foundTransfer = this.state.data.find(\n      (transf) => transf.teacher_transfer_id === this.state.selected_transfer_id\n    );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.selected_transfer_id !== null &&\n          foundTransfer !== undefined && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={() =>\n                this.setState({\n                  selected_transfer_id: null,\n                })\n              }\n              backDropClose={false}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              title=\"Transfer details\"\n              padding={{\n                title: true,\n                body: false,\n                footer: undefined,\n              }}\n            >\n              <div className=\"border-t\">\n                <div className=\"p-4 text-gray-500\">\n                  <section>\n                    Transfer id:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_transfer_id}\n                    </b>\n                  </section>\n                  <section>\n                    Teacher names:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_full_name}\n                    </b>\n                  </section>\n                  <section>\n                    Teacher's Phone number:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_phone_number}\n                    </b>\n                  </section>\n                </div>\n                <TransferItem expand={true} transf={foundTransfer} />\n\n                <div className=\"pt-3 px-2 bg-gray-100 m-2\">\n                  {foundTransfer.transfer_issue_comment && (\n                    <div className=\"p-2 rounded bg-gray-100\">\n                      {foundTransfer.transfer_issue_comment}\n                    </div>\n                  )}\n                </div>\n\n                {this.state.selected_transfer_id && (\n                  <div className=\"p-4 text-right  gap-2\">\n                    <Button\n                      theme=\"danger\"\n                      onClick={this.changeTransferStatus.bind(\n                        this,\n                        this.state.selected_transfer_id,\n                        \"ISSUE-APPROVED\"\n                      )}\n                      loading={this.state.transfer_update_loading}\n                    >\n                      ISSUE-APPROVED\n                    </Button>{\" \"}\n                    <Button\n                      theme=\"success\"\n                      onClick={this.changeTransferStatus.bind(\n                        this,\n                        this.state.selected_transfer_id,\n                        \"NO-ISSUE\"\n                      )}\n                      loading={this.state.transfer_update_loading}\n                    >\n                      NO-ISSUE\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </Modal>\n          )}\n\n        <DashboardContainer>\n          <div className=\"flex items-center\">\n            {this.state.selected_district !== null && (\n              <section className=\"pr-2\">\n                <Button\n                  theme=\"default\"\n                  onClick={this.selectDistrict.bind(this, null)}\n                >\n                  <MdArrowBack />\n                </Button>\n              </section>\n            )}\n            <section className=\"flex-1\">\n              <h1 className=\"text-2xl font-bold\">Transfer with issues</h1>\n              {this.state.selected_district === null ? (\n                <p className=\"p-0 text-gray-500\">Transfers reported by DDE's</p>\n              ) : (\n                <p className=\"m-0 font-bold text-accent-900\">\n                  {this.state.selected_district.district_name} district\n                </p>\n              )}\n            </section>\n\n            <div className=\"\">\n              {this.state.selected_district !== null && (\n                <div className=\"flex flex-1 gap-1 text-right \">\n                  <Button\n                    size=\"sm\"\n                    theme={\n                      this.state.status === \"NO-ISSUE\"\n                        ? \"success\"\n                        : \"success-light\"\n                    }\n                    onClick={this.changeStatus.bind(this, \"NO-ISSUE\")}\n                  >\n                    NO-ISSUE\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    theme={\n                      this.state.status === \"ISSUE-APPROVED\"\n                        ? \"danger\"\n                        : \"danger-light\"\n                    }\n                    onClick={this.changeStatus.bind(this, \"ISSUE-APPROVED\")}\n                  >\n                    ISSUE-APPROVED\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    theme={\n                      this.state.status === \"ISSUED\" ? \"accent\" : \"accent-light\"\n                    }\n                    onClick={this.changeStatus.bind(this, \"ISSUED\")}\n                  >\n                    ISSUED\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </DashboardContainer>\n\n        {this.state.selected_district === null ? (\n          <>\n            <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n              <div>\n                <div className=\"p-2\">\n                  <TextInput\n                    error=\"\"\n                    label=\"\"\n                    name=\"\"\n                    onChange={(e) =>\n                      this.setState({ search_district: e.target.value })\n                    }\n                    placeholder=\"Search district by name\"\n                    value={this.state.search_district}\n                  />\n                </div>\n\n                {this.state.loading_districts === true ? (\n                  <div className=\"py-8 text-center text-8xl text-accent-900\">\n                    <Loading className=\"mx-auto\" />\n                  </div>\n                ) : this.state.districts.length >= 1 ? (\n                  <>\n                    {DistrictResults.length <= 0 ? (\n                      <div className=\"py-4 text-center\">\n                        <h2 className=\"text-lg\">No results found!</h2>\n                        <p className=\"text-gray-500\">\n                          Please use a correct district name\n                        </p>\n                      </div>\n                    ) : (\n                      <div className=\"grid lg:grid-cols-2 gap-2 \">\n                        {DistrictResults.map((dist) => (\n                          <div\n                            onClick={this.selectDistrict.bind(this, dist)}\n                            key={dist.district_code}\n                            className=\"p-2 flex items-center cursor-pointer rounded border  px-3 hover:text-yellow-600 hover:border-yellow-600 hover:bg-yellow-50 bg-white text-lg\"\n                          >\n                            <h4 className=\"flex-1 text-lg\">\n                              {\" \"}\n                              <b>{dist.district_name}</b> district\n                            </h4>\n\n                            {/* <span className=\"bg-yellow-100 text-yellow-700 font-bold py-0.5 inline-block text-sm px-1.5 rounded-full\">\n                              {dist.total_vacant}\n                            </span> */}\n                            {/* {dist.total_vacant >= 1 && ( */}\n                            <button className=\"\">\n                              <MdOutlineArrowForward />\n                            </button>\n                            {/* )} */}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  <div className=\"py-4 text-center\">\n                    <h2 className=\"text-8xl text-gray-400 text-center\">\n                      <ImSad className=\"inline\" />\n                    </h2>\n                    <h2 className=\"text-center p-4 text-gray-400 font-bold text-2xl\">\n                      <p>No results found on</p>\n                    </h2>{\" \"}\n                  </div>\n                )}\n              </div>\n            </DashboardContainer>\n          </>\n        ) : (\n          <>\n            <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n              <table className=\"w-full\">\n                <thead className=\"text-left bg-white\">\n                  <tr className=\"bg-accent-900 bg-opacity-10\">\n                    <th className=\"p-2 border-gray-300 border\">#</th>\n                    <th className=\"p-2 border-gray-300 border\">Names</th>\n                    <th className=\"p-2 border-gray-300 border\">School Code</th>\n                    <th className=\"p-2 border-gray-300 border\">School name</th>\n                    <th className=\"p-2 border-gray-300 border\">\n                      Position code\n                    </th>\n                    <th className=\"p-2 border-gray-300 border\">\n                      Position name\n                    </th>\n                    <th className=\"p-2 border-gray-300 border\">\n                      Qualification\n                    </th>\n                    <th className=\"p-2 border-gray-300 border\">Error</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.loading === true ? (\n                    <tr className=\" \">\n                      <td colSpan={8} className=\"py-4 text-center border\">\n                        <Loading />\n                      </td>\n                    </tr>\n                  ) : this.state.data.length <= 0 ? (\n                    <tr>\n                      <td colSpan={8} className=\"py-4 text-center border\">\n                        <h1 className=\"text-2xl text-gray-400\">\n                          No data found\n                        </h1>\n                        {/* <p className=\"text-gray\"></p> */}\n                      </td>\n                    </tr>\n                  ) : (\n                    this.state.data.map((itm, i) => (\n                      <tr\n                        key={i}\n                        className=\"bg-white cursor-pointer hover:bg-yellow-400 hover:bg-opacity-30\"\n                        onClick={() => {\n                          if (this.state.transfer_update_loading === true)\n                            return;\n                          this.setState({\n                            selected_transfer_id: itm.teacher_transfer_id,\n                          });\n                        }}\n                      >\n                        <td className=\"border p-2\">{i + 1}</td>\n                        <td className=\"p-2 border\">{itm.teacher_full_name}</td>\n                        <td className=\"p-2 border\">\n                          {itm.school_from_info?.school_code}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {itm.school_from_info?.school_name}\n                        </td>\n                        <td className=\"p-2 border\">{itm.position_code}</td>\n                        <td className=\"p-2 border text-sm\">\n                          {itm.position_name}\n                        </td>\n                        <td className=\"p-2 border\">{itm.qualification_name}</td>\n                        <td className=\"p-2 border\">\n                          {itm.transfer_issue_comment &&\n                          itm.transfer_issue_comment !== null ? (\n                            <span className=\"text-sm p-0.5 bg-red-400 px-2 rounded-full font-bold text-white\">\n                              Issue\n                            </span>\n                          ) : (\n                            <span></span>\n                          )}\n                          {/* {  transfer_issue_comment?: string;\n  transfer_issued_date?: string;} */}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n\n              <div className=\"flex gap-3 mx-auto pt-3\">\n                {Array(+total_pages)\n                  .fill(\"0\")\n                  .map((e, i) => (\n                    <button\n                      className={`p-2 py-1 ${\n                        +this.state.page === i + 1\n                          ? \"bg-accent-800 text-black font-bold\"\n                          : \"bg-opacity-25\"\n                      } rounded-full bg-accent-800 `}\n                      onClick={this.paginateData.bind(this, i + 1)}\n                    >\n                      {i + 1}\n                    </button>\n                  ))}\n              </div>\n            </DashboardContainer>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const RebTransferWithIssue = connect(\n  mapStateToProps,\n  {}\n)(_RebTransferWithIssue);\n"],"sourceRoot":""}