{"version":3,"sources":["trainingModule/TrainingOffers/District/Details/FormToAddParticipant.tsx","trainingModule/TrainingOffers/District/Details/FormInputsToRegisterNewUser.tsx","trainingModule/TrainingOffers/District/Details/TrainingParticipantDetails.tsx","trainingModule/TrainingOffers/District/Details/TrainingDetails.tsx","trainingModule/TrainingOffers/District/Details/AddParticipants.tsx","trainingModule/TrainingOffers/District/Details/Participants.tsx","trainingModule/TrainingOffers/District/DistrictTrainingOffers.tsx"],"names":["HasTrainingStatus","FormInputsToRegisterNewUser","props","submitData","e","preventDefault","setState","success","error","state","first_name","target","msg","last_name","phone_number","email","loading","setLoading","full_name","middle_name","this","className","Button","onClick","onSuccess","nid","window","confirm","editNID","onSubmit","TextInput","onChange","value","label","placeholder","name","MainContainer_className","disabled","onClose","type","theme","Component","TrainingParticipantDetails","returnStatusText","data","hasTrainingStatus","AVAILABLE","ALREADY_TRAINED","HAS_TRAINING","returnStatusComponent","AddParticipant","AssignTraineeToTraining","district_code","level_id","position_code","qualification_id","school_code","parseInt","sector_id","trainee_request_id","training_details","training_id","id","training_to_group_id","user_id","trainee_category_id","cohort_id","res","close","phone_numbers","TABS","FormToAddParticipant","GetParentToBeTrainedByNid","search_nid","AssignParticipantToTraining","console","log","onSubmitParticipants","loaded_participant","hasTraining","open_register","open_register_user","trainee","title","total","addedParticipants","length","AddParticipants","GetSelectedTraineesCategory","selected_trainee_category","trainee_category","response","find","itm","undefined","LoadData","selected_roles","sub_area_id","topic","topic_id","criteria","trainee_criteria","GetTraineesToBeTrainedOnDistrict","filter","test","role_id","toString","AddNewParticipants","participant","adding_participant","names","selected_cohort","scrollTo","search_data","continue","itm1","roles","itm2","access_level","toLocaleLowerCase","adding_parent_participant","total_trainees","map","item","i","Loading","search","colSpan","role","alert","participants","status","Participants","GetParticipantUnique","push","LoadParticipants","GetDistrictTrainingParticipants","training","setParticipants","school_teachers","RemoveParticipantOnTraining","removing_user_id","RemoveTraineeToTraining","FilteredCohortData","addParticipants","development_partner_name","is_approved","setDisplayTabs","newData","staff_code","TrainingDetails","display_tabs","selected_tab","PARTICIPANTS","selectedCohort","switchSelectedCohort","details","DETAILS","CRITERIA","CohortTab","setOpenSwitchSelectCohort","setSelectCohort","setSelectedCohort","cohort","DetailsInfo","onParticipants","Criteria","SelectCohort","cohortList","onGoBack","_DistrictTrainingOffers","ValidateTrainingIsOnDistrictLevel","level","LoadAllTrainings","selected_training","GetDistrictTrainingProvidersByStatus","trainings_list","selected_status","TrainingImplementationStatus","INPROGRESS","search_value","auth","district","Header","onChangeSearchValue","onSelectTab","district_name","RemoveDuplicateTrainingRequests","TrainingItem","cohort_list","trainingCohorts","PopUpContainer","DistrictTrainingOffers","connect","basic"],"mappings":"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","file":"static/js/82.35f40cee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { MdCheckCircleOutline, MdClose } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport {\n  GetTrainingsListByStatusInterface,\n  DistrictTrainingParticipants,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport { FormInputsToRegisterNewUser } from \"./FormInputsToRegisterNewUser\";\nimport {\n  OtherDistrictToBeTrainedResponse,\n  TrainingParticipantDetails,\n} from \"./TrainingParticipantDetails\";\n\nexport enum HasTrainingStatus {\n  AVAILABLE = \"AVAILABLE\",\n  HAS_TRAINING = \"HAS_TRAINING\",\n  ALREADY_TRAINED = \"ALREADY_TRAINED\",\n}\n\nexport interface SearchDistrictTrainingParticipants {\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  hasTrainingStatus: HasTrainingStatus;\n}\n\ninterface FormToAddParticipantProps {\n  district_code: string;\n  training_details: GetTrainingsListByStatusInterface;\n  onClose: () => void;\n  addedParticipants: DistrictTrainingParticipants[];\n  onSubmitParticipants: (\n    participants: OtherDistrictToBeTrainedResponse[]\n  ) => void;\n  setLoading: (status: boolean) => void;\n  trainee_category_id: string;\n}\ninterface FormToAddParticipantState {\n  loading: boolean;\n  success: string;\n  error: {\n    target: \"search_nid\" | \"main\" | \"first_name\" | \"last_name\";\n    msg: string;\n  } | null;\n  search_nid: string;\n  user_id: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  hasTraining: boolean;\n  open_register: boolean;\n  loaded_participant: OtherDistrictToBeTrainedResponse | null;\n  open_register_user: string;\n}\n\nexport class FormToAddParticipant extends Component<\n  FormToAddParticipantProps,\n  FormToAddParticipantState\n> {\n  constructor(props: FormToAddParticipantProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n      success: \"\",\n      search_nid: \"\",\n      user_id: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      phone_numbers: \"\",\n      email: \"\",\n      hasTraining: false,\n      open_register: false,\n      loaded_participant: null,\n      open_register_user: \"\",\n    };\n  }\n  GetParentToBeTrainedByNid = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.search_nid === \"\") {\n      return this.setState({\n        error: {\n          target: \"main\",\n          msg: \"Please fill National ID the participant\",\n        },\n      });\n    }\n    this.setState({ loading: true, error: null, success: \"\" });\n    // GetDistrictParentsToAttendTraining(\n    //   {\n    //     topic_id: this.props.training_details.id,\n    //     sub_area_id: this.props.training_details.sub_area_id,\n    //     nid: this.state.search_nid,\n    //     start_date: this.props.training_details.start_date,\n    //     end_date: this.props.training_details.end_date,\n    //   },\n    //   (\n    //     loading: boolean,\n    //     res: {\n    //       type: \"success\" | \"error\";\n    //       msg: string;\n    //       new: boolean;\n    //       data: DistrictTrainingParticipants | null;\n    //     } | null\n    //   ) => {\n    //     this.setState({ loading: loading });\n    //     if (res !== null && res.type === \"success\" && res.data !== null) {\n    //       this.setState({\n    //         loaded_participant: res.data,\n    //         open_register: false,\n    //         loading: false,\n    //         open_register_user: \"\",\n    //         success:\n    //           \"Participant found successfully! Now you can add the participant to the training\",\n    //       });\n    //     }\n    //     if (res !== null && res.type === \"error\") {\n    //       this.setState({\n    //         open_register: true,\n    //         loading: false,\n    //         hasTraining: false,\n    //         error: {\n    //           target: \"main\",\n    //           msg: res.msg,\n    //         },\n    //         success: \"\",\n    //         open_register_user: res.new === true ? this.state.search_nid : \"\",\n    //       });\n    //     }\n    //   }\n    // );\n  };\n\n  //   Function to assign participant to the training\n  AssignParticipantToTraining = (data: OtherDistrictToBeTrainedResponse) => {\n    console.log(\"Testing one: \", data);\n    this.props.onSubmitParticipants([data]);\n    this.setState({ loaded_participant: null });\n  };\n\n  render() {\n    if (this.state.open_register_user !== \"\") {\n      return (\n        <FormInputsToRegisterNewUser\n          nid={this.state.open_register_user}\n          onSuccess={(trainee: OtherDistrictToBeTrainedResponse) => {\n            this.AssignParticipantToTraining(trainee);\n            this.props.onClose();\n          }}\n          onClose={() => {\n            this.setState({\n              open_register_user: \"\",\n              error: null,\n              success: \"\",\n              search_nid: \"\",\n            });\n          }}\n          training_details={this.props.training_details}\n          setLoading={this.props.setLoading}\n          school_code={this.props.district_code}\n          editNID={() =>\n            this.setState({\n              open_register_user: \"\",\n              error: null,\n              success: \"\",\n            })\n          }\n        />\n      );\n    }\n    return (\n      <div>\n        {this.state.loaded_participant === null && (\n          <div className=\"bg-primary-100 rounded-md p-3 animate__animated animate__fadeIn\">\n            <div className=\"flex flex-row items-center gap-2 mb-2\">\n              <div>\n                <RiSearchLine className=\"text-primary-800 text-2xl\" />\n              </div>\n              <div className=\"text-primary-800 font-bold\">\n                Search for the trainee by NID\n              </div>\n            </div>\n            <div className=\"text-sm text-primary-800 mb-2 font-light\">\n              Enter national ID for a person you want to attend this training\n              <span className=\"font-normal\">\n                {\" \"}\n                {this.props.training_details.title}\n              </span>\n            </div>\n            {(this.props.training_details.total === null\n              ? 0\n              : this.props.training_details.total) >\n            this.props.addedParticipants.length ? (\n              <form\n                onSubmit={this.GetParentToBeTrainedByNid}\n                className=\"flex flex-row items-center gap-2 truncate\"\n              >\n                {/* Search */}\n                <div className=\"flex flex-col md:flex-row md:items-center justify-between w-full gap-2\">\n                  <div className=\"relative w-full\">\n                    <input\n                      type=\"search\"\n                      className=\"fbg-white text-primary-800 w-full px-3 py-2 rounded border border-primary-700 font-normal\"\n                      placeholder=\"Type national ID number...\"\n                      value={this.state.search_nid}\n                      onChange={(e) =>\n                        this.setState({ search_nid: e.target.value })\n                      }\n                    />\n                  </div>\n                </div>\n                <div>\n                  <Button\n                    type=\"submit\"\n                    theme=\"primary-light\"\n                    className=\"flex flex-row items-center justify-center gap-2 animate__animated animate__zoomIn bg-primary-700 text-white\"\n                  >\n                    {this.state.loading === true && (\n                      <div>\n                        <AiOutlineLoading3Quarters className=\"text-2xl animate-spin text-white\" />\n                      </div>\n                    )}\n                    <span\n                      className={`${\n                        this.state.loading === true\n                          ? \"animate__animated animate__fadeIn animate__infinite\"\n                          : \"\"\n                      } text-white`}\n                    >\n                      {this.state.loading === true\n                        ? \"Loading, wait...\"\n                        : \"Search NID\"}\n                    </span>\n                  </Button>\n                </div>\n              </form>\n            ) : (\n              <div>\n                <div className=\"bg-white rounded-md mt-3 text-center p-10 animate__animated animate__zoomIn\">\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"relative\">\n                      <MdCheckCircleOutline className=\"text-6xl text-gray-400\" />\n                    </div>\n                  </div>\n                  <div className=\"font-bold text-xl\">\n                    All trainees has added\n                  </div>\n                  <div className=\"text-m text-gray-400\">\n                    All required trainees has added to the training, you can not\n                    add another trainee\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* Response */}\n        {/* Error found */}\n        {this.state.error !== null && this.state.error.target === \"main\" && (\n          <div\n            onClick={() => this.setState({ error: null })}\n            className=\"bg-red-50 text-red-700  px-3 py-2 rounded-md cursor-pointer flex flex-row items-center justify-between gap-2 mt-3 animate__animated animate__shakeX\"\n          >\n            <span>{this.state.error.msg}</span>\n            <div>\n              <MdClose className=\"text-2xl\" />\n            </div>\n          </div>\n        )}\n        <div>\n          {this.state.loaded_participant === null &&\n            this.state.open_register === false &&\n            (this.props.training_details.total === null\n              ? 0\n              : this.props.training_details.total) >\n              this.props.addedParticipants.length && (\n              <div className=\"bg-gray-100 rounded-md mt-3 text-center p-10\">\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"relative\">\n                    <FaChalkboardTeacher className=\"text-6xl text-gray-400\" />\n                  </div>\n                </div>\n                <div className=\"font-bold text-xl\">No trainee selected</div>\n                <div className=\"text-m text-gray-400\">\n                  Search for a trainee to be added on the trainees list\n                </div>\n              </div>\n            )}\n        </div>\n        {/* Response */}\n        {this.state.loaded_participant !== null && (\n          <TrainingParticipantDetails\n            school_code={this.props.district_code}\n            data={this.state.loaded_participant}\n            close={() => this.setState({ loaded_participant: null })}\n            setLoading={this.props.setLoading}\n            onSuccess={(data: OtherDistrictToBeTrainedResponse) => {\n              // Add this user to the list of added participants\n              this.AssignParticipantToTraining(data);\n            }}\n            training_details={this.props.training_details}\n            trainee_category_id={this.props.trainee_category_id}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsPersonPlus } from \"react-icons/bs\";\nimport { MdCheckCircle, MdClose, MdEdit } from \"react-icons/md\";\nimport { GetTrainingsListByStatusInterface } from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport TextInput from \"../../../../components/Inputs/TextInput\";\nimport { OtherDistrictToBeTrainedResponse } from \"./TrainingParticipantDetails\";\n\ninterface FormInputsToRegisterNewUserProps {\n  training_details: GetTrainingsListByStatusInterface;\n  nid: string;\n  school_code: string;\n  onSuccess: (data: OtherDistrictToBeTrainedResponse) => void;\n  onClose: () => void;\n  setLoading: (status: boolean) => void;\n  editNID: () => void;\n}\ninterface FormInputsToRegisterNewUserState {\n  loading: boolean;\n  error: {\n    target:\n      | \"main\"\n      | \"nid\"\n      | \"first_name\"\n      | \"middle_name\"\n      | \"last_name\"\n      | \"full_name\"\n      | \"phone_number\"\n      | \"email\";\n    msg: string;\n  } | null;\n  success: OtherDistrictToBeTrainedResponse | null;\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n}\n\nexport class FormInputsToRegisterNewUser extends Component<\n  FormInputsToRegisterNewUserProps,\n  FormInputsToRegisterNewUserState\n> {\n  constructor(props: FormInputsToRegisterNewUserProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n      success: null,\n      email: \"\",\n      first_name: \"\",\n      full_name: \"\",\n      last_name: \"\",\n      middle_name: \"\",\n      phone_number: \"\",\n    };\n  }\n  submitData = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.setState({ success: null, error: null });\n    // Validation\n    if (this.state.first_name === \"\") {\n      return this.setState({\n        error: { target: \"first_name\", msg: \"Please fill the first name\" },\n      });\n    }\n    if (this.state.last_name === \"\") {\n      return this.setState({\n        error: { target: \"last_name\", msg: \"Please fill the last name\" },\n      });\n    }\n    if (this.state.phone_number === \"\") {\n      return this.setState({\n        error: { target: \"phone_number\", msg: \"Please fill phone number\" },\n      });\n    }\n    if (this.state.email === \"\") {\n      return this.setState({\n        error: { target: \"email\", msg: \"Please fill the email\" },\n      });\n    }\n    this.setState({ loading: true });\n    this.props.setLoading(true);\n    // AddNewTraineeInfoAssignToTraining(\n    //   {\n    //     email: this.state.email,\n    //     first_name: this.state.first_name,\n    //     full_name: `${this.state.first_name}${\" \" + this.state.middle_name}${\n    //       \" \" + this.state.last_name\n    //     }`,\n    //     last_name: this.state.last_name,\n    //     middle_name: this.state.middle_name,\n    //     nid: this.props.nid,\n    //     phone_number: this.state.phone_number,\n    //     school_code: this.props.school_code,\n    //     trainee_request_id: this.props.training_details.trainee_request_id,\n    //     training_id: this.props.training_details.id,\n    //   },\n    //   (\n    //     loading: boolean,\n    //     res: {\n    //       type: \"success\" | \"error\";\n    //       msg: string;\n    //       data: OtherDistrictToBeTrainedResponse | null;\n    //     } | null\n    //   ) => {\n    //     this.setState({ loading: loading });\n    //     if (res !== null && res.type === \"success\" && res.data !== null) {\n    //       console.log(\"Test response: \", res.data);\n    //       this.setState({\n    //         success: res.data,\n    //         error: null,\n    //         loading: false,\n    //       });\n    //     }\n    //     if (res !== null && res.type === \"error\") {\n    //       this.setState({\n    //         success: null,\n    //         loading: false,\n    //         error: { target: \"main\", msg: res.msg },\n    //       });\n    //       this.props.setLoading(false);\n    //     }\n    //   }\n    // );\n  };\n  render() {\n    if (this.state.success !== null) {\n      return (\n        <div>\n          <div className=\"bg-green-50 rounded-md flex flex-col items-center justify-center p-8 text-green-700 animate__animated animate__fadeIn animate__faster\">\n            <div>\n              <MdCheckCircle className=\"text-7xl animate__animated animate__zoomIn\" />\n            </div>\n            <div className=\"text-xl font-bold text-black\">\n              Trainee has been added successfully\n            </div>\n            <div>\n              {`${this.state.first_name}${\" \" + this.state.middle_name}${\n                \" \" + this.state.last_name\n              }`}\n            </div>\n            <div className=\"text-sm text-black\">\n              This trainee has been added to the training, click the the\n              following button to view the list\n            </div>\n            <Button\n              onClick={() => {\n                this.state.success !== null &&\n                  this.props.onSuccess(this.state.success);\n                this.props.setLoading(false);\n              }}\n              className=\"mt-5\"\n            >\n              View trainees list\n            </Button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        {/* Selected National ID */}\n        <div className=\"flex fle-row items-center justify-between gap-2 w-full bg-primary-100 px-2 py-2 pr-3 rounded-md my-4\">\n          <div className=\"flex flex-row items-center gap-3 w-full\">\n            <div>\n              <div className=\"bg-white rounded-md p-2 text-primary-600\">\n                <BsPersonPlus className=\"text-3xl\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col text-primary-800\">\n              <div className=\"text-sm font-light\">\n                Selected trainee National ID number\n              </div>\n              <div className=\"text-base bg-primary-100 w-max font-bold\">\n                NID: {this.props.nid}\n              </div>\n            </div>\n          </div>\n          <div>\n            <div\n              onClick={() => {\n                if (\n                  window.confirm(\n                    \"If you continue, you may loose your changes in the form. Are sure do you want to go back?\"\n                  ) === true &&\n                  this.state.loading === false\n                ) {\n                  // Go back to edit\n                  this.props.editNID();\n                }\n              }}\n              className=\"bg-white hover:text-accent-900 rounded-md truncate flex flex-row items-center gap-2 justify-center p-2 cursor-pointer text-sm\"\n            >\n              <div>\n                <MdEdit className=\"text-2xl text-accent-900\" />\n              </div>\n              <div>Edit National ID</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Form for details */}\n\n        <div>\n          <form onSubmit={this.submitData} className=\"w-full my-3\">\n            <div className=\"grid grid-cols-12 gap-2\">\n              <TextInput\n                onChange={(e) =>\n                  this.setState({ first_name: e.target.value, error: null })\n                }\n                value={this.state.first_name}\n                error={\n                  this.state.error !== null &&\n                  this.state.error.target === \"first_name\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label={\"First name\"}\n                placeholder={\"Ex: Damascene\"}\n                name={\"\"}\n                MainContainer_className=\"col-span-4\"\n                disabled={this.state.loading}\n              />\n              <TextInput\n                onChange={(e) =>\n                  this.setState({ middle_name: e.target.value, error: null })\n                }\n                value={this.state.middle_name}\n                error={\n                  this.state.error !== null &&\n                  this.state.error.target === \"middle_name\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label={\"Middle name (Optional)\"}\n                placeholder={\"\"}\n                name={\"\"}\n                MainContainer_className=\"col-span-4\"\n                disabled={this.state.loading}\n              />\n              <TextInput\n                onChange={(e) =>\n                  this.setState({ last_name: e.target.value, error: null })\n                }\n                value={this.state.last_name}\n                error={\n                  this.state.error !== null &&\n                  this.state.error.target === \"last_name\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label={\"Last name \"}\n                placeholder={\"Ex: KAMANA\"}\n                name={\"\"}\n                MainContainer_className=\"col-span-4\"\n                disabled={this.state.loading}\n              />\n              <TextInput\n                onChange={(e) =>\n                  this.setState({ phone_number: e.target.value, error: null })\n                }\n                value={this.state.phone_number}\n                error={\n                  this.state.error !== null &&\n                  this.state.error.target === \"phone_number\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label={\"Phone number\"}\n                placeholder={\"07XXXXXXXX\"}\n                name={\"\"}\n                MainContainer_className=\"col-span-6\"\n                disabled={this.state.loading}\n              />\n              <TextInput\n                onChange={(e) =>\n                  this.setState({ email: e.target.value, error: null })\n                }\n                value={this.state.email}\n                error={\n                  this.state.error !== null &&\n                  this.state.error.target === \"email\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label={\"Email\"}\n                placeholder={\"email@gmail.com\"}\n                name={\"\"}\n                MainContainer_className=\"col-span-6\"\n                disabled={this.state.loading}\n              />\n            </div>\n            {/* ----------------- */}\n            {this.state.error !== null && this.state.error.target === \"main\" && (\n              <div\n                className=\"bg-red-50 text-red-700 flex flex-row items-center justify-between gap-3 px-3 py-2 cursor-pointer hover:bg-red-100 my-3 animate__animated animate__shakeX rounded-md\"\n                onClick={() => this.setState({ error: null, success: null })}\n              >\n                <span>{this.state.error.msg}</span>\n                <div>\n                  <MdClose className=\"text-2xl\" />\n                </div>\n              </div>\n            )}\n            {this.state.success !== null && (\n              <div\n                className=\"bg-green-50 text-green-700 flex flex-row items-center justify-between gap-3 px-3 py-2 cursor-pointer hover:bg-green-100 my-3 animate__animated animate__fadeIn rounded-md\"\n                onClick={() => this.setState({ error: null, success: null })}\n              >\n                <span>{\"Trainee has registered successfully!\"}</span>\n                <div>\n                  <MdClose className=\"text-2xl\" />\n                </div>\n              </div>\n            )}\n            {/* ----------------- */}\n            <div className=\"flex flex-row items-center justify-between gap-2 mt-3 pt-3\">\n              {this.state.loading === false ? (\n                <Button\n                  onClick={this.props.onClose}\n                  type=\"button\"\n                  theme=\"default\"\n                  disabled={this.state.loading}\n                >\n                  Cancel process\n                </Button>\n              ) : (\n                <div className=\"animate__animated animate__fadeIn animate__infinite font-light text-accent-900\">\n                  {/* Loading, please wait... */}\n                </div>\n              )}\n\n              <div className=\"flex flex-row items-center justify-end gap-3\">\n                {this.state.loading === true && (\n                  <div>\n                    <AiOutlineLoading3Quarters className=\"text-4xl text-accent-900 animate-spin\" />\n                  </div>\n                )}\n                <Button\n                  type=\"submit\"\n                  theme=\"accent\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading === true ? (\n                    <span className=\"animate__animated animate__fadeIn animate__infinite\">\n                      Adding, please wait...\n                    </span>\n                  ) : (\n                    \"Submit trainee info\"\n                  )}\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { FaChalkboardTeacher, FaTimes } from \"react-icons/fa\";\nimport { IoMdInformationCircle } from \"react-icons/io\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport {\n  AssignTraineeToTraining,\n  GetTrainingsListByStatusInterface,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport { HasTrainingStatus } from \"./FormToAddParticipant\";\n\nexport interface OtherDistrictToBeTrainedResponse {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n  hasTrainingStatus: HasTrainingStatus;\n  cohort_id: string | null;\n}\n\ninterface TrainingParticipantDetailsProps {\n  school_code: string;\n  data: OtherDistrictToBeTrainedResponse;\n  training_details: GetTrainingsListByStatusInterface;\n  close: () => void;\n  onSuccess: (data: OtherDistrictToBeTrainedResponse) => void;\n  setLoading: (status: boolean) => void;\n  trainee_category_id: string;\n}\ninterface TrainingParticipantDetailsState {\n  loading: boolean;\n  error: string;\n  success: string;\n}\n\nexport class TrainingParticipantDetails extends Component<\n  TrainingParticipantDetailsProps,\n  TrainingParticipantDetailsState\n> {\n  constructor(props: TrainingParticipantDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      success: \"\",\n    };\n  }\n  returnStatusText = () => {\n    if (this.props.data.hasTrainingStatus === HasTrainingStatus.AVAILABLE) {\n      return \"Available for training\";\n    }\n    if (\n      this.props.data.hasTrainingStatus === HasTrainingStatus.ALREADY_TRAINED\n    ) {\n      return \"Already has trained\";\n    }\n    if (this.props.data.hasTrainingStatus === HasTrainingStatus.HAS_TRAINING) {\n      return \"Has assigned to training\";\n    }\n  };\n  returnStatusComponent = () => {\n    if (this.props.data.hasTrainingStatus === HasTrainingStatus.AVAILABLE) {\n      return (\n        <div className=\"bg-green-100 text-sm rounded-full font-bold text-green-700 border border-green-600 px-0 pr-2 py-0 w-max flex flex-row items-center gap-2\">\n          <div>\n            <MdCheckCircle className=\"text-2xl\" />\n          </div>\n          <span>{this.returnStatusText()}</span>\n        </div>\n      );\n    }\n    if (\n      this.props.data.hasTrainingStatus === HasTrainingStatus.ALREADY_TRAINED\n    ) {\n      return (\n        <div className=\"bg-red-100 text-sm rounded-full font-bold text-red-700 border border-red-600 px-0 pr-2 py-0 w-max flex flex-row items-center gap-2\">\n          <div>\n            <FaTimes className=\"text-2xl\" />\n          </div>\n          <span>{this.returnStatusText()}</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"bg-yellow-100 text-sm rounded-full font-bold text-yellow-700 border border-yellow-600 px-0 pr-2 py-0 w-max flex flex-row items-center gap-2\">\n        <div>\n          <IoMdInformationCircle className=\"text-2xl\" />\n        </div>\n        <span>{this.returnStatusText()}</span>\n      </div>\n    );\n  };\n  //   Function to add participant in the database\n  AddParticipant = () => {\n    this.setState({ loading: true });\n    this.props.setLoading(true);\n    AssignTraineeToTraining(\n      {\n        district_code: null,\n        level_id: \"\",\n        position_code: \"\",\n        qualification_id: \"\",\n        school_code: parseInt(this.props.school_code),\n        sector_id: null,\n        trainee_request_id: parseInt(\n          this.props.training_details.trainee_request_id\n        ),\n        training_id: this.props.training_details.id,\n        training_to_group_id: parseInt(\n          this.props.training_details.training_to_group_id\n        ),\n        user_id: this.props.data.user_id,\n        trainee_category_id: this.props.trainee_category_id,\n        cohort_id: this.props.training_details.cohort_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        // this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          // On Success\n          //   this.props.onSuccess(this.props.data);\n          this.setState({ loading: false });\n          //   this.props.setLoading(false);\n          this.setState({ success: res.msg });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({\n            error: res.msg,\n            success: \"\",\n            loading: false,\n          });\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"p-3 bg-primary-100 my-3 rounded-md animate__animated animate__fadeIn\">\n          <div className=\"flex flex-row items-center justify-between gap-2\">\n            <div className=\"flex flex-row items-center gap-2\">\n              {this.state.loading === false && (\n                <div>\n                  <div\n                    onClick={this.props.close}\n                    className=\"flex items-center justify-center h-10 w-10 rounded-full bg-white text-primary-700 border border-primary-300 hover:bg-accent-900 hover:text-white hover:border-white cursor-pointer\"\n                  >\n                    <BsArrowLeft className=\"text-2xl\" />\n                  </div>\n                </div>\n              )}\n              <div>\n                {/* <div className=\"text-primary-800\">Participant result:</div> */}\n                <div className=\"text-lg font-bold text-primary-800\">\n                  {this.props.data.first_name} {this.props.data.last_name}\n                </div>\n                <div>\n                  <this.returnStatusComponent />\n                </div>\n              </div>\n            </div>\n            {this.state.loading === false ? (\n              this.state.success === \"\" && (\n                <div className=\"flex flex-row items-center gap-2\">\n                  {this.props.data.hasTrainingStatus ===\n                  HasTrainingStatus.AVAILABLE ? (\n                    <Button\n                      theme=\"success\"\n                      className=\"flex flex-row items-center gap-2 justify-center\"\n                      onClick={() => this.AddParticipant()}\n                    >\n                      <div>\n                        <FaChalkboardTeacher className=\"text-xl\" />\n                      </div>\n                      <span>Add participant</span>\n                    </Button>\n                  ) : (\n                    <div\n                      onClick={this.props.close}\n                      className=\"w-max bg-white rounded px-3 py-2 font-bold cursor-pointer\"\n                    >\n                      Go back\n                    </div>\n                  )}\n                </div>\n              )\n            ) : (\n              <div className=\"flex flex-row items-center gap-2 justify-center bg-white text-accent-900 font-bold px-3 py-2 rounded-md cursor-wait\">\n                <div>\n                  <AiOutlineLoading3Quarters className=\"text-2xl animate-spin\" />\n                </div>\n                <span className=\"animate__animated animate__fadeIn animate__infinite\">\n                  Adding participant, please wait...\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        {this.state.error !== \"\" && (\n          <div\n            onClick={() => this.setState({ error: \"\", success: \"\" })}\n            className=\"flex flex-row items-center justify-between font-bold text-lg gap-2 px-3 py-2 rounded-md bg-red-50 text-red-600 hover:bg-red-100 cursor-pointer my-2 border border-white animate__animated animate__shakeX\"\n          >\n            <span>{this.state.error}</span>\n            <div>\n              <MdClose className=\"text-2xl\" />\n            </div>\n          </div>\n        )}\n        {this.state.success !== \"\" && (\n          <div\n            // onClick={() => this.setState({ success: \"\", error: \"\" })}\n            className=\"flex flex-row items-center justify-between font-bold text-lg gap-2 px-3 py-2 rounded-md bg-green-50 text-green-600 hover:bg-green-100 cursor-pointer my-2 border border-white\"\n          >\n            <span>{this.state.success}</span>\n            <div>\n              <Button\n                theme=\"success\"\n                onClick={() => {\n                  this.props.onSuccess(this.props.data);\n                  this.props.setLoading(false);\n                }}\n                className=\"text-base\"\n              >\n                Continue\n              </Button>\n            </div>\n          </div>\n        )}\n        <div className=\"animate__animated animate__fadeIn\">\n          <div className=\"flex flex-col border-b border-gray-300 pb-2 my-2\">\n            <span className=\"text-gray-500 font-bold\">National ID</span>\n            <span>{this.props.data.nid}</span>\n          </div>\n          <div className=\"flex flex-col border-b border-gray-300 pb-2 my-2\">\n            <span className=\"text-gray-500 font-bold\">Phone number</span>\n            <span>{this.props.data.phone_numbers}</span>\n          </div>\n          <div className=\"flex flex-col border-b border-gray-300 pb-2 my-2\">\n            <span className=\"text-gray-500 font-bold\">Email</span>\n            <span>{this.props.data.email}</span>\n          </div>\n          <div className=\"flex flex-col border-b border-gray-300 pb-2 my-2\">\n            <span className=\"text-gray-500 font-bold\">Participant status</span>\n            <span>{this.returnStatusText()}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport {\n  DistrictTrainingParticipants,\n  GetTrainingsListByStatusInterface,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport Criteria from \"../../components/Criteria\";\nimport { DetailsInfo } from \"../../components/DetailsInfo\";\nimport { Participants } from \"./Participants\";\nimport { TrainingCohortItemInterface } from \"../../components/TrainingCohort\";\nimport { SelectCohort } from \"../../components/SelectCohort\";\nimport { CohortTab } from \"../../components/CohortTab\";\n\nenum TABS {\n  PARTICIPANTS = \"PARTICIPANTS\",\n  DETAILS = \"DETAILS\",\n  CRITERIA = \"CRITERIA\",\n}\n\ninterface TrainingDetailsProps {\n  training_details: GetTrainingsListByStatusInterface;\n  selected_cohort: TrainingCohortItemInterface | null;\n  district_code: string;\n  onClose: () => void;\n  cohortList: TrainingCohortItemInterface[];\n}\ninterface TrainingDetailsState {\n  selected_tab: TABS;\n  loading: boolean;\n  display_tabs: boolean;\n  selectedCohort: TrainingCohortItemInterface | null;\n  switchSelectedCohort: boolean;\n  participants: DistrictTrainingParticipants[] | null;\n}\n\nexport class TrainingDetails extends Component<\n  TrainingDetailsProps,\n  TrainingDetailsState\n> {\n  constructor(props: TrainingDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selected_tab: TABS.PARTICIPANTS,\n      display_tabs: true,\n      selectedCohort: this.props.selected_cohort,\n      switchSelectedCohort: false,\n      participants: null,\n    };\n  }\n  setDisplayTabs = (status: boolean) => this.setState({ display_tabs: status });\n  render() {\n    const details: GetTrainingsListByStatusInterface =\n      this.props.training_details;\n    return (\n      <div>\n        {/* Title */}\n        {this.state.display_tabs === true && (\n          <div className=\"flex flex-col lg:flex-row items-center justify-between gap-2 w-full borde-b border-primary-600\">\n            <div className=\"flex flex-row items-center gap-2 w-full\">\n              <div>\n                <div\n                  onClick={() => {\n                    this.state.loading === false && this.props.onClose();\n                  }}\n                  className=\"h-11 w-11 flex items-center justify-center rounded-full bg-accent-400 text-accent-900 hover:bg-accent-500 hover:text-accent-900 cursor-pointer\"\n                >\n                  <BsArrowLeft className=\"text-2xl\" />\n                </div>\n              </div>\n              <div className=\"flex flex-col\">\n                <div className=\"font-bold text-xl text-gray-00\">\n                  {details.title}\n                </div>\n                <div className=\"text-sm text-gray-500 font-normal\">\n                  {details.development_partner_name}\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex flex-row items-center justify-end gap-0\">\n                {[TABS.PARTICIPANTS, TABS.DETAILS, TABS.CRITERIA].map(\n                  (item, i) => (\n                    <div\n                      onClick={() => {\n                        this.setState({\n                          selected_tab: item,\n                        });\n                      }}\n                      key={i + 1}\n                      className={`rounded-t-md px-3 py-2 flex flex-row items-center gap-2 border-b-4 ${\n                        item === this.state.selected_tab\n                          ? \"bg-white text-primary-700 border-primary-700 font-bold animate__animated animate__fadeIn\"\n                          : \"hover:bg-primary-100 hover:border-primary-700  text-gray-700 hover:text-primary-700 bg-gray-10\"\n                      } cursor-pointer`}\n                    >\n                      <div className=\"truncate\">\n                        {item === TABS.PARTICIPANTS\n                          ? \"List of trainees\"\n                          : item === TABS.DETAILS\n                          ? \"Details\"\n                          : \"Training criteria\"}\n                      </div>\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Cohort details here */}\n        <CohortTab\n          selectedCohort={this.state.selectedCohort}\n          setOpenSwitchSelectCohort={(status: boolean) =>\n            this.setState({ switchSelectedCohort: status, display_tabs: true })\n          }\n          setSelectCohort={(selectedCohort: TrainingCohortItemInterface) =>\n            this.setState({ selectedCohort: selectedCohort })\n          }\n          switchSelectedCohort={this.state.switchSelectedCohort}\n        />\n        {this.state.switchSelectedCohort === false ? (\n          <>\n            {/* Details */}\n            {this.state.selected_tab === TABS.PARTICIPANTS && (\n              <Participants\n                training={this.props.training_details}\n                setDisplayTabs={this.setDisplayTabs}\n                district_code={this.props.district_code}\n                selected_cohort={this.state.selectedCohort}\n                setSelectedCohort={(cohort: TrainingCohortItemInterface) =>\n                  this.setState({ selectedCohort: cohort })\n                }\n                participants={this.state.participants}\n                setParticipants={(data: DistrictTrainingParticipants[]) =>\n                  this.setState({ participants: data })\n                }\n              />\n            )}\n            {this.state.selected_tab === TABS.DETAILS && (\n              <DetailsInfo\n                training_details={this.props.training_details}\n                onParticipants={() =>\n                  this.setState({ selected_tab: TABS.PARTICIPANTS })\n                }\n              />\n            )}\n            {this.state.selected_tab === TABS.CRITERIA && (\n              <div>\n                <div className=\"flex flex-row items-center justify-between gap-2 border-b border-gray-300 pb-3 mb-3\">\n                  <div className=\"flex flex-row items-center gap-2\">\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ selected_tab: TABS.DETAILS })\n                        }\n                        className=\"bg-accent-400 hover:bg-accent-500 text-accent-900 rounded px-3 py-2 font-bold cursor-pointer w-max flex flex-row items-center gap-2\"\n                      >\n                        {/* <div>\n                    <BsArrowLeft className=\"text-2xl\" />\n                  </div> */}\n                        <div>Back to details</div>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-lg font-bold text-black\">\n                        Training criteria\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        List of training criteria that the system consider while\n                        choosing participants\n                      </div>\n                    </div>\n                  </div>\n                  {/* Right side */}\n                  <div>\n                    <Button\n                      onClick={() =>\n                        this.setState({ selected_tab: TABS.PARTICIPANTS })\n                      }\n                      theme=\"accent\"\n                    >\n                      View trainees\n                    </Button>\n                  </div>\n                </div>\n                <Criteria\n                  trainee_criteria={\n                    this.props.training_details.trainee_criteria\n                  }\n                />\n              </div>\n            )}\n          </>\n        ) : (\n          <div>\n            {/* Select Training Cohort here */}\n            <SelectCohort\n              cohortList={this.props.cohortList}\n              onGoBack={() => this.setState({ switchSelectedCohort: false })}\n              selectedCohort={this.state.selectedCohort}\n              setSelectedCohort={(\n                selectedCohort: TrainingCohortItemInterface\n              ) =>\n                this.setState({\n                  selectedCohort: selectedCohort,\n                  switchSelectedCohort: false,\n                })\n              }\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft, BsArrowRight, BsCalendar2Check } from \"react-icons/bs\";\nimport { MdClose } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { SystemRole } from \"../../../../actions\";\nimport {\n  AssignTraineeToTraining,\n  DistrictToBeTrainedResponse,\n  DistrictTrainingParticipants,\n  GetTraineesToBeTrainedOnDistrict,\n  GetTraineesToBeTrainedOnDistrictInterface,\n  GetTrainingsListByStatusInterface,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { search } from \"../../../../utils/functions\";\nimport { FormToAddParticipant } from \"./FormToAddParticipant\";\nimport { OtherDistrictToBeTrainedResponse } from \"./TrainingParticipantDetails\";\nimport { TrainingCohortItemInterface } from \"../../components/TrainingCohort\";\n\ninterface AddParticipantsProps {\n  district_code: string;\n  training_details: GetTrainingsListByStatusInterface;\n  onClose: () => void;\n  onSubmitParticipants: (participants: DistrictToBeTrainedResponse[]) => void;\n  addedParticipants: DistrictTrainingParticipants[];\n  selected_cohort: TrainingCohortItemInterface;\n}\ninterface AddParticipantsState {\n  loading: boolean;\n  error: string;\n  success: string;\n  search_data: string;\n  data: DistrictTrainingParticipants[] | null;\n  continue: boolean;\n  adding_participant: {\n    user_id: string;\n    names: string;\n  } | null;\n  selected_trainee_category: string;\n  adding_parent_participant: boolean;\n}\n\nexport const removeDuplicateParticipantsSubjects = (\n  data: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[]\n): {\n  teacher_code: string;\n  course_code: string;\n  course_name: string;\n}[] => {\n  const response: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[] = [];\n  for (const item of data) {\n    if (\n      response.find(\n        (itm) => itm.course_code.toString() === item.course_code.toString()\n      ) === undefined\n    ) {\n      response.push(item);\n    }\n  }\n  return response;\n};\n\nexport class AddParticipants extends Component<\n  AddParticipantsProps,\n  AddParticipantsState\n> {\n  constructor(props: AddParticipantsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      success: \"\",\n      search_data: \"\",\n      data: null,\n      continue: false,\n      adding_participant: null,\n      selected_trainee_category:\n        this.props.training_details.trainee_category.filter(\n          (itm1) =>\n            itm1.roles === null ||\n            itm1.roles.find(\n              (itm2) =>\n                itm2.access_level === null ||\n                itm2.access_level.toLocaleLowerCase() ===\n                  \"DISTRICT\".toLocaleLowerCase()\n            ) !== undefined\n        ).length === 0\n          ? \"\"\n          : this.props.training_details.trainee_category.filter(\n              (itm1) =>\n                itm1.roles === null ||\n                itm1.roles.find(\n                  (itm2) =>\n                    itm2.access_level === null ||\n                    itm2.access_level.toLocaleLowerCase() ===\n                      \"DISTRICT\".toLocaleLowerCase()\n                ) !== undefined\n            )[0].id,\n      adding_parent_participant: false,\n    };\n  }\n\n  GetSelectedTraineesCategory = () => {\n    if (\n      this.state.selected_trainee_category !== \"\" &&\n      this.props.training_details.trainee_category.length > 0\n    ) {\n      const response = this.props.training_details.trainee_category.find(\n        (itm) => itm.id === this.state.selected_trainee_category\n      );\n      if (response !== undefined) {\n        return response;\n      }\n    }\n    return null;\n  };\n  // Get teachers\n  LoadData = (selected_roles: SystemRole[]) => {\n    const data: GetTraineesToBeTrainedOnDistrictInterface = {\n      training_id: this.props.training_details.id,\n      sub_area_id: this.props.training_details.sub_area_id,\n      district_code: this.props.district_code,\n      topic: this.props.training_details.topic_id,\n      criteria: this.props.training_details.trainee_criteria,\n    };\n    this.setState({ loading: true });\n    GetTraineesToBeTrainedOnDistrict(\n      data,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: DistrictToBeTrainedResponse[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          this.setState({\n            data:\n              res.data === null\n                ? []\n                : res.data.filter(\n                    (itm) =>\n                      selected_roles.find(\n                        (test) =>\n                          test.role_id.toString() === itm.role_id.toString()\n                      ) !== undefined\n                  ),\n            loading: false,\n            error: \"\",\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ data: [], loading: false, error: res.msg });\n        }\n      }\n    );\n  };\n  // Add new participants\n  AddNewParticipants = (participant: DistrictToBeTrainedResponse) => {\n    this.setState({\n      loading: false,\n      adding_participant: {\n        user_id: participant.user_id,\n        names: `${participant.first_name} ${participant.last_name}`,\n      },\n    });\n    AssignTraineeToTraining(\n      {\n        district_code: parseInt(this.props.district_code),\n        level_id: \"\",\n        position_code: \"\",\n        qualification_id: \"\",\n        school_code: null,\n        sector_id: \"\",\n        trainee_request_id: parseInt(\n          this.props.training_details.trainee_request_id\n        ),\n        training_id: this.props.training_details.id,\n        training_to_group_id: parseInt(\n          this.props.training_details.training_to_group_id\n        ),\n        user_id: participant.user_id,\n        trainee_category_id: this.state.selected_trainee_category,\n        cohort_id: this.props.selected_cohort.cohort_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        // this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          // On Success\n          this.props.onSubmitParticipants([participant]);\n          this.setState({\n            data:\n              this.state.data === null\n                ? []\n                : this.state.data.filter((itm) => itm.nid !== participant.nid),\n            success: `Trainee ${participant.first_name} ${participant.last_name} has added successfully!`,\n            error: \"\",\n            loading: false,\n            adding_participant: null,\n          });\n          window.scrollTo(0, 0);\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({\n            error: res.msg,\n            success: \"\",\n            loading: false,\n            adding_participant: null,\n          });\n        }\n      }\n    );\n  };\n  componentDidMount(): void {\n    if (\n      this.state.data === null &&\n      this.GetSelectedTraineesCategory() !== null &&\n      this.GetSelectedTraineesCategory()!.roles !== null\n    ) {\n      this.LoadData(this.GetSelectedTraineesCategory()!.roles!);\n    }\n  }\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn bg-white rounded-md mt-1\">\n        <div className=\"flex flex-col lg:flex-row items-center justify-between gap-2\">\n          <div className=\"flex flex-row items-center gap-3 w-full\">\n            {this.state.continue === false && (\n              <div>\n                <div\n                  onClick={() => {\n                    this.state.loading === false &&\n                      this.state.adding_parent_participant === false &&\n                      this.props.onClose();\n                  }}\n                  className=\"bg-accent-400 hover:bg-accent-500 text-accent-900 px-3 py-2 rounded-md flex flex-row items-center justify-center gap-2 hover:text-black cursor-pointer\"\n                >\n                  <div>\n                    <BsArrowLeft className=\"text-xl\" />\n                  </div>\n                  <span className=\"hidden md:block truncate\">Back to list</span>\n                </div>\n              </div>\n            )}\n            <div className=\"\">\n              <div className=\"text-xl font-bold\">Add training trainees</div>\n              <div\n                className=\"text-sm font-semibold text-primary-800\"\n                // style={{ maxWidth: \"500px\" }}\n              >\n                {this.props.training_details.title}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Trainee's categories */}\n        <div className=\"my-5\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between gap-2\">\n            <div>\n              <div className=\"font-bold text-lg\">\n                List of categorized training trainees\n              </div>\n              <div className=\"text-sm text-gray-500\">\n                The following are trainee's categories that can be added to the\n                training. please select the category\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-end gap-2\">\n              {this.state.loading === false &&\n                this.state.adding_parent_participant === false && (\n                  <div\n                    className=\"flex flex-col bg-gray-10 rounded px-3 text-center border border-primary-500 pt-1 text-primary-800 bg-primary-100 hover:bg-primary-300 cursor-pointer animate__animated animate__bounceIn\"\n                    onClick={this.props.onClose}\n                  >\n                    <div className=\"text-sm\">Trainees</div>\n                    <div className=\"font-extrabold -mt-1 text-xl\">\n                      {this.props.addedParticipants.length}\n                    </div>\n                  </div>\n                )}\n              {this.props.selected_cohort.total_trainees !== null && (\n                <div className=\"flex flex-col bg-gray-10 rounded px-3 text-center border pt-1\">\n                  <div className=\"text-sm\">Total</div>\n                  <div className=\"font-extrabold -mt-1 text-xl\">\n                    {this.props.selected_cohort.total_trainees === null\n                      ? 0\n                      : this.props.selected_cohort.total_trainees}\n                  </div>\n                </div>\n              )}\n              {this.state.continue === true && (\n                <Button\n                  theme=\"accent\"\n                  className=\"px-3 py-2 rounded-md flex flex-row items-center justify-center gap-2 hover:text-black cursor-pointer animate__animated animate__fadeIn\"\n                  onClick={() => {\n                    this.state.loading === false && this.props.onClose();\n                  }}\n                >\n                  <div className=\"hidden md:block truncate\">Continue</div>\n                  <div>\n                    <BsArrowRight className=\"text-xl\" />\n                  </div>\n                </Button>\n              )}\n            </div>\n          </div>\n          {/* Tabs*/}\n          <div className=\"my-3 w-full overflow-x-auto\">\n            <div className=\"flex flex-row items-end gap-0 truncate\">\n              {this.props.training_details.trainee_category\n                .filter(\n                  (itm1) =>\n                    itm1.roles === null ||\n                    itm1.roles.find(\n                      (itm2) =>\n                        itm2.access_level === null ||\n                        itm2.access_level.toLocaleLowerCase() ===\n                          \"DISTRICT\".toLocaleLowerCase()\n                    ) !== undefined\n                )\n                .map((item, i) => (\n                  <div\n                    onClick={() => {\n                      if (\n                        this.state.loading === false &&\n                        this.state.adding_parent_participant === false\n                      ) {\n                        if (item.roles !== null) {\n                          this.LoadData(item.roles);\n                        }\n                        this.setState({\n                          selected_trainee_category: item.id,\n                          success: \"\",\n                          error: \"\",\n                        });\n                      }\n                    }}\n                    key={i + 1}\n                    className={`px-5 pt-2 pb-1 rounded-t-md ${\n                      item.id === this.state.selected_trainee_category\n                        ? \"border-t border-l border-r bg-white text-primary-700 border-primary-300 font-semibold\"\n                        : \"border-b border-primary-300 cursor-pointer hover:bg-primary-100 hover:text-primary-800\"\n                    }`}\n                  >\n                    {item.name}\n                  </div>\n                ))}\n              <div className=\"border-b border-primary-300 w-full\"></div>\n            </div>\n          </div>\n        </div>\n        {this.state.loading === true &&\n        this.state.adding_parent_participant === false ? (\n          <div className=\"flex flex-col items-center justify-center p-6 bg-gray-100 rounded-md m-1\">\n            <Loading />\n            <div className=\"text-center text-lg font-light\">\n              Loading, please wait...\n            </div>\n          </div>\n        ) : (\n          <Fragment>\n            {/* Error display */}\n            {this.state.error !== \"\" && (\n              <div\n                onClick={() => this.setState({ error: \"\", success: \"\" })}\n                className=\"bg-red-100 text-red-700 font-bold flex flex-row items-center justify-between gap-2 px-3 py-2 rounded cursor-pointer my-2 animate__animated animate__shakeX\"\n              >\n                <div>{this.state.error}</div>\n                <div>\n                  <MdClose className=\"text-2xl\" />\n                </div>\n              </div>\n            )}\n            {/* Success */}\n            {this.state.success !== \"\" && (\n              <div\n                onClick={() => this.setState({ error: \"\", success: \"\" })}\n                className=\"bg-green-100 text-green-700 font-bold flex flex-row items-center justify-between gap-2 px-3 py-2 rounded cursor-pointer my-2 animate__animated animate__zoomIn\"\n              >\n                <div>{this.state.success}</div>\n                <div>\n                  <MdClose className=\"text-2xl\" />\n                </div>\n              </div>\n            )}\n            {/* List of participants */}\n            {/* Title */}\n            {this.state.selected_trainee_category !== \"\" &&\n              this.GetSelectedTraineesCategory() !== null &&\n              this.GetSelectedTraineesCategory()!.roles !== null && (\n                <div>\n                  {/* Search */}\n                  <div className=\"flex flex-col md:flex-row md:items-center justify-between w-full gap-2 mb-2\">\n                    <div className=\"relative w-full\">\n                      <div className=\"absolute px-3 py-2\">\n                        <RiSearchLine className=\"text-2xl text-gray-600\" />\n                      </div>\n                      <input\n                        type=\"search\"\n                        className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded\"\n                        placeholder=\"Search...\"\n                        value={this.state.search_data}\n                        onChange={(e) =>\n                          this.setState({ search_data: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div className=\" text-accent-900 mt-4 mb-3 font-semibold flex flex-row items-center gap-2\">\n                    <div>\n                      <BsCalendar2Check className=\"text-2xl\" />\n                    </div>\n                    <span>\n                      List of qualified{\" \"}\n                      {this.GetSelectedTraineesCategory()?.name} for this\n                      training\n                    </span>\n                  </div>\n                </div>\n              )}\n            {this.GetSelectedTraineesCategory() !== null &&\n              (this.GetSelectedTraineesCategory()!.roles !== null &&\n              this.GetSelectedTraineesCategory()!.roles?.find(\n                (itm) => itm.access_level !== null\n              ) !== undefined &&\n              this.state.data !== null ? (\n                <div className=\"w-full overflow-x-auto mb-10\">\n                  <table className=\"min-w-full text-left text-sm\">\n                    <thead>\n                      <tr className=\"text-primary-800 truncate\">\n                        <th className=\"px-2 py-2 border border-gray-200 text-center\">\n                          #\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-200\">\n                          Full name\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-200\">\n                          National ID\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-200\">\n                          Phone number\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-200\">\n                          Role\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-200\">\n                          Action\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {search(this.state.data, this.state.search_data)\n                        .length === 0 ? (\n                        <tr>\n                          <td\n                            colSpan={8}\n                            className=\"text-center text-xl font-light py-4\"\n                          >\n                            <div className=\"bg-gray-100 w-full px-2 py-2 rounded\">\n                              No result found!\n                            </div>\n                          </td>\n                        </tr>\n                      ) : (\n                        (\n                          search(\n                            this.state.data,\n                            this.state.search_data\n                          ) as DistrictToBeTrainedResponse[]\n                        ).map((item, i) => (\n                          <tr key={i + 1} className=\"group\">\n                            <td className=\"px-2 py-2 border border-gray-200 text-center\">\n                              {i + 1}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-200\">\n                              {item.first_name} {item.last_name}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-200\">\n                              {item.nid}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-200\">\n                              {item.phone_numbers}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-200\">\n                              {item.role}\n                            </td>\n                            <td className=\"px-1 py-1 border border-gray-200 w-10\">\n                              <div\n                                onClick={() => {\n                                  this.setState({ success: \"\", error: \"\" });\n                                  if (\n                                    this.props.selected_cohort\n                                      .total_trainees === null\n                                  ) {\n                                    this.AddNewParticipants(item);\n                                  } else {\n                                    if (\n                                      this.props.addedParticipants.length <\n                                      (this.props.selected_cohort\n                                        .total_trainees === null\n                                        ? 0\n                                        : this.props.selected_cohort\n                                            .total_trainees)\n                                    ) {\n                                      this.AddNewParticipants(item);\n                                    } else {\n                                      this.setState({\n                                        error:\n                                          \"You can not override the limit which is \" +\n                                          (this.props.selected_cohort\n                                            .total_trainees === null\n                                            ? \"0\"\n                                            : this.props.selected_cohort\n                                                .total_trainees),\n                                        success: \"\",\n                                      });\n                                      alert(\n                                        \"You can not override the limit which is \" +\n                                          (this.props.selected_cohort\n                                            .total_trainees === null\n                                            ? \"0\"\n                                            : this.props.selected_cohort\n                                                .total_trainees)\n                                      );\n                                      this.props.onClose();\n                                    }\n                                  }\n                                  this.setState({ continue: true });\n                                }}\n                                className={`${\n                                  this.state.adding_participant !== null &&\n                                  this.state.adding_participant.user_id ===\n                                    item.user_id\n                                    ? \"bg-primary-100 text-primary-800 cursor-wait\"\n                                    : \"bg-accent-400 text-accent-900 group-hover:bg-accent-800 group-hover:text-black cursor-pointer\"\n                                } text-sm font-bold w-max px-3 rounded py-2 float-right flex flex-row items-center justify-center gap-2`}\n                              >\n                                {this.state.adding_participant !== null &&\n                                  this.state.adding_participant.user_id ===\n                                    item.user_id && (\n                                    <div>\n                                      <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                                    </div>\n                                  )}\n                                <span>\n                                  {this.state.adding_participant !== null &&\n                                  this.state.adding_participant.user_id ===\n                                    item.user_id\n                                    ? \"Adding...\"\n                                    : \"Add participant\"}\n                                </span>\n                              </div>\n                            </td>\n                          </tr>\n                        ))\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div>\n                  {/* Form here to add new */}\n                  <div>\n                    <FormToAddParticipant\n                      addedParticipants={this.props.addedParticipants}\n                      district_code={this.props.district_code}\n                      onClose={this.props.onClose}\n                      training_details={this.props.training_details}\n                      onSubmitParticipants={(\n                        participants: OtherDistrictToBeTrainedResponse[]\n                      ) => {\n                        console.log(\"Test data 2: \", participants);\n                        this.props.onSubmitParticipants(participants);\n                      }}\n                      setLoading={(status: boolean) =>\n                        this.setState({ adding_parent_participant: status })\n                      }\n                      trainee_category_id={this.state.selected_trainee_category}\n                    />\n                  </div>\n                </div>\n              ))}\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsJournalArrowDown } from \"react-icons/bs\";\nimport { FaUserEdit, FaUsers } from \"react-icons/fa\";\nimport { MdClose, MdInfo } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport {\n  DistrictToBeTrainedResponse,\n  DistrictTrainingParticipants,\n  GetDistrictTrainingParticipants,\n  GetTrainingsListByStatusInterface,\n  RemoveTraineeToTraining,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { search } from \"../../../../utils/functions\";\nimport { AddParticipants } from \"./AddParticipants\";\nimport { TrainingCohortItemInterface } from \"../../components/TrainingCohort\";\n\ninterface ParticipantsProps {\n  training: GetTrainingsListByStatusInterface;\n  district_code: string;\n  setDisplayTabs: (status: boolean) => void;\n  selected_cohort: TrainingCohortItemInterface | null;\n  setSelectedCohort: (cohort: TrainingCohortItemInterface) => void;\n  participants: DistrictTrainingParticipants[] | null;\n  setParticipants: (data: DistrictTrainingParticipants[]) => void;\n}\ninterface ParticipantsState {\n  loading: boolean;\n  participants: DistrictTrainingParticipants[] | null;\n  addParticipants: boolean;\n  error: string;\n  success: string;\n  search_data: string;\n  removing_user_id: string | null;\n}\n\nexport class Participants extends Component<\n  ParticipantsProps,\n  ParticipantsState\n> {\n  constructor(props: ParticipantsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      participants: this.props.participants,\n      addParticipants: false,\n      error: \"\",\n      success: \"\",\n      search_data: \"\",\n      removing_user_id: null,\n    };\n  }\n\n  GetParticipantUnique = (\n    data: DistrictTrainingParticipants[]\n  ): DistrictTrainingParticipants[] => {\n    var response: DistrictTrainingParticipants[] = [];\n    for (const item of data) {\n      if (response.find((itm) => itm.user_id === item.user_id) === undefined) {\n        response.push(item);\n      }\n    }\n    return response;\n  };\n\n  LoadParticipants = () => {\n    this.setState({ loading: true });\n    GetDistrictTrainingParticipants(\n      this.props.training.id,\n      this.props.district_code,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: {\n            school_parents: [];\n            school_teachers: DistrictTrainingParticipants[];\n          } | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          this.props.setParticipants(\n            res.data === null\n              ? []\n              : this.GetParticipantUnique(res.data.school_teachers)\n          );\n          this.setState({\n            participants:\n              res.data === null\n                ? null\n                : this.GetParticipantUnique(res.data.school_teachers),\n            loading: false,\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ participants: [], loading: false, error: res.msg });\n        }\n      }\n    );\n  };\n\n  RemoveParticipantOnTraining = (\n    user_id: string,\n    names: string,\n    cohort_id: string\n  ) => {\n    this.setState({ removing_user_id: user_id });\n    RemoveTraineeToTraining(\n      {\n        training_id: this.props.training.id,\n        user_id: user_id,\n        status: \"DISABLED\",\n        cohort_id: cohort_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        if (res !== null && res.type === \"success\") {\n          this.setState({\n            participants:\n              this.state.participants === null\n                ? []\n                : this.state.participants.filter(\n                    (itm) => itm.user_id !== user_id\n                  ),\n            removing_user_id: null,\n            success: `${names} has been removed from participants list successfully!`,\n            error: \"\",\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({\n            removing_user_id: null,\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n\n  FilteredCohortData = (data: DistrictTrainingParticipants[]) => {\n    return data.filter(\n      (itm) => itm.cohort_id === this.props.selected_cohort?.cohort_id\n    );\n  };\n\n  componentDidMount(): void {\n    if (\n      this.state.participants === null ||\n      this.state.participants.length === 0\n    ) {\n      this.LoadParticipants();\n    }\n  }\n\n  render() {\n    if (this.state.loading === true || this.state.participants === null) {\n      return (\n        <div className=\"flex flex-col items-center justify-center p-6 bg-gray-100 rounded my-4\">\n          <Loading />\n          <div className=\"text-center font-light text-lg\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.addParticipants === false && (\n          <div className=\"animate__animated animate__fadeIn\">\n            <div className=\"bg-gray-10 rounded-md\">\n              <div>\n                {this.FilteredCohortData(this.state.participants).length >\n                  0 && (\n                  <div className=\"flex flex-col lg:flex-row items-center justify-between gap-2 w-full\">\n                    <div className=\"flex flex-row items-center gap-4 w-full truncate\">\n                      <div>\n                        <BsJournalArrowDown className=\"text-3xl text-accent-900\" />\n                      </div>\n                      <div className=\"text-lg font-bold flex flex-col truncate\">\n                        <div>List of trainees</div>\n                        <div\n                          className=\"text-sm font-normal truncate\"\n                          title={`${this.props.training.development_partner_name}`}\n                        >\n                          {this.props.training.development_partner_name}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col md:flex-row items-center justify-between gap-2 w-full\">\n                      <div className=\"relative w-full\">\n                        <div className=\"absolute px-3 py-2\">\n                          <RiSearchLine className=\"text-2xl text-gray-600\" />\n                        </div>\n                        <input\n                          type=\"search\"\n                          className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded\"\n                          placeholder=\"Search...\"\n                          value={this.state.search_data}\n                          onChange={(e) =>\n                            this.setState({ search_data: e.target.value })\n                          }\n                        />\n                      </div>\n                      <div className=\"flex flex-row items-center justify-between md:justify-end gap-2 w-full mt-2 md:mt-0\">\n                        <div\n                          className={`${\n                            this.FilteredCohortData(this.state.participants)\n                              .length ===\n                            this.props.selected_cohort?.total_trainees\n                              ? \"text-green-600 bg-green-50 px-3 pt-1 rounded-md\"\n                              : \"text-gray-900 bg-white px-3 pt-1 rounded-md\"\n                          } flex flex-col items-start justify-center truncate`}\n                        >\n                          <div className={`text-sm`}>Total trainees</div>\n                          <div\n                            className={`flex flex-row items-center gap-2 font-bold -mt-1 text-lg`}\n                          >\n                            <span>\n                              {\n                                this.FilteredCohortData(this.state.participants)\n                                  .length\n                              }\n                            </span>{\" \"}\n                            of{\" \"}\n                            <span>\n                              {this.props.selected_cohort?.total_trainees}\n                            </span>\n                          </div>\n                        </div>\n                        <div>\n                          {this.FilteredCohortData(this.state.participants)\n                            .length !==\n                            this.props.selected_cohort?.total_trainees &&\n                          this.props.training.is_approved?.toString() !==\n                            \"1\" ? (\n                            <Button\n                              theme=\"accent\"\n                              className=\"animate__animated animate__zoomIn truncate flex flex-row items-center justify-center gap-2\"\n                              onClick={() => {\n                                if (this.state.removing_user_id === null) {\n                                  this.setState({ addParticipants: true });\n                                  this.props.setDisplayTabs(false);\n                                }\n                              }}\n                            >\n                              <div>\n                                <FaUserEdit className=\"text-2xl\" />\n                              </div>\n                              <span>Add trainees</span>\n                            </Button>\n                          ) : (\n                            // <Button\n                            //   theme=\"success-light\"\n                            //   className=\"flex flex-row items-center justify-center gap-2 px-0 cursor-not-allowed\"\n                            // >\n                            //   <div className=\"-ml-2\">\n                            //     <MdCheckCircle className=\"text-2xl\" />\n                            //   </div>\n                            //   <span className=\"font-normal\">Done</span>\n                            // </Button>\n                            \"\"\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n              {/* Body */}\n              {this.FilteredCohortData(this.state.participants).length ===\n                0 && (\n                <div>\n                  <div className=\"bg-gray-100 text-center flex flex-col items-center justify-center p-3 py-8 rounded-lg mt-3\">\n                    <div className=\"text-center\">\n                      <FaUsers className=\"text-6xl text-gray-400 animate__animated animate__zoomIn\" />\n                    </div>\n                    <div className=\"text-xl font-bold mt-2\">\n                      List of trainees\n                    </div>\n                    <div className=\"text-sm font-light\">\n                      You are required to add trainee from this training\n                    </div>\n                    <div className=\"mt-2\">\n                      {this.props.training.is_approved?.toString() !== \"1\" && (\n                        <Button\n                          theme=\"accent\"\n                          className=\"animate__animated animate__zoomIn flex flex-row items-center justify-center gap-2\"\n                          onClick={() => {\n                            this.setState({\n                              addParticipants: true,\n                              success: \"\",\n                              error: \"\",\n                            });\n                            this.props.setDisplayTabs(false);\n                          }}\n                        >\n                          <div>\n                            <FaUserEdit className=\"text-2xl\" />\n                          </div>\n                          <span>Add trainees</span>\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n              {this.FilteredCohortData(this.state.participants).length ===\n                this.props.selected_cohort?.total_trainees && (\n                <div className=\"p-1 flex flex-row items-center gap-3 rounded-md bg-primary-100 my-3\">\n                  <div className=\"rounded-md h-14 w-14 flex items-center justify-center bg-white\">\n                    <MdInfo className=\"text-5xl text-primary-600 animate__animated animate__zoomIn\" />\n                  </div>\n                  <div>\n                    <div className=\"font-bold text-primary-800 text-lg\">\n                      Verify the selected trainees before the approval\n                    </div>\n                    <div className=\"text-sm text-primary-800\">\n                      Now you are able to make modification until the approval\n                      will be made. make sure you have well verified the\n                      selected trainees\n                    </div>\n                  </div>\n                </div>\n              )}\n              {/* error */}\n              {this.state.error !== \"\" && (\n                <div\n                  onClick={() => this.setState({ error: \"\", success: \"\" })}\n                  className=\"bg-red-100 text-red-700 px-3 py-2 rounded cursor-pointer flex flex-row items-center justify-between gap-2 my-2 animate__animated animate__shakeX\"\n                >\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-lg font-bold\">Error occurred:</span>\n                    <span>{this.state.error}</span>\n                  </div>\n                  <div>\n                    <MdClose className=\"text-2xl\" />\n                  </div>\n                </div>\n              )}\n              {/* Success */}\n              {this.state.success !== \"\" && (\n                <div\n                  onClick={() => this.setState({ error: \"\", success: \"\" })}\n                  className=\"bg-green-100 text-green-700 px-3 py-2 rounded cursor-pointer flex flex-row items-center justify-between gap-2 my-2 animate__animated animate__fadeIn\"\n                >\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-lg font-bold\">Done successfully</span>\n                    <span>{this.state.success}</span>\n                  </div>\n                  <div>\n                    <MdClose className=\"text-2xl\" />\n                  </div>\n                </div>\n              )}\n              {/* List of participants */}\n              {this.FilteredCohortData(this.state.participants).length > 0 && (\n                <div className=\"mt-3 w-full overflow-x-auto\">\n                  <table className=\"min-w-full text-left text-sm animate__animated animate__fadeIn\">\n                    <thead>\n                      <tr className=\"text-primary-800 truncate\">\n                        <th className=\"px-2 py-2 border border-gray-300 text-center\">\n                          #\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Full name\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          National ID\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Phone number\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Role\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300 text-right\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {(\n                        search(\n                          this.FilteredCohortData(this.state.participants),\n                          this.state.search_data\n                        ) as DistrictTrainingParticipants[]\n                      ).length === 0 ? (\n                        <tr>\n                          <td\n                            colSpan={8}\n                            className=\"p-6 text-lg font-light text-center\"\n                          >\n                            <div className=\"animate__animated animate__shakeX text-center\">\n                              No result found!\n                            </div>\n                          </td>\n                        </tr>\n                      ) : (\n                        (\n                          search(\n                            this.FilteredCohortData(this.state.participants),\n                            this.state.search_data\n                          ) as DistrictTrainingParticipants[]\n                        ).map((item, i) => (\n                          <tr key={i + 1} className=\"group\">\n                            <td className=\"px-2 py-2 border border-gray-300 text-center\">\n                              {i + 1}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.first_name} {item.last_name}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.nid}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.phone_numbers}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.role}\n                            </td>\n                            <td className=\"px-1 py-1 border border-gray-300\">\n                              {this.props.training.is_approved?.toString() !==\n                                \"1\" && (\n                                <div\n                                  onClick={() => {\n                                    if (\n                                      this.state.removing_user_id === null &&\n                                      item.cohort_id !== null\n                                    ) {\n                                      if (\n                                        window.confirm(\n                                          `Are you sure do you want to remove ${item.first_name} ${item.last_name} from participants list?`\n                                        ) === true\n                                      ) {\n                                        this.RemoveParticipantOnTraining(\n                                          item.user_id,\n                                          `${item.first_name} ${item.last_name}`,\n                                          item.cohort_id\n                                        );\n                                      }\n                                    }\n                                  }}\n                                  className={`flex items-center justify-center gap-2 rounded px-3 py-2 ${\n                                    this.state.removing_user_id === item.user_id\n                                      ? \"bg-primary-100 text-primary-800 cursor-wait font-bold\"\n                                      : \"bg-red-100 text-red-800 group-hover:bg-red-700 group-hover:text-white\"\n                                  } text-sm w-max float-right cursor-pointer font-normal`}\n                                >\n                                  {this.state.removing_user_id ===\n                                    item.user_id && (\n                                    <div>\n                                      <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                                    </div>\n                                  )}\n                                  <span>\n                                    {this.state.removing_user_id ===\n                                    item.user_id\n                                      ? \"Removing...\"\n                                      : \"Remove\"}\n                                  </span>\n                                </div>\n                              )}\n                            </td>\n                          </tr>\n                        ))\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        {this.state.addParticipants === true &&\n          this.props.selected_cohort !== null && (\n            <AddParticipants\n              onClose={() => {\n                this.setState({ addParticipants: false });\n                this.props.setDisplayTabs(true);\n              }}\n              onSubmitParticipants={(\n                participants: DistrictToBeTrainedResponse[]\n              ) => {\n                const newData = [\n                  ...(this.props.participants === null\n                    ? []\n                    : this.props.participants),\n                  {\n                    staff_code: participants[0].staff_code,\n                    user_id: participants[0].user_id,\n                    nid: participants[0].nid,\n                    first_name: participants[0].first_name,\n                    last_name: participants[0].last_name,\n                    phone_numbers: participants[0].phone_numbers,\n                    email:\n                      participants[0].email === null\n                        ? \"\"\n                        : participants[0].email,\n                    role_id: participants[0].role_id,\n                    role: participants[0].role,\n                    cohort_id: this.props.selected_cohort!.cohort_id,\n                  },\n                ];\n                this.props.setParticipants(newData);\n                this.setState({\n                  participants: newData,\n                });\n                window.scrollTo(0, 0);\n              }}\n              addedParticipants={this.FilteredCohortData(\n                this.state.participants\n              )}\n              district_code={this.props.district_code}\n              training_details={this.props.training}\n              selected_cohort={this.props.selected_cohort}\n            />\n          )}\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BiTargetLock } from \"react-icons/bi\";\nimport { BsCalendar2Range } from \"react-icons/bs\";\nimport { MdClose } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../../actions\";\nimport {\n  GetDistrictTrainingProvidersByStatus,\n  GetTrainingsListByStatusInterface,\n  TrainingImplementationStatus,\n} from \"../../../actions/training-offers\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { PopUpContainer } from \"../../../components/PopUpContainer/PopUpContainer\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { Header } from \"../components/Header\";\nimport { TrainingItem } from \"../components/TrainingItem\";\nimport { TrainingDetails } from \"./Details/TrainingDetails\";\nimport { TrainingCohortItemInterface } from \"../components/TrainingCohort\";\nimport { RemoveDuplicateTrainingRequests } from \"../School/TrainingOffers\";\n\ninterface DistrictTrainingOffersProps {\n  auth: Auth;\n  basic: Basic;\n}\ninterface DistrictTrainingOffersState {\n  loading: boolean;\n  selected_training: {\n    training: GetTrainingsListByStatusInterface;\n    cohort: TrainingCohortItemInterface;\n    cohort_list: TrainingCohortItemInterface[];\n  } | null;\n  trainings_list: GetTrainingsListByStatusInterface[] | null;\n  selected_status: TrainingImplementationStatus;\n  error: string;\n  district_code: string;\n  search_value: string;\n}\n\nclass _DistrictTrainingOffers extends Component<\n  DistrictTrainingOffersProps,\n  DistrictTrainingOffersState\n> {\n  constructor(props: DistrictTrainingOffersProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selected_training: null,\n      trainings_list: null,\n      selected_status: TrainingImplementationStatus.INPROGRESS,\n      search_value: \"\",\n      error: \"\",\n      district_code:\n        this.props.auth.district !== null\n          ? this.props.auth.district.district_code\n          : \"\",\n    };\n  }\n  // Verify if it is on district level\n  ValidateTrainingIsOnDistrictLevel = (\n    data: GetTrainingsListByStatusInterface[]\n  ): GetTrainingsListByStatusInterface[] => {\n    const test = data.filter(\n      (item) =>\n        item.trainee_category.find(\n          (itm) =>\n            itm.roles?.find((level) => level.access_level === \"DISTRICT\") !==\n            undefined\n        ) !== undefined\n    );\n    if (test.length > 0) {\n      return test;\n    }\n    return [];\n  };\n  LoadAllTrainings = (status: TrainingImplementationStatus) => {\n    this.setState({ loading: true, selected_training: null });\n    // Loading data\n    GetDistrictTrainingProvidersByStatus(\n      this.state.district_code,\n      status,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: GetTrainingsListByStatusInterface[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          this.setState({\n            trainings_list:\n              res.data === null\n                ? []\n                : this.ValidateTrainingIsOnDistrictLevel(res.data),\n            loading: false,\n            error: \"\",\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ trainings_list: [], error: res.msg, loading: false });\n        }\n      }\n    );\n  };\n  componentDidMount(): void {\n    if (this.state.trainings_list === null) {\n      this.LoadAllTrainings(this.state.selected_status);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container mx-auto p-3 relative\">\n          {/* Header */}\n          <Header\n            loading={this.state.loading}\n            onChangeSearchValue={(e: React.ChangeEvent<HTMLInputElement>) =>\n              this.setState({ search_value: e.target.value })\n            }\n            onSelectTab={(status: TrainingImplementationStatus) => {\n              if (this.state.loading === false) {\n                this.setState({\n                  selected_status: status,\n                  trainings_list: null,\n                });\n                this.LoadAllTrainings(status);\n              }\n            }}\n            search_value={this.state.search_value}\n            selected_status={this.state.selected_status}\n          />\n          <div className=\"bg-white my-2 rounded px-3 py-3 flex flex-row items-center justify-between gap-2\">\n            <div className=\"flex flex-row items-center gap-2\">\n              <div>\n                <BiTargetLock className=\"text-2xl text-accent-900\" />\n              </div>\n              <div className=\"text-gray-500 font-light\">\n                <span className=\"text-accent-900\">\n                  {this.props.auth.district !== null\n                    ? this.props.auth.district.district_name\n                    : \"Not found\"}{\" \"}\n                  district\n                </span>{\" \"}\n                available trainings that can be assigned to trainees\n              </div>\n            </div>\n            <div>\n              <MdClose className=\"text-xl\" />\n            </div>\n          </div>\n          {this.state.error !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: \"\" })}\n              className=\"rounded px-3 py-2 bg-red-50 text-red-700 border border-white my-3 animate__animated animate__shakeX shadow flex flex-row items-center justify-between gap-2 cursor-pointer\"\n            >\n              <span>{this.state.error}</span>\n              <div>\n                <MdClose className=\"text-xl\" />\n              </div>\n            </div>\n          )}\n          {/* Body */}\n          {this.state.trainings_list === null || this.state.loading === true ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6\">\n              <Loading />\n              <div className=\"text-center text-lg font-light\">\n                Loading, please wait\n              </div>\n            </div>\n          ) : this.state.trainings_list.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6\">\n              <div className=\"mb-2\">\n                <BsCalendar2Range className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n              </div>\n              <div className=\"text-xl font-bold\">No trainings available</div>\n              <div className=\"text-sm\">\n                No training offers available for this school's teachers\n              </div>\n            </div>\n          ) : (\n              search(\n                this.state.trainings_list,\n                this.state.search_value\n              ) as GetTrainingsListByStatusInterface[]\n            ).length === 0 ? (\n            <div className=\"bg-white rounded-md p-3 py-5 text-center text-xl font-light animate__animated animate__fadeIn\">\n              <span>No result found!</span>\n            </div>\n          ) : (\n            RemoveDuplicateTrainingRequests(\n              search(\n                this.state.trainings_list,\n                this.state.search_value\n              ) as GetTrainingsListByStatusInterface[]\n            ).map((item, i) => (\n              <TrainingItem\n                i={i + 1}\n                key={i + 1}\n                item={item}\n                onClick={(cohort: TrainingCohortItemInterface) =>\n                  this.setState({\n                    selected_training: {\n                      training: item.training,\n                      cohort: cohort,\n                      cohort_list: item.trainingCohorts,\n                    },\n                  })\n                }\n              />\n            ))\n          )}\n          {/* Details page */}\n          {this.state.selected_training !== null && (\n            <PopUpContainer className=\"p-3 px-4\">\n              <TrainingDetails\n                training_details={this.state.selected_training.training}\n                selected_cohort={this.state.selected_training.cohort}\n                onClose={() => this.setState({ selected_training: null })}\n                district_code={this.state.district_code}\n                cohortList={this.state.selected_training.cohort_list}\n              />\n            </PopUpContainer>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const DistrictTrainingOffers = connect(\n  mapStateToProps,\n  {}\n)(_DistrictTrainingOffers);\n"],"sourceRoot":""}