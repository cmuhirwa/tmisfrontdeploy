{"version":3,"sources":["containers/CandidateSwaping/PermutationItem.tsx","containers/CandidateSwaping/HeaderSwapping.tsx","containers/CandidateSwaping/CandidateSwaping.tsx"],"names":["PermutationItem","permutation","more","approveUser","approveReb","loading","close","useState","expandItem","setExpand","expand","user_1","usersInfo","find","itm","user_id","user_one","user_2","user_two","school_1","schools","school_code","school_one","school_2","school_two","UserComponent","user","school","undefined","className","size","label","value","full_name","inline","staff_code","nid","sex","phone_numbers","marital_status","map","i","school_name","onClick","theme","bind","reb_status","permutation_code","position_code","position_name","qualification_name","role","user_one_date","user_two_date","permutation_status","permutation_id","HeaderSwapping","back","title","Button","_CandidateSwaping","props","setTab","setState","selected_option","cleanError","setTimeout","error","msg","target","componentDidMount","appStart","auth","loading_permutations","FC_GetMyPermutation","status","data","length","my_permutations","searchUser","e","preventDefault","state","search_nid","console","log","loading_user","FC_GetUserProfile","position","userApprovePermutationUser","perm_id","window","confirm","loading_approve_permutation","FC_UserApprovePermutation","generatePermutation","alert","basic","academic_calender","academic_year_id","qualification_id","role_id","loading_request","FC_CreatePermutation","res_data","transfer_success","searchUserByCode","loading_user_by_code","found_permutations","FC_SearchPermutationByCode","search_code","selected_permutation","selected_permutation_list","current","this","DashboardContainer","Heading","icon","MdAdd","id","description","MdOutlinePassword","Icon","Loading","transparent","el","user1","user2","school1","school2","colSpan","Alert","onSubmit","TextInput","onChange","placeholder","name","type","district_name","disabled","Input_className","dataEl","fixed","React","Component","CandidateSwaping","connect"],"mappings":"0JAoUeA,IAjTmC,SAAC,GAO9B,IANnBC,EAMkB,EANlBA,YAMkB,IALlBC,YAKkB,SAJlBC,EAIkB,EAJlBA,YACAC,EAGkB,EAHlBA,WAGkB,IAFlBC,eAEkB,SADlBC,EACkB,EADlBA,MAEA,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAmBC,EAAnB,KAEIC,GAAkB,IAATR,GAAuBM,EAChCG,EAASV,EAAYW,UAAUC,MACjC,SAACC,GAAD,OAASA,EAAIC,UAAYd,EAAYe,YAEnCC,EAAShB,EAAYW,UAAUC,MACjC,SAACC,GAAD,OAASA,EAAIC,UAAYd,EAAYiB,YAEnCC,EAAWlB,EAAYmB,QAAQP,MACjC,SAACC,GAAD,OAASA,EAAIO,cAAgBpB,EAAYqB,cAEvCC,EAAWtB,EAAYmB,QAAQP,MACjC,SAACC,GAAD,OAASA,EAAIO,cAAgBpB,EAAYuB,cAGvCC,EAAgB,SAClBC,EACAC,GAEA,YAAaC,IAATF,QAAiCE,IAAXD,EACjB,qBAAKE,UAAU,0BAAf,4BAGP,sBAAKA,UAAS,wCAAd,UACE,sBACEA,UAAS,mCACI,IAAXnB,EAAkB,GAAK,gBAF3B,UAKE,kCACE,cAAC,IAAD,CAAcmB,UAAU,gBAAgBC,KAAMpB,EAAS,GAAK,OAE9D,qBAAKmB,UAAU,cAAf,SACG,CACC,CACEE,MAAO,UACPC,MAAON,EAAKO,UACZ/B,MAAM,EACNgC,QAAQ,GAEV,CACEH,MAAO,eACPC,MAAON,EAAKS,WACZjC,MAAM,EACNgC,QAAQ,GAEV,CACEH,MAAO,QACPC,MAAON,EAAKU,IACZlC,MAAM,EACNgC,QAAQ,GAEV,CACEH,MAAO,QACPC,MAAON,EAAKW,IACZnC,MAAM,EACNgC,QAAQ,GAEV,CACEH,MAAO,iBACPC,MAAON,EAAKY,cACZJ,QAAQ,EACRhC,MAAM,GAER,CACE6B,MAAO,mBACPC,MAAON,EAAKa,eACZL,QAAQ,EACRhC,MAAM,IAERsC,KAAI,SAAC1B,EAAK2B,GACV,OAAiB,IAAb3B,EAAIZ,OAA6B,IAAXQ,EAAyB,KAC9CI,EAAIkB,MAEP,0BAEEH,UAAS,oBACQ,IAAff,EAAIoB,OAAkB,yBAA2B,IAHrD,UAME,sBAAML,UAAU,8BAAhB,gBACGf,QADH,IACGA,OADH,EACGA,EAAKiB,QAER,oBACEF,UAAS,YACQ,IAAff,EAAIoB,OAAmB,QAAU,OAD1B,qBADX,gBAKGpB,QALH,IAKGA,OALH,EAKGA,EAAKkB,UAbHS,GAHc,aAwB7B,sBAAKZ,UAAU,4CAAf,UACE,yBAASA,UAAU,OAAnB,SACE,cAAC,IAAD,CAAUA,UAAU,gBAAgBC,KAAMpB,EAAS,GAAK,OAE1D,qBAAKmB,UAAU,SAAf,SACG,CACC,CACEE,MAAO,gBACPC,MAAOL,EAAON,YACda,QAAQ,EACRhC,MAAM,GAER,CACE6B,MAAO,gBACPC,MAAOL,EAAOe,YACdR,QAAQ,EACRhC,MAAM,IAERsC,KAAI,SAAC1B,EAAK2B,GACV,OAAiB,IAAb3B,EAAIZ,OAA4B,IAAXQ,EAAyB,KAC7CI,EAAIkB,MAEP,0BAEEH,UAAS,oBACQ,IAAff,EAAIoB,OAAkB,yBAA2B,IAHrD,UAME,sBAAML,UAAU,8BAAhB,gBACGf,QADH,IACGA,OADH,EACGA,EAAKiB,QAER,oBACEF,UAAS,YACQ,IAAff,EAAIoB,OAAmB,QAAU,OAD1B,qBADX,gBAKGpB,QALH,IAKGA,OALH,EAKGA,EAAKkB,UAbHS,GAHc,iBA2BnC,OACE,sBAAKZ,UAAU,8EAAf,UACGvB,IAAUD,GACT,qBAAKwB,UAAU,gCAAf,SACE,cAAC,IAAD,CACEA,UAAU,GACVc,QAASrC,EAGTsC,MAAM,eALR,qBAWJ,sBACEf,UAAU,wDACVc,QAASlC,EAAUoC,KAAK,GAAOnC,GAFjC,UAIGe,EAAcd,EAAQQ,GACvB,qBAAKU,UAAU,cAAf,SACE,cAAC,KAAD,CACEA,UAAS,kBACoB,aAA3B5B,EAAY6C,WACR,iBACA,kBAHG,KAKThB,KAAM,OAGTL,EAAcR,EAAQM,MAExBb,GACC,sBAAKmB,UAAU,OAAf,UACE,qBAAKA,UAAU,0DAAf,SACG,CACC,CACEE,MAAO,qBACPC,MAAO/B,EAAY8C,iBACnBb,QAAQ,GAEV,CACEH,MAAO,aACPC,MAAM,GAAD,OAAK/B,EAAY+C,cAAjB,cAAoC/C,EAAYgD,eACrDf,QAAQ,GAEV,CACEH,MAAO,uBACPC,MAAO/B,EAAYiD,mBACnBhB,QAAQ,GAEV,CACEH,MAAO,uBACPC,MAAO/B,EAAYkD,KACnBjB,QAAQ,GAEV,CACEH,MAAO,mBACPC,MAAO/B,EAAYmD,cACnBlB,QAAQ,GAEV,CACEH,MAAO,kBACPC,MAAO/B,EAAYoD,cACnBnB,QAAQ,IAEVM,KAAI,SAAC1B,EAAK2B,GAAN,OACJ,0BAEEZ,UAAS,kCACQ,IAAff,EAAIoB,OAAkB,yBAA2B,IAHrD,UAME,sBAAML,UAAU,8BAAhB,gBACGf,QADH,IACGA,OADH,EACGA,EAAKiB,QAER,oBACEF,UAAS,YACQ,IAAff,EAAIoB,OAAmB,QAAU,OAD1B,qBADX,gBAKGpB,QALH,IAKGA,OALH,EAKGA,EAAKkB,UAbHS,QAmBX,sBAAKZ,UAAU,qCAAf,UACE,sBAAKA,UAAU,aAAf,UACG5B,EAAY6C,YACX,0BACEjB,UAAS,0DAC4B,aAAnC5B,EAAYqD,mBACR,8BACA,iCAJR,UAOE,sBAAMzB,UAAU,qBAAhB,yBACA,oBAAIA,UAAS,0BAAb,SACG5B,EAAYqD,wBAKlBrD,EAAY6C,YACX,0BACEjB,UAAS,0DACoB,aAA3B5B,EAAY6C,WACR,8BACA,iCAJR,UAOE,sBAAMjB,UAAU,qBAAhB,wBACA,oBAAIA,UAAS,0BAAb,SACG5B,EAAY6C,mBAKrB,sBAAKjB,UAAU,wBAAf,UACG1B,GACC,cAAC,IAAD,CACEwC,QAASxC,EAAY0C,KAAK,EAAM5C,EAAYsD,gBAC5ClD,QAASA,EACTyB,KAAK,KAHP,iCAQD1B,GACC,mCAC8B,aAA3BH,EAAY6C,YACX,cAAC,IAAD,CACEH,QAASvC,EAAWyC,KAClB,EACA5C,EAAYsD,gBAEdlD,QAASA,EACTyB,KAAK,KANP,iD,oOChRL0B,EAtBiC,SAAC,GAG5B,IAFnBC,EAEkB,EAFlBA,KACAC,EACkB,EADlBA,MAGA,OACE,sBAAK7B,UAAU,0BAAf,UACE,eAAC8B,EAAA,EAAD,CACEhB,QAASc,EACT3B,KAAK,KACLc,MAAM,UACNf,UAAU,gCAJZ,UAME,cAAC,IAAD,CAAaC,KAAM,KACnB,uBAAOD,UAAU,eAAjB,qBAEF,yBAASA,UAAU,qBAAnB,SACE,qBAAIA,UAAU,YAAd,UAA2B6B,EAA3B,a,SCgDFE,E,kDACJ,WAAYC,GAAkB,IAAD,8BAC3B,cAAMA,IA4BRC,OAAS,SAAChD,GAAD,OAAuB,EAAKiD,SAAS,CAAEC,gBAAiBlD,KA7BpC,EA+B7BmD,WAAa,WACXC,YAAW,WACT,EAAKH,SAAS,CACZI,MAAO,CACLC,IAAK,GACLC,OAAQ,UAGX,MAvCwB,EA0C7BC,kBAAoB,WAClB,EAAKC,YA3CsB,EA6C7BA,SAAW,WACT,IAAK,EAAKV,MAAMW,KAAK9C,KAEnB,OADA,EAAKuC,aACE,EAAKF,SAAS,CACnBI,MAAO,CACLE,OAAQ,aACRD,IAAK,8DAKX,EAAKL,SAAS,CACZU,sBAAsB,IAExBC,YAAoB,EAAKb,MAAMW,KAAK9C,KAAKX,SAAS,SAAC4D,EAAQC,EAAMR,GAC/D,IAAe,IAAXO,EAAiB,CAEnB,IAAKC,EAAKC,OAER,OADA,EAAKZ,aACE,EAAKF,SAAS,CACnBU,sBAAsB,EACtBN,MAAO,CACLE,OAAQ,aACRD,IAAKA,KAIX,EAAKL,SAAS,CACZU,sBAAsB,EACtBK,gBAAiBF,EACjBT,MAAO,CACLE,OAAQ,KACRD,IAAK,WAIT,EAAKH,aACL,EAAKF,SAAS,CACZU,sBAAsB,EACtBN,MAAO,CACLE,OAAQ,aACRD,IAAKA,SAtFc,EA6F7BW,WAAa,SAACC,GAGZ,OAFAA,EAAEC,iBAEG,EAAKpB,MAAMW,KAAK9C,KAYgB,KAAjC,EAAKwD,MAAMC,WAAWN,QACxB,EAAKd,SAAS,CACZI,MAAO,CACLE,OAAQ,oBACRD,IAAK,wCAGT,EAAKH,eAIPmB,QAAQC,IAAI,iBAER,EAAKxB,MAAMW,KAAK9C,KAAKU,MAAQ,EAAK8C,MAAMC,YAC1C,EAAKpB,SAAS,CACZI,MAAO,CACLE,OAAQ,oBACRD,IAAK,uFAGT,EAAKH,eAKP,EAAKF,SAAS,CACZuB,cAAc,EACdnB,MAAO,CACLE,OAAQ,KACRD,IAAK,WAITmB,YAAkB,EAAKL,MAAMC,YAAY,SAACR,EAAQC,EAAMR,GAW5C,IAAD,GAVM,IAAXO,EACW,OAATC,EACF,EAAKb,SAAS,CACZ9C,OAAQ2D,EACRU,cAAc,EACdnB,MAAO,CACLE,OAAQ,oBACRD,IAAc,OAATQ,EAAgB,qCAAuCR,KAK5DQ,EAAK5B,iBAAL,UAAuB,EAAKa,MAAMW,KAAKgB,gBAAvC,aAAuB,EAA0BxC,eACnD,EAAKe,SAAS,CACZ9C,OAAQ,KACRqE,cAAc,EACdnB,MAAO,CACLE,OAAQ,oBACRD,IAAI,yCAAD,OAA2CQ,EAAK3C,UAAhD,sCAIP,EAAK8B,SAAS,CACZ9C,OAAQ2D,EACRU,cAAc,IAKpB,EAAKvB,SAAS,CACZuB,cAAc,EACdnB,MAAO,CACLE,OAAQ,oBACRD,IAAc,OAATQ,EAAgB,qCAAuCR,WA9ElE,EAAKL,SAAS,CACZI,MAAO,CACLE,OAAQ,oBACRD,IAAK,iEAGT,EAAKH,eAvGoB,EAsL7BwB,2BAA6B,SAACC,GACZ,OAAZA,GAICC,OAAOC,QAAQ,uDAIpB,EAAK7B,SAAS,CACZ8B,6BAA6B,IAE/BC,YACE,CACEvC,eAAgBmC,EAChBpC,mBAAoB,aAEtB,SAACqB,EAAQC,EAAMR,IACE,IAAXO,GACF,EAAKZ,SAAS,CACZ8B,6BAA6B,EAE7B1B,MAAO,CACLE,OAAQ,8BACRD,IAAK,qDAITF,YAAW,WACT,EAAKK,aACJ,MAEH,EAAKR,SAAS,CACZI,MAAO,CACLE,OAAQ,4BACRD,IAAKA,GAEPyB,6BAA6B,SA3NV,EAkO7BE,oBAAsB,WAAO,IAAD,MAC1B,IACGJ,OAAOC,QAAP,iCACiB,EAAKV,MAAMjE,cAD5B,aACiB,EAAmBgB,UADpC,+BAID,OAAO0D,OAAOK,MAAP,mCACa,EAAKd,MAAMjE,cADxB,aACa,EAAmBgB,UADhC,8DAIT,IAAK,EAAK4B,MAAMW,KAAK9C,OAAS,EAAKmC,MAAMW,KAAK7C,OAC5C,OAAO,EAAKoC,SAAS,CACnBI,MAAO,CACLE,OAAQ,oBACRD,IAAK,gCAIX,IAAK,EAAKP,MAAMoC,MAAMC,kBACpB,OAAO,EAAKnC,SAAS,CACnBI,MAAO,CACLE,OAAQ,oBACRD,IAAK,sEAIX,GAA0B,OAAtB,EAAKc,MAAMjE,OACb,OAAO,EAAK8C,SAAS,CACnBI,MAAO,CACLE,OAAQ,oBACRD,IAAK,sEAIX,IAAIQ,EAAyB,CAE3BuB,iBAAgB,UAAE,EAAKtC,MAAMoC,MAAMC,yBAAnB,aAAE,EAAoCC,iBACtDnD,cAAe,EAAKkC,MAAMjE,OAAO+B,cAC7B,EAAKkC,MAAMjE,OAAO+B,cAClB,GACJoD,iBAAkB,EAAKlB,MAAMjE,OAAOmF,iBAChC,EAAKlB,MAAMjE,OAAOmF,iBAClB,GACJC,QAAS,EAAKnB,MAAMjE,OAAOoF,QAAU,EAAKnB,MAAMjE,OAAOoF,QAAU,GACjE/E,WAAY,EAAKuC,MAAMW,KAAK7C,OAAON,YACnCG,WAAY,EAAK0D,MAAMjE,OAAOI,YAC1B,EAAK6D,MAAMjE,OAAOI,YAClB,GACJL,SAAU,EAAK6C,MAAMW,KAAK9C,KAAKX,QAC/BG,SAAU,EAAKgE,MAAMjE,OAAOF,QAAU,EAAKmE,MAAMjE,OAAOF,QAAU,IAGpE,EAAKgD,SAAS,CAAEuC,iBAAiB,IACjCC,YAAqB3B,GAAM,SAACD,EAAQC,EAAMR,IACzB,IAAXO,EACF,EAAKZ,SAAS,CACZuC,iBAAiB,EACjBE,SAAU5B,EACV6B,kBAAkB,IAGpB,EAAK1C,SAAS,CACZuC,iBAAiB,EACjBnC,MAAO,CACLC,IAAKA,EACLC,OAAQ,2BAnSW,EA2S7BqC,iBAAmB,WAEjB,EAAK3C,SAAS,CACZ4C,sBAAsB,EACtBxC,MAAO,CACLE,OAAQ,KACRD,IAAK,IAEPwC,mBAAoB,KAGtBC,YAA2B,EAAK3B,MAAM4B,aAAa,SAACnC,EAAQC,EAAMR,IACjD,IAAXO,EACEC,EAAKC,QAAU,GACjBO,QAAQC,IAAI,iBAEZ,EAAKtB,SAAS,CACZ6C,mBAAoB,GACpBD,sBAAsB,EACtBxC,MAAO,CACLE,OAAQ,oBACRD,IAAK,mCAKT,EAAKL,SAAS,CACZ6C,mBAAoBhC,EACpB+B,sBAAsB,KAI1B,EAAK5C,SAAS,CACZ6C,mBAAoB,GACpBD,sBAAsB,EACtBxC,MAAO,CACLE,OAAQ,oBACRD,IAAKA,KAGT,EAAKH,kBAhVT,EAAKiB,MAAQ,CACX7E,SAAS,EACT2D,gBAAiB,KACjBmB,WAAY,GACZG,cAAc,EACdrE,OAAQ,KACRkD,MAAO,CACLC,IAAK,GACLC,OAAQ,MAEViC,iBAAiB,EACjBG,kBAAkB,EAClBD,SAAU,KAEVM,YAAa,GACbH,sBAAsB,EACtB1G,YAAa,KACb2G,mBAAoB,GACpB9B,gBAAiB,GACjBL,sBAAsB,EACtBsC,qBAAsB,KACtBlB,6BAA6B,EAC7BmB,0BAA2B,IAzBF,E,0CAwV7B,WAAU,IAAD,WACHC,EAAUC,KAAKhC,MAAMJ,gBAAgBjE,MACvC,SAACC,GAAD,aACEA,EAAIqF,oBAAJ,UACA,EAAKtC,MAAMoC,MAAMC,yBADjB,aACA,EAAoCC,qBAGxC,OAAoC,IAAhCe,KAAKhC,MAAMuB,iBAEX,eAACU,EAAA,EAAD,CAAoBtF,UAAU,yDAA9B,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBAAyBC,KAAM,MAExD,oBAAID,UAAU,yCAAd,wDAGA,oBAAGA,UAAU,qBAAb,mDACyC,IACvC,sCAAIqF,KAAKhC,MAAMjE,cAAf,aAAI,EAAmBgB,YAFzB,IAEwC,uBAFxC,8CAKA,sBAAKJ,UAAU,gEAAf,UACE,oBAAIA,UAAU,gBAAd,+BACA,oBAAIA,UAAU,qBAAd,mBACGqF,KAAKhC,MAAMsB,gBADd,aACG,EAAqBzD,yBAI5B,qBAAKlB,UAAU,gCAAf,SACE,cAAC8B,EAAA,EAAD,CACEf,MAAM,eACND,QAAS,kBACP,EAAKoB,SAAS,CACZ0C,kBAAkB,KAJxB,yCAcHS,KAAKrD,MAAMW,KAAK9C,KAOnB,qCACkC,OAA/BwF,KAAKhC,MAAMlB,iBACV,0CACepC,IAAZqF,IACqC,IAApCC,KAAKhC,MAAMT,sBACT,eAAC0C,EAAA,EAAD,CAAoBtF,UAAU,oDAA9B,UACE,cAACuF,EAAA,EAAD,CAASvF,UAAU,6DAAnB,0BAIA,qBAAKA,UAAU,uCAAf,SACG,CACC,CACEwF,KAAMC,IACN5D,MAAO,mCACP6D,GAAI,EACJC,YACE,6DACF7E,QAAS,kBAAM,EAAKmB,OAAO,KAE7B,CACEuD,KAAMI,IACN/D,MAAO,2BACP6D,GAAI,EACJC,YACE,gEACF7E,QAAS,kBAAM,EAAKmB,OAAO,MAE7BtB,KAAI,SAAC1B,EAAK2B,GACV,IAAIiF,EAAO5G,EAAIuG,KACf,OACE,sBAEE1E,QAAS7B,EAAI6B,QACbd,UAAU,wFAHZ,UAKE,yBAASA,UAAU,6FAAnB,SACE,cAAC6F,EAAD,CAAM5F,KAAM,OAEd,0BAASD,UAAU,cAAnB,UACE,oBAAIA,UAAU,yBAAd,SACGf,EAAI4C,QAEP,mBAAG7B,UAAU,wBAAb,SACGf,EAAI0G,mBAZJ/E,YAsBkB,IAApCyE,KAAKhC,MAAMT,sBACV,qBAAK5C,UAAU,4CAAf,SACE,cAAC8F,EAAA,EAAD,CAAS9F,UAAU,yBAIkB,IAAtCqF,KAAKhC,MAAMJ,gBAAgBD,SAC5B,eAACsC,EAAA,EAAD,CACES,aAAW,EACX/F,UAAU,yDAFZ,UAIE,qBAAIA,UAAU,oDAAd,4BACkB,IAChB,uCAAQqF,KAAKhC,MAAMJ,gBAAgBD,OAAnC,WAEmC,IAApCqC,KAAKhC,MAAMT,qBACV,qBAAK5C,UAAU,4BAAf,SACE,cAAC8F,EAAA,EAAD,CAAS9F,UAAU,uBAEnBqF,KAAKhC,MAAMJ,gBAAgBD,QAAU,EACvC,sBAAKhD,UAAU,4BAAf,UACE,oBAAIA,UAAU,yBAAd,SACE,cAAC,KAAD,CAAgBA,UAAU,cAG5B,oBAAIA,UAAU,oBAAd,mCACA,oBAAIA,UAAU,qBAAd,uCAKF,mCACE,qBAAKA,UAAU,cAAf,SACE,wBAAOA,UAAU,kBAAjB,UACE,gCACE,qBAAIA,UAAU,WAAd,UACE,oBAAIA,UAAU,uBAAd,eACA,qBAAIA,UAAU,kCAAd,wBACc,IACZ,sBAAMA,UAAU,iDAAhB,0BAIF,oBAAIA,UAAU,kCAAd,sBAGA,oBAAIA,UAAU,kCAAd,yBAGA,oBAAIA,UAAU,kCAAd,sBAGA,oBAAIA,UAAU,uBAAd,0BAKA,oBAAIA,UAAU,uBAAd,wBAIJ,gCACGqF,KAAKhC,MAAMJ,gBAAgBtC,KAC1B,SAACqF,EAAgCpF,GAE/B,IAAIqF,EAAQD,EAAGjH,UAAUC,MACvB,SAACC,GAAD,OAASA,EAAIC,UAAY8G,EAAG7G,YAE1B+G,EAAQF,EAAGjH,UAAUC,MACvB,SAACC,GAAD,OAASA,EAAIC,UAAY8G,EAAG3G,YAG1B8G,EAAUH,EAAGzG,QAAQP,MACvB,SAACC,GAAD,OAASA,EAAIO,cAAgBwG,EAAGvG,cAE9B2G,EAAUJ,EAAGzG,QAAQP,MACvB,SAACC,GAAD,OAASA,EAAIO,cAAgBwG,EAAGrG,cAElC,OACE,EAAK0D,MAAM8B,4BACXa,EAAGtE,eAGD,oBAAY1B,UAAU,GAAtB,SACE,oBAAIqG,QAAS,GAAIrG,UAAU,OAA3B,SACE,cAAC7B,EAAA,EAAD,CACEE,MAAI,EACJD,YAAa4H,OAJVpF,GAWX,eAAC,WAAD,WACE,6BACE,oBAAIZ,UAAU,UAEhB,qBACEA,UAAU,iDACVc,QAAS,kBACP,EAAKoB,SAAS,CACZiD,0BACEa,EAAGtE,eAAiB,MAL5B,UASE,oBAAI1B,UAAU,aAAd,SAA4BY,EAAI,IAChC,qBAAIZ,UAAU,oCAAd,UACE,oBAAIA,UAAU,YAAd,gBACGiG,QADH,IACGA,OADH,EACGA,EAAO7F,YAEV,sBACEyB,MAAM,aACN7B,UAAU,wBAFZ,gBAIGiG,QAJH,IAIGA,OAJH,EAIGA,EAAO3F,gBAGZ,qBAAIN,UAAU,oCAAd,UACE,oBAAIA,UAAU,YAAd,gBACGmG,QADH,IACGA,OADH,EACGA,EAAStF,cAEZ,sBACEgB,MAAM,cACN7B,UAAU,wBAFZ,SAIGgG,EAAGvG,gBAIR,qBAAIO,UAAU,sCAAd,UACE,oBAAIA,UAAU,YAAd,gBACGkG,QADH,IACGA,OADH,EACGA,EAAO9F,YAEV,sBACEyB,MAAM,aACN7B,UAAU,wBAFZ,gBAIGkG,QAJH,IAIGA,OAJH,EAIGA,EAAO5F,gBAGZ,qBAAIN,UAAU,sCAAd,UACE,oBAAIA,UAAU,YAAd,gBACGoG,QADH,IACGA,OADH,EACGA,EAASvF,cAEZ,sBACEgB,MAAM,cACN7B,UAAU,wBAFZ,SAIGgG,EAAGrG,gBAIR,qBAAIK,UAAU,aAAd,UACE,qBAAIA,UAAU,UAAd,mBACQ,4BAAIgG,EAAGvE,wBAEf,uBACA,qBAAIzB,UAAU,UAAd,kBACO,4BAAIgG,EAAG/E,mBAIhB,qBAAIjB,UAAU,aAAd,UACE,qBAAIA,UAAU,UAAd,sBACW,4BAAIgG,EAAGzE,mBAElB,uBACA,qBAAIvB,UAAU,UAAd,qBACU,4BAAIgG,EAAGxE,mBAEjB,uBACA,qBAAIxB,UAAU,UAAd,kBACO,4BAAIgG,EAAGxE,2BAhFLZ,qBAkGP,IAA/ByE,KAAKhC,MAAMlB,iBACV,eAACmD,EAAA,EAAD,CAAoBtF,UAAU,oDAA9B,UACE,cAAC,EAAD,CACE6B,MAAM,mCACND,KAAM,WACJ,GAA0B,OAAtB,EAAKyB,MAAMjE,OACb,OAAO,EAAK8C,SAAS,CACnB9C,OAAQ,OAGZ,EAAK6C,OAAO,SAIO,OAAtBoD,KAAKhC,MAAMjE,QACV,sBAAKY,UAAU,mBAAf,UACE,cAAC,IAAD,CAAiBC,KAAM,GAAID,UAAU,0BACrC,oBAAIA,UAAU,wCAAd,2CAGA,oBAAGA,UAAU,qBAAb,yEAEE,uBAFF,gFAOA,sBAAKA,UAAU,gCAAf,UAC+B,sBAA5BqF,KAAKhC,MAAMf,MAAME,QAChB,cAAC8D,EAAA,EAAD,CAAOvF,MAAM,SAAb,SAAuBsE,KAAKhC,MAAMf,MAAMC,MAG1C,8BACE,uBACEgE,SAAUlB,KAAKnC,WACflD,UAAS,6EACqB,sBAA5BqF,KAAKhC,MAAMf,MAAME,OACb,qCACA,IALR,UAQE,cAACgE,EAAA,EAAD,CACEC,SAAU,SAACtD,GACL,EAAKE,MAAMC,WAAWN,OAAS,IACjC,EAAKd,SAAS,CAAEoB,WAAYH,EAAEX,OAAOrC,SAEzCH,UAAU,SACVG,MAAOkF,KAAKhC,MAAMC,WAClBhB,MAAO,GACPpC,MAAO,GACPwG,YAAa,GACbC,KAAM,GACNC,KAAK,WAEP,cAAC9E,EAAA,EAAD,CACE7B,KAAK,KACLD,UAAU,OACVxB,QAAS6G,KAAKhC,MAAMI,aACpBmD,KAAK,SAJP,oCAca,OAAtBvB,KAAKhC,MAAMjE,QACV,qCACG,KAC4B,IAA5BiG,KAAKhC,MAAMI,aACV,qBAAKzD,UAAU,2BAAf,SACE,cAAC8F,EAAA,EAAD,MAGF,sBAAK9F,UAAU,wDAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CAAcC,KAAM,IAAKD,UAAU,oBAErC,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,uDAAd,0BAGA,0BAASA,UAAU,2BAAnB,UACE,uBAAOA,UAAU,6BAAjB,kBAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAOmB,SAGvB,0BAASP,UAAU,2BAAnB,UACE,uBAAOA,UAAU,6BAAjB,yBAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAOkB,gBAGvB,0BAASN,UAAU,2BAAnB,UACE,uBAAOA,UAAU,wBAAjB,4BAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAOgB,kBAIzB,sBAAKJ,UAAU,cAAf,UACE,oBAAIA,UAAU,uDAAd,8BAGA,0BAASA,UAAU,2BAAnB,UACE,uBAAOA,UAAU,6BAAjB,0BAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAOI,iBAGvB,0BAASQ,UAAU,2BAAnB,UACE,uBAAOA,UAAU,wBAAjB,0BAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAOyB,iBAIvB,0BAASb,UAAU,2BAAnB,UACE,uBAAOA,UAAU,wBAAjB,8BAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAOyH,mBAIvB,0BAAS7G,UAAU,2BAAnB,UACE,uBAAOA,UAAU,6BAAjB,4BAGA,oBAAIA,UAAU,iBAAd,SACGqF,KAAKhC,MAAMjE,OAAO+B,yBAK3B,qBAAKnB,UAAU,oCAAf,SACE,cAAC8B,EAAA,EAAD,CACEhB,QAASuE,KAAKnB,oBACd1F,QAAS6G,KAAKhC,MAAMoB,gBAFtB,qDAckB,IAA/BY,KAAKhC,MAAMlB,iBACV,mCAC4C,IAAzCkD,KAAKhC,MAAM0B,mBAAmB/B,OAC7B,eAACsC,EAAA,EAAD,CAAoBtF,UAAU,oDAA9B,UACE,cAAC,EAAD,CACE6B,MAAM,2BACND,KAAMyD,KAAKpD,OAAOjB,KAAKqE,KAAM,QAE/B,qBAAKrF,UAAU,MAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CACEC,KAAM,GACND,UAAU,0BAEZ,oBAAIA,UAAU,wCAAd,mCAGA,mBAAGA,UAAU,qBAAb,8DAIA,sBAAKA,UAAU,qBAAf,UAC+B,sBAA5BqF,KAAKhC,MAAMf,MAAME,QAChB,cAAC8D,EAAA,EAAD,CAAOvF,MAAM,SAAb,SAAuBsE,KAAKhC,MAAMf,MAAMC,MAG1C,sBACEvC,UAAS,8EACqB,sBAA5BqF,KAAKhC,MAAMf,MAAME,OACb,qCACA,IAJR,UAOE,cAACgE,EAAA,EAAD,CACEC,SAAU,SAACtD,GAET,EAAKjB,SAAS,CACZ+C,YAAa9B,EAAEX,OAAOrC,MACtBmC,MAAO,CACLC,IAAK,GACLC,OAAQ,SAIdsE,SAAUzB,KAAKhC,MAAMyB,qBACrB9E,UAAU,SACVG,MAAOkF,KAAKhC,MAAM4B,YAClB3C,MAAO,GACPpC,MAAO,GACPD,KAAK,KACLyG,YAAa,GACbC,KAAM,GACNC,KAAK,SACLG,gBAAgB,KAElB,cAACjF,EAAA,EAAD,CACE7B,KAAK,KACLD,UAAU,KACVxB,QAAS6G,KAAKhC,MAAMyB,qBACpBhE,QAASuE,KAAKR,iBAJhB,iCAcV,eAACS,EAAA,EAAD,WACE,sBAAKtF,UAAU,0BAAf,UACE,oBAAIA,UAAU,sCAAd,yBAGA,cAAC8B,EAAA,EAAD,CACEf,MAAM,eACND,QAAS,kBACP,EAAKoB,SAAS,CACZ6C,mBAAoB,MAJ1B,sBAWF,qBAAK/E,UAAU,GAAf,SACGqF,KAAKhC,MAAM0B,mBAAmBpE,KAAI,SAACqG,EAAQpG,GAAT,OACjC,cAACzC,EAAA,EAAD,CAEEE,MAAI,EACJD,YAAa4I,EACb1I,YAAa,EAAKsF,4BAHbhD,aAYU,gCAA5ByE,KAAKhC,MAAMf,MAAME,QAChB,cAAC8D,EAAA,EAAD,CAAOW,OAAK,EAAClG,MAAM,UAAnB,SACGsE,KAAKhC,MAAMf,MAAMC,SAtgBtB,cAAC+C,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,yD,GAvYsBY,IAAMC,WA25BzBC,EAAmBC,aAPR,SAAC,GAIvB,MAAO,CAAE1E,KADqC,EAF9CA,KAGqByB,MADyB,EAD9CA,SAKuD,GAAzBiD,CAA6BtF","file":"static/js/43.4686bb5e.chunk.js","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { MdAccountBox, MdSwapHorizontalCircle } from \"react-icons/md\";\nimport {\n  PermutationItem__Interface,\n  PermutationSchool__Interface,\n  PermutationUser__Interface,\n} from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\n\ntype PermutationItemProps = {\n  permutation: PermutationItem__Interface;\n  more?: boolean;\n  approveReb?: (id: string | null) => void;\n  approveUser?: (id: string | null) => void;\n  loading?: boolean;\n  close?: () => void;\n};\n\nconst PermutationItem: FC<PermutationItemProps> = ({\n  permutation,\n  more = false,\n  approveUser,\n  approveReb,\n  loading = false,\n  close,\n}): ReactElement => {\n  const [expandItem, setExpand] = useState(false);\n\n  let expand = more === true ? true : expandItem;\n  let user_1 = permutation.usersInfo.find(\n    (itm) => itm.user_id === permutation.user_one\n  );\n  let user_2 = permutation.usersInfo.find(\n    (itm) => itm.user_id === permutation.user_two\n  );\n  let school_1 = permutation.schools.find(\n    (itm) => itm.school_code === permutation.school_one\n  );\n  let school_2 = permutation.schools.find(\n    (itm) => itm.school_code === permutation.school_two\n  );\n\n  let UserComponent = (\n    user: PermutationUser__Interface | undefined,\n    school: PermutationSchool__Interface | undefined\n  ) => {\n    if (user === undefined || school === undefined)\n      return <div className=\"p-2 text-center text-lg\">No users found</div>;\n\n    return (\n      <div className={`flex-1 w-full rounded bg-white border`}>\n        <div\n          className={`rounded m-1 border flex ${\n            expand === true ? \"\" : \"items-center\"\n          }`}\n        >\n          <section>\n            <MdAccountBox className=\"text-gray-400\" size={expand ? 80 : 30} />\n          </section>\n          <div className=\"flex-1 pl-2\">\n            {[\n              {\n                label: \"Names: \",\n                value: user.full_name,\n                more: true,\n                inline: false,\n              },\n              {\n                label: \"Staff code: \",\n                value: user.staff_code,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"NID: \",\n                value: user.nid,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"Sex: \",\n                value: user.sex,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"Phone number: \",\n                value: user.phone_numbers,\n                inline: true,\n                more: false,\n              },\n              {\n                label: \"Martial status: \",\n                value: user.marital_status,\n                inline: true,\n                more: false,\n              },\n            ].map((itm, i) => {\n              if (itm.more === false && expand === false) return null;\n              if (!itm.value) return null;\n              return (\n                <section\n                  key={i}\n                  className={`border-b ${\n                    itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                  }`}\n                >\n                  <span className=\"text-sm text-gray-500 block\">\n                    {itm?.label}\n                  </span>\n                  <h2\n                    className={` ${\n                      itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                    } font-bold block `}\n                  >\n                    {itm?.value}\n                  </h2>\n                </section>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"rounded m-1 border flex items-center mt-3\">\n          <section className=\"px-4\">\n            <FaSchool className=\"text-gray-400\" size={expand ? 50 : 20} />\n          </section>\n          <div className=\"flex-1\">\n            {[\n              {\n                label: \"School code: \",\n                value: school.school_code,\n                inline: true,\n                more: true,\n              },\n              {\n                label: \"School name: \",\n                value: school.school_name,\n                inline: true,\n                more: false,\n              },\n            ].map((itm, i) => {\n              if (itm.more === true && expand === false) return null;\n              if (!itm.value) return null;\n              return (\n                <section\n                  key={i}\n                  className={`border-b ${\n                    itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                  }`}\n                >\n                  <span className=\"text-sm text-gray-500 block\">\n                    {itm?.label}\n                  </span>\n                  <h2\n                    className={` ${\n                      itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                    } font-bold block `}\n                  >\n                    {itm?.value}\n                  </h2>\n                </section>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white p-2 mb-3 rounded animate__animated animate__zoomIn animate__faster\">\n      {close && !loading && (\n        <div className=\"text-right pb-2 border-b mb-2\">\n          <Button\n            className=\"\"\n            onClick={close}\n            // loading={}\n            // size=\"sm\"\n            theme=\"danger-light\"\n          >\n            Close\n          </Button>\n        </div>\n      )}\n      <div\n        className=\"items-center flex flex-col md:flex-row cursor-pointer\"\n        onClick={setExpand.bind(this, !expand)}\n      >\n        {UserComponent(user_1, school_1)}\n        <div className=\"-mx-2 z-40 \">\n          <MdSwapHorizontalCircle\n            className={`rounded ${\n              permutation.reb_status === \"Approved\"\n                ? \"text-green-500\"\n                : \"text-accent-900\"\n            } `}\n            size={50}\n          />\n        </div>\n        {UserComponent(user_2, school_2)}\n      </div>\n      {expand && (\n        <div className=\"pt-3\">\n          <div className=\"p-1 px-2 rounded mt-2 border grid lg:grid-cols-3 gap-1 \">\n            {[\n              {\n                label: \"Permutation Code: \",\n                value: permutation.permutation_code,\n                inline: true,\n              },\n              {\n                label: \"Position: \",\n                value: `${permutation.position_code} - ${permutation.position_name}`,\n                inline: true,\n              },\n              {\n                label: \"Qualification name: \",\n                value: permutation.qualification_name,\n                inline: true,\n              },\n              {\n                label: \"Qualification name: \",\n                value: permutation.role,\n                inline: true,\n              },\n              {\n                label: \"Initiated date: \",\n                value: permutation.user_one_date,\n                inline: true,\n              },\n              {\n                label: \"Accepted date: \",\n                value: permutation.user_two_date,\n                inline: true,\n              },\n            ].map((itm, i) => (\n              <section\n                key={i}\n                className={`border-b border-l pl-2 ${\n                  itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                }`}\n              >\n                <span className=\"text-sm text-gray-500 block\">\n                  {itm?.label}\n                </span>\n                <h2\n                  className={` ${\n                    itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                  } font-bold block `}\n                >\n                  {itm?.value}\n                </h2>\n              </section>\n            ))}\n          </div>\n\n          <div className=\"grid grid-cols-2 pt-3 items-center\">\n            <div className=\"flex gap-1\">\n              {permutation.reb_status && (\n                <section\n                  className={`flex items-center gap-1 px-2 py-0.5 rounded-lg  ${\n                    permutation.permutation_status === \"Accepted\"\n                      ? \"bg-green-100 text-green-900\"\n                      : \"bg-accent-400 text-accent-900\"\n                  }`}\n                >\n                  <span className=\"text-xs opacity-70\">User status</span>\n                  <h5 className={`text  block  font-bold `}>\n                    {permutation.permutation_status}\n                  </h5>\n                </section>\n              )}\n\n              {permutation.reb_status && (\n                <section\n                  className={`flex items-center gap-1 px-2 py-0.5 rounded-lg  ${\n                    permutation.reb_status === \"Approved\"\n                      ? \"bg-green-100 text-green-900\"\n                      : \"bg-accent-400 text-accent-900\"\n                  }`}\n                >\n                  <span className=\"text-xs opacity-70\">REB status</span>\n                  <h5 className={`text  block  font-bold `}>\n                    {permutation.reb_status}\n                  </h5>\n                </section>\n              )}\n            </div>\n            <div className=\"text-right grid gap-2\">\n              {approveUser && (\n                <Button\n                  onClick={approveUser.bind(this, permutation.permutation_id)}\n                  loading={loading}\n                  size=\"lg\"\n                >\n                  Approve permutation\n                </Button>\n              )}\n              {approveReb && (\n                <>\n                  {permutation.reb_status !== \"Approved\" && (\n                    <Button\n                      onClick={approveReb.bind(\n                        this,\n                        permutation.permutation_id\n                      )}\n                      loading={loading}\n                      size=\"lg\"\n                    >\n                      Approve permutation\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PermutationItem;\n","import React, { FC, ReactElement } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport Button from \"../../components/Buttons/Button\";\n\ntype HeaderSwappingProps = {\n  back: () => void;\n  title: string;\n};\n\nconst HeaderSwapping: FC<HeaderSwappingProps> = ({\n  back,\n  title,\n}): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"flex pt-2 border-b pb-2\">\n      <Button\n        onClick={back}\n        size=\"sm\"\n        theme=\"default\"\n        className=\"flex flex-center items-center\"\n      >\n        <MdArrowBack size={20} />\n        <label className=\"pl-1 flex-1 \">Back</label>\n      </Button>\n      <section className=\"pl-3 text-gray-600\">\n        <h2 className=\"text-2xl \">{title} </h2>\n      </section>\n    </div>\n  );\n};\nexport default HeaderSwapping;\n","import React, { Fragment } from \"react\";\nimport {\n  MdAccountBox,\n  MdAccountCircle,\n  MdAdd,\n  MdCheckCircle,\n  MdOutlinePassword,\n  MdWarningAmber,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetUserProfile,\n  UserDetailsByNID,\n} from \"../../actions\";\nimport {\n  FC_CreatePermutation,\n  FC_GetMyPermutation,\n  FC_SearchPermutationByCode,\n  FC_UserApprovePermutation,\n  PermutationItem__Interface,\n  SendMutationData,\n  SendPermutation__Interface_Res,\n} from \"../../actions/permutation.action\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport HeaderSwapping from \"./HeaderSwapping\";\nimport PermutationItem from \"./PermutationItem\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n}\n\ninterface AppState {\n  loading: boolean;\n  selected_option: 1 | 2 | null;\n  search_nid: string;\n  loading_user: boolean;\n  user_2: UserDetailsByNID | null;\n  error: {\n    target:\n      | \"main-error\"\n      | \"main-success\"\n      | \"search-user-error\"\n      | \"permutation-error\"\n      | \"search-code-error\"\n      | \"approve-permutation-error\"\n      | \"approve-permutation-success\"\n      | null;\n    msg: string;\n  };\n  loading_request: boolean;\n  transfer_success: boolean;\n  res_data: SendPermutation__Interface_Res | null;\n  // step 2\n  search_code: string;\n  loading_user_by_code: boolean;\n  permutation: any | null;\n  found_permutations: PermutationItem__Interface[];\n  my_permutations: PermutationItem__Interface[];\n  loading_permutations: boolean;\n  selected_permutation: null | string;\n  loading_approve_permutation: boolean;\n  selected_permutation_list: string;\n}\n\nclass _CandidateSwaping extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selected_option: null,\n      search_nid: \"\",\n      loading_user: false,\n      user_2: null,\n      error: {\n        msg: \"\",\n        target: null,\n      },\n      loading_request: false,\n      transfer_success: false,\n      res_data: null,\n      // data\n      search_code: \"\",\n      loading_user_by_code: false,\n      permutation: null,\n      found_permutations: [],\n      my_permutations: [],\n      loading_permutations: false,\n      selected_permutation: null,\n      loading_approve_permutation: false,\n      selected_permutation_list: \"\",\n    };\n  }\n\n  setTab = (itm: 1 | 2 | null) => this.setState({ selected_option: itm });\n\n  cleanError = () => {\n    setTimeout(() => {\n      this.setState({\n        error: {\n          msg: \"\",\n          target: null,\n        },\n      });\n    }, 2000);\n  };\n\n  componentDidMount = () => {\n    this.appStart();\n  };\n  appStart = () => {\n    if (!this.props.auth.user) {\n      this.cleanError();\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"Failed to load your permutations, please try again later\",\n        },\n      });\n    }\n\n    this.setState({\n      loading_permutations: true,\n    });\n    FC_GetMyPermutation(this.props.auth.user.user_id, (status, data, msg) => {\n      if (status === true) {\n        // console.log(data);\n        if (!data.length) {\n          this.cleanError();\n          return this.setState({\n            loading_permutations: false,\n            error: {\n              target: \"main-error\",\n              msg: msg,\n            },\n          });\n        }\n        this.setState({\n          loading_permutations: false,\n          my_permutations: data,\n          error: {\n            target: null,\n            msg: \"\",\n          },\n        });\n      } else {\n        this.cleanError();\n        this.setState({\n          loading_permutations: false,\n          error: {\n            target: \"main-error\",\n            msg: msg,\n          },\n        });\n      }\n    });\n  };\n\n  searchUser = (e: any) => {\n    e.preventDefault();\n\n    if (!this.props.auth.user) {\n      this.setState({\n        error: {\n          target: \"search-user-error\",\n          msg: \"You are not authenticated, please refresh your browser\",\n        },\n      });\n      this.cleanError();\n      return;\n    }\n\n    // Check the nid length\n    if (this.state.search_nid.length !== 16) {\n      this.setState({\n        error: {\n          target: \"search-user-error\",\n          msg: \"National Id must be 16 digits\",\n        },\n      });\n      this.cleanError();\n      return;\n    }\n\n    console.log(\"submit search\");\n\n    if (this.props.auth.user.nid === this.state.search_nid) {\n      this.setState({\n        error: {\n          target: \"search-user-error\",\n          msg: \"You can't search using your own NID, please use the NID of the other teacher\",\n        },\n      });\n      this.cleanError();\n      return;\n    }\n\n    //* Success validation\n    this.setState({\n      loading_user: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n\n    FC_GetUserProfile(this.state.search_nid, (status, data, msg) => {\n      if (status === true) {\n        if (data === null) {\n          this.setState({\n            user_2: data,\n            loading_user: false,\n            error: {\n              target: \"search-user-error\",\n              msg: data === null ? \"The NID you are using is not valid\" : msg,\n            },\n          });\n        } else {\n          // check if they have the same position\n          if (data.position_code !== this.props.auth.position?.position_code) {\n            this.setState({\n              user_2: null,\n              loading_user: false,\n              error: {\n                target: \"search-user-error\",\n                msg: `You don't have the same position with ${data.full_name}, the permutation can't be done`,\n              },\n            });\n          } else {\n            this.setState({\n              user_2: data,\n              loading_user: false,\n            });\n          }\n        }\n      } else {\n        this.setState({\n          loading_user: false,\n          error: {\n            target: \"search-user-error\",\n            msg: data === null ? \"The NID you are using is not valid\" : msg,\n          },\n        });\n      }\n    });\n  };\n\n  userApprovePermutationUser = (perm_id: string | null) => {\n    if (perm_id === null) {\n      return;\n    }\n\n    if (!window.confirm(\"Are you sure you want to confirm this permutation\")) {\n      return;\n    }\n\n    this.setState({\n      loading_approve_permutation: true,\n    });\n    FC_UserApprovePermutation(\n      {\n        permutation_id: perm_id,\n        permutation_status: \"Accepted\",\n      },\n      (status, data, msg) => {\n        if (status === true) {\n          this.setState({\n            loading_approve_permutation: false,\n            // found_permutations: this.state.found_permutations.map(itm => itm.permutation_id === perm_id ? ({...itm, s}))\n            error: {\n              target: \"approve-permutation-success\",\n              msg: \"Your permutation has been approved successfully\",\n            },\n          });\n\n          setTimeout(() => {\n            this.appStart();\n          }, 2000);\n        } else {\n          this.setState({\n            error: {\n              target: \"approve-permutation-error\",\n              msg: msg,\n            },\n            loading_approve_permutation: false,\n          });\n        }\n      }\n    );\n  };\n\n  generatePermutation = () => {\n    if (\n      !window.confirm(\n        `Are you sure ${this.state.user_2?.full_name} is aware of this request?`\n      )\n    )\n      return window.alert(\n        `Please contact ${this.state.user_2?.full_name} and make sure he/she agree with your permutation request`\n      );\n\n    if (!this.props.auth.user || !this.props.auth.school)\n      return this.setState({\n        error: {\n          target: \"permutation-error\",\n          msg: \"Please reload your browser\",\n        },\n      });\n\n    if (!this.props.basic.academic_calender)\n      return this.setState({\n        error: {\n          target: \"permutation-error\",\n          msg: \"Academic information can't be loaded, please reload your browser\",\n        },\n      });\n\n    if (this.state.user_2 === null)\n      return this.setState({\n        error: {\n          target: \"permutation-error\",\n          msg: \"Academic information can't be loaded, please reload your browser\",\n        },\n      });\n\n    let data: SendMutationData = {\n      // academic_year_id: this.props.auth.country,\n      academic_year_id: this.props.basic.academic_calender?.academic_year_id,\n      position_code: this.state.user_2.position_code\n        ? this.state.user_2.position_code\n        : \"\",\n      qualification_id: this.state.user_2.qualification_id\n        ? this.state.user_2.qualification_id\n        : \"\",\n      role_id: this.state.user_2.role_id ? this.state.user_2.role_id : \"\",\n      school_one: this.props.auth.school.school_code,\n      school_two: this.state.user_2.school_code\n        ? this.state.user_2.school_code\n        : \"\",\n      user_one: this.props.auth.user.user_id,\n      user_two: this.state.user_2.user_id ? this.state.user_2.user_id : \"\",\n    };\n\n    this.setState({ loading_request: true });\n    FC_CreatePermutation(data, (status, data, msg) => {\n      if (status === true) {\n        this.setState({\n          loading_request: false,\n          res_data: data,\n          transfer_success: true,\n        });\n      } else {\n        this.setState({\n          loading_request: false,\n          error: {\n            msg: msg,\n            target: \"permutation-error\",\n          },\n        });\n      }\n    });\n  };\n\n  // Add stuffs\n  searchUserByCode = () => {\n    //* Success validation\n    this.setState({\n      loading_user_by_code: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      found_permutations: [],\n    });\n\n    FC_SearchPermutationByCode(this.state.search_code, (status, data, msg) => {\n      if (status === true) {\n        if (data.length <= 0) {\n          console.log(\"no data found\");\n\n          this.setState({\n            found_permutations: [],\n            loading_user_by_code: false,\n            error: {\n              target: \"search-code-error\",\n              msg: \"No permutation request found\",\n            },\n          });\n          // this.cleanError();\n        } else {\n          this.setState({\n            found_permutations: data,\n            loading_user_by_code: false,\n          });\n        }\n      } else {\n        this.setState({\n          found_permutations: [],\n          loading_user_by_code: false,\n          error: {\n            target: \"search-code-error\",\n            msg: msg,\n          },\n        });\n        this.cleanError();\n      }\n    });\n  };\n\n  render() {\n    let current = this.state.my_permutations.find(\n      (itm) =>\n        itm.academic_year_id ===\n        this.props.basic.academic_calender?.academic_year_id\n    );\n\n    if (this.state.transfer_success === true)\n      return (\n        <DashboardContainer className=\"py-2 animate__animated animate__zoomIn animate__faster\">\n          <div className=\"text-center\">\n            <MdCheckCircle className=\"text-green-500 mx-auto\" size={120} />\n\n            <h2 className=\"text-2xl font-bold pt-2 text-green-600\">\n              Your Permutation request has been created!\n            </h2>\n            <p className=\"py-2 text-gray-600\">\n              Now you need to send the code below to{\" \"}\n              <b>{this.state.user_2?.full_name}</b> <br />\n              so that he/she can approve this transfer\n            </p>\n            <div className=\"mx-auto rounded my-1 border py-2 inline-block px-5 bg-gray-50\">\n              <h4 className=\"text-gray-500\">Permutation code:</h4>\n              <h1 className=\"text-3xl font-bold\">\n                {this.state.res_data?.permutation_code}\n              </h1>\n            </div>\n          </div>\n          <div className=\"text-right border-t py-3 mt-4\">\n            <Button\n              theme=\"accent-light\"\n              onClick={() =>\n                this.setState({\n                  transfer_success: false,\n                })\n              }\n            >\n              Go to permutation list\n            </Button>\n          </div>\n        </DashboardContainer>\n      );\n\n    if (!this.props.auth.user)\n      return (\n        <DashboardContainer>\n          <Alert>Please refresh your account or login</Alert>\n        </DashboardContainer>\n      );\n    return (\n      <>\n        {this.state.selected_option === null && (\n          <>\n            {current === undefined &&\n              this.state.loading_permutations === false && (\n                <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n                  <Heading className=\" py-2 lg:pb-3 lg:pt-2 font-light text-center text-gray-500\">\n                    Permutations\n                  </Heading>\n\n                  <div className=\"pt-2 flex gap-3 flex-col lg:flex-row\">\n                    {[\n                      {\n                        icon: MdAdd,\n                        title: \"Generate new permutation request\",\n                        id: 1,\n                        description:\n                          \"You will need the id of the teacher you want to swap with.\",\n                        onClick: () => this.setTab(1),\n                      },\n                      {\n                        icon: MdOutlinePassword,\n                        title: \"Find permutation by code\",\n                        id: 2,\n                        description:\n                          \"You will need a code, that was generated by the other teacher\",\n                        onClick: () => this.setTab(2),\n                      },\n                    ].map((itm, i) => {\n                      let Icon = itm.icon;\n                      return (\n                        <div\n                          key={i}\n                          onClick={itm.onClick}\n                          className=\"p-2  group items-center rounded border flex flex-1 hover:bg-accent-400 cursor-pointer\"\n                        >\n                          <section className=\"p-2 bg-accent-400 rounded group-hover:bg-accent-800 group-hover:text-white text-accent-800\">\n                            <Icon size={40} />\n                          </section>\n                          <section className=\"flex-1 pl-3\">\n                            <h2 className=\"text-xl  text-gray-900\">\n                              {itm.title}\n                            </h2>\n                            <p className=\"text-gray-400 text-sm\">\n                              {itm.description}\n                            </p>\n                          </section>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </DashboardContainer>\n              )}\n\n            {this.state.loading_permutations === true && (\n              <div className=\"py-6 text-center text-6xl text-accent-800\">\n                <Loading className=\"mx-auto text-2xl\" />\n              </div>\n            )}\n\n            {!(this.state.my_permutations.length === 0) && (\n              <DashboardContainer\n                transparent\n                className=\"mt-3 animate__animated animate__fadeIn animate__faster\"\n              >\n                <h2 className=\"text-center text-3xl pb-2 font-bold text-gray-500\">\n                  My permutations{\" \"}\n                  <b>{`(${this.state.my_permutations.length})`}</b>\n                </h2>\n                {this.state.loading_permutations === true ? (\n                  <div className=\"py-6 text-center text-8xl\">\n                    <Loading className=\"mx-auto text-2xl\" />\n                  </div>\n                ) : this.state.my_permutations.length <= 0 ? (\n                  <div className=\"py-4 text-center bg-white\">\n                    <h2 className=\"text-6xl text-gray-600\">\n                      <MdWarningAmber className=\"mx-auto\" />\n                    </h2>\n\n                    <h3 className=\"font-bold text-lg\">No permutation found!</h3>\n                    <h3 className=\"pt-1 text-gray-600\">\n                      Please try again later\n                    </h3>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"p-1 rounded\">\n                      <table className=\" w-full rounded\">\n                        <thead>\n                          <tr className=\"bg-white\">\n                            <th className=\"border p-2 text-left\">#</th>\n                            <th className=\"border p-2 text-left bg-blue-50\">\n                              Candidate 1{\" \"}\n                              <span className=\"text-xs bg-yellow-500 px-2 py-0.5 rounded-full\">\n                                Initiator\n                              </span>\n                            </th>\n                            <th className=\"border p-2 text-left bg-blue-50\">\n                              School 1\n                            </th>\n                            <th className=\"border p-2 text-left bg-blue-50\">\n                              Candidate 1\n                            </th>\n                            <th className=\"border p-2 text-left bg-blue-50\">\n                              School 1\n                            </th>\n                            <th className=\"border p-2 text-left\">\n                              Users status\n                            </th>\n                            {/* <th className=\"border p-2 text-left\">REB status</th>\n                            <th className=\"border p-2 text-left\">Code</th> */}\n                            <th className=\"border p-2 text-left\">Dates</th>\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          {this.state.my_permutations.map(\n                            (el: PermutationItem__Interface, i) => {\n                              // return <PermutationItem key={i} permutation={el} />;\n                              let user1 = el.usersInfo.find(\n                                (itm) => itm.user_id === el.user_one\n                              );\n                              let user2 = el.usersInfo.find(\n                                (itm) => itm.user_id === el.user_two\n                              );\n\n                              let school1 = el.schools.find(\n                                (itm) => itm.school_code === el.school_one\n                              );\n                              let school2 = el.schools.find(\n                                (itm) => itm.school_code === el.school_two\n                              );\n                              if (\n                                this.state.selected_permutation_list ===\n                                el.permutation_id\n                              )\n                                return (\n                                  <tr key={i} className=\"\">\n                                    <td colSpan={30} className=\"pt-1\">\n                                      <PermutationItem\n                                        more\n                                        permutation={el}\n                                        // approveUser={this.userApprovePermutationUser}\n                                      />\n                                    </td>\n                                  </tr>\n                                );\n                              return (\n                                <Fragment key={i}>\n                                  <tr>\n                                    <td className=\"p-1\"></td>\n                                  </tr>\n                                  <tr\n                                    className=\"hover:bg-blue-200 cursor-pointer bg-white my-2\"\n                                    onClick={() =>\n                                      this.setState({\n                                        selected_permutation_list:\n                                          el.permutation_id + \"\",\n                                      })\n                                    }\n                                  >\n                                    <td className=\"border p-2\">{i + 1}</td>\n                                    <td className=\"border p-2 bg-blue-100 opacity-70\">\n                                      <h6 className=\"font-bold\">\n                                        {user1?.full_name}\n                                      </h6>\n                                      <span\n                                        title=\"Staff code\"\n                                        className=\"text-sm text-gray-400\"\n                                      >\n                                        {user1?.staff_code}\n                                      </span>\n                                    </td>\n                                    <td className=\"border p-2 bg-blue-200 opacity-90\">\n                                      <h6 className=\"font-bold\">\n                                        {school1?.school_name}\n                                      </h6>\n                                      <span\n                                        title=\"School code\"\n                                        className=\"text-sm text-gray-400\"\n                                      >\n                                        {el.school_one}\n                                      </span>\n                                    </td>\n\n                                    <td className=\"border p-2 bg-indigo-100 opacity-70\">\n                                      <h6 className=\"font-bold\">\n                                        {user2?.full_name}\n                                      </h6>\n                                      <span\n                                        title=\"Staff code\"\n                                        className=\"text-sm text-gray-400\"\n                                      >\n                                        {user2?.staff_code}\n                                      </span>\n                                    </td>\n                                    <td className=\"border p-2 bg-indigo-200 opacity-90\">\n                                      <h6 className=\"font-bold\">\n                                        {school2?.school_name}\n                                      </h6>\n                                      <span\n                                        title=\"School code\"\n                                        className=\"text-sm text-gray-400\"\n                                      >\n                                        {el.school_two}\n                                      </span>\n                                    </td>\n\n                                    <td className=\"border p-2\">\n                                      <h6 className=\"text-sm\">\n                                        User: <b>{el.permutation_status}</b>\n                                      </h6>\n                                      <hr />\n                                      <h6 className=\"text-sm\">\n                                        REB: <b>{el.reb_status}</b>\n                                      </h6>\n                                    </td>\n\n                                    <td className=\"border p-2\">\n                                      <h6 className=\"text-sm\">\n                                        Created: <b>{el.user_one_date}</b>\n                                      </h6>\n                                      <hr />\n                                      <h6 className=\"text-sm\">\n                                        User 2: <b>{el.user_two_date}</b>\n                                      </h6>\n                                      <hr />\n                                      <h6 className=\"text-sm\">\n                                        REB: <b>{el.user_two_date}</b>\n                                      </h6>\n                                    </td>\n                                  </tr>\n                                </Fragment>\n                              );\n                            }\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </>\n                )}\n              </DashboardContainer>\n            )}\n          </>\n        )}\n\n        {this.state.selected_option === 1 && (\n          <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n            <HeaderSwapping\n              title=\"Generate new permutation request\"\n              back={() => {\n                if (this.state.user_2 !== null) {\n                  return this.setState({\n                    user_2: null,\n                  });\n                }\n                this.setTab(null);\n              }}\n            />\n\n            {this.state.user_2 === null && (\n              <div className=\"py-6 text-center\">\n                <MdAccountCircle size={70} className=\"mx-auto text-gray-400\" />\n                <h3 className=\"font-bold text-gray-700 text-2xl pt-2\">\n                  Who do you want to swap with?\n                </h3>\n                <p className=\"pt-1 text-gray-600\">\n                  Make sure that he/she is aware that you are choosing him/her\n                  <br />\n                  If he/she does not know the about this your request will not\n                  reach him/her\n                </p>\n\n                <div className=\"max-w-screen-sm mx-auto mt-3 \">\n                  {this.state.error.target === \"search-user-error\" && (\n                    <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n                  )}\n\n                  <div>\n                    <form\n                      onSubmit={this.searchUser}\n                      className={`pt-2 flex gap-1 items-center pb-1 w-full bg-gray-100 px-3 rounded  ${\n                        this.state.error.target === \"search-user-error\"\n                          ? \"animate__animated  animate__shakeX\"\n                          : \"\"\n                      }`}\n                    >\n                      <TextInput\n                        onChange={(e) => {\n                          if (this.state.search_nid.length < 17)\n                            this.setState({ search_nid: e.target.value });\n                        }}\n                        className=\"flex-1\"\n                        value={this.state.search_nid}\n                        error={\"\"}\n                        label={\"\"}\n                        placeholder={\"\"}\n                        name={\"\"}\n                        type=\"number\"\n                      />\n                      <Button\n                        size=\"lg\"\n                        className=\"w-48\"\n                        loading={this.state.loading_user}\n                        type=\"submit\"\n                      >\n                        Search user\n                      </Button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {this.state.user_2 !== null && (\n              <>\n                {\" \"}\n                {this.state.loading_user === true ? (\n                  <div className=\"py-6 mx-auto text-center\">\n                    <Loading />\n                  </div>\n                ) : (\n                  <div className=\"p-2 animate__animated animate__fadeIn animate__faster\">\n                    <div className=\" flex pt-2\">\n                      <div className=\"\">\n                        <MdAccountBox size={120} className=\"text-gray-400\" />\n                      </div>\n                      <div className=\"pl-3 flex-1\">\n                        <h3 className=\"pb-0.5 text-xl font-bold text-gray-600 border-b mb-2\">\n                          User details\n                        </h3>\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500 mb-0\">\n                            NID:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.nid}\n                          </h4>\n                        </section>\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500 mb-0\">\n                            Staff code:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.staff_code}\n                          </h4>\n                        </section>\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500\">\n                            Teacher names:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.full_name}\n                          </h4>\n                        </section>\n                      </div>\n                      <div className=\"pl-3 flex-1\">\n                        <h3 className=\"pb-0.5 text-xl font-bold text-gray-600 border-b mb-2\">\n                          Academic details\n                        </h3>\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500 mb-0\">\n                            School code:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.school_code}\n                          </h4>\n                        </section>\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500\">\n                            School name:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.school_name}\n                          </h4>\n                        </section>\n\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500\">\n                            School location:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.district_name}\n                          </h4>\n                        </section>\n\n                        <section className=\"flex items-center pb-0.5\">\n                          <label className=\"text-sm text-gray-500 mb-0\">\n                            Position code:\n                          </label>\n                          <h4 className=\"font-bold pl-1\">\n                            {this.state.user_2.position_code}\n                          </h4>\n                        </section>\n                      </div>\n                    </div>\n                    <div className=\"p-1 text-right border-t pt-2 mt-2\">\n                      <Button\n                        onClick={this.generatePermutation}\n                        loading={this.state.loading_request}\n                      >\n                        Generate permutation request\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n          </DashboardContainer>\n        )}\n\n        {this.state.selected_option === 2 && (\n          <>\n            {this.state.found_permutations.length === 0 ? (\n              <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n                <HeaderSwapping\n                  title=\"Find permutation by code\"\n                  back={this.setTab.bind(this, null)}\n                />\n                <div className=\"p-2\">\n                  <div className=\"py-6 text-center\">\n                    <MdOutlinePassword\n                      size={70}\n                      className=\"mx-auto text-gray-400\"\n                    />\n                    <h3 className=\"font-bold text-gray-700 text-2xl pt-2\">\n                      Find the permutation?\n                    </h3>\n                    <p className=\"pt-1 text-gray-600\">\n                      Please enter the code your friend gave you below\n                    </p>\n\n                    <div className=\"w-80 mx-auto mt-3 \">\n                      {this.state.error.target === \"search-code-error\" && (\n                        <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n                      )}\n\n                      <div\n                        className={`pt-2  flex gap-1 items-center pb-1 w-full bg-gray-100 px-3 rounded  ${\n                          this.state.error.target === \"search-code-error\"\n                            ? \"animate__animated  animate__shakeX\"\n                            : \"\"\n                        }`}\n                      >\n                        <TextInput\n                          onChange={(e) => {\n                            // if (this.state.search_nid.length <= 6)\n                            this.setState({\n                              search_code: e.target.value,\n                              error: {\n                                msg: \"\",\n                                target: null,\n                              },\n                            });\n                          }}\n                          disabled={this.state.loading_user_by_code}\n                          className=\"flex-1\"\n                          value={this.state.search_code}\n                          error={\"\"}\n                          label={\"\"}\n                          size=\"lg\"\n                          placeholder={\"\"}\n                          name={\"\"}\n                          type=\"number\"\n                          Input_className=\"\"\n                        />\n                        <Button\n                          size=\"lg\"\n                          className=\"w-\"\n                          loading={this.state.loading_user_by_code}\n                          onClick={this.searchUserByCode}\n                        >\n                          Check\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </DashboardContainer>\n            ) : (\n              <DashboardContainer>\n                <div className=\"flex border-b p-2 mb-2 \">\n                  <h3 className=\"text-2xl font-bold text-gray flex-1\">\n                    Permutation\n                  </h3>\n                  <Button\n                    theme=\"danger-light\"\n                    onClick={() =>\n                      this.setState({\n                        found_permutations: [],\n                      })\n                    }\n                  >\n                    Close\n                  </Button>\n                </div>\n                <div className=\"\">\n                  {this.state.found_permutations.map((dataEl, i) => (\n                    <PermutationItem\n                      key={i}\n                      more\n                      permutation={dataEl}\n                      approveUser={this.userApprovePermutationUser}\n                    />\n                  ))}\n                </div>\n              </DashboardContainer>\n            )}\n          </>\n        )}\n\n        {this.state.error.target === \"approve-permutation-success\" && (\n          <Alert fixed theme=\"success\">\n            {this.state.error.msg}\n          </Alert>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const CandidateSwaping = connect(mapStateToProps, {})(_CandidateSwaping);\n"],"sourceRoot":""}