{"version":3,"sources":["containers/ApproveNewVacantTobeFilled/SelectSchoolVacant.tsx","containers/ApproveNewVacantTobeFilled/ApproveNewVacantTobeFilled.tsx"],"names":["_SelectSchoolVacant","props","cleanError","setState","error","target","msg","addNewItem","data","state","removeItem","id","window","confirm","delete_loading","deleting_item","FC_DeleteRequestedPostDescription","status","filter","el","school_need_post_id","setTimeout","loading_assets","create_request","assets","loading_data","loading_hierarchy","selected_posts","this","FC_GetVacantDetailedBySchool","school","school_code","data_vac","totalA0","qualification_name","length","totalA1","totalA2","Alert","theme","fixed","onClick","DashboardContainer","className","Button","close","Heading","size","school_name","colSpan","Loading","map","i","position_name","specialization_name","total_period","teaching_level","React","Component","SelectSchoolVacant","connect","auth","defaultError","_ApproveNewVacantTobeFilled","loadApp","district","loading_schools","FC_GetDIstrictRequestsVacant","err","clearError","selected_school","search","Results","TotalRejected","TotalAccepted","TotalAll","scroll","TextInput","onChange","e","value","label","placeholder","name","APPROVED","TOTAL","REJECTED","scrollTo","ApproveNewVacantTobeFilled"],"mappings":"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","file":"static/js/53.9105d2fe.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictRequests_Interface,\n  FC_DeleteRequestedPostDescription,\n  FC_GetVacantDetailedBySchool,\n  RegisterPositionAssets,\n  RequestedVacantDetailsInterface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\n// import AddNewRequest from \"./AddNewRequest\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  school: DistrictRequests_Interface | null;\n  close: () => void;\n}\n\ninterface AppState {\n  loading_assets: boolean;\n  loading_data: boolean;\n  create_request: boolean;\n  assets: RegisterPositionAssets | null;\n  error: {\n    target: \"main-error\" | \"main-success\" | null;\n    msg: string;\n  };\n  data: RequestedVacantDetailsInterface[];\n  //   hierarchy_data: hierarchyDataInterface[];\n  loading_hierarchy: boolean;\n  delete_loading: boolean;\n  deleting_item: string;\n  selected_posts: string[];\n}\n\nclass _SelectSchoolVacant extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_assets: false,\n      create_request: false,\n      assets: null,\n      data: [],\n      loading_data: false,\n      loading_hierarchy: false,\n      delete_loading: false,\n      deleting_item: \"\",\n      selected_posts: [],\n    };\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      //   loading_assets: true,\n      loading_data: true,\n      loading_hierarchy: true,\n    });\n\n    // get the request\n    FC_GetVacantDetailedBySchool(\n      this.props.school?.school_code + \"\",\n      (status, data_vac, msg) => {\n        if (status === true) {\n          this.setState({\n            data: data_vac,\n            loading_data: false,\n          });\n        } else {\n          this.setState({\n            data: [],\n            loading_data: false,\n            error: {\n              target: \"main-error\",\n              msg: `Error: ${msg}`,\n            },\n          });\n        }\n      }\n    );\n  }\n\n  cleanError = () =>\n    this.setState({\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n\n  addNewItem = (data: RequestedVacantDetailsInterface) =>\n    this.setState({\n      data: [...this.state.data, data],\n    });\n\n  removeItem = (id: string) => {\n    if (window.confirm(\"Are you sure you want to remove this record?\")) {\n      this.setState({\n        delete_loading: true,\n        deleting_item: \"\",\n      });\n\n      FC_DeleteRequestedPostDescription(id, (status, msg) => {\n        if (status === true) {\n          this.setState({\n            delete_loading: false,\n            deleting_item: \"\",\n            error: {\n              target: \"main-success\",\n              msg: \"Record removed successfully\",\n            },\n            data: this.state.data.filter((el) => el.school_need_post_id !== id),\n          });\n        } else {\n          this.setState({\n            delete_loading: false,\n            deleting_item: \"\",\n            error: {\n              target: \"main-error\",\n              msg: `Error: ${msg}`,\n            },\n          });\n\n          setTimeout(() => {\n            this.setState({\n              error: {\n                msg: \"\",\n                target: null,\n              },\n            });\n          }, 2000);\n        }\n      });\n    }\n  };\n\n  render() {\n    let totalA0 = this.state.data.filter(\n      (el) => el.qualification_name === \"A0\"\n    ).length;\n    let totalA1 = this.state.data.filter(\n      (el) => el.qualification_name === \"A1\"\n    ).length;\n    let totalA2 = this.state.data.filter(\n      (el) => el.qualification_name === \"A2\"\n    ).length;\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed onClick={this.cleanError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed onClick={this.cleanError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer className=\"flex items-center\">\n          <section className=\"pr-3\">\n            <Button theme=\"primary-light\" onClick={this.props.close}>\n              Back\n            </Button>\n          </section>\n          <div className=\"w-full flex items-center\">\n            <section className=\"flex-1\">\n              <Heading size=\"md\">Vacant posts to be filled </Heading>\n              <p className=\"m-0 text-gray-400 text-lg\">\n                <b className=\"text-blue-500\">\n                  {this.props.school?.school_code}\n                  {\" - \"}\n                  {this.props.school?.school_name}\n                </b>\n              </p>\n            </section>\n          </div>\n        </DashboardContainer>\n\n        <DashboardContainer>\n          <div className=\"flex gap-2 mb-2 text-center\">\n            <section className=\"border p-1 px-6 rounded bg-gray-100\">\n              <span>A0</span>\n              <h2 className=\"font-bold text-2xl -mt-1\">{totalA0}</h2>\n            </section>\n            <section className=\"border p-1 px-6 rounded bg-gray-100\">\n              <span>A1</span>\n              <h2 className=\"font-bold text-2xl -mt-1\">{totalA1}</h2>\n            </section>\n            <section className=\"border p-1 px-6 rounded bg-gray-100\">\n              <span>A2</span>\n              <h2 className=\"font-bold text-2xl -mt-1\">{totalA2}</h2>\n            </section>\n            <div className=\"flex-1\"></div>\n            <section className=\"border p-1 px-6 rounded bg-gray-100\">\n              <span>Total</span>\n              <h2 className=\"font-bold text-2xl -mt-1\">\n                {totalA2 + totalA1 + totalA0}\n              </h2>\n            </section>\n          </div>\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-2 border\">#</th>\n                <th className=\"p-2 border\">Code</th>\n                <th className=\"p-2 border\">Position name</th>\n                <th className=\"p-2 border\">Qualification </th>\n                <th className=\"p-2 border\">Specialization</th>\n                <th className=\"p-2 border\">Total Period</th>\n                <th className=\"p-2 border\">Teaching level</th>\n                <th className=\"p-2 border\">Status</th>\n                <th className=\"p-2 border\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.loading_data === true ? (\n                <tr>\n                  <td className=\"py-8 text-center\" colSpan={10}>\n                    <Loading />\n                  </td>\n                </tr>\n              ) : this.state.data.length === 0 ? (\n                <tr>\n                  <td className=\"py-8 text-center\" colSpan={10}>\n                    <h2 className=\"text-2xl font-bold text-gray-600\">\n                      No results found\n                    </h2>\n                  </td>\n                </tr>\n              ) : (\n                <>\n                  {this.state.data.map((el, i) => (\n                    <tr key={i}>\n                      <td className=\"border p-2\">{i + 1}</td>\n                      <td className=\"border p-2\">{el.school_code}</td>\n                      <td className=\"border p-2\">{el.position_name}</td>\n                      <td className=\"border p-2\">{el.qualification_name}</td>\n                      <td className=\"border p-2\">{el.specialization_name}</td>\n                      <td className=\"border p-2\">{el.total_period}</td>\n                      <td className=\"border p-2\">{el.teaching_level}</td>\n                      <td className=\"border p-2 text-center\">\n                        <span\n                          className={`p-1 rounded-lg text-xs ${\n                            el.status === \"APPROVED\"\n                              ? \"bg-green-100 text-green-700\"\n                              : \"bg-gray-200\"\n                          }`}\n                        >\n                          {el.status}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </>\n              )}\n            </tbody>\n          </table>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const SelectSchoolVacant = connect(\n  mapStateToProps,\n  {}\n)(_SelectSchoolVacant);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictRequests_Interface,\n  FC_GetDIstrictRequestsVacant,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { search } from \"../../utils/functions\";\nimport { SelectSchoolVacant } from \"./SelectSchoolVacant\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface ErrorStatus {\n  target: \"main-error\" | \"main-success\" | null;\n  msg: string;\n}\n\nconst defaultError: ErrorStatus = {\n  msg: \"\",\n  target: null,\n};\n\ninterface AppState {\n  loading_schools: boolean;\n  data: DistrictRequests_Interface[];\n  error: ErrorStatus;\n  search: string;\n  selected_school: DistrictRequests_Interface | null;\n}\n\nclass _ApproveNewVacantTobeFilled extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_schools: false,\n      selected_school: null,\n      data: [],\n      error: defaultError,\n      search: \"\",\n    };\n  }\n\n  componentDidMount(): void {\n    this.loadApp();\n  }\n\n  loadApp = () => {\n    if (this.props.auth.district === null)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No district assigned to you!\",\n        },\n      });\n\n    this.setState({\n      loading_schools: true,\n    });\n    FC_GetDIstrictRequestsVacant(\"11\", (status, data, err) => {\n      if (status) {\n        this.setState({\n          data: data,\n          loading_schools: false,\n        });\n      } else {\n        this.setState({\n          loading_schools: false,\n          data: [],\n          error: {\n            target: \"main-error\",\n            msg: `Error: ${err}`,\n          },\n        });\n      }\n\n      this.clearError();\n    });\n  };\n\n  clearError = () =>\n    setTimeout(() => {\n      this.setState({\n        error: defaultError,\n      });\n    }, 3000);\n\n  render() {\n    let Results: DistrictRequests_Interface[] = search(\n      this.state.data,\n      this.state.search,\n      {\n        school_code: true,\n        school_name: true,\n      }\n    );\n    let TotalRejected = 0;\n    let TotalAccepted = 0;\n    let TotalAll = 0;\n\n    if (this.state.selected_school !== null && this.state.selected_school)\n      return (\n        <SelectSchoolVacant\n          school={this.state.selected_school}\n          close={() => {\n            this.setState({\n              selected_school: null,\n            });\n            window.scroll(0, 0);\n            this.loadApp();\n          }}\n        />\n      );\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <>\n          <DashboardContainer>\n            <div className=\"flex w-full items-center\">\n              <div className=\"\">\n                <Heading size=\"md\">All the vacant</Heading>\n                <p className=\"m-0 text-gray-500\">\n                  this is the list of the vacant\n                </p>\n              </div>\n            </div>\n          </DashboardContainer>\n          <DashboardContainer>\n            <div className=\"flex w-full gap-2  pb-2\">\n              <div className=\"flex-1\">\n                <TextInput\n                  onChange={(e) =>\n                    this.setState({\n                      search: e.target.value,\n                    })\n                  }\n                  value={this.state.search}\n                  error={\"\"}\n                  label={\"\"}\n                  placeholder={\"Search by School code or school name\"}\n                  name={\"\"}\n                  size={\"sm\"}\n                />\n              </div>\n            </div>\n\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"text-left\">\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">School code</th>\n                  <th className=\"p-2 border\">School name</th>\n                  <th className=\"p-2 border\">Rejected</th>\n                  <th className=\"p-2 border\">Approved</th>\n                  <th className=\"p-2 border\">Total</th>\n                  <th className=\"p-2 border\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading_schools === true ? (\n                  <tr>\n                    <td className=\"py-8 text-center\" colSpan={10}>\n                      <Loading />\n                    </td>\n                  </tr>\n                ) : Results.length === 0 ? (\n                  <tr>\n                    <td className=\"py-8 text-center\" colSpan={10}>\n                      <h1 className=\"text-2xl\">No results found!</h1>\n                    </td>\n                  </tr>\n                ) : (\n                  Results.map((el, i) => {\n                    TotalAccepted = TotalAccepted + +el.APPROVED;\n                    TotalAll = TotalAll + +el.TOTAL;\n                    TotalRejected = TotalRejected + +el.REJECTED;\n\n                    return (\n                      <tr key={i} className=\"hover:bg-yellow-50\">\n                        <td className=\"p-2 border\">{i + 1}</td>\n                        <td className=\"p-2 border\">{el.school_code}</td>\n                        <td className=\"p-2 border\">{el.school_name}</td>\n                        <td className=\"p-2 border font-bold text-red-700\">\n                          {el.REJECTED}\n                        </td>\n                        <td className=\"p-2 border font-bold text-green-700\">\n                          {el.APPROVED}\n                        </td>\n                        <td className=\"p-2 border font-bold\">{el.TOTAL}</td>\n                        <td className=\"p-2 border\">\n                          <Button\n                            size=\"sm\"\n                            theme=\"accent-light\"\n                            className=\"w-full\"\n                            onClick={() => {\n                              this.setState({\n                                selected_school: el,\n                              });\n                              window.scrollTo(0, 0);\n                            }}\n                          >\n                            Select\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n\n                {Results.length >= 2 && this.state.search === \"\" && (\n                  <tr>\n                    <td className=\"p-2\" colSpan={3}></td>\n                    <td className=\"p-2 bg-red-100 border text-red-600 text-xl font-bold\">\n                      {TotalRejected}\n                    </td>\n                    <td className=\"p-2 border bg-green-100 text-green-700 text-xl font-bold\">\n                      {TotalAccepted}\n                    </td>\n                    <td className=\"p-2 border bg-blue-100 text-blue-600 text-xl font-bold\">\n                      {TotalAll}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </DashboardContainer>\n        </>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ApproveNewVacantTobeFilled = connect(\n  mapStateToProps,\n  {}\n)(_ApproveNewVacantTobeFilled);\n"],"sourceRoot":""}