{"version":3,"sources":["components/Inputs/InputSelect.tsx","components/Modal/Modal.tsx","components/TableLoading/TableLoading.tsx","types/PlacementReportTypes.ts","components/GenerateReport/ExportToExcel.tsx","containers/Reports/PlacementReport/PlacementReport.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","TableLoading","displayCols","colsArray","index","cols","push","element","SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","staff_code","status","isChangeAllowed","nid","full_name","first_name","last_name","phone_numbers","email","dob","sex","marital_status","qualification","specialization","rssb_number","bank_account","position","role","date_of_hire","district_code","district_name","school_code","school_name","school_category","school_status","subjects","grades","periods","forReportRoles","country","district","school","FC_GetStringValue","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","includes","isEmptyOrSpaces","course_name","grade_code","findIndex","item","JSON","parse","grade_group","length","grade_name","Number","teaching_period","toString","FC_isDateValid","isNaN","Date","ExportToExcel","fileData","fileName","btnName","showIcon","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","React","memo","TodayDate","_PlacementReport","setDownloading","setState","downloading","setSortProperty","sortProperty","setSortOrder","sortOrder","setSearchInput","searchInput","setReportTitle","reportTitle","setSelectAll","selectAll","setFormError","formError","setSort","thisProperty","state","setGenerateReport","generateReport","setReportContent","reportContent","setCurrentPage","currentPage","loadDataFormAPI","month","academic_id","auth","FC_GetReportByDistrict","msg","loading","reportAPIData","console","log","report","FC_GetReportBySchool","filter","FC_GetReportByInstitute","componentDidMount","basic","academic_calender","selectedMonth","academic_year_id","placement","academics","FC_GetAcademics","loadingAcademics","updateDataToPrint","academic_year_name","arrayNew","n","allData","getUserList","Object","prototype","hasOwnProperty","call","dataArray","no","location","nationality_id","staff_category","start_date_in_the_school","region_code","village_name","cell_name","cell_code","sector_name","sector_code","province_name","province_code","reportToPrint","resetReportContent","currentState","newArray","updateReportContent","find","result","list","generatePages","total_users","totalPages","Math","ceil","tablePageLength","_pages","Array","from","keys","slice","jumpToFirst","jumpToLast","moveBack","moveNext","random","MONTHS_LIST","getMonth","selectedAcademic","DashboardContainer","Heading","this","DATE","el","target","TextInput","id","colSpan","search","sortThisArray","medium","Component","PlacementReport","connect","FC_GetPlacementByDistrict"],"mappings":"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","file":"static/js/16.60c16931.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        <label\n          htmlFor=\"login-form-email\"\n          className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n        >\n          {label}\n        </label>\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div\n        onClick={(): void => backDropClose && close()}\n        className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${\n          backDrop === true ? \"60\" : \"0\"\n        }`}\n      ></div>\n      <div\n        className={`fixed items-center justify-items-center ${\n          props.marginTop === undefined ? ModalMarginTop.none : props.marginTop\n        } left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${\n          props.marginTop !== undefined &&\n          props.marginTop !== ModalMarginTop.none\n            ? \"animate__fadeInUp\"\n            : \"animate__zoomIn\"\n        } animate__faster`}\n        style={{\n          width: \"100%\",\n          maxHeight: \"99vh\",\n          height: `${\n            widthSizeClass === ModalSize.maxWidth\n              ? props.marginTop === undefined\n                ? \"100%\"\n                : \"unset\"\n              : \"fit-content\"\n          }`,\n          overflowY: \"auto\",\n          margin: \"auto\",\n          zIndex: 99999999,\n        }}\n      >\n        <div\n          className={`flex justify-between bg-${themeColor} ${\n            padding.title === true ? \"py-4 px-4\" : \"\"\n          } rounded-t text-${\n            theme === Themes.default || theme === Themes.secondary\n              ? \"black\"\n              : \"white\"\n          }`}\n        >\n          {!title || title === \"\" ? (\n            <div></div>\n          ) : (\n            <h4 className={`text-lg font-bold `}>{title}</h4>\n          )}\n          {displayClose === false ? (\n            \"\"\n          ) : (\n            <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\">\n              <MdClose\n                className=\"cursor-pointer font-extrabold text-2xl\"\n                onClick={(): void => close()}\n              />\n            </div>\n          )}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  staff_code: string;\n  full_name: string;\n  first_name: string;\n  last_name: string;\n  nid: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  staff_category: string;\n  date_of_hire: string;\n  rssb_number: string;\n  bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  region_code: string;\n  // LOCATION INFO ##############\n  village_name: string;\n  cell_name: string;\n  cell_code: string;\n  sector_name: string;\n  sector_code: string;\n  district_name: string;\n  district_code: string;\n  province_name: string;\n  province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  periods: string;\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  // nationality = \"nationality\",\n  nid = \"nid\",\n  rssb_number = \"rssb_number\",\n  nationality_id = \"nationality_id\",\n  bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  staff_category = \"staff_category\",\n  staff_code = \"staff_code\",\n  date_of_hire = \"date_of_hire\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  region_code = \"region_code\",\n  village_name = \"village_name\",\n  cell_name = \"cell_name\",\n  cell_code = \"cell_code\",\n  sector_name = \"sector_name\",\n  sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  district_code = \"district_code\",\n  province_name = \"province_name\",\n  province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  periods = \"periods\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.staff_code,\n      title: \"Staff code\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.first_name,\n      title: \"Staff First Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.last_name,\n      title: \"Staff Last Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.rssb_number,\n      title: \"RSSB\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_account,\n      title: \"Bank account\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_code,\n      title: \"District Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.nationality,\n    //   title: \"Nationality\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.date_in_education,\n    //   title: \"Date in education\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.subjects,\n    //   title: \"Subjects\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.period,\n    //   title: \"Period\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.grades,\n    //   title: \"Grades\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // NEW FEATURES ***************************\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.periods,\n      title: \"Periods\",\n      status: true,\n      isChangeAllowed: true,\n    },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  country: [\"REB\", \"RTB\", \"MINECOFIN\"],\n  district: [\"DDE\", \"Human Resource\"],\n  school: [\"Head Teacher\", \"Teacher\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | null): string => {\n  return value ? value : \"\";\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: number[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(JSON.parse(element.grade_group).length);\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | null): boolean => {\n  if (value === null || isNaN(Date.parse(value))) return false;\n  return true;\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default React.memo(ExportToExcel);\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { connect } from \"react-redux\";\nimport {\n  API_GetPlacementBySchool,\n  Auth,\n  Basic,\n  FC_GetAcademics,\n  FC_GetPlacementByDistrict,\n  FC_GetReportByDistrict,\n  FC_GetReportByInstitute,\n  FC_GetReportBySchool,\n  FT_GetPlacementByDistrict,\n  Placement,\n  TeacherData,\n} from \"../../../actions\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  DATE,\n  isEmptyOrSpaces,\n  MONTHS_LIST,\n  search,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport {\n  defaultPlacementReportActiveContent,\n  FC_GetHierarchStrings,\n  FC_GetStringValue,\n  FC_isDateValid,\n  forReportRoles,\n  PlacementReportActiveContentInterface,\n  PlacementReportActiveContentKeyInterface,\n  ReportAcademicYearType,\n  reportToPrintListType,\n  tablePageLimit,\n} from \"../../../types/PlacementReportTypes\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport InputSelect from \"../../../components/Inputs/InputSelect\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\n\nconst TodayDate = new Date();\n\ninterface PlacementReportProps {\n  // REDUX PROPS ======\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  FC_GetPlacementByDistrict: FT_GetPlacementByDistrict;\n  FC_GetAcademics: Function;\n}\n\ninterface PlacementReportState {\n  loading: boolean;\n  loadingAcademics: boolean;\n  downloading: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  sortProperty: string;\n  searchInput: string;\n  reportTitle: string;\n  selectAll: boolean;\n  generateReport: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  reportContent: PlacementReportActiveContentInterface[];\n  reportToPrint: reportToPrintListType[] | null;\n  selectedMonth: string;\n  reportAPIData: API_GetPlacementBySchool[] | null;\n  currentPage: number;\n  tablePageLength: number;\n  selectedAcademic: string;\n}\n\nexport class _PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingAcademics: false,\n      downloading: false,\n      sortOrder: \"ASC\",\n      sortProperty: \"\",\n      searchInput: \"\",\n      reportTitle: \"\",\n      selectAll: true,\n      generateReport: false,\n      formError: null,\n      reportContent: defaultPlacementReportActiveContent,\n      reportToPrint: null,\n      selectedMonth: MONTHS_LIST[TodayDate.getMonth()],\n      reportAPIData: null,\n      currentPage: 1,\n      tablePageLength: tablePageLimit,\n      selectedAcademic: this.props.basic.academic_calender\n        ? this.props.basic.academic_calender.academic_year_id\n        : \"\",\n    };\n  }\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setSortProperty = (value: string) => {\n    this.setState({ sortProperty: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n  };\n\n  setGenerateReport = (value: boolean) => {\n    this.setState({ generateReport: value });\n  };\n\n  setReportContent = (value: PlacementReportActiveContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  loadDataFormAPI = (month: string, academic_id: string) => {\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      forReportRoles.district.includes(this.props.auth.role.role)\n    )\n      FC_GetReportByDistrict(\n        this.props.auth.district.district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\"=================reportsss===================\");\n          console.log({ report: data });\n          console.log(\"=================reportsss===================\");\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.school &&\n      this.props.auth.role &&\n      forReportRoles.school.includes(this.props.auth.role.role)\n    )\n      FC_GetReportBySchool(\n        this.props.auth.school.school_code,\n        academic_id,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          if (status === false && data !== null) {\n            console.log(\"=================reportsss===================\");\n            console.log({ report: data });\n            console.log(\"=================reportsss===================\");\n            this.setState({\n              reportAPIData: data.filter((item) => item.month === month),\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role)\n    )\n      FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n        this.setState({\n          loading: status,\n          reportAPIData: null,\n        });\n        if (status === false && data !== null) {\n          console.log(\"=================reportsss===================\");\n          console.log({ report: data });\n          console.log(\"=================reportsss===================\");\n          this.setState({\n            reportAPIData: data.filter((item) => item.month === month),\n          });\n        } else if (!status && !isEmptyOrSpaces(msg)) {\n          console.error({ status, msg });\n          // this.setState({\n          //   loading: false,\n          //   error: {\n          //     msg: msg,\n          //     target: \"main-error\",\n          //   },\n          // });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    if (this.props.basic.academic_calender)\n      this.loadDataFormAPI(\n        this.state.selectedMonth,\n        this.props.basic.academic_calender.academic_year_id\n      );\n    if (\n      this.props.placement.academics === null ||\n      this.props.placement.academics.length === 0\n    )\n      this.props.FC_GetAcademics(\n        (status: boolean, data: ReportAcademicYearType[], msg: string) => {\n          this.setState({ loadingAcademics: status });\n          // if (!status && !isEmptyOrSpaces(msg)) this.setState({});\n        }\n      );\n    else this.setState({ loadingAcademics: false });\n  };\n\n  updateDataToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      forReportRoles.district.includes(this.props.auth.role.role)\n    ) {\n      let title =\n        \"Placement Report - \" +\n        this.props.auth.district.district_name +\n        \" district\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" - \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" - Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.school &&\n      this.props.auth.role &&\n      forReportRoles.school.includes(this.props.auth.role.role)\n    ) {\n      let title =\n        \"Placement Report - \" + this.props.auth.school.school_name + \" school\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" - \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" - Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role)\n    ) {\n      let title = \"Placement Report - \" + this.props.auth.role.role;\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" - \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" - Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    let arrayNew: reportToPrintListType[] = [];\n    let n: number = 1;\n    const allData = this.getUserList();\n\n    if (allData) {\n      for (const key in allData) {\n        if (Object.prototype.hasOwnProperty.call(allData, key)) {\n          let dataArray: reportToPrintListType = {\n            no: n,\n            full_name: allData[key].full_name ? allData[key].full_name! : \"\",\n            first_name: allData[key].first_name ? allData[key].first_name! : \"\",\n            last_name: allData[key].last_name ? allData[key].last_name! : \"\",\n            nid: allData[key].nid ? allData[key].nid! : \"\",\n            sex: allData[key].sex ? allData[key].sex! : \"\",\n            qualification: allData[key].qualification\n              ? allData[key].qualification!\n              : \"\",\n            position: allData[key].position ? allData[key].position! : \"\",\n            school_name: allData[key].school\n              ? FC_GetStringValue(allData[key].school!.school_name)\n              : \"\",\n            district_name: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.district_name)\n              : \"\",\n            role: allData[key].role ? allData[key].role! : \"\",\n            phone_numbers: allData[key].phone_numbers\n              ? allData[key].phone_numbers!\n              : \"\",\n            email: allData[key].email ? allData[key].email! : \"\",\n            dob: FC_isDateValid(allData[key].dob) ? allData[key].dob! : \"\",\n            marital_status: allData[key].marital_status\n              ? allData[key].marital_status!\n              : \"\",\n            rssb_number: allData[key].rssb_number\n              ? allData[key].rssb_number!\n              : \"\",\n            nationality_id: allData[key].nationality_id\n              ? allData[key].nationality_id!\n              : \"\",\n            bank_account: allData[key].bank_account\n              ? allData[key].bank_account!\n              : \"\",\n            specialization: allData[key].specialization\n              ? allData[key].specialization!\n              : \"\",\n            staff_category: allData[key].staff_category\n              ? allData[key].staff_category!\n              : \"\",\n            staff_code: allData[key].staff_code ? allData[key].staff_code! : \"\",\n            date_of_hire: FC_isDateValid(allData[key].start_date_in_the_school)\n              ? allData[key].start_date_in_the_school!\n              : \"\",\n            status: allData[key].status ? allData[key].status! : \"\",\n            school_code: allData[key].school\n              ? FC_GetStringValue(allData[key].school!.school_code)\n              : \"\",\n            school_category: allData[key].school\n              ? FC_GetStringValue(allData[key].school!.school_category)\n              : \"\",\n            school_status: allData[key].school\n              ? FC_GetStringValue(allData[key].school!.school_status)\n              : \"\",\n            region_code: allData[key].school\n              ? FC_GetStringValue(allData[key].school!.region_code)\n              : \"\",\n            village_name: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.village_name)\n              : \"\",\n            cell_name: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.cell_name)\n              : \"\",\n            cell_code: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.cell_code)\n              : \"\",\n            sector_name: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.sector_name)\n              : \"\",\n            sector_code: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.sector_code)\n              : \"\",\n\n            district_code: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.district_code)\n              : \"\",\n            province_name: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.province_name)\n              : \"\",\n            province_code: allData[key].location\n              ? FC_GetStringValue(allData[key].location!.province_code)\n              : \"\",\n            subjects: FC_GetHierarchStrings(allData[key].teacher_hierarch)\n              .courses,\n            grades: FC_GetHierarchStrings(allData[key].teacher_hierarch).grades,\n            periods: FC_GetHierarchStrings(allData[key].teacher_hierarch)\n              .periods,\n          };\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ reportToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (newArray[key].isChangeAllowed) newArray[key].status = !currentState;\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateDataToPrint();\n  };\n\n  updateReportContent = (key: PlacementReportActiveContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateDataToPrint();\n  };\n\n  getUserList = (): TeacherData[] | null => {\n    let result: TeacherData[] = [];\n\n    if (this.state.reportAPIData === null) return null;\n    const reportAPIData = this.state.reportAPIData.filter(\n      (item) => (item.month = this.state.selectedMonth)\n    );\n    for (const key in reportAPIData) {\n      const element: TeacherData[] = JSON.parse(reportAPIData[key].list);\n\n      result = [...result, ...element];\n    }\n\n    console.log(\"=================getUserList===================\");\n    console.log({ getUserList: result });\n    console.log(\"=================getUserList===================\");\n\n    return result;\n  };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / this.state.tablePageLength);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) moveBack = true;\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages)\n      moveNext = true;\n\n    if (totalPages > 3 && this.state.currentPage > 3) jumpToFirst = true;\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    )\n      jumpToLast = true;\n\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                // this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              // this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              // this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {/* REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n        <DashboardContainer>\n          <section className=\"flex flex-col sm:flex-row justify-between\">\n            <div className=\"px-3\">\n              <Heading size=\"lg\">Monthly Teacher Placement Report</Heading>\n              <p className=\"opacity-50\">Placement report</p>\n            </div>\n            <div className=\"px-3 float-right\">\n              <div className=\"flex flex-row items-center justify-end gap-1 text-xl font-bold\">\n                <span className=\"text-gray-500\">Period:</span>\n                <p>\n                  {this.props.basic.academic_calender\n                    ? this.props.basic.academic_calender.academic_year_name\n                    : \"\"}\n                </p>\n              </div>\n              <div className=\"flex flex-row items-center justify-end gap-1 text-lg\">\n                <span className=\"text-gray-500\">Done on</span>\n                <p>{DATE(Date())}</p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"flex flex-col sm:flex-row justify-between mt-4\">\n            <div className=\"px-3\">\n              {this.props.auth.role &&\n              forReportRoles.school.includes(this.props.auth.role.role) ? (\n                <>\n                  <Heading size=\"lg\">\n                    {this.props.auth.school\n                      ? this.props.auth.school.school_name\n                      : \"\"}\n                  </Heading>\n                  <p className=\"opacity-50\">\n                    {this.props.auth.district\n                      ? this.props.auth.district.district_name + \" district\"\n                      : \"\"}\n                  </p>\n                </>\n              ) : this.props.auth.role &&\n                forReportRoles.district.includes(this.props.auth.role.role) ? (\n                <Heading size=\"lg\">\n                  {this.props.auth.district\n                    ? this.props.auth.district.district_name + \" district\"\n                    : \"\"}\n                </Heading>\n              ) : (\n                this.props.auth.role &&\n                forReportRoles.country.includes(this.props.auth.role.role) && (\n                  <Heading size=\"lg\">\n                    {this.props.auth.role ? this.props.auth.role.role : \"\"}\n                  </Heading>\n                )\n              )}\n            </div>\n            <div className=\"px-3 float-right\">\n              <div className=\"flex flex-row items-center justify-end font-bold\">\n                {/* <BiExport className=\"text-2xl text-gray-500\" /> */}\n                {/* <span className=\"text-gray-500\">Download as</span> */}\n                <span className=\"text-gray-500\">Download</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-green-600 font-bold hover:bg-green-50 border-gray-200 ${\n                    (this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0) &&\n                    \"cursor-not-allowed\"\n                  }`}\n                  disabled={\n                    this.state.loading ||\n                    this.state.reportAPIData === null ||\n                    this.state.reportAPIData.length === 0\n                  }\n                  onClick={() => {\n                    this.updateDataToPrint();\n                    this.setGenerateReport(true);\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`hidden px-4 py-1 ml-1 rounded bg-white border hover:text-red-600 font-bold hover:bg-red-50 border-gray-200 ${\n                    this.state.downloading && \"cursor-wait\"\n                  }`}\n                  //   onClick={() => FC_GeneratePDF()}\n                  //   disabled={loading || this.state.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            </div>\n          </section>\n        </DashboardContainer>\n        {/* END REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* FILTER BY ACADEMIC & MONTH ================ */}\n        <DashboardContainer>\n          <div className=\"border border-t mt-2 mb-1 flex flex-col md:flex-row items-center px-3 rounded gap-2\">\n            <div className=\"\">\n              <InputSelect\n                data={\n                  this.props.placement.academics\n                    ? [\n                        ...this.props.placement.academics.map((el) => ({\n                          title: el.academic_year_name,\n                          value: el.academic_year_id,\n                        })),\n                      ]\n                    : []\n                }\n                error=\"\"\n                name=\"select_academic\"\n                onChange={(e) => {\n                  this.setState({ selectedAcademic: e.target.value });\n                  this.loadDataFormAPI(\n                    this.state.selectedMonth,\n                    e.target.value\n                  );\n                }}\n                label=\"Select academic\"\n                placeholder=\"Select academic\"\n                value={this.state.selectedAcademic}\n                size=\"sm\"\n                disabled={\n                  this.state.loadingAcademics ||\n                  this.state.loading ||\n                  this.props.placement.academics === null\n                }\n              />\n            </div>\n            <div className=\"\">\n              <InputSelect\n                data={[\n                  ...MONTHS_LIST.map((el) => ({\n                    title: el,\n                    value: el,\n                  })),\n                ]}\n                error=\"\"\n                name=\"select_month\"\n                onChange={(e) => {\n                  this.setState({ selectedMonth: e.target.value });\n                  this.loadDataFormAPI(\n                    e.target.value,\n                    this.state.selectedAcademic\n                  );\n                }}\n                label=\"Select month\"\n                placeholder=\"Select month\"\n                value={this.state.selectedMonth}\n                size=\"sm\"\n                disabled={\n                  this.state.loadingAcademics ||\n                  this.state.loading ||\n                  this.props.placement.academics === null\n                }\n              />\n            </div>\n          </div>\n        </DashboardContainer>\n        {/* END FILTER BY ACADEMIC & MONTH ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT SUMMARY ================ */}\n        {/* <DashboardContainer>\n          <ReportSummary />\n        </DashboardContainer> */}\n        {/* END REPORT SUMMARY ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT CONTENT ================ */}\n        <DashboardContainer>\n          <div className=\"border border-t mt-2 mb-1 flex flex-col md:flex-row items-center px-3 rounded\">\n            <div className=\"flex-1 pr-2\">\n              <TextInput\n                label=\"Search\"\n                name=\"search\"\n                type=\"search\"\n                onChange={(e: any) => this.setSearchInput(e.target.value)}\n                placeholder=\"Search by names, codes,...\"\n                value={this.state.searchInput}\n                disabled={\n                  !this.getUserList() ||\n                  this.getUserList()!.slice(\n                    this.state.currentPage - 1,\n                    this.state.currentPage - 1 + this.state.tablePageLength\n                  ).length === 0\n                }\n                size=\"sm\"\n                error=\"\"\n              />\n            </div>\n            <div className=\"\">\n              <InputSelect\n                data={[\n                  { title: tablePageLimit.toString(), value: tablePageLimit },\n                  {\n                    title: (tablePageLimit * 2).toString(),\n                    value: tablePageLimit * 2,\n                  },\n                  {\n                    title: (tablePageLimit * 3).toString(),\n                    value: tablePageLimit * 3,\n                  },\n                  {\n                    title: (tablePageLimit * 4).toString(),\n                    value: tablePageLimit * 4,\n                  },\n                  {\n                    title: (tablePageLimit * 5).toString(),\n                    value: tablePageLimit * 5,\n                  },\n                ]}\n                error=\"\"\n                name=\"page_limit\"\n                onChange={(e) =>\n                  this.setState({ tablePageLength: Number(e.target.value) })\n                }\n                label=\"Show\"\n                placeholder=\"page limit\"\n                value={this.state.tablePageLength}\n                size=\"sm\"\n              />\n            </div>\n          </div>\n          <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_code\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff Code <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_nid\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff NID <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"full_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"dob\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      DOB <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"sex\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Sex <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"qualification\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Qualification <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2 cursor-pointer\">School</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={11} />\n                ) : this.getUserList() === null ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          Something went wrong, try again!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : search(\n                    this.getUserList()!.slice(\n                      this.state.currentPage - 1,\n                      this.state.currentPage - 1 + this.state.tablePageLength\n                    ),\n                    this.state.searchInput\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    !isEmptyOrSpaces(this.state.sortProperty),\n                    search(\n                      this.getUserList()!.slice(\n                        this.state.currentPage - 1,\n                        this.state.currentPage - 1 + this.state.tablePageLength\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item: TeacherData, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-accent-100 hover:text-accent-700 border-b border-gray-300 hover:border-accent-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">\n                        {(this.state.currentPage - 1) *\n                          this.state.tablePageLength +\n                          i +\n                          1}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.staff_code ? item.staff_code : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.nid ? item.nid : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.full_name ? item.full_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.dob ? item.dob : \"\"}</td>\n                      <td className=\"px-2 py-2\">{item.sex ? item.sex : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.qualification ? item.qualification : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.school ? item.school.school_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.position ? item.position : \"\"}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n          {/* pagination ========= */}\n          {!this.state.loading && (\n            <div className=\"flex flex-col items-center mt-3 mb-2 overflow-x-auto\">\n              {this.getUserList() &&\n                this.generatePages(this.getUserList()!.length)}\n            </div>\n          )}\n        </DashboardContainer>\n        {/* END REPORT CONTENT ================ */}\n\n        {/* ********************************************************************************** */}\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReport && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating Excel Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setGenerateReport(false)}\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <TextInput\n                  disabled={this.state.loading}\n                  label=\"Report title\"\n                  name=\"report_title\"\n                  type=\"text\"\n                  value={this.state.reportTitle}\n                  placeholder={\"Report title\"}\n                  className=\"p-2\"\n                  onChange={(e) => {\n                    this.setFormError(null);\n                    this.setReportTitle(e.target.value);\n                  }}\n                  error={\n                    this.state.formError &&\n                    this.state.formError.element === \"report_title\"\n                      ? this.state.formError.msg\n                      : \"\"\n                  }\n                />\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                    {this.state.reportContent.map((item, index) => (\n                      <div\n                        key={index}\n                        className={`flex items-center gap-1 ${\n                          item.isChangeAllowed\n                            ? \"cursor-pointer\"\n                            : \"cursor-not-allowed\"\n                        }`}\n                        onClick={() =>\n                          item.isChangeAllowed &&\n                          this.updateReportContent(item.key)\n                        }\n                        title={\n                          !item.isChangeAllowed\n                            ? \"Required for every report!\"\n                            : \"\"\n                        }\n                      >\n                        {item.status ? (\n                          <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                        ) : (\n                          <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                        )}\n                        <span>{item.title}</span>\n                      </div>\n                    ))}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"report_content\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => this.resetReportContent(this.state.selectAll)}\n                >\n                  {this.state.selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {!this.state.loading && this.state.reportToPrint && (\n                  <ExportToExcel\n                    fileData={this.state.reportToPrint}\n                    fileName={this.state.reportTitle}\n                    btnName=\"Download\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): { auth: Auth; basic: Basic; placement: Placement } => {\n  return { auth: auth, basic: basic, placement: placement };\n};\n\nexport const PlacementReport = connect(mapStateToProps, {\n  FC_GetPlacementByDistrict,\n  FC_GetAcademics,\n})(_PlacementReport);\n"],"sourceRoot":""}