{"version":3,"sources":["actions/transfer.action.ts","containers/OutgoingTransfers/OutGoingExcel.tsx","containers/OutgoingTransfers/OutgoingTransfers.tsx","containers/TransfersReportsCOUNRTY/ExternalTransferReport.tsx"],"names":["FC_GetAllTransfers","district_id","callBack","dispatch","type","ActionTypes","GET_ALL_TRANSFER","payload","setAxiosToken","axios","get","APP_URL","res","needed_data","data","filter","item","requested_status","errorToText","FC_GetDistricts","district_code","district_name","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","console","log","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","OutGoingExcel","close","useState","loading","setLoading","setData","setError","useEffect","FC_GetOutgoingReportExcel","status","msg","Modal","backDrop","theme","Themes","default","backDropClose","widthSizeClass","ModalSize","large","displayClose","padding","title","body","footer","className","Alert","Loading","ExportToExcel","fileData","map","el","teacher_id","teacher_first_name","teacher_last_name","teacher_full_name","teacher_phone_number","position_code","position_name","qualification","qualification_name","school_from_code","school_from_info","school_code","school_form_name","school_name","district_from_name","approved_school_code","approved_school_info","approved_school_name","approved_district_name","transfer_reason","transfer_type","teacher_requested_transfer_date","fileName","btnName","errorDefault","target","_OutgoingTransfers","props","setOpenDownload","setState","open_download_excel","state","loadingData","district","page","selected_transfer_id","transfer_issue","FC_GetOutGoingTransfers","limit","status_req","district_transfer_request","total_transfer","next","previous","paginateData","auth","selected_district","submitIssue","length","loading_request","FC_SendTransferIssue","transfer_issue_comment","changeStatus","value","this","total_pages","toFixed","district_title","fixed","Heading","Button","onClick","DashboardContainer","transparent","colSpan","itm","i","Array","fill","e","bind","React","Component","OutgoingTransfers","connect","defaultError","_ExternalTransferReport","loading_district","districts","selectDistrict","ExternalTransferReport"],"mappings":"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","file":"static/js/33.5a3cb859.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  // TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n// import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: [],\n      });\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde/${district_id}`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      // console.log(\" ----- ------  ------\");\n\n      // console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      // console.log(\"=================FC_GetTransferReasons===================\");\n      // console.log({ FC_GetTransferReasons: res });\n      // console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  // callBack(true, null, \"\");\n  // try {\n  // setAxiosToken();\n  // const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n  // console.log(\"=================FC_GetDistricts===================\");\n  // console.log({ FC_GetDistricts: res });\n  // console.log(\"=================FC_GetDistricts===================\");\n\n  // * save data\n  callBack(\n    false,\n    [\n      {\n        district_code: \"11\",\n        district_name: \"Nyarugenge\",\n      },\n      {\n        district_code: \"12\",\n        district_name: \"Gasabo\",\n      },\n      {\n        district_code: \"13\",\n        district_name: \"Kicukiro\",\n      },\n      {\n        district_code: \"21\",\n        district_name: \"Nyanza\",\n      },\n      {\n        district_code: \"22\",\n        district_name: \"Gisagara\",\n      },\n      {\n        district_code: \"23\",\n        district_name: \"Nyaruguru\",\n      },\n      {\n        district_code: \"24\",\n        district_name: \"Huye\",\n      },\n      {\n        district_code: \"25\",\n        district_name: \"Nyamagabe\",\n      },\n      {\n        district_code: \"26\",\n        district_name: \"Ruhango\",\n      },\n      {\n        district_code: \"27\",\n        district_name: \"Muhanga\",\n      },\n      {\n        district_code: \"28\",\n        district_name: \"Kamonyi\",\n      },\n      {\n        district_code: \"31\",\n        district_name: \"Karongi\",\n      },\n      {\n        district_code: \"32\",\n        district_name: \"Rutsiro\",\n      },\n      {\n        district_code: \"33\",\n        district_name: \"Rubavu\",\n      },\n      {\n        district_code: \"34\",\n        district_name: \"Nyabihu\",\n      },\n      {\n        district_code: \"35\",\n        district_name: \"Ngororero\",\n      },\n      {\n        district_code: \"36\",\n        district_name: \"Rusizi\",\n      },\n      {\n        district_code: \"37\",\n        district_name: \"Nyamasheke\",\n      },\n      {\n        district_code: \"41\",\n        district_name: \"Rulindo\",\n      },\n      {\n        district_code: \"42\",\n        district_name: \"Gakenke\",\n      },\n      {\n        district_code: \"43\",\n        district_name: \"Musanze\",\n      },\n      {\n        district_code: \"44\",\n        district_name: \"Burera\",\n      },\n      {\n        district_code: \"45\",\n        district_name: \"Gicumbi\",\n      },\n      {\n        district_code: \"51\",\n        district_name: \"Rwamagana\",\n      },\n      {\n        district_code: \"52\",\n        district_name: \"Nyagatare\",\n      },\n      {\n        district_code: \"53\",\n        district_name: \"Gatsibo\",\n      },\n      {\n        district_code: \"54\",\n        district_name: \"Kayonza\",\n      },\n      {\n        district_code: \"55\",\n        district_name: \"Kirehe\",\n      },\n      {\n        district_code: \"56\",\n        district_name: \"Ngoma\",\n      },\n      {\n        district_code: \"57\",\n        district_name: \"Bugesera\",\n      },\n    ],\n    \"\"\n  );\n  // } catch (error) {\n  //   console.log(error);\n  //   callBack(false, null, errorToText(error));\n  //   callBack(\n  //     false,\n  //     errorToText(error, () => {})\n  //   );\n  // }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport {\n  FC_GetOutgoingReportExcel,\n  GetTransferForUser__Interface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n\ntype OutGoingExcelProps = {\n  close: () => void;\n  district_id: string;\n  district_name: string | null;\n};\n\nconst OutGoingExcel: FC<OutGoingExcelProps> = ({\n  close,\n  district_id,\n  district_name,\n}): ReactElement => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<GetTransferForUser__Interface[]>([]);\n  const [error, setError] = useState(\"\");\n  /* function body */\n  useEffect(() => {\n    if (loading === true)\n      FC_GetOutgoingReportExcel(district_id, (status, data, msg) => {\n        setLoading(false);\n        setData(data);\n        setError(msg);\n        // GetTransferForUser__Interface\n        console.log({ data });\n      });\n  }, [loading, district_id]);\n\n  return (\n    <Modal\n      backDrop={true}\n      theme={Themes.default}\n      close={close}\n      backDropClose={false}\n      widthSizeClass={ModalSize.large}\n      displayClose={true}\n      padding={{\n        title: true,\n        body: false,\n        footer: false,\n      }}\n      title=\"Export report\"\n    >\n      <div className=\"border-t p-4 py-8\">\n        {error !== \"\" && <Alert theme=\"danger\">{error}</Alert>}\n        {loading === true ? (\n          <div className=\"text-xl text-center\">\n            <Loading />\n\n            <h2 className=\"text-2xl font-bold pt-2\">Preparing report</h2>\n            <h4 className=\"text-gray-500 text-sm\">Please wait...</h4>\n          </div>\n        ) : (\n          <div className=\"text-center\">\n            <h1 className=\"text-3xl\">\n              Your <b>Outgoing Transfer</b> report is ready\n            </h1>\n            <h1>You can download it now</h1>\n            <div className=\"inline-block pt-5\">\n              <ExportToExcel\n                fileData={data.map((el) => ({\n                  teacher_id: el.teacher_id,\n                  teacher_first_name: el.teacher_first_name,\n                  teacher_last_name: el.teacher_last_name,\n                  teacher_full_name: el.teacher_full_name,\n                  teacher_phone_number: el.teacher_phone_number,\n                  position_code: el.position_code,\n                  position_name: el.position_name,\n                  qualification: el.qualification_name,\n\n                  school_from_code: el.school_from_info?.school_code,\n                  school_form_name: el.school_from_info?.school_name,\n                  district_from_name: el.school_from_info?.district_name,\n\n                  approved_school_code: el.approved_school_info?.school_code,\n                  approved_school_name: el.approved_school_info?.school_name,\n                  approved_district_name:\n                    el.approved_school_info?.district_name,\n\n                  transfer_reason: el.transfer_reason,\n                  transfer_type: el.transfer_type,\n                  teacher_requested_transfer_date:\n                    el.teacher_requested_transfer_date,\n                }))}\n                fileName={`OUTGOING TRANSFERS - ${district_id} ${\n                  district_name ? district_name : \"\"\n                }`}\n                btnName=\"Download EXCEL\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\nexport default OutGoingExcel;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_GetOutGoingTransfers,\n  FC_SendTransferIssue,\n  GetTransferForUser__Interface,\n  TransferStatus,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\n// import TextArea from \"../../components/Inputs/TextArea\";\nimport Loading from \"../../components/Loading/Loading\";\n// import Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\n// import TransferItem from \"../RequestTransfer/TransferItem\";\nimport OutGoingExcel from \"./OutGoingExcel\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  district_id?: string;\n  district_title?: string;\n}\n\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\" | null | \"request-input\";\n    msg: string;\n  };\n  limit: number;\n  page: number;\n  data: GetTransferForUser__Interface[];\n  total: number;\n  next: number;\n  previous: number;\n  selected_transfer_id: string | null;\n  transfer_issue: string;\n  loading_request: boolean;\n  status: TransferStatus;\n  open_download_excel: boolean;\n  selected_district: string;\n}\n\nconst errorDefault = {\n  target: null,\n  msg: \"\",\n};\n\nclass _OutgoingTransfers extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: errorDefault,\n      data: [],\n      limit: 14,\n      page: 1,\n      total: 0,\n      next: 0,\n      previous: 0,\n      selected_transfer_id: null,\n      transfer_issue: \"\",\n      loading_request: false,\n      status: \"NO-ISSUE\",\n      open_download_excel: false,\n      selected_district: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.district_id) {\n      this.setState({\n        selected_district: this.props.district_id,\n      });\n      this.loadingData(\n        this.props.district_id,\n        this.state.page,\n        this.state.status\n      );\n    } else {\n      if (\n        !this.props.auth.district ||\n        !this.props.auth.district.district_code\n      ) {\n        return this.setState({\n          error: {\n            target: \"main-error\",\n            msg: \"There is no district assigned to you!\",\n          },\n        });\n      }\n      this.setState({\n        selected_district: this.props.auth.district.district_code,\n      });\n      this.loadingData(\n        this.props.auth.district.district_code,\n        this.state.page,\n        this.state.status\n      );\n    }\n  }\n\n  setOpenDownload = () =>\n    this.setState({\n      open_download_excel: !this.state.open_download_excel,\n    });\n\n  loadingData = (district: string, page: number, status?: TransferStatus) => {\n    this.setState({\n      loading: true,\n      selected_transfer_id: null,\n      data: [],\n      transfer_issue: \"\",\n    });\n    FC_GetOutGoingTransfers(\n      {\n        district_code: district,\n        limit: this.state.limit,\n        page: page,\n        status: status ? status : this.state.status,\n      },\n      (status_req, data, msg) => {\n        this.setState({\n          loading: false,\n          data: data?.district_transfer_request\n            ? data?.district_transfer_request\n            : [],\n          total: data?.total_transfer ? data.total_transfer : 0,\n          next: data?.next ? +data?.next : 0,\n          previous: data?.previous ? +data?.previous : 0,\n          error: !status_req\n            ? {\n                target: \"main-error\",\n                msg: `Error: ${msg}`,\n              }\n            : errorDefault,\n          page: page,\n        });\n      }\n    );\n  };\n\n  paginateData = (page: number) => {\n    if (this.props.auth.district?.district_code)\n      this.loadingData(this.state.selected_district, page);\n  };\n\n  submitIssue = () => {\n    if (this.state.transfer_issue.length <= 20)\n      return this.setState({\n        error: {\n          target: \"request-input\",\n          msg: \"Your message is too short, minimum characters are 20\",\n        },\n      });\n\n    if (\n      this.state.selected_transfer_id === \"\" ||\n      this.state.selected_transfer_id === null\n    )\n      return this.setState({\n        error: {\n          target: \"request-input\",\n          msg: \"Your message is too short, minimum characters are 20\",\n        },\n      });\n\n    this.setState({\n      loading_request: true,\n    });\n\n    FC_SendTransferIssue(\n      {\n        teacher_transfer_id: this.state.selected_transfer_id,\n        transfer_issue_comment: this.state.transfer_issue,\n      },\n      (status, data, msg) => {\n        this.setState({\n          loading_request: false,\n          error:\n            status === true\n              ? {\n                  target: \"main-success\",\n                  msg: \"The request has been submitted successfully.\",\n                }\n              : {\n                  target: \"main-error\",\n                  msg: msg,\n                },\n          data: this.state.data.map((el) =>\n            el.teacher_transfer_id === this.state.selected_transfer_id\n              ? { ...el, transfer_issue_comment: this.state.transfer_issue }\n              : el\n          ),\n        });\n      }\n    );\n  };\n\n  changeStatus = (value: TransferStatus) => {\n    if (this.state.status === value || !this.props.auth.district) return;\n    this.setState({\n      status: value,\n    });\n    this.loadingData(this.state.selected_district, 1, value);\n  };\n\n  render() {\n    let total_pages = (this.state.total / this.state.limit).toFixed(0);\n    // let foundTransfer = this.state.data.find(\n    //   (transf) => transf.teacher_transfer_id === this.state.selected_transfer_id\n    // );\n    return (\n      <>\n        {this.state.open_download_excel === true &&\n          this.props.auth.district && (\n            <OutGoingExcel\n              district_id={this.state.selected_district}\n              close={this.setOpenDownload}\n              district_name={\n                this.props.district_title ? this.props.district_title : null\n              }\n            />\n          )}\n\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {/* {this.state.selected_transfer_id !== null &&\n          foundTransfer !== undefined && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={() =>\n                this.setState({\n                  selected_transfer_id: null,\n                  transfer_issue: \"\",\n                })\n              }\n              backDropClose={false}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              title=\"Transfer details\"\n              padding={{\n                title: true,\n                body: false,\n                footer: undefined,\n              }}\n            >\n              <div className=\"border-t\">\n                <div className=\"p-4 text-gray-500\">\n                  <section>\n                    Transfer id:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_transfer_id}\n                    </b>\n                  </section>\n                  <section>\n                    Teacher names:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_full_name}\n                    </b>\n                  </section>\n                  <section>\n                    Teacher's Phone number:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_phone_number}\n                    </b>\n                  </section>\n                </div>\n                <TransferItem expand={true} transf={foundTransfer} />\n\n                <div className=\"pt-3 px-2 bg-gray-100 m-2\">\n                  <TextArea\n                    onChange={(e) =>\n                      this.setState({ transfer_issue: e.target.value })\n                    }\n                    disabled={this.state.loading_request}\n                    value={this.state.transfer_issue}\n                    error={\n                      this.state.error.target === \"request-input\"\n                        ? this.state.error.msg\n                        : \"\"\n                    }\n                    label={\"Why do you want this transfer to be Canceled?\"}\n                    placeholder={\"Type the reason here\"}\n                    name={\"\"}\n                  ></TextArea>\n\n                  <div className=\"pt-1 pb-3 text-right\">\n                    <Button\n                      onClick={this.submitIssue}\n                      loading={this.state.loading_request}\n                    >\n                      Submit request\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Modal>\n          )} */}\n        <div className=\"container mx-auto px-4 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading className=\"\">Outgoing transfers</Heading>\n          </div>\n          {/* <div className=\"flex flex-1 gap-1\">\n            <Button\n              size=\"sm\"\n              theme={\n                this.state.status === \"NO-ISSUE\" ? \"accent\" : \"accent-light\"\n              }\n              onClick={this.changeStatus.bind(this, \"NO-ISSUE\")}\n            >\n              NO-ISSUE\n            </Button>\n            <Button\n              size=\"sm\"\n              theme={\n                this.state.status === \"ISSUE-APPROVED\"\n                  ? \"accent\"\n                  : \"accent-light\"\n              }\n              onClick={this.changeStatus.bind(this, \"ISSUE-APPROVED\")}\n            >\n              ISSUE-APPROVED\n            </Button>\n            <Button\n              size=\"sm\"\n              theme={this.state.status === \"ISSUED\" ? \"accent\" : \"accent-light\"}\n              onClick={this.changeStatus.bind(this, \"ISSUED\")}\n            >\n              ISSUED\n            </Button>\n          </div> */}\n          <section className=\"pr-3\">\n            <Button onClick={this.setOpenDownload} theme=\"success\">\n              Generate Excel\n            </Button>\n          </section>\n          <section className=\"text-center p-1 bg-accent-800 bg-opacity-20 text-accent-900 px-4 rounded\">\n            <span className=\"text-sm block text-gray-500 -mb-1\">Total:</span>\n            <h3 className=\"font-bold text-xl\">{this.state.total}</h3>\n          </section>\n        </div>\n        <DashboardContainer transparent>\n          <table className=\"w-full\">\n            <thead className=\"text-left bg-white\">\n              <tr className=\"bg-accent-900 bg-opacity-10\">\n                <th className=\"p-2 border-gray-300 border\">#</th>\n                <th className=\"p-2 border-gray-300 border\">Names</th>\n                <th className=\"p-2 border-gray-300 border\">School Code</th>\n                <th className=\"p-2 border-gray-300 border\">School name</th>\n                <th className=\"p-2 border-gray-300 border\">Position code</th>\n                <th className=\"p-2 border-gray-300 border\">Position name</th>\n                <th className=\"p-2 border-gray-300 border\">Qualification</th>\n                {/* <th className=\"p-2 border-gray-300 border\">Error</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.loading === true ? (\n                <tr className=\" \">\n                  <td colSpan={8} className=\"py-4 text-center border\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : this.state.data.length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"py-4 text-center border\">\n                    <h1 className=\"text-2xl text-gray-400\">No data found</h1>\n                    {/* <p className=\"text-gray\"></p> */}\n                  </td>\n                </tr>\n              ) : (\n                this.state.data.map((itm, i) => (\n                  <tr\n                    key={i}\n                    className=\"bg-white hover:bg-yellow-400 hover:bg-opacity-30\"\n                    // onClick={() =>\n                    //   this.setState({\n                    //     selected_transfer_id: itm.teacher_transfer_id,\n                    //     transfer_issue: itm.transfer_issue_comment\n                    //       ? itm.transfer_issue_comment\n                    //       : \"\",\n                    //   })\n                    // }\n                  >\n                    <td className=\"border p-2\">{i + 1}</td>\n                    <td className=\"p-2 border\">{itm.teacher_full_name}</td>\n                    <td className=\"p-2 border\">\n                      {itm.school_from_info?.school_code}\n                    </td>\n                    <td className=\"p-2 border\">\n                      {itm.school_from_info?.school_name}\n                    </td>\n                    <td className=\"p-2 border\">{itm.position_code}</td>\n                    <td className=\"p-2 border text-sm\">{itm.position_name}</td>\n                    <td className=\"p-2 border\">{itm.qualification_name}</td>\n                    {/* <td className=\"p-2 border\">\n                      {itm.transfer_issue_comment &&\n                      itm.transfer_issue_comment !== null ? (\n                        <span className=\"text-sm p-0.5 bg-red-400 px-2 rounded-full font-bold text-white\">\n                          Issue\n                        </span>\n                      ) : (\n                        <span></span>\n                      )}\n                    \n                    </td> */}\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n\n          <div className=\"flex gap-3 mx-auto pt-3\">\n            {Array(+total_pages)\n              .fill(\"0\")\n              .map((e, i) => (\n                <button\n                  className={`p-2 py-1 ${\n                    +this.state.page === i + 1\n                      ? \"bg-accent-800 text-black font-bold\"\n                      : \"bg-opacity-25\"\n                  } rounded-full bg-accent-800 `}\n                  onClick={this.paginateData.bind(this, i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const OutgoingTransfers = connect(\n  mapStateToProps,\n  {}\n)(_OutgoingTransfers);\n","import React from \"react\";\nimport { MdArrowForward } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n// import { InternalTransfer } from \"../InternalTransfer/InternalTransfer\";\nimport { OutgoingTransfers } from \"../OutgoingTransfers/OutgoingTransfers\";\n// import Alert, { AlertInterface } from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface ErrorType {\n  target: \"MAIN-ERROR\" | \"MAIN-SUCCESS\" | null;\n  error: string;\n}\n\nconst defaultError: ErrorType = {\n  error: \"\",\n  target: null,\n};\n\ninterface AppState {\n  loading_district: boolean;\n  districts: DistrictTypes[];\n  error: ErrorType;\n  selected_district: DistrictTypes | null;\n}\n\nclass _ExternalTransferReport extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_district: false,\n      districts: [],\n      error: defaultError,\n      selected_district: null,\n    };\n  }\n\n  selectDistrict(district: DistrictTypes | null) {\n    this.setState({\n      selected_district: district,\n    });\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      loading_district: true,\n      error: defaultError,\n    });\n    FC_GetDistricts((status, data, msg) => {\n      console.log({ status, data, msg });\n\n      if (data !== null) {\n        this.setState({\n          loading_district: false,\n          districts: data,\n        });\n      } else {\n        this.setState({\n          loading_district: false,\n          districts: [],\n          error: {\n            target: \"MAIN-ERROR\",\n            error: `Error: ${msg}`,\n          },\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.selected_district !== null)\n      return (\n        <>\n          <div className=\"sticky top-1 z-50 mx-auto\">\n            <DashboardContainer className=\"flex\">\n              <section>\n                <Button onClick={this.selectDistrict.bind(this, null)}>\n                  Back\n                </Button>\n              </section>\n              <section className=\"text-2xl pl-3 flex-1\">\n                {this.state.selected_district.district_name} district\n              </section>\n            </DashboardContainer>\n          </div>\n          <OutgoingTransfers\n            district_id={this.state.selected_district.district_code}\n            district_title={\n              this.state.selected_district.district_name + \" district\"\n            }\n          />\n        </>\n      );\n    return (\n      <>\n        <DashboardContainer>\n          <div className=\"w-full flex\">\n            <section className=\"flex-1\">\n              <Heading>Outgoing transfers</Heading>\n            </section>\n            <section></section>\n          </div>\n        </DashboardContainer>\n\n        <DashboardContainer>\n          {this.state.loading_district === true ? (\n            <div className=\"py-8 text-center\">\n              <Loading />\n            </div>\n          ) : this.state.districts.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Heading>No results found</Heading>\n            </div>\n          ) : (\n            <div className=\"w-full lg:grid lg:grid-cols-2 gap-2\">\n              {this.state.districts.map((el) => (\n                <div\n                  onClick={this.selectDistrict.bind(this, el)}\n                  key={el.district_code}\n                  className=\"flex px-3 py-1  mb-3 lg:mb-0 hover:text-white hover:bg-yellow-600 hover:bg-opacity-50 rounded-md items-center bg-yellow-50 border-yellow-700 border\"\n                >\n                  <h4 className=\"flex-1 text-lg\">{el.district_name}</h4>\n                  <section className=\"text-2xl text-yellow-600\">\n                    <MdArrowForward />\n                  </section>\n                </div>\n              ))}\n            </div>\n          )}\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ExternalTransferReport = connect(\n  mapStateToProps,\n  {}\n)(_ExternalTransferReport);\n"],"sourceRoot":""}