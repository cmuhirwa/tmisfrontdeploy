{"version":3,"sources":["components/Modal/Modal.tsx","containers/UserProfile/AssignStaffToSchool.tsx","containers/DisabledUsers/DisabledUsers.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","_AssignStaffToSchool","componentDidMount","district_code","loadDistricts","school_code","setState","current_school","state","districts","length","loading_districts","FC_GetDistrictList","status","data","msg","error","target","selectDistrict","itm","selected_district","district_name","open_select_district","reloadDistrictResurces","district_id","loading_resource","FC_GetAssignAssets","clearError","loading","this","refreshApp","fixed","medium","map","dist","i","size","bind","userDetails","full_name","nid","staff_code","email","school_name","exclude_roles","assignType","no_position","school","school_id","current_position","only_post_for_school","user_id","formAccess","first_name","last_name","middle_name","phone_numbers","role_id","country_id","sector_code","qualification_id","academic_year_id","stakeholder_id","start_date_in_the_school","position_id","required","setTimeout","button_title","React","Component","AssignStaffToSchool","connect","auth","_DisabledUsers","startApp","FC_GetDisabledUsers","search","selected_user","RequestsList","position_code","label","name","type","onChange","e","value","placeholder","colSpan","req","DisabledUsers","basic","FC_DisableUser"],"mappings":"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","file":"static/js/22.c28eaf43.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div\n        onClick={(): void => backDropClose && close()}\n        className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${\n          backDrop === true ? \"60\" : \"0\"\n        }`}\n      ></div>\n      <div\n        className={`fixed items-center justify-items-center ${\n          props.marginTop === undefined ? ModalMarginTop.none : props.marginTop\n        } left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${\n          props.marginTop !== undefined &&\n          props.marginTop !== ModalMarginTop.none\n            ? \"animate__fadeInUp\"\n            : \"animate__zoomIn\"\n        } animate__faster`}\n        style={{\n          width: \"100%\",\n          maxHeight: \"99vh\",\n          height: `${\n            widthSizeClass === ModalSize.maxWidth\n              ? props.marginTop === undefined\n                ? \"100%\"\n                : \"unset\"\n              : \"fit-content\"\n          }`,\n          overflowY: \"auto\",\n          margin: \"auto\",\n          zIndex: 99999999,\n        }}\n      >\n        <div\n          className={`flex justify-between bg-${themeColor} ${\n            padding.title === true ? \"py-4 px-4\" : \"\"\n          } rounded-t text-${\n            theme === Themes.default || theme === Themes.secondary\n              ? \"black\"\n              : \"white\"\n          }`}\n        >\n          {!title || title === \"\" ? (\n            <div></div>\n          ) : (\n            <h4 className={`text-lg font-bold `}>{title}</h4>\n          )}\n          {displayClose === false ? (\n            \"\"\n          ) : (\n            <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\">\n              <MdClose\n                className=\"cursor-pointer font-extrabold text-2xl\"\n                onClick={(): void => close()}\n              />\n            </div>\n          )}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { MdAccountCircle, MdCheckCircle } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictList,\n  FC_GetAssignAssets,\n  FC_GetDistrictList,\n  FT_GetAssignAssets,\n} from \"../../actions\";\nimport { AssignStuffComponent } from \"../../components/AssignStuffComponent/AssignStuffComponent\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\nimport Alert from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  // userInfo: ProfileType | null;\n  user_id: string;\n  close: () => void;\n  FC_GetAssignAssets: FT_GetAssignAssets;\n  district_code?: string | null;\n  school_code?: string | null;\n  school_name?: string | null;\n  district_name?: string | null;\n  userDetails?: {\n    full_name: string | undefined;\n    nid: string | undefined;\n    staff_code: string | undefined;\n    email: string | undefined;\n  };\n  current_position?: string | null;\n  refreshApp?: () => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  district_code: string;\n  district_name: string;\n  current_school: boolean;\n  selected_district: string;\n  loading_resource: boolean;\n  error: {\n    target: \"main-success\" | \"main-error\" | \"user-updates-success\" | null;\n    msg: string;\n  };\n  loading_districts: boolean;\n  districts: DistrictList[];\n  open_select_district: boolean;\n}\n\nclass _AssignStaffToSchool extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      district_code: this.props.district_code ? this.props.district_code : \"\",\n      district_name: this.props.district_name ? this.props.district_name : \"\",\n      current_school: true,\n      selected_district: this.props.district_code\n        ? this.props.district_code\n        : \"\",\n      loading_resource: false,\n      error: {\n        msg: \"\",\n        target: null,\n      },\n      loading_districts: false,\n      districts: [],\n      open_select_district: false,\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.props.district_code) this.loadDistricts();\n    if (this.props.school_code === undefined)\n      this.setState({ current_school: false });\n  };\n\n  loadDistricts = () => {\n    if (this.state.districts.length <= 0) {\n      this.setState({ loading_districts: true });\n      FC_GetDistrictList((status, data, msg) => {\n        if (status) {\n          this.setState({\n            loading_districts: false,\n            districts: data,\n          });\n        } else {\n          this.setState({\n            loading_districts: false,\n            districts: [],\n            error: {\n              msg: msg,\n              target: \"main-error\",\n            },\n          });\n        }\n      });\n    }\n  };\n\n  selectDistrict = (itm: DistrictList) => {\n    this.setState({\n      selected_district: itm.district_code,\n      district_code: itm.district_code,\n      district_name: itm.district_name,\n      open_select_district: false,\n    });\n    this.reloadDistrictResurces(itm.district_code);\n  };\n\n  reloadDistrictResurces = (district_id: string) => {\n    if (!district_id) return;\n\n    this.setState({ loading_resource: true });\n    this.props.FC_GetAssignAssets(district_id, (status, msg) => {\n      if (status) {\n        this.setState({\n          loading_resource: false,\n        });\n      } else {\n        this.setState({\n          loading_resource: false,\n          error: {\n            target: \"main-error\",\n            msg: \"Failed to load district resource, please try again later\",\n          },\n        });\n      }\n    });\n  };\n\n  clearError = () =>\n    this.setState({\n      error: {\n        msg: \"\",\n        target: null,\n      },\n    });\n\n  render() {\n    // if (this.state.error.target === null)\n    if (this.state.error.target === \"user-updates-success\")\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn \">\n          <div className=\"text-center py-10\">\n            <MdCheckCircle className=\"text-8xl text-green-600 mx-auto\" />\n\n            <h1 className=\"text-2xl font-bold text-green-600\">\n              The user has been updated successfully\n            </h1>\n            <p className=\"mt-2 text-gray-600 pb-4\">\n              The information has been updated successfully, <br /> you can\n              close the window and continue with other users\n            </p>\n\n            <Button\n              theme=\"success-light\"\n              onClick={() => {\n                this.props.close();\n                if (this.props.refreshApp) this.props.refreshApp();\n              }}\n            >\n              Goo back to the profile\n            </Button>\n          </div>\n        </DashboardContainer>\n      );\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed onClick={this.clearError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed onClick={this.clearError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\" \">\n          {this.state.open_select_district === true && (\n            <>\n              <div\n                className=\"fixed top-0 bottom-0 z-50 right-0 left-0 bg-black bg-opacity-60\"\n                onClick={() => this.setState({ open_select_district: false })}\n              ></div>\n              <Modal\n                backDrop={true}\n                backDropClose={true}\n                close={() => this.setState({ open_select_district: false })}\n                title={\"Choose district\"}\n                displayClose={true}\n                theme={Themes.default}\n                widthSizeClass={ModalSize.medium}\n                padding={{\n                  title: true,\n                  body: true,\n                  footer: true,\n                }}\n              >\n                {this.state.loading_districts === true ? (\n                  <Loading className=\"mx-auto text-center\" />\n                ) : this.state.districts.length === 0 ? (\n                  <div className=\"py-5 text-center\">No results found!</div>\n                ) : (\n                  <div>\n                    {this.state.districts.map((dist, i) => (\n                      <div\n                        className=\"p-1 border-b flex hover:bg-yellow-50\"\n                        key={i}\n                      >\n                        <h6>{dist.district_code}</h6>\n                        <h6 className=\"flex-1 font-bold px-4\">\n                          {dist.district_name}\n                        </h6>\n                        <Button\n                          theme=\"accent-light\"\n                          size=\"sm\"\n                          onClick={this.selectDistrict.bind(this, dist)}\n                        >\n                          Select district\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Modal>\n            </>\n          )}\n          <div className=\"flex p-1 items-center border-b container mx-auto\">\n            <h1 className=\"text-2xl flex-1 font-bold \">\n              Change user schools & Position\n            </h1>\n            <Button theme=\"danger-light\" onClick={this.props.close}>\n              Close\n            </Button>\n          </div>\n\n          {this.props.userDetails !== undefined && (\n            <DashboardContainer>\n              <div className=\" bg-white mb-2 rounded items-center flex\">\n                <div className=\"\">\n                  <MdAccountCircle className=\"text-6xl\" />\n                </div>\n                <div className=\"flex-1 pl-2 grid grid-cols-2\">\n                  <p>\n                    <span className=\"text-gray-600\">Names: </span>{\" \"}\n                    <b>{this.props.userDetails?.full_name}</b>\n                  </p>\n                  <p>\n                    <span className=\"text-gray-600\">NID: </span>{\" \"}\n                    <b>{this.props.userDetails?.nid}</b>\n                  </p>\n                  <p>\n                    <span className=\"text-gray-600\">Staff code: </span>{\" \"}\n                    <b>{this.props.userDetails?.staff_code}</b>\n                  </p>\n                  <p>\n                    <span className=\"text-gray-600\">Email: </span>{\" \"}\n                    <b>{this.props.userDetails?.email}</b>\n                  </p>\n                </div>\n              </div>\n            </DashboardContainer>\n          )}\n\n          <div className=\"my-2\">\n            <DashboardContainer>\n              <div className=\"flex gap-3\">\n                <div className=\"flex-1 flex items-center bg-gray-100 rounded p-1\">\n                  {this.state.current_school === false && (\n                    <>\n                      <h2 className=\"text-lg pr-3\">\n                        <b>\n                          {/* {\n                          this.props.userInfo?.staffDetails.workInfo\n                            ?.school_district\n                        }{\" \"} */}\n                          {this.state.district_name}\n                        </b>\n                        District\n                      </h2>\n                      <Button\n                        onClick={() => {\n                          this.setState({\n                            // current_school: !this.state.current_school,\n                            open_select_district: true,\n                          });\n                          this.loadDistricts();\n                        }}\n                        size=\"sm\"\n                        theme=\"accent-light\"\n                      >\n                        Choose District\n                      </Button>\n\n                      {this.props.district_code + \"\" !==\n                        this.state.selected_district + \"\" &&\n                        this.props.district_code &&\n                        this.props.district_code &&\n                        this.props.district_name && (\n                          <Button\n                            onClick={() => {\n                              if (\n                                this.props.district_code &&\n                                this.props.district_code\n                              )\n                                this.selectDistrict({\n                                  district_code: this.props.district_code,\n                                  district_name: this.props.district_code,\n                                });\n                            }}\n                            size=\"sm\"\n                            theme=\"accent-light\"\n                          >\n                            Choose <b>{this.props.district_name}</b>\n                          </Button>\n                        )}\n                    </>\n                  )}\n                </div>\n                <div className=\"flex p-1 rounded bg-gray-100\">\n                  {\" \"}\n                  <h3 className=\"text-lg pr-3\">\n                    {this.state.current_school === true &&\n                      this.props?.school_name}\n                  </h3>\n                  <Button\n                    onClick={() =>\n                      this.setState({\n                        current_school: !this.state.current_school,\n                      })\n                    }\n                    size=\"sm\"\n                    theme=\"accent-light\"\n                  >\n                    {this.state.current_school === false\n                      ? \"Another school\"\n                      : \"Current school\"}\n                  </Button>\n                </div>\n              </div>\n            </DashboardContainer>\n          </div>\n\n          <div className=\"\">\n            <AssignStuffComponent\n              exclude_roles={[\"3\", \"4\", \"18\", \"21\", \"22\", \"25\", \"26\"]}\n              district_id={this.state.selected_district}\n              assignType=\"ASSIGN\"\n              no_position={true}\n              school={\n                this.state.current_school === true &&\n                this.props.school_code &&\n                this.props.school_name\n                  ? {\n                      school_id: this.props.school_code,\n                      school_name: this.props.school_name,\n                    }\n                  : undefined\n              }\n              current_position={this.props.current_position}\n              // position_code={accademicInfo.position_id}\n              // qualification_id={accademicInfo.qualification_id}\n              only_post_for_school={true}\n              user_id={this.props.user_id}\n              formAccess={{\n                first_name: false,\n                last_name: false,\n                full_name: false,\n                middle_name: false,\n                nid: false,\n                phone_numbers: false,\n                role_id: true,\n                country_id: false,\n                district_code: true,\n                sector_code: false,\n                school_code: true,\n                qualification_id: false,\n                academic_year_id: true,\n                stakeholder_id: false,\n                start_date_in_the_school: true,\n                position_id: true,\n              }}\n              required={{\n                first_name: false,\n                last_name: false,\n                full_name: false,\n                middle_name: false,\n                nid: true,\n                phone_numbers: true,\n                role_id: true,\n                country_id: false,\n                district_code: true,\n                sector_code: false,\n                school_code: true,\n                qualification_id: true,\n                academic_year_id: true,\n                stakeholder_id: false,\n                start_date_in_the_school: true,\n                position_id: false,\n              }}\n              success={(data) => {\n                // setStaffCreated(true);\n                this.setState({\n                  error: {\n                    target: \"user-updates-success\",\n                    msg: \"User updated successfully\",\n                  },\n                });\n\n                setTimeout(() => {\n                  if (this.props.refreshApp) this.props.refreshApp();\n                  this.props.close();\n                }, 4000);\n              }}\n              button_title=\"Update staff info\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const AssignStaffToSchool = connect(mapStateToProps, {\n  FC_GetAssignAssets,\n})(_AssignStaffToSchool);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  TeacherData,\n  TeacherDataRole,\n  FC_GetTeachersBySchool,\n  FC_DisableUser,\n  FT_DisableUser,\n  // FC_GetSchoolDetailsRegister,\n  API_DataGetSchoolRegister,\n  FC_GetDisabledUsers,\n  DisabledUser,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\n// import InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\n// import Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n// import { UpdateStuffDetails } from \"../../components/UpdateStuffDetails/UpdateStuffDetails\";\n// import { UserProfile } from \"../../containers/UserProfile/UserProfile\";\nimport { StoreState } from \"../../reducers\";\nimport { search } from \"../../utils/functions\";\nimport { AssignStaffToSchool } from \"../UserProfile/AssignStaffToSchool\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: \"main-success\" | \"main-error\" | null;\n    msg: string;\n  };\n  data: DisabledUser[];\n  search: string;\n  selected_user: DisabledUser | null;\n}\n\nclass _DisabledUsers extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      data: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      search: \"\",\n      loading: true,\n      selected_user: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.startApp();\n  };\n\n  startApp = () => {\n    this.setState({\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n\n    FC_GetDisabledUsers((status, data, msg) => {\n      if (status === true && data !== null) {\n        // console.log({ status, data, msg });\n        this.setState({\n          loading: false,\n          data: data,\n        });\n      } else {\n        this.setState({\n          loading: false,\n          error: {\n            msg: msg,\n            target: \"main-error\",\n          },\n        });\n      }\n    });\n  };\n\n  render() {\n    let RequestsList: DisabledUser[] = search(\n      this.state.data,\n      this.state.search,\n      {\n        school_code: true,\n        district_code: true,\n        position_code: true,\n        school_name: true,\n        district_name: true,\n        full_name: true,\n        first_name: true,\n        last_name: true,\n        email: true,\n        middle_name: true,\n        nid: true,\n        phone_numbers: true,\n        staff_code: true,\n      }\n    );\n\n    if (this.state.loading === true)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (\n      this.state.selected_user !== null &&\n      this.state.selected_user.user_id !== null\n    )\n      return (\n        <AssignStaffToSchool\n          user_id={this.state.selected_user.user_id}\n          // userInfo={this.state.userInfo}\n          userDetails={{\n            email: this.state.selected_user.email + \"\",\n            full_name: this.state.selected_user.full_name + \"\",\n            nid: this.state.selected_user.nid + \"\",\n            staff_code: this.state.selected_user.staff_code + \"\",\n          }}\n          close={() =>\n            this.setState({\n              selected_user: null,\n            })\n          }\n          // district_code={\n          //   this.state.userInfo?.staffDetails.workInfo?.school_district\n          // }\n          // current_position={\n          //   this.state.userInfo?.staffDetails.workInfo.\n          // }\n          // district_name={this.state.userInfo?.staffDetails.workInfo?.}\n          // school_code={this.state.userInfo?.staffDetails.workInfo?.school_code}\n          // school_name={this.state.userInfo?.staffDetails.workInfo?.school_name}\n        />\n      );\n\n    return (\n      <Fragment>\n        <>\n          {this.state.error.target === \"main-success\" && (\n            <Alert theme=\"success\" fixed>\n              {this.state.error.msg}\n            </Alert>\n          )}\n\n          {this.state.error.target === \"main-success\" && (\n            <Alert theme=\"success\" fixed>\n              {this.state.error.msg}\n            </Alert>\n          )}\n\n          <DashboardContainer>\n            <div className=\"flex items-center\">\n              <div className=\"flex-1\">\n                <Heading>Disabled users</Heading>\n              </div>\n            </div>\n\n            <div className=\"mt-3\">\n              <div className=\"border border-t mt-2 mb-1 flex items-center pl-3 pr-2 rounded\">\n                <div className=\"flex-1 pr-2\">\n                  <TextInput\n                    error=\"\"\n                    label=\"Search\"\n                    name=\"\"\n                    type=\"search\"\n                    onChange={(e) => this.setState({ search: e.target.value })}\n                    placeholder=\"Search by district name, staff code\"\n                    value={this.state.search}\n                    size=\"sm\"\n                  />\n                </div>\n\n                <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n                  <label className=\"\">Results:</label>\n                  <h4 className=\"text-2xl -mt-1 font-bold\">\n                    {RequestsList.length}\n                  </h4>\n                </div>\n              </div>\n              <table className=\"w-full text-left table-auto\">\n                <thead>\n                  <tr>\n                    <th className=\"p-2 border\">#</th>\n                    <th className=\"p-2 border\">NID</th>\n                    <th className=\"p-2 border\">First name</th>\n                    <th className=\"p-2 border\">Last name</th>\n                    <th className=\"p-2 border\">Middle name</th>\n                    <th className=\"p-2 border\">Full name</th>\n                    <th className=\"p-2 border\">Phone number</th>\n                    <th className=\"p-2 border\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {RequestsList.length <= 0 ? (\n                    <tr>\n                      <td\n                        colSpan={8}\n                        className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                      >\n                        <Heading size=\"md\" className=\"opacity-60 font-light\">\n                          No results found\n                        </Heading>\n                      </td>\n                    </tr>\n                  ) : (\n                    RequestsList.map((req, i) => {\n                      return (\n                        <Fragment key={i}>\n                          <tr className=\"group border rounded hover:bg-blue-500 hover:bg-opacity-20 text-sm\">\n                            <td className=\"p-2 border\" key={i}>\n                              {i + 1}\n                            </td>\n                            <td className=\"p-2 border\">{req.nid}</td>\n                            <td className=\"p-2 border\">{req.first_name}</td>\n                            <td className=\"p-2 border\">{req.middle_name}</td>\n                            <td className=\"p-2 border\">{req.last_name}</td>\n                            <td className=\"p-2 border\">{req.full_name}</td>\n                            <td className=\"p-2 border\">{req.phone_numbers}</td>\n                            <td className=\" text-center border\">\n                              <Button\n                                size=\"sm\"\n                                theme=\"accent-light\"\n                                className=\"w-full\"\n                                onClick={() =>\n                                  this.setState({ selected_user: req })\n                                }\n                              >\n                                Open profile\n                              </Button>\n                            </td>\n                          </tr>\n                        </Fragment>\n                      );\n                    })\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </DashboardContainer>\n        </>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const DisabledUsers = connect(mapStateToProps, { FC_DisableUser })(\n  _DisabledUsers\n);\n"],"sourceRoot":""}