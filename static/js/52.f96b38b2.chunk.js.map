{"version":3,"sources":["containers/Login/LoginCheckAccountMessage.tsx","containers/Login/Login.tsx"],"names":["LoginCheckAccountMessage","close","msg","className","DashboardContainer","Button","onClick","theme","_App","props","submitLogin","e","preventDefault","state","username","length","setState","error","target","password","no_password","loading","FC_Login","auth_status","data","console","log","is_account_verified","FC_AddBasicInfo","info_status","checking_account","this","auth","isAuthenticated","to","phone","Alert","fixed","onSubmit","TextInput","label","name","onChange","value","placeholder","disabled","type","full","React","Component","Login","connect"],"mappings":"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","file":"static/js/52.f96b38b2.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { MdVerifiedUser } from \"react-icons/md\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\n\ntype NonValidatedErrorDisplayProps = {\n  close: () => void;\n  phone: string;\n  msg: string;\n};\n\nconst LoginCheckAccountMessage: FC<NonValidatedErrorDisplayProps> = ({\n  close,\n  msg,\n}): ReactElement => {\n  return (\n    <div className=\"animate__animated animate__zoomIn animate__faster\">\n      <DashboardContainer className=\"max-w-screen-sm mx-auto text-center \">\n        <div className=\"py-4\">\n          <div className=\"text-6xl p-4 rounded-full bg-green-100 text-green-700 inline-block \">\n            <MdVerifiedUser />\n          </div>\n          <h2 className=\"text-2xl font-bold\">\n            We are verifying if you are the owner of the account{\" \"}\n          </h2>\n          {msg !== \"\" && <p className=\"py-2 text-lg\">{msg}</p>}\n          <p className=\"pt-4 text-gray-500\">\n            Your old password has been renewed, <br /> We sent you a{\" \"}\n            <b>new generated Password</b> and a <b>Username</b> on your phone\n            number ,\n            <br /> please use the password we sen't you and login\n          </p>\n          <br />\n          <Button onClick={close} theme=\"accent-light\">\n            Login with my new password\n          </Button>\n        </div>\n      </DashboardContainer>\n    </div>\n  );\n};\nexport default LoginCheckAccountMessage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  FC_AddBasicInfo,\n  FC_Login,\n  FT_AddBasicInfo,\n  FT_Login,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { StoreState } from \"../../reducers\";\nimport LoginCheckAccountMessage from \"./LoginCheckAccountMessage\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  FC_Login: FT_Login;\n  FC_AddBasicInfo: FT_AddBasicInfo;\n}\n\ninterface AppState {\n  username: string;\n  password: string;\n  loading: boolean;\n  no_password: boolean;\n  error: {\n    target: \"username\" | \"password\" | \"main\" | \"SEND-CODE-ERROR\" | null;\n    msg: string;\n  };\n  checking_account: boolean;\n}\n\nclass _App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      checking_account: false,\n      no_password: false,\n      username: \"\",\n      password: \"\",\n      loading: false,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n\n    //* Validation\n    if (this.state.username.length <= 4) {\n      return this.setState({\n        error: {\n          target: \"username\",\n          msg: \"Phone must not be lass than 4 character\",\n        },\n      });\n    }\n\n    //* Validation\n    if (this.state.password.length <= 4 && this.state.no_password === false) {\n      return this.setState({\n        error: {\n          target: \"password\",\n          msg: \"Password must not be lass than 4 character\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n\n    this.props.FC_Login(\n      {\n        password: this.state.password,\n        username: this.state.username,\n      },\n      (auth_status, data, msg) => {\n        console.log({ auth_status, msg });\n        if (auth_status === true) {\n          // check for error (api)\n\n          if (data?.is_account_verified === true) {\n            this.props.FC_AddBasicInfo((info_status, msg) => {\n              // if (info_status === true) {\n              //   // this.props.FC_AddBasicInfo((status, msg) => {});\n              // }\n            });\n          } else {\n            this.setState({\n              loading: false,\n              checking_account: true,\n              error: {\n                msg: msg,\n                target: \"SEND-CODE-ERROR\",\n              },\n            });\n          }\n        } else {\n          this.setState({\n            error: {\n              target: \"main\",\n              msg: msg,\n            },\n            loading: false,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.auth.isAuthenticated === true) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n\n    if (this.state.checking_account === true)\n      return (\n        <LoginCheckAccountMessage\n          close={() => this.setState({ checking_account: false, password: \"\" })}\n          phone={this.state.username}\n          msg={\n            this.state.error.target === \"SEND-CODE-ERROR\"\n              ? this.state.error.msg\n              : \"\"\n          }\n        />\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"min-h-screen bg-gray-100 dark:bg-dark-900 flex items-center \">\n          <div className=\"bg-white py-10 rounded border mt-5  dark:bg-dark-800 w-full max-w-md mx-auto px-5 animate__animated animate__zoomIn animate__faster\">\n            <form onSubmit={this.submitLogin}>\n              <h1 className=\"text-center text-3xl mb-6 text-primary-800 dark:text-primary-dark  font-extrabold\">\n                TMIS Login\n              </h1>\n\n              {this.state.no_password === true && (\n                <div className=\"text-center text-gray-500\">\n                  Finding your account\n                </div>\n              )}\n\n              <TextInput\n                error={\n                  this.state.error.target === \"username\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label=\"Phone\"\n                name=\"phone\"\n                onChange={(e) =>\n                  this.setState({\n                    username: e.target.value,\n                    error: {\n                      target: null,\n                      msg: \"\",\n                    },\n                  })\n                }\n                placeholder=\"25070000000\"\n                value={this.state.username}\n                disabled={this.state.loading}\n                type=\"number\"\n              />\n\n              {this.state.no_password === false && (\n                <TextInput\n                  error={\n                    this.state.error.target === \"password\"\n                      ? this.state.error.msg\n                      : \"\"\n                  }\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={(e) =>\n                    this.setState({\n                      password: e.target.value,\n                      error: {\n                        target: null,\n                        msg: \"\",\n                      },\n                    })\n                  }\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  disabled={this.state.loading}\n                  type=\"password\"\n                />\n              )}\n\n              <div className=\"mt-5\">\n                <Button full loading={this.state.loading}>\n                  {this.state.no_password === true ? \"Continue\" : \"Login\"}\n                </Button>\n              </div>\n\n              <div className=\"mt-4 text-center\">\n                <button\n                  type=\"button\"\n                  className=\"font-bold hover:text-blue-600 cursor-pointer\"\n                  onClick={() =>\n                    this.setState({\n                      no_password: !this.state.no_password,\n                    })\n                  }\n                >\n                  {this.state.no_password === true\n                    ? \"I have a password\"\n                    : \"I don't have a password.\"}\n                </button>\n              </div>\n\n              <div className=\"mt-4 text-center\">\n                <Link to=\"/forget-password\" className=\" cursor-pointer\">\n                  Forget your password?\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const Login = connect(mapStateToProps, {\n  FC_Login,\n  FC_AddBasicInfo,\n})(_App);\n"],"sourceRoot":""}