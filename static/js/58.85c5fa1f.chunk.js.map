{"version":3,"sources":["containers/SubjectsList/EditNewForm.tsx","containers/SubjectsList/SubjectsList.tsx"],"names":["EditNewForm","props","useState","data","course_code","setCourseCode","course_name","setCourseName","teaching_period","periods","setPeriods","success","setSuccess","loading","setLoading","formError","setFormError","editSubject","e","preventDefault","element","msg","setAxiosToken","axios","post","APP_URL","studyhierarchyid","parseInt","status","reload","console","log","errorToText","className","level_code","level_name","combination_code","combination_name","grade_code","grade_name","onSubmit","type","value","onChange","target","placeholder","disabled","onClick","FilteredData","school_hierarchy_data","selected_level_code","selected_combination_code","res","filter","itm","_SubjectsList","componentDidMount","schoolHierarchyStore","hierarchy","setState","FC_AllSchoolHierarchyDetails","state","filter_by_combination","search_comb","addedSubjects","error","ediSubject","search","DashboardContainer","this","length","to","title","FC_GetSchoolLevels","HierarchyDataType","SCHOOL_LEVELS","levels","map","item","i","COMBINATIONS","combinations","find","style","minWidth","colSpan","Loading","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","body","Component","SubjectsList","connect","auth","basic"],"mappings":"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","file":"static/js/58.85c5fa1f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { SchoolHierarchyInterface } from \"../../actions/study_hierarchy.action\";\nimport { APP_URL } from \"../../config/app.config\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AddNewFormProps {\n  data: SchoolHierarchyInterface;\n  reload: () => void;\n}\n\nexport default function EditNewForm(props: AddNewFormProps) {\n  const [course_code, setCourseCode] = useState<string>(props.data.course_code);\n  const [course_name, setCourseName] = useState<string>(props.data.course_name);\n  const [periods, setPeriods] = useState<string>(props.data.teaching_period);\n  const [success, setSuccess] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const editSubject = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setFormError(null);\n    if (course_code === \"\") {\n      return setFormError({\n        element: \"course_code\",\n        msg: \"Please fill course code\",\n      });\n    }\n    if (course_name === \"\") {\n      return setFormError({\n        element: \"course_name\",\n        msg: \"Please fill course name\",\n      });\n    }\n    if (periods === \"\") {\n      return setFormError({\n        element: \"periods\",\n        msg: \"Please fill teaching periods\",\n      });\n    }\n    setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.post(`${APP_URL}/hierarch/upperiod`, {\n        studyhierarchyid: props.data.studyhierarchyid,\n        course_code: course_code,\n        course_name: course_name,\n        teaching_period: parseInt(periods),\n      });\n      if (res.status === 200) {\n        props.reload();\n        setLoading(false);\n        setSuccess(\"Subject updated successfully!\");\n      }\n    } catch (error: any) {\n      console.log(\"Erro: \", { ...error });\n      setFormError({\n        element: \"main\",\n        msg: errorToText(error),\n      });\n      setLoading(false);\n    }\n  };\n  return (\n    <div className=\"py-3\">\n      <div className=\"bg-blue-100 rounded p-3 flex flex-col gap-2 mb-3\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <span className=\"text-gray-800\">School level:</span>\n          <span className=\"text-primary-800 font-bold\">\n            ({props.data.level_code}) {props.data.level_name}\n          </span>\n        </div>\n        <div className=\"flex flex-row items-center gap-3\">\n          <span className=\"text-gray-800\">Combination:</span>\n          <span className=\"text-primary-800 font-bold\">\n            ({props.data.combination_code}) {props.data.combination_name}\n          </span>\n        </div>\n        <div className=\"flex flex-row items-center gap-3\">\n          <span className=\"text-gray-800\">Grade:</span>\n          <span className=\"text-primary-800 font-bold\">\n            ({props.data.grade_code}) {props.data.grade_name}\n          </span>\n        </div>\n      </div>\n      <form onSubmit={editSubject}>\n        <div className=\"flex flex-col mb-3\">\n          <span>Course code</span>\n          <input\n            type=\"text\"\n            value={course_code}\n            onChange={(e) => {\n              setCourseCode(e.target.value);\n            }}\n            className={`border ${\n              formError !== null && formError.element === \"course_code\"\n                ? \"border-red-600\"\n                : \"border-gray-300\"\n            } px-3 py-2 w-full rounded`}\n            placeholder=\"Fill course code\"\n            disabled={loading}\n          />\n          {formError !== null && formError.element === \"course_code\" && (\n            <div className=\"text-red-600 font-bold text-base\">\n              {formError.msg}\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col mb-3\">\n          <span>Course name</span>\n          <input\n            type=\"text\"\n            value={course_name}\n            onChange={(e) => {\n              setCourseName(e.target.value);\n            }}\n            className={`border ${\n              formError !== null && formError.element === \"course_name\"\n                ? \"border-red-600\"\n                : \"border-gray-300\"\n            } px-3 py-2 w-full rounded`}\n            placeholder=\"Fill course name\"\n            disabled={loading}\n          />\n          {formError !== null && formError.element === \"course_name\" && (\n            <div className=\"text-red-600 font-bold text-base\">\n              {formError.msg}\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col mb-3\">\n          <span>Periods</span>\n          <input\n            type=\"number\"\n            value={periods}\n            onChange={(e) => {\n              setPeriods(e.target.value);\n            }}\n            className={`border ${\n              formError !== null && formError.element === \"periods\"\n                ? \"border-red-600\"\n                : \"border-gray-300\"\n            } px-3 py-2 w-full rounded`}\n            placeholder=\"Fill number of periods\"\n            disabled={loading}\n          />\n          {formError !== null && formError.element === \"periods\" && (\n            <div className=\"text-red-600 font-bold text-base\">\n              {formError.msg}\n            </div>\n          )}\n        </div>\n        {formError !== null && formError.element === \"main\" && (\n          <div\n            onClick={() => setFormError(null)}\n            className=\"cursor-pointer text-red-600 font-bold text-base bg-red-100 rounded px-3 py-2\"\n          >\n            {formError.msg}\n          </div>\n        )}\n        {success !== \"\" && (\n          <div\n            onClick={() => setSuccess(\"\")}\n            className=\"cursor-pointer text-green-600 font-bold text-base bg-green-100 rounded px-3 py-2\"\n          >\n            {success}\n          </div>\n        )}\n        <div className=\"flex flex-row justify-between items-center gap-3 mb-3 mt-3\">\n          {/* <div className=\"flex items-center justify-center px-3 py-2 rounded cursor-pointer bg-gray-100 text-black font-bold hover:bg-gray-200\">\n            Cancel\n          </div> */}\n          <div></div>\n          <button\n            type=\"submit\"\n            className=\"flex items-center justify-center px-3 py-2 rounded cursor-pointer bg-primary-800 text-white font-bold hover:bg-blue-500\"\n            disabled={loading}\n          >\n            Update subject\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\n// import axios from \"axios\";\nimport { GrPowerReset } from \"react-icons/gr\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdAdd, MdClose } from \"react-icons/md\";\n// import { RiTodoLine } from \"react-icons/ri\";\nimport {\n  // AuthSchool,\n  FC_AllSchoolHierarchyDetails,\n  FC_GetSchoolLevels,\n  FilteredCombination,\n  HierarchyDataType,\n  SchoolHierarchyInterface,\n} from \"../../actions\";\n// import { APP_URL } from \"../../config/app.config\";\nimport { search } from \"../../utils/functions\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, SchoolHierarchyStore } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\n// import Dashboard from \"../Dashboard/Dashboard\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport { Link } from \"react-router-dom\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport EditNewForm from \"./EditNewForm\";\n\nexport const FilteredData = (\n  school_hierarchy_data: SchoolHierarchyInterface[] | null,\n  selected_level_code: string | null,\n  selected_combination_code: string | null\n): SchoolHierarchyInterface[] => {\n  let res = school_hierarchy_data;\n  if (res !== null) {\n    if (selected_level_code !== null && selected_level_code !== \"\") {\n      res = res.filter((itm) => itm.level_code === selected_level_code);\n    }\n    if (selected_combination_code !== null) {\n      res = res.filter(\n        (itm) => itm.combination_code === selected_combination_code\n      );\n    }\n    return res;\n  } else {\n    return [];\n  }\n};\n\ninterface AddNewSubjectProps {\n  schoolHierarchyStore: SchoolHierarchyStore;\n  auth: Auth;\n  basic: Basic;\n  FC_AllSchoolHierarchyDetails: (\n    admin: boolean,\n    callBack: (status: boolean, msg: string) => void\n  ) => void;\n}\ninterface AddNewSubjectState {\n  selected_level_code: string | null;\n  filter_by_combination: boolean;\n  selected_combination_code: string | null;\n  search_comb: string;\n  addedSubjects: SchoolHierarchyInterface[];\n  loading: boolean;\n  success: string;\n  error: string;\n  ediSubject: SchoolHierarchyInterface | null;\n  search: string;\n}\n\nclass _SubjectsList extends Component<AddNewSubjectProps, AddNewSubjectState> {\n  constructor(props: AddNewSubjectProps) {\n    super(props);\n\n    this.state = {\n      selected_level_code: null,\n      filter_by_combination: false,\n      selected_combination_code: null,\n      search_comb: \"\",\n      addedSubjects: [],\n      loading: false,\n      success: \"\",\n      error: \"\",\n      ediSubject: null,\n      search: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.schoolHierarchyStore.hierarchy === null) {\n      this.setState({ loading: true });\n      this.props.FC_AllSchoolHierarchyDetails(\n        true,\n        (status: boolean, msg: string) => {\n          if (status === true) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <DashboardContainer>\n          <div className=\"bg-white rounded-md z-50 w-full h-full overflow-auto\">\n            <div className=\"rounded-t-md flex flex-row items-center justify-between gap-4 py-2 border-b border-gray-400\">\n              <div className=\"text-xl font-bold ml-2 uppercase mt-2\">\n                List of subjects (\n                {this.props.schoolHierarchyStore.hierarchy?.length})\n              </div>\n              <Link\n                to=\"/hierarchy-add-subject\"\n                className=\"flex items-center justify-center py-2 px-3 rounded bg-gray-100 text-2xl hover:bg-blue-100 hover:text-primary-800 cursor-pointer\"\n                title=\"Close window\"\n              >\n                <MdAdd />\n                <span className=\"text-base\">Add subject</span>\n              </Link>\n            </div>\n            <div className=\"\">\n              <div className=\"\">\n                <div className=\"mb-10\">\n                  <div>\n                    <div className=\"mb-5\">\n                      <div className=\"mt-4\">\n                        <div>Filter by</div>\n                        <div className=\"flex flex-row items-center gap-3\">\n                          <select\n                            onChange={(e) =>\n                              this.setState({\n                                selected_level_code: e.target.value,\n                              })\n                            }\n                            value={\n                              this.state.selected_level_code === null\n                                ? \"\"\n                                : this.state.selected_level_code\n                            }\n                            className=\"border border-gray-400 rounded px-3 py-2\"\n                          >\n                            <option value=\"\">Choose education level</option>\n                            <option value=\"\">Show all levels</option>\n                            {this.props.schoolHierarchyStore.hierarchy &&\n                              FC_GetSchoolLevels(\n                                this.props.schoolHierarchyStore.hierarchy,\n                                {\n                                  type: HierarchyDataType.SCHOOL_LEVELS,\n                                  status: true,\n                                }\n                              ).levels.map((item, i) => (\n                                <option key={i + 1} value={item.level_code}>\n                                  {item.level_name}\n                                </option>\n                              ))}\n                          </select>\n                          <div className=\"w-full\">\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  filter_by_combination:\n                                    !this.state.filter_by_combination,\n                                })\n                              }\n                              className=\"w-auto border border-gray-400 rounded px-4 py-2 bg-white flex flex-row items-center justify-between gap-10 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n                            >\n                              {this.state.selected_combination_code === null ? (\n                                <span>All- Click to filter by combination</span>\n                              ) : (\n                                <span>\n                                  {this.props.schoolHierarchyStore.hierarchy &&\n                                    FC_GetSchoolLevels(\n                                      this.props.schoolHierarchyStore.hierarchy,\n                                      {\n                                        type: HierarchyDataType.COMBINATIONS,\n                                        status: true,\n                                      }\n                                    ).combinations.find(\n                                      (itm) =>\n                                        itm.combination_code ===\n                                        this.state.selected_combination_code\n                                    )?.combination_name}\n                                </span>\n                              )}\n                              <div className=\"-mr-3\">\n                                {this.state.filter_by_combination === true ? (\n                                  <MdClose />\n                                ) : (\n                                  <IoIosArrowDown />\n                                )}\n                              </div>\n                            </div>\n                            {this.state.filter_by_combination === true && (\n                              <div className=\"absolute w-max bg-white px-3 py-3 rounded-b animate__animated animate__zoomIn animate__faster shadow-xl\">\n                                <div>\n                                  <div className=\"flex flex-row items-center w-full justify-between gap-2\">\n                                    <input\n                                      value={this.state.search_comb}\n                                      onChange={(e) =>\n                                        this.setState({\n                                          search_comb: e.target.value,\n                                        })\n                                      }\n                                      placeholder=\"Search...\"\n                                      type=\"text\"\n                                      className=\"border border-gray-400 rounded px-3 py-2 text-sm w-full\"\n                                    />\n                                    <div>\n                                      <div\n                                        onClick={() =>\n                                          this.setState({\n                                            filter_by_combination: false,\n                                          })\n                                        }\n                                        className=\"bg-red-100 text-red-800 text-2xl p-1 rounded-full cursor-pointer hover:bg-red-600 hover:text-white\"\n                                      >\n                                        <MdClose />\n                                      </div>\n                                    </div>\n                                  </div>\n                                  {this.state.selected_combination_code !==\n                                    null && (\n                                    <div\n                                      onClick={() => {\n                                        this.setState({\n                                          selected_combination_code: null,\n                                          filter_by_combination: false,\n                                        });\n                                      }}\n                                      className=\"flex flex-row items-center gap-3 text-gray-800 font-bold cursor-pointer hover:text-accent-900 px-3 py-1 my-2 rounded bg-gray-100 w-full\"\n                                    >\n                                      <div>\n                                        <GrPowerReset className=\"text-xl\" />\n                                      </div>\n                                      <span>Click to view all</span>\n                                    </div>\n                                  )}\n                                </div>\n                                <div\n                                  className=\"h-64 overflow-y-auto mt-1 animate__animated animate__fadeIn\"\n                                  style={{ minWidth: \"28rem\" }}\n                                >\n                                  {search(\n                                    this.props.schoolHierarchyStore.hierarchy &&\n                                      FC_GetSchoolLevels(\n                                        this.props.schoolHierarchyStore\n                                          .hierarchy,\n                                        {\n                                          type: HierarchyDataType.COMBINATIONS,\n                                          status: true,\n                                        }\n                                      ).combinations,\n                                    this.state.search_comb\n                                  ).length === 0 ? (\n                                    <div className=\"text-center text-lg font-bold p-5 px-10 text-gray-500\">\n                                      No result found!\n                                    </div>\n                                  ) : (\n                                    this.props.schoolHierarchyStore.hierarchy &&\n                                    search(\n                                      FC_GetSchoolLevels(\n                                        this.props.schoolHierarchyStore\n                                          .hierarchy,\n                                        {\n                                          type: HierarchyDataType.COMBINATIONS,\n                                          status: true,\n                                        }\n                                      ).combinations,\n                                      this.state.search_comb\n                                    ).map(\n                                      (\n                                        item: FilteredCombination,\n                                        i: number\n                                      ) => (\n                                        <div\n                                          key={i + 1}\n                                          className={`w-full flex flex-row items-center border-b ${\n                                            this.state\n                                              .selected_combination_code ===\n                                            item.combination_code\n                                              ? \"border-yellow-100 bg-yellow-100 font-bold\"\n                                              : \"border-gray-200\"\n                                          } py-1 gap-4 hover:bg-yellow-100 cursor-pointer`}\n                                          onClick={() => {\n                                            this.setState({\n                                              selected_combination_code:\n                                                item.combination_code,\n                                              filter_by_combination: false,\n                                            });\n                                          }}\n                                        >\n                                          <div>\n                                            <div className=\"rounded-full bg-yellow-50 border border-yellow-200 h-8 w-8 flex flex-row items-center justify-center font-bold\">\n                                              {i + 1}\n                                            </div>\n                                          </div>\n                                          <div>{item.combination_name}</div>\n                                        </div>\n                                      )\n                                    )\n                                  )}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n                            placeholder=\"Search keyword...\"\n                            value={this.state.search}\n                            onChange={(e) =>\n                              this.setState({ search: e.target.value })\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-white rounded border border-gray-200\">\n                      <div className=\"w-full overflow-x-auto\">\n                        <table className=\"min-w-full text-left\">\n                          <thead>\n                            <tr className=\"font-semibold border-b text-base\">\n                              <th className=\"p-2 border-b-2 border-gray-300 text-center\">\n                                #\n                              </th>\n                              <th className=\"p-2 border-b-2 border-gray-300\">\n                                Subject\n                              </th>\n                              <th className=\"p-2 border-b-2 border-gray-300\">\n                                Level\n                              </th>\n                              <th className=\"p-2 border-b-2 border-gray-300\">\n                                Combination\n                              </th>\n                              <th className=\"p-2 border-b-2 border-gray-300\">\n                                Grade\n                              </th>\n                              <th className=\"p-2 border-b-2 border-gray-300\">\n                                Periods\n                              </th>\n                              <th className=\"p-2 border-b-2 border-gray-300 text-right\">\n                                Action\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody className=\"text-sm\">\n                            {this.props.schoolHierarchyStore.hierarchy ===\n                            null ? (\n                              <tr>\n                                <td colSpan={7}>\n                                  <div className=\"flex w-full items-center justify-center py-3\">\n                                    <Loading />\n                                  </div>\n                                </td>\n                              </tr>\n                            ) : search(\n                                FilteredData(\n                                  this.props.schoolHierarchyStore.hierarchy,\n                                  this.state.selected_level_code,\n                                  this.state.selected_combination_code\n                                ),\n                                this.state.search\n                              ).length === 0 ? (\n                              <td colSpan={7}>\n                                <div className=\"text-lg p-3 text-center\">\n                                  No result found\n                                </div>\n                              </td>\n                            ) : (\n                              (\n                                search(\n                                  FilteredData(\n                                    this.props.schoolHierarchyStore.hierarchy,\n                                    this.state.selected_level_code,\n                                    this.state.selected_combination_code\n                                  ),\n                                  this.state.search\n                                ) as SchoolHierarchyInterface[]\n                              ).map((item, i) => (\n                                <tr\n                                  key={i + 1}\n                                  className={`text-gray-500 group`}\n                                >\n                                  <td className=\"p-2 border-b text-center\">\n                                    {i + 1}\n                                  </td>\n                                  <td className=\"p-2 border-b\">\n                                    {item.course_code}-{item.course_name}\n                                  </td>\n                                  <td className=\"p-2 border-b\">\n                                    {item.level_name}\n                                  </td>\n                                  <td className=\"p-2 border-b\">\n                                    {item.combination_name}\n                                  </td>\n                                  <td className=\"p-2 border-b\">\n                                    {item.grade_name}\n                                  </td>\n                                  <td className=\"p-2 border-b\">\n                                    {item.teaching_period}\n                                  </td>\n                                  <td className=\"p-2 border-b\">\n                                    <div className=\"flex flex-row items-center justify-end\">\n                                      <div\n                                        onClick={() =>\n                                          this.setState({ ediSubject: item })\n                                        }\n                                        className=\"px-3 py-1 rounded bg-blue-100 group-hover:bg-primary-800 cursor-pointer text-black font-bold group-hover:text-white\"\n                                      >\n                                        Edit\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            )}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </DashboardContainer>\n        {this.state.ediSubject !== null && (\n          <Modal\n            title=\"Update subject\"\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ ediSubject: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: false,\n            }}\n          >\n            <div className=\"border-t border-gray-400 px-3\">\n              <EditNewForm\n                data={this.state.ediSubject}\n                reload={() => {\n                  this.setState({ loading: true });\n                  this.props.FC_AllSchoolHierarchyDetails(\n                    true,\n                    (status: boolean, msg: string) => {\n                      if (status === true) {\n                        this.setState({ loading: false });\n                      }\n                    }\n                  );\n                }}\n              />\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  schoolHierarchyStore,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  schoolHierarchyStore: SchoolHierarchyStore;\n} => {\n  return {\n    auth: auth,\n    basic: basic,\n    schoolHierarchyStore: schoolHierarchyStore,\n  };\n};\n\nexport const SubjectsList = connect(mapStateToProps, {\n  FC_AllSchoolHierarchyDetails,\n})(_SubjectsList);\n"],"sourceRoot":""}