{"version":3,"sources":["components/GenerateReport/ExportToExcel.tsx","containers/DistrictInternalPermutationReport/DistrictInternalPermutationReport.tsx"],"names":["ExportToExcel","fileData","fileName","btnName","className","showIcon","onClick","e","apiData","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","React","memo","DistrictInternalPermutationReport","connect","auth","console","log","district","district_code","useState","loading","setLoading","error","setError","setData","useEffect","FC_InternalPermutationReport","status","err","length","Date","toISOString","theme","colSpan","map","el","i","teacher_one_staff_code","teacher_one_full_name","teacher_one_nid","teacher_one_phone_number","teacher_one_school_code_from","teacher_one_school_name_from","teacher_one_school_code_togo","teacher_one_school_name_togo","teacher_two_staff_code","teacher_two_full_name","teacher_two_nid","teacher_two_phone_number","teacher_two_school_code_from","teacher_two_school_name_from","teacher_two_school_code_togo","teacher_two_school_nane_togo","position_code","position_name","qualification_name","done_at"],"mappings":"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","file":"static/js/34.6dbaaa13.chunk.js","sourcesContent":["import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default React.memo(ExportToExcel);\n","import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_InternalPermutationReport,\n  InternalPermutationReport,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\n\ntype DistrictInternalPermutationReportProps = {\n  auth: Auth;\n};\n\nconst _DistrictInternalPermutationReport: FC<\n  DistrictInternalPermutationReportProps\n> = ({ auth }): ReactElement => {\n  console.log(auth.district?.district_code);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [data, setData] = useState<InternalPermutationReport[]>([]);\n\n  useEffect(() => {\n    if (loading === true) {\n      if (auth.district?.district_code) {\n        console.log(\"Load data\");\n\n        FC_InternalPermutationReport(\n          auth.district?.district_code + \"\",\n          (status, data, err) => {\n            setData(data);\n            if (status === false) setError(err);\n            setLoading(false);\n          }\n        );\n      } else {\n        setError(\"No district assigned to you!\");\n        setLoading(false);\n      }\n    }\n  }, [auth.district?.district_code, loading]);\n\n  /* function body */\n  return (\n    <DashboardContainer>\n      <div className=\"py-1 flex border-b\">\n        <div className=\"flex-1\">\n          <Heading>Internal Permutation report</Heading>\n        </div>\n        <div>\n          {data.length >= 1 && (\n            <ExportToExcel\n              fileData={data}\n              fileName={`Internal Permutation - ${new Date().toISOString()}`}\n              btnName=\"Download EXCEL\"\n            />\n          )}\n        </div>\n      </div>\n\n      {error !== \"\" && <Alert theme=\"danger\">{error}</Alert>}\n\n      <div className=\"lg:pl-10 lg:max-w-screen-lg md:max-w-screen-md xl:max-w-screen-xl 2xl:max-w-screen-2xl overflow-auto\">\n        <table className=\"w-full pl-10 overflow-auto max-w-xl\">\n          <thead>\n            <tr>\n              <th className=\"p-2 border border-gray-400\"></th>\n              <th\n                className=\"p-2 border bg-blue-100 border-gray-400\"\n                colSpan={6}\n              >\n                Teacher one\n              </th>\n              <th\n                className=\"p-2 border bg-green-100 border-gray-400\"\n                colSpan={6}\n              >\n                Teacher two\n              </th>\n              <th className=\"p-2 border\" colSpan={4}>\n                Academic info\n              </th>\n            </tr>\n\n            <tr>\n              <th className=\"p-2 border border-gray-400\">#</th>\n              <th className=\"border p-2 bg-blue-100 border-gray-400\">\n                staff_code\n              </th>\n              <th className=\"border p-2  bg-blue-100 border-gray-400\">\n                full_name\n              </th>\n              <th className=\"border p-2  bg-blue-100 border-gray-400\">nid</th>\n              <th className=\"border p-2  bg-blue-100 border-gray-400\">\n                phone_number\n              </th>\n              <th className=\"border p-2  bg-blue-100 border-gray-400\">\n                school_nane_from\n              </th>\n              <th className=\"border p-2  bg-blue-100 border-gray-400\">\n                school_code_togo\n              </th>\n\n              <th className=\"border p-2 bg-green-100 border-gray-400\">\n                staff_code\n              </th>\n              <th className=\"border p-2 bg-green-100 border-gray-400\">\n                full_name\n              </th>\n              <th className=\"border p-2 bg-green-100 border-gray-400\">nid</th>\n              <th className=\"border p-2 bg-green-100 border-gray-400\">\n                phone_number\n              </th>\n              <th className=\"border p-2 bg-green-100 border-gray-400\">\n                school_name_from\n              </th>\n              <th className=\"border p-2 bg-green-100 border-gray-400\">\n                school_nane_togo\n              </th>\n\n              <th className=\"border p-2\">position_code</th>\n              <th className=\"border p-2\">position_name</th>\n              <th className=\"border p-2\">qualification_name</th>\n              <th className=\"border p-2\">done_at</th>\n            </tr>\n\n            {loading === true && (\n              <tr>\n                <td colSpan={8} className=\"py-8\">\n                  <Loading />\n                </td>\n              </tr>\n            )}\n\n            {data.length === 0 && (\n              <tr>\n                <td colSpan={8} className=\"py-8 text-center\">\n                  <h2 className=\"text-2xl\">No placement found!</h2>\n                  <p>No placement found!</p>\n                </td>\n              </tr>\n            )}\n            {data.map((el, i) => (\n              <tr>\n                <td className=\"p-2 border-1\">{i + 1}</td>\n                <td className=\"border p-2 bg-blue-50 border-gray-400\">\n                  {el.teacher_one_staff_code}\n                </td>\n                <td className=\"border p-2 bg-blue-50 border-gray-400\">\n                  {el.teacher_one_full_name}\n                </td>\n                <td className=\"border p-2 bg-blue-50 border-gray-400\">\n                  {el.teacher_one_nid}\n                </td>\n                <td className=\"border p-2 bg-blue-50 border-gray-400\">\n                  {el.teacher_one_phone_number}\n                </td>\n\n                <td className=\"border p-2 bg-blue-50 border-gray-400\">\n                  {el.teacher_one_school_code_from}{\" \"}\n                  {el.teacher_one_school_name_from}\n                </td>\n\n                <td className=\"border p-2 bg-blue-50 border-gray-400\">\n                  {el.teacher_one_school_code_togo}{\" \"}\n                  {el.teacher_one_school_name_togo}\n                </td>\n                <td className=\"border p-2 bg-green-50 border-gray-400\">\n                  {el.teacher_two_staff_code}\n                </td>\n                <td className=\"border p-2 bg-green-50 border-gray-400\">\n                  {el.teacher_two_full_name}\n                </td>\n                <td className=\"border p-2 bg-green-50 border-gray-400\">\n                  {el.teacher_two_nid}\n                </td>\n                <td className=\"border p-2 bg-green-50 border-gray-400\">\n                  {el.teacher_two_phone_number}\n                </td>\n                <td className=\"border p-2 bg-green-50 border-gray-400\">\n                  {el.teacher_two_school_code_from}{\" \"}\n                  {el.teacher_two_school_name_from}\n                </td>\n                <td className=\"border p-2 bg-green-50 border-gray-400\">\n                  {el.teacher_two_school_code_togo}{\" \"}\n                  {el.teacher_two_school_nane_togo}\n                </td>\n                <td className=\"border p-2 bg-yellow-50 border-gray-400\">\n                  {el.position_code}\n                </td>\n                <td className=\"border p-2 bg-yellow-50 border-gray-400\">\n                  {el.position_name}\n                </td>\n                <td className=\"border p-2 bg-yellow-50 border-gray-400\">\n                  {el.qualification_name}\n                </td>\n                <td className=\"border p-2 bg-yellow-50 border-gray-400\">\n                  {el.done_at}\n                </td>\n              </tr>\n            ))}\n          </thead>\n        </table>\n      </div>\n    </DashboardContainer>\n  );\n};\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const DistrictInternalPermutationReport = connect(\n  mapStateToProps,\n  {}\n)(_DistrictInternalPermutationReport);\n"],"sourceRoot":""}