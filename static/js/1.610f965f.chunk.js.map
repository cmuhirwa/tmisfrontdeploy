{"version":3,"sources":["containers/UserProfile/AssignStaffToSchool.tsx","components/AssignStuffComponent/AssignStuffComponent.tsx"],"names":["_AssignStaffToSchool","props","componentDidMount","district_code","loadDistricts","undefined","school_code","setState","current_school","state","districts","length","loading_districts","FC_GetDistrictList","status","data","msg","error","target","selectDistrict","itm","selected_district","district_name","open_select_district","reloadDistrictResurces","district_id","loading_resource","FC_GetAssignAssets","clearError","loading","this","className","theme","onClick","close","refreshApp","fixed","backDrop","backDropClose","title","displayClose","Themes","default","widthSizeClass","ModalSize","medium","padding","body","footer","map","dist","i","size","bind","userDetails","full_name","nid","staff_code","email","school_name","exclude_roles","assignType","no_position","school","school_id","current_position","only_post_for_school","user_id","formAccess","first_name","last_name","middle_name","phone_numbers","role_id","country_id","sector_code","qualification_id","academic_year_id","stakeholder_id","start_date_in_the_school","position_id","required","success","setTimeout","button_title","React","Component","AssignStaffToSchool","connect","auth","_AssignStuffComponent","submitLogin","e","preventDefault","basic","academic_calender","select_district_active","AssignType","SendData","hired_date","position_code","key","FC_AssignCandidate","loading_assets","select_school_open","select_sector_open","select_role_open","select_district_open","select_position_open","nid_value","loading_positions_schools","school_posts","district_list","slice","loading_assigning_data","console","log","district","getDistrictAssets","loadSchoolPosts","FC_GetSchoolPositions","prevProps","assign_teacher_assets","selected_school_name_exist","schools","find","selected_school_name","sector_exist","sectors","sector_name","role_exist","roles","role_name","role","positions_exist","positions","positions_name","position_name","qualification_name","SchoolsAvailablesList","school_category","onSubmit","disabled","label","name","type","max","onChange","value","placeholder","click","FC_GetSchoolsByDistrictRedux","id","qualifications","stakeholders","stakeholder_name","academic_year_name","filter","rol","includes","school_positions","pos_s","pos","AssignStuffComponent"],"mappings":"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","file":"static/js/1.610f965f.chunk.js","sourcesContent":["import React from \"react\";\nimport { MdAccountCircle, MdCheckCircle } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictList,\n  FC_GetAssignAssets,\n  FC_GetDistrictList,\n  FT_GetAssignAssets,\n} from \"../../actions\";\nimport { AssignStuffComponent } from \"../../components/AssignStuffComponent/AssignStuffComponent\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\nimport Alert from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  // userInfo: ProfileType | null;\n  user_id: string;\n  close: () => void;\n  FC_GetAssignAssets: FT_GetAssignAssets;\n  district_code?: string | null;\n  school_code?: string | null;\n  school_name?: string | null;\n  district_name?: string | null;\n  userDetails?: {\n    full_name: string | null | undefined;\n    nid: string | null | undefined;\n    staff_code: string | null | undefined;\n    email: string | null | undefined;\n  };\n  current_position?: string | null;\n  refreshApp?: () => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  district_code: string;\n  district_name: string;\n  current_school: boolean;\n  selected_district: string;\n  loading_resource: boolean;\n  error: {\n    target: \"main-success\" | \"main-error\" | \"user-updates-success\" | null;\n    msg: string;\n  };\n  loading_districts: boolean;\n  districts: DistrictList[];\n  open_select_district: boolean;\n}\n\nclass _AssignStaffToSchool extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      district_code: this.props.district_code ? this.props.district_code : \"\",\n      district_name: this.props.district_name ? this.props.district_name : \"\",\n      current_school: true,\n      selected_district: this.props.district_code\n        ? this.props.district_code\n        : \"\",\n      loading_resource: false,\n      error: {\n        msg: \"\",\n        target: null,\n      },\n      loading_districts: false,\n      districts: [],\n      open_select_district: false,\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.props.district_code) this.loadDistricts();\n    if (this.props.school_code === undefined)\n      this.setState({ current_school: false });\n  };\n\n  loadDistricts = () => {\n    if (this.state.districts.length <= 0) {\n      this.setState({ loading_districts: true });\n      FC_GetDistrictList((status, data, msg) => {\n        if (status) {\n          this.setState({\n            loading_districts: false,\n            districts: data,\n          });\n        } else {\n          this.setState({\n            loading_districts: false,\n            districts: [],\n            error: {\n              msg: msg,\n              target: \"main-error\",\n            },\n          });\n        }\n      });\n    }\n  };\n\n  selectDistrict = (itm: DistrictList) => {\n    this.setState({\n      selected_district: itm.district_code,\n      district_code: itm.district_code,\n      district_name: itm.district_name,\n      open_select_district: false,\n    });\n    this.reloadDistrictResurces(itm.district_code);\n  };\n\n  reloadDistrictResurces = (district_id: string) => {\n    if (!district_id) return;\n\n    this.setState({ loading_resource: true });\n    this.props.FC_GetAssignAssets(district_id, (status, msg) => {\n      if (status) {\n        this.setState({\n          loading_resource: false,\n        });\n      } else {\n        this.setState({\n          loading_resource: false,\n          error: {\n            target: \"main-error\",\n            msg: \"Failed to load district resource, please try again later\",\n          },\n        });\n      }\n    });\n  };\n\n  clearError = () =>\n    this.setState({\n      error: {\n        msg: \"\",\n        target: null,\n      },\n    });\n\n  render() {\n    // if (this.state.error.target === null)\n    if (this.state.error.target === \"user-updates-success\")\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn \">\n          <div className=\"text-center py-10\">\n            <MdCheckCircle className=\"text-8xl text-green-600 mx-auto\" />\n\n            <h1 className=\"text-2xl font-bold text-green-600\">\n              The user has been updated successfully\n            </h1>\n            <p className=\"mt-2 text-gray-600 pb-4\">\n              The information has been updated successfully, <br /> you can\n              close the window and continue with other users\n            </p>\n\n            <Button\n              theme=\"success-light\"\n              onClick={() => {\n                this.props.close();\n                if (this.props.refreshApp) this.props.refreshApp();\n              }}\n            >\n              Goo back to the profile\n            </Button>\n          </div>\n        </DashboardContainer>\n      );\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed onClick={this.clearError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed onClick={this.clearError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\" \">\n          {this.state.open_select_district === true && (\n            <>\n              <div\n                className=\"fixed top-0 bottom-0 z-50 right-0 left-0 bg-black bg-opacity-60\"\n                onClick={() => this.setState({ open_select_district: false })}\n              ></div>\n              <Modal\n                backDrop={true}\n                backDropClose={true}\n                close={() => this.setState({ open_select_district: false })}\n                title={\"Choose district\"}\n                displayClose={true}\n                theme={Themes.default}\n                widthSizeClass={ModalSize.medium}\n                padding={{\n                  title: true,\n                  body: true,\n                  footer: true,\n                }}\n              >\n                {this.state.loading_districts === true ? (\n                  <Loading className=\"mx-auto text-center\" />\n                ) : this.state.districts.length === 0 ? (\n                  <div className=\"py-5 text-center\">No results found!</div>\n                ) : (\n                  <div>\n                    {this.state.districts.map((dist, i) => (\n                      <div\n                        className=\"p-1 border-b flex hover:bg-yellow-50\"\n                        key={i}\n                      >\n                        <h6>{dist.district_code}</h6>\n                        <h6 className=\"flex-1 font-bold px-4\">\n                          {dist.district_name}\n                        </h6>\n                        <Button\n                          theme=\"accent-light\"\n                          size=\"sm\"\n                          onClick={this.selectDistrict.bind(this, dist)}\n                        >\n                          Select district\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Modal>\n            </>\n          )}\n          <div className=\"flex p-1 items-center border-b container mx-auto\">\n            <h1 className=\"text-2xl flex-1 font-bold \">\n              Change user schools & Position\n            </h1>\n            <Button theme=\"danger-light\" onClick={this.props.close}>\n              Close\n            </Button>\n          </div>\n\n          {this.props.userDetails !== undefined && (\n            <DashboardContainer>\n              <div className=\" bg-white mb-2 rounded items-center flex\">\n                <div className=\"\">\n                  <MdAccountCircle className=\"text-6xl\" />\n                </div>\n                <div className=\"flex-1 pl-2 grid grid-cols-2\">\n                  <p>\n                    <span className=\"text-gray-600\">Names: </span>{\" \"}\n                    <b>{this.props.userDetails?.full_name}</b>\n                  </p>\n                  <p>\n                    <span className=\"text-gray-600\">NID: </span>{\" \"}\n                    <b>{this.props.userDetails?.nid}</b>\n                  </p>\n                  <p>\n                    <span className=\"text-gray-600\">Staff code: </span>{\" \"}\n                    <b>{this.props.userDetails?.staff_code}</b>\n                  </p>\n                  <p>\n                    <span className=\"text-gray-600\">Email: </span>{\" \"}\n                    <b>{this.props.userDetails?.email}</b>\n                  </p>\n                </div>\n              </div>\n            </DashboardContainer>\n          )}\n\n          <div className=\"my-2 hidden\">\n            <DashboardContainer>\n              <div className=\"flex gap-3\">\n                <div className=\"flex-1 flex items-center bg-gray-100 rounded p-1\">\n                  {this.state.current_school === false && (\n                    <>\n                      {/* <h2 className=\"text-lg pr-3\">\n                        <b>\n                          {this.state.district_name}\n                        </b>\n                        District\n                      </h2>\n                      <Button\n                        onClick={() => {\n                          this.setState({\n                            open_select_district: true,\n                          });\n                          this.loadDistricts();\n                        }}\n                        size=\"sm\"\n                        theme=\"accent-light\"\n                      >\n                        Choose District\n                      </Button> */}\n\n                      {/* {this.props.district_code + \"\" !==\n                        this.state.selected_district + \"\" &&\n                        this.props.district_code &&\n                        this.props.district_code &&\n                        this.props.district_name && (\n                          <Button\n                            onClick={() => {\n                              if (\n                                this.props.district_code &&\n                                this.props.district_code\n                              )\n                                this.selectDistrict({\n                                  district_code: this.props.district_code,\n                                  district_name: this.props.district_code,\n                                });\n                            }}\n                            size=\"sm\"\n                            theme=\"accent-light\"\n                          >\n                            Choose <b>{this.props.district_name}</b>\n                          </Button>\n                        )} */}\n                    </>\n                  )}\n                </div>\n                <div className=\"flex p-1 rounded bg-gray-100\">\n                  {\" \"}\n                  <h3 className=\"text-lg pr-3\">\n                    {this.state.current_school === true &&\n                      this.props?.school_name}\n                  </h3>\n                  <Button\n                    onClick={() =>\n                      this.setState({\n                        current_school: !this.state.current_school,\n                      })\n                    }\n                    size=\"sm\"\n                    theme=\"accent-light\"\n                  >\n                    {this.state.current_school === false\n                      ? \"Another school\"\n                      : \"Current school\"}\n                  </Button>\n                </div>\n              </div>\n            </DashboardContainer>\n          </div>\n\n          <div className=\"\">\n            <AssignStuffComponent\n              exclude_roles={[\"3\", \"4\", \"18\", \"21\", \"22\", \"25\", \"26\"]}\n              district_id={this.state.selected_district}\n              assignType=\"ASSIGN\"\n              no_position={true}\n              school={\n                this.state.current_school === true &&\n                this.props.school_code &&\n                this.props.school_name\n                  ? {\n                      school_id: this.props.school_code,\n                      school_name: this.props.school_name,\n                    }\n                  : undefined\n              }\n              current_position={this.props.current_position}\n              only_post_for_school={true}\n              user_id={this.props.user_id}\n              formAccess={{\n                first_name: false,\n                last_name: false,\n                full_name: false,\n                middle_name: false,\n                nid: false,\n                phone_numbers: false,\n                role_id: true,\n                country_id: false,\n                district_code: true,\n                sector_code: false,\n                school_code: true,\n                qualification_id: false,\n                academic_year_id: true,\n                stakeholder_id: false,\n                start_date_in_the_school: true,\n                position_id: true,\n              }}\n              required={{\n                first_name: false,\n                last_name: false,\n                full_name: false,\n                middle_name: false,\n                nid: true,\n                phone_numbers: true,\n                role_id: true,\n                country_id: false,\n                district_code: false,\n                sector_code: false,\n                school_code: true,\n                qualification_id: true,\n                academic_year_id: true,\n                stakeholder_id: false,\n                start_date_in_the_school: true,\n                position_id: false,\n              }}\n              success={(data) => {\n                // setStaffCreated(true);\n                this.setState({\n                  error: {\n                    target: \"user-updates-success\",\n                    msg: \"User updated successfully\",\n                  },\n                });\n\n                setTimeout(() => {\n                  if (this.props.refreshApp) this.props.refreshApp();\n                  this.props.close();\n                }, 4000);\n              }}\n              button_title=\"Update staff info\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const AssignStaffToSchool = connect(mapStateToProps, {\n  FC_GetAssignAssets,\n})(_AssignStaffToSchool);\n","import React from \"react\";\nimport { MdCheckCircle } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  AssignCandidateInterface,\n  Auth,\n  Basic,\n  FC_GetAssignAssets,\n  FT_GetAssignAssets,\n  FC_AssignCandidate,\n  FC_GetSchoolPositions,\n  FC_GetDistrictList,\n  DistrictList,\n  FT_GetSchoolsByDistrictRedux,\n  FC_GetSchoolsByDistrictRedux,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { SchoolPositionsCombination } from \"../../containers/Head-Teacher/Request/HeadTeacherRequestToDee\";\nimport { StoreState } from \"../../reducers\";\nimport Button from \"../Buttons/Button\";\nimport Heading from \"../Heading/Heading\";\nimport Loading from \"../Loading/Loading\";\nimport SelectCustom from \"../SelectCustom/SelectCustom\";\n\nexport interface formAccess {\n  role_id: boolean;\n  country_id: boolean;\n  district_code: boolean;\n  sector_code: boolean;\n  school_code: boolean;\n  qualification_id: boolean;\n  academic_year_id: boolean;\n  stakeholder_id: boolean;\n  start_date_in_the_school: boolean;\n  position_id: boolean;\n  first_name: boolean;\n  last_name: boolean;\n  full_name: boolean;\n  middle_name: boolean;\n  nid: boolean;\n  phone_numbers: boolean;\n}\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n  formAccess: formAccess;\n  required: formAccess;\n  FC_GetAssignAssets: FT_GetAssignAssets;\n  success: (data: AssignCandidateInterface) => void;\n  FC_GetSchoolsByDistrictRedux: FT_GetSchoolsByDistrictRedux;\n  district_id: string;\n  school?: { school_id: string; school_name: string };\n  user_id: string;\n  assignType: \"REGISTER\" | \"ASSIGN\" | \"UPDATE_POSITION\";\n  position_code?: string;\n  qualification_id?: string;\n  button_title?: string;\n  only_post_for_school?: boolean;\n  exclude_roles?: string[];\n  current_position?: string | undefined | null;\n  select_district_active?: boolean;\n  no_position?: boolean;\n  nid_value?: string;\n}\n\ninterface AppState {\n  loading_assets: boolean;\n  loading: boolean;\n  select_school_open: boolean;\n  select_sector_open: boolean;\n  select_role_open: boolean;\n  select_district_open: boolean;\n  select_position_open: boolean;\n  error: {\n    target:\n      | \"main-success\"\n      | \"main-error\"\n      | null\n      | \"role_id\"\n      | \"country_id\"\n      | \"district_code\"\n      | \"sector_code\"\n      | \"school_code\"\n      | \"qualification_id\"\n      | \"academic_year_id\"\n      | \"stakeholder_id\"\n      | \"start_date_in_the_school\"\n      | \"district_list_select\"\n      | \"position_id\"\n      | \"first_name\"\n      | \"last_name\"\n      | \"full_name\"\n      | \"middle_name\"\n      | \"nid\"\n      | \"phone_numbers\"\n      | \"main-success-register\";\n    msg: string;\n  };\n  role_id: string;\n  country_id: string;\n  district_code: string;\n  sector_code: string;\n  school_code: string;\n  qualification_id: string;\n  academic_year_id: string;\n  stakeholder_id: string;\n  start_date_in_the_school: string;\n  position_id: string;\n\n  //\n  first_name: string;\n  last_name: string;\n  full_name: string;\n  middle_name: string;\n  nid: string;\n  phone_numbers: string;\n  loading_positions_schools: boolean;\n  school_posts: SchoolPositionsCombination | null;\n  assignType: \"REGISTER\" | \"ASSIGN\" | \"UPDATE_POSITION\";\n  loading_districts: boolean;\n  district_list: DistrictList[];\n  district_name: string;\n  loading_assigning_data: boolean;\n}\n\nclass _AssignStuffComponent extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_assets: true,\n      loading: false,\n      select_school_open: false,\n      select_sector_open: false,\n      select_role_open: false,\n      select_district_open: false,\n      select_position_open: false,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      district_code: this.props.district_id,\n      sector_code: \"\",\n      school_code: this.props.school ? this.props.school.school_id : \"\",\n      academic_year_id: \"\",\n      stakeholder_id: \"\",\n      role_id: \"\",\n      country_id: \"\",\n      start_date_in_the_school: \"\",\n      position_id: this.props.position_code ? this.props.position_code : \"\",\n      qualification_id:\n        this.props.qualification_id === undefined\n          ? \"\"\n          : this.props.qualification_id,\n\n      // new stuff\n      first_name: \"\",\n      last_name: \"\",\n      full_name: \"\",\n      middle_name: \"\",\n      nid: this.props.nid_value ? this.props.nid_value : \"\",\n      phone_numbers: \"\",\n      // For position of school\n      loading_positions_schools: false,\n      school_posts: null,\n      assignType: this.props.assignType,\n      loading_districts: false,\n      district_list: [],\n      district_name: this.props.auth.school?.school_code\n        ? this.props.auth.school.school_code.slice(0, 2)\n        : \"\",\n      loading_assigning_data: false,\n    };\n  }\n\n  //** This is  */\n  getDistrictAssets(district_id: string) {\n    this.setState({\n      loading_assigning_data: true,\n    });\n    this.props.FC_GetAssignAssets(district_id, (status, msg) => {\n      if (status === true) {\n        this.setState({\n          error: {\n            target: null,\n            msg: \"\",\n          },\n          loading_assigning_data: false,\n          school_code: \"\",\n          select_school_open: true,\n        });\n      } else {\n        this.setState({\n          error: {\n            target: \"main-error\",\n            msg: msg,\n          },\n          loading_assigning_data: false,\n          school_code: \"\",\n          select_school_open: true,\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log(\n      this.props.auth.school\n        ? this.props.auth.school.school_code.slice(0, 2)\n        : \"\"\n    );\n\n    let district_id: string = \"\";\n    if (this.props.auth.district)\n      district_id = this.props.auth.district.district_code;\n    if (this.props.auth.district === null && this.props.auth.school)\n      district_id = this.props.auth.school.school_code.slice(0, 2);\n    this.setState({\n      district_code: district_id,\n    });\n\n    // if (\n    //   this.props.basic.assign_teacher_assets.loading === true ||\n    //   this.props.basic.assign_teacher_assets.data === null\n    // ) {\n    this.getDistrictAssets(district_id);\n    // }\n\n    // Get the positions for the current selected school\n    if (\n      this.props.school !== undefined &&\n      this.props.only_post_for_school !== undefined\n    ) {\n      this.loadSchoolPosts(this.props.school?.school_id);\n    }\n\n    // Get all the districts\n    if (\n      this.props.select_district_active &&\n      this.props.select_district_active === true\n    ) {\n      this.setState({\n        loading_districts: true,\n        // district_list: DistrictList[]:\n      });\n      FC_GetDistrictList((status, data, msg) => {\n        if (status === true) {\n          this.setState({\n            loading_districts: false,\n            district_list: data,\n          });\n        } else {\n          this.setState({\n            error: {\n              target: \"district_list_select\",\n              msg: msg,\n            },\n            loading_districts: false,\n          });\n        }\n      });\n    }\n  }\n\n  loadSchoolPosts(school_id: string) {\n    if (this.props.only_post_for_school !== undefined) {\n      // Get school posts\n      if (this.props.basic.academic_calender?.academic_year_id) {\n        this.setState({\n          loading_positions_schools: true,\n        });\n        FC_GetSchoolPositions(\n          school_id,\n          this.props.basic.academic_calender?.academic_year_id,\n          (status, data, msg) => {\n            console.log({ status, data, msg });\n\n            if (status === true) {\n              this.setState({\n                loading_positions_schools: false,\n                school_posts: data,\n              });\n            } else {\n              this.setState({\n                loading_positions_schools: false,\n                school_posts: null,\n                error: {\n                  target: \"main-error\",\n                  msg: \"Failed to load positions for this schools\",\n                },\n              });\n            }\n            // console.log({\n            //   status,\n            //   data,\n            //   msg,\n            // });\n          }\n        );\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: AppProps) {\n    if (\n      prevProps.school?.school_id !== this.props.school?.school_id ||\n      prevProps.district_id !== this.props.district_id\n    ) {\n      if (this.props.school !== undefined) {\n        this.setState({\n          school_code: this.props.school.school_id,\n          position_id: \"\",\n          select_school_open: false,\n        });\n        this.loadSchoolPosts(this.props.school.school_id);\n      } else {\n        this.setState({\n          school_code: \"\",\n          position_id: \"\",\n          select_position_open: false,\n          select_school_open: true,\n        });\n      }\n    }\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n\n    if (\n      this.props.current_position &&\n      this.props.school &&\n      this.props.current_position === this.state.position_id &&\n      this.state.school_code === this.props.school?.school_id\n    )\n      return this.setState({\n        error: {\n          target: \"position_id\",\n          msg: \"The selected position is the same as the current position of this user on this school\",\n        },\n      });\n\n    if (this.props.assignType === \"REGISTER\") {\n      if (this.props.required.nid === true && this.state.nid.length <= 4)\n        return this.setState({\n          error: {\n            target: \"nid\",\n            // msg: \"NID/Passport must be 16 digits.\",\n            msg: \"NID/Passport is required (minimum 4 character).\",\n          },\n        });\n\n      if (\n        this.props.required.phone_numbers === true &&\n        this.state.phone_numbers.length <= 3\n      )\n        return this.setState({\n          error: {\n            target: \"phone_numbers\",\n            msg: \"Required\",\n          },\n        });\n\n      if (\n        this.props.required.first_name === true &&\n        this.state.first_name.length <= 3\n      )\n        return this.setState({\n          error: {\n            target: \"first_name\",\n            msg: \"Required\",\n          },\n        });\n\n      if (\n        this.props.required.middle_name === true &&\n        this.state.middle_name.length <= 3\n      )\n        return this.setState({\n          error: {\n            target: \"middle_name\",\n            msg: \"Required\",\n          },\n        });\n\n      if (\n        this.props.required.last_name === true &&\n        this.state.last_name.length <= 3\n      )\n        return this.setState({\n          error: {\n            target: \"last_name\",\n            msg: \"Required\",\n          },\n        });\n\n      if (\n        this.props.required.full_name === true &&\n        this.state.full_name.length <= 3\n      )\n        return this.setState({\n          error: {\n            target: \"full_name\",\n            msg: \"Required\",\n          },\n        });\n    }\n\n    if (\n      this.props.required.school_code === true &&\n      this.state.school_code === \"\"\n    )\n      return this.setState({\n        error: {\n          target: \"school_code\",\n          msg: \"Required\",\n        },\n      });\n\n    if (this.props.required.role_id === true && this.state.role_id === \"\")\n      return this.setState({\n        error: {\n          target: \"role_id\",\n          msg: \"Required\",\n        },\n      });\n\n    if (this.props.basic.academic_calender === null)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"You have no academic selected, Please refresh the page.\",\n        },\n      });\n\n    if (\n      this.props.required.position_id === true &&\n      this.state.position_id === \"\"\n    )\n      return this.setState({\n        error: {\n          target: \"position_id\",\n          msg: \"Required\",\n        },\n      });\n\n    if (\n      this.props.required.start_date_in_the_school === true &&\n      this.state.start_date_in_the_school === \"\"\n    )\n      return this.setState({\n        error: {\n          target: \"start_date_in_the_school\",\n          msg: \"Required\",\n        },\n      });\n\n    // check if there is a selected district\n    if (\n      this.props.select_district_active &&\n      this.props.select_district_active === true &&\n      this.state.district_code.length <= 0 &&\n      this.props.auth.school === null\n    )\n      return this.setState({\n        error: {\n          target: \"district_list_select\",\n          msg: \"Required\",\n        },\n      });\n\n    let AssignType = this.props.assignType;\n\n    if (this.props.assignType !== \"REGISTER\") {\n      if (\n        this.props.school?.school_id &&\n        this.props.school?.school_id === this.state.school_code\n      )\n        AssignType = \"UPDATE_POSITION\";\n    }\n\n    let SendData = {\n      role_id: this.state.role_id,\n      country_id: this.state.country_id,\n      district_code: this.state.district_code,\n      sector_code: this.state.sector_code,\n      school_code: this.state.school_code,\n      qualification_id: this.state.qualification_id,\n      academic_year_id: this.props.basic.academic_calender.academic_year_id,\n      stakeholder_id: this.state.stakeholder_id,\n      start_date_in_the_school: \"\",\n      hired_date: this.state.start_date_in_the_school,\n      position_code: this.state.position_id,\n      user_id: this.props.user_id,\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      full_name: this.state.full_name,\n      middle_name: this.state.middle_name,\n      nid: this.state.nid,\n      phone_numbers: this.state.phone_numbers,\n      key: AssignType,\n    } as AssignCandidateInterface;\n\n    //* Save data\n    this.setState({\n      loading: true,\n    });\n    FC_AssignCandidate(SendData, (status, msg) => {\n      if (status === true) {\n        this.setState({\n          loading: false,\n          error: {\n            target: \"main-success-register\",\n            msg: \"Staff was added successfully\",\n          },\n        });\n        this.props.success(SendData);\n      } else {\n        this.setState({\n          loading: false,\n          error: {\n            target: \"main-error\",\n            msg: msg,\n          },\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          error: {\n            target: null,\n            msg: \"\",\n          },\n        });\n      }, 3000);\n    });\n  };\n\n  render() {\n    if (\n      this.props.basic.assign_teacher_assets.loading === true ||\n      this.props.basic.assign_teacher_assets.data === null\n    )\n      return (\n        <DashboardContainer>\n          <div className=\"py-6 mx-auto text-center\">\n            <Loading />\n          </div>\n        </DashboardContainer>\n      );\n\n    let assign_teacher_assets = this.props.basic.assign_teacher_assets.data;\n    let selected_school_name_exist =\n      this.props.basic.assign_teacher_assets.data.schools.find(\n        (itm) => itm.school_code === this.state.school_code\n      );\n    let selected_school_name =\n      this.props.auth.school !== null\n        ? `${this.props.auth.school.school_code} - ${this.props.auth.school.school_name}  `\n        : selected_school_name_exist !== undefined\n        ? `${selected_school_name_exist.school_code} - ${selected_school_name_exist.school_name} `\n        : \"Select a school\";\n\n    // Sector\n    let sector_exist = assign_teacher_assets.sectors.find(\n      (itm) => itm.sector_code === this.state.sector_code\n    );\n    let sector_name =\n      sector_exist !== undefined ? sector_exist.sector_name : \"\";\n\n    // Role\n    let role_exist = assign_teacher_assets.roles.find(\n      (itm) => itm.role_id === this.state.role_id\n    );\n    let role_name = role_exist !== undefined ? role_exist.role : \"\";\n\n    let positions_exist = assign_teacher_assets.positions.find(\n      (itm) => itm.position_code === this.state.position_id\n    );\n    let positions_name =\n      positions_exist !== undefined\n        ? `${positions_exist.position_code} - ${positions_exist.position_name} - ${positions_exist.qualification_name}`\n        : \"\";\n\n    // let foundSchool = this.props.basic.assign_teacher_assets.data.schools.find(\n    //   (sk) => sk.school_code === this.props.auth.school?.school_code\n    // );\n    let SchoolsAvailablesList =\n      this.props.auth.school === null\n        ? this.props.basic.assign_teacher_assets.data.schools.map((itm) => ({\n            ...itm,\n            school_name: `${itm.school_code} - ${itm.school_name}  ${itm.school_category}`,\n          }))\n        : [\n            {\n              ...this.props.auth.school,\n              school_name: `${this.props.auth.school.school_code} - ${this.props.auth.school.school_name}  `,\n            },\n          ];\n\n    if (this.state.error.target === \"main-success-register\")\n      return (\n        <DashboardContainer className=\"bg-green-100 py-10 \">\n          <div className=\"text-center\">\n            <h1 className=\"text-8xl text-green-600 inline-block\">\n              <MdCheckCircle />\n            </h1>\n            <h2 className=\"text-2xl font-bold text-green-900\">\n              Candidate has been added to the system\n            </h2>\n            <p className=\"pb-3 text-lg\">{this.state.error.msg}</p>\n            <p className=\"pb-4 opacity-50\">\n              The user <b>{this.state.nid}</b> is now registered\n            </p>\n\n            <Button\n              theme=\"success\"\n              onClick={() =>\n                this.setState({ error: { target: null, msg: \"\" } })\n              }\n            >\n              Add another teacher\n            </Button>\n          </div>\n        </DashboardContainer>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          <form onSubmit={this.submitLogin}>\n            <div className=\"p-2 flex flex-wrap\">\n              {this.props.assignType === \"REGISTER\" && (\n                <>\n                  <div className=\"border-b-2 w-full my-2\">\n                    <Heading size=\"sm\">User info</Heading>\n                  </div>\n\n                  {this.props.formAccess.nid && (\n                    <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                      <TextInput\n                        disabled={this.state.loading}\n                        label=\"NID/Passport\"\n                        name=\"nid\"\n                        type=\"text\"\n                        max={16}\n                        onChange={(e) => {\n                          // if (e.target.value.length <= 16)\n                          this.setState({\n                            nid: e.target.value,\n                            error: { target: null, msg: \"\" },\n                          });\n                        }}\n                        value={this.state.nid}\n                        error={\n                          this.state.error.target === \"nid\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"National ID\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                  {this.props.formAccess.phone_numbers && (\n                    <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                      <TextInput\n                        disabled={this.state.loading}\n                        label=\"Phone number\"\n                        name=\"phone_numbers\"\n                        type=\"number\"\n                        onChange={(e) => {\n                          if (e.target.value.length <= 10)\n                            this.setState({\n                              phone_numbers: e.target.value,\n                              error: { target: null, msg: \"\" },\n                            });\n                        }}\n                        value={this.state.phone_numbers}\n                        error={\n                          this.state.error.target === \"phone_numbers\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"0700000000\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                  {this.props.formAccess.first_name && (\n                    <div className=\"w-full lg:w-1/3 py-1 px-3\">\n                      <TextInput\n                        disabled={this.state.loading}\n                        label=\"First name (Irinyarwanda)\"\n                        name=\"first_name\"\n                        onChange={(e) =>\n                          this.setState({\n                            first_name: e.target.value,\n                            full_name: `${\n                              e.target.value !== null ? e.target.value : \"\"\n                            } ${\n                              this.state.middle_name !== null\n                                ? this.state.middle_name\n                                : \"\"\n                            } ${\n                              this.state.last_name !== null\n                                ? this.state.last_name\n                                : \"\"\n                            }`,\n                            error: { target: null, msg: \"\" },\n                          })\n                        }\n                        value={this.state.first_name}\n                        error={\n                          this.state.error.target === \"first_name\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"Ex: KAMANA\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                  {this.props.formAccess.middle_name && (\n                    <div className=\"w-full lg:w-1/3 py-1 px-3\">\n                      <TextInput\n                        disabled={this.state.loading}\n                        label=\"Middle name\"\n                        name=\"middle_name\"\n                        onChange={(e) =>\n                          this.setState({\n                            middle_name: e.target.value,\n                            full_name: `${\n                              this.state.first_name !== null\n                                ? this.state.first_name\n                                : \"\"\n                            } ${\n                              e.target.value !== null ? e.target.value : \"\"\n                            } ${\n                              this.state.last_name !== null\n                                ? this.state.last_name\n                                : \"\"\n                            }`,\n                            error: { target: null, msg: \"\" },\n                          })\n                        }\n                        value={this.state.middle_name}\n                        error={\n                          this.state.error.target === \"middle_name\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"Middle name\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                  {this.props.formAccess.last_name && (\n                    <div className=\"w-full lg:w-1/3 py-1 px-3\">\n                      <TextInput\n                        disabled={this.state.loading}\n                        label=\"Last name\"\n                        name=\"last_name\"\n                        onChange={(e) =>\n                          this.setState({\n                            last_name: e.target.value,\n                            full_name: `${\n                              this.state.first_name !== null\n                                ? this.state.first_name\n                                : \"\"\n                            } ${\n                              this.state.middle_name !== null\n                                ? this.state.middle_name\n                                : \"\"\n                            } ${e.target.value !== null ? e.target.value : \"\"}`,\n                            error: { target: null, msg: \"\" },\n                          })\n                        }\n                        value={this.state.last_name}\n                        error={\n                          this.state.error.target === \"last_name\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"Ex: Emmanuel\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                  {this.props.formAccess.full_name && (\n                    <div className=\"w-full  py-1 px-3\">\n                      <TextInput\n                        disabled={true}\n                        label=\"Full name\"\n                        name=\"full_name\"\n                        onChange={(e) =>\n                          this.setState({\n                            full_name: e.target.value,\n                            error: { target: null, msg: \"\" },\n                          })\n                        }\n                        value={this.state.full_name}\n                        error={\n                          this.state.error.target === \"full_name\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"Full name\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                </>\n              )}\n\n              <div className=\"border-b-2 w-full my-2\">\n                <Heading size=\"sm\">Academic info</Heading>\n              </div>\n\n              <div className=\"w-full lg:flex py-1 px-3 bg-gray-100 rounded\">\n                {this.props.auth.school !== null\n                  ? null\n                  : this.props.select_district_active &&\n                    this.props.select_district_active === true && (\n                      <>\n                        {this.state.select_district_open === true ? (\n                          <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                            <SelectCustom\n                              click={(data: any) => {\n                                this.setState({\n                                  district_code: data.district_code,\n                                  district_name: data.district_name,\n                                  select_district_open: false,\n                                  error: {\n                                    target: null,\n                                    msg: \"\",\n                                  },\n                                });\n                                // Load schools\n                                this.setState({ loading_assigning_data: true });\n                                this.props.FC_GetSchoolsByDistrictRedux(\n                                  data.district_code,\n                                  (status, msg) => {\n                                    this.setState({\n                                      loading_assigning_data: false,\n                                    });\n                                  }\n                                );\n                              }}\n                              close={() =>\n                                this.setState({ select_district_open: false })\n                              }\n                              data={this.state.district_list}\n                              id=\"district_code\"\n                              title=\"district_name\"\n                              loading={this.state.loading_districts}\n                            />\n                          </div>\n                        ) : (\n                          <div\n                            className=\"w-full lg:w-1/2 py-1 px-3\"\n                            onClick={() =>\n                              this.setState({ select_district_open: true })\n                            }\n                          >\n                            <TextInput\n                              disabled={true}\n                              label=\"District\"\n                              name=\"district\"\n                              onChange={(e) => {}}\n                              value={this.state.district_name}\n                              error={\n                                this.state.error.target ===\n                                \"district_list_select\"\n                                  ? this.state.error.msg\n                                  : \"\"\n                              }\n                              placeholder={\"Select a district\"}\n                              className=\"p-2\"\n                            />\n                          </div>\n                        )}\n                      </>\n                    )}\n\n                {this.props.formAccess.school_code && (\n                  <>\n                    {this.props.school !== undefined ? (\n                      <>\n                        <div\n                          className=\"w-full lg:w-1/2 py-1 px-3\"\n                          onClick={() =>\n                            this.setState({\n                              select_school_open: true,\n                              select_position_open: false,\n                            })\n                          }\n                        >\n                          <TextInput\n                            disabled={true}\n                            label=\"School name\"\n                            name=\"school_name\"\n                            onChange={(e) => {}}\n                            value={this.props.school.school_name}\n                            error={\n                              this.state.error.target === \"school_code\"\n                                ? this.state.error.msg\n                                : \"\"\n                            }\n                            placeholder={\"Select school\"}\n                            className=\"p-2\"\n                          />\n                        </div>\n                      </>\n                    ) : (\n                      <>\n                        {this.props.formAccess.school_code &&\n                          this.props.basic.qualifications !== null && (\n                            <>\n                              {this.state.select_school_open === true ? (\n                                <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                                  <SelectCustom\n                                    click={(data: any) => {\n                                      this.setState({\n                                        school_code: data.school_code,\n                                        select_school_open: false,\n                                        error: {\n                                          target: null,\n                                          msg: \"\",\n                                        },\n                                        position_id: \"\",\n                                      });\n                                      // add a check\n                                      this.loadSchoolPosts(data.school_code);\n                                    }}\n                                    close={() =>\n                                      this.setState({\n                                        select_school_open: false,\n                                      })\n                                    }\n                                    data={SchoolsAvailablesList}\n                                    id=\"school_code\"\n                                    title=\"school_name\"\n                                    loading={\n                                      this.state.loading_assigning_data ||\n                                      this.state.loading\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <div\n                                  className=\"w-full lg:w-1/2 py-1 px-3\"\n                                  onClick={() =>\n                                    this.setState({ select_school_open: true })\n                                  }\n                                >\n                                  <TextInput\n                                    disabled={true}\n                                    label=\"School name\"\n                                    name=\"school_name\"\n                                    onChange={(e) => {}}\n                                    value={selected_school_name}\n                                    error={\n                                      this.state.error.target === \"school_code\"\n                                        ? this.state.error.msg\n                                        : \"\"\n                                    }\n                                    placeholder={\"Select school\"}\n                                    className=\"p-2\"\n                                  />\n                                </div>\n                              )}\n                            </>\n                          )}\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n\n              {this.props.formAccess.stakeholder_id && (\n                <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                  <InputSelect\n                    data={[\n                      { title: \"\", value: \"\" },\n                      ...assign_teacher_assets.stakeholders.map((itm) => ({\n                        title: itm.stakeholder_name,\n                        value: itm.stakeholder_id,\n                      })),\n                    ]}\n                    error={\n                      this.state.error.target === \"stakeholder_id\"\n                        ? this.state.error.msg\n                        : \"\"\n                    }\n                    value={this.state.stakeholder_id}\n                    onChange={(e) =>\n                      this.setState({\n                        stakeholder_id: e.target.value,\n                        error: { target: null, msg: \"\" },\n                      })\n                    }\n                    label=\"Select a stakeholder\"\n                    name=\"select_a_stakeholder\"\n                    placeholder=\"Select a value\"\n                  />\n                </div>\n              )}\n\n              {this.props.formAccess.academic_year_id &&\n                this.props.basic.academic_calender !== null && (\n                  <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                    <InputSelect\n                      data={[\n                        {\n                          title:\n                            this.props.basic.academic_calender\n                              ?.academic_year_name,\n                          value:\n                            this.props.basic.academic_calender\n                              ?.academic_year_id,\n                        },\n                      ]}\n                      error={\n                        this.state.error.target === \"academic_year_id\"\n                          ? this.state.error.msg\n                          : \"\"\n                      }\n                      value={this.state.academic_year_id}\n                      onChange={(e) =>\n                        this.setState({\n                          academic_year_id: e.target.value,\n                          error: { target: null, msg: \"\" },\n                        })\n                      }\n                      label=\"Academic year\"\n                      name=\"accademic_year\"\n                      placeholder=\"Select a value\"\n                    />\n                  </div>\n                )}\n\n              {this.props.formAccess.role_id && (\n                <>\n                  {this.state.select_role_open === true ? (\n                    <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                      <SelectCustom\n                        click={(data: any) => {\n                          this.setState({\n                            role_id: data.role_id,\n                            select_role_open: false,\n                            error: {\n                              target: null,\n                              msg: \"\",\n                            },\n                          });\n                        }}\n                        close={() => this.setState({ select_role_open: false })}\n                        data={\n                          (this.props.exclude_roles !== undefined &&\n                            this.props.exclude_roles.length) >= 1\n                            ? assign_teacher_assets.roles.filter(\n                                (rol) =>\n                                  !this.props.exclude_roles?.includes(\n                                    rol.role_id\n                                  )\n                              )\n                            : assign_teacher_assets.roles\n                        }\n                        id=\"role_id\"\n                        title=\"role\"\n                        loading={this.state.loading}\n                      />\n                    </div>\n                  ) : (\n                    <div\n                      className=\"w-full lg:w-1/2 py-1 px-3\"\n                      onClick={() => this.setState({ select_role_open: true })}\n                    >\n                      <TextInput\n                        disabled={true}\n                        label=\"Role\"\n                        name=\"role\"\n                        onChange={(e) => {}}\n                        value={role_name}\n                        error={\n                          this.state.error.target === \"role_id\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"Select a role\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                </>\n              )}\n\n              {this.props.formAccess.position_id &&\n                this.props.position_code === undefined && (\n                  <>\n                    {this.state.select_position_open === true ? (\n                      <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                        <p>Position</p>\n                        <SelectCustom\n                          click={(data: any) => {\n                            this.setState({\n                              position_id: data.position_code,\n                              select_position_open: false,\n                              qualification_id: data.qualification_id,\n                              error: {\n                                target: null,\n                                msg: \"\",\n                              },\n                            });\n                          }}\n                          close={() =>\n                            this.setState({ select_position_open: false })\n                          }\n                          data={\n                            this.props.only_post_for_school !== undefined\n                              ? this.state.school_posts !== null\n                                ? this.state.school_posts?.school_positions.map(\n                                    (pos_s) => ({\n                                      position_code: pos_s.position_code,\n                                      position_name: `${pos_s.position_code} - ${pos_s.position_name} - ${pos_s.qualification_name}`,\n                                      qualification_id: pos_s.qualification_id,\n                                      qualification_name:\n                                        pos_s.qualification_name,\n                                    })\n                                  )\n                                : []\n                              : assign_teacher_assets.positions.map((pos) => ({\n                                  position_code: pos.position_code,\n                                  position_name: `${pos.position_code} - ${pos.position_name} - ${pos.qualification_name}`,\n                                  qualification_id: pos.qualification_id,\n                                  qualification_name: pos.qualification_name,\n                                }))\n                          }\n                          id=\"position_code\"\n                          title=\"position_name\"\n                          loading={this.state.loading}\n                        />\n                      </div>\n                    ) : (\n                      <div\n                        className=\"w-full lg:w-1/2 py-1 px-3\"\n                        onClick={() => {\n                          if (this.state.school_code === \"\") {\n                            this.setState({\n                              select_position_open: false,\n                              select_school_open: true,\n                              error: {\n                                target: \"school_code\",\n                                msg: \"Please select the school\",\n                              },\n                            });\n                          } else {\n                            this.setState({ select_position_open: true });\n                          }\n                        }}\n                      >\n                        <TextInput\n                          disabled={true}\n                          label=\"Position\"\n                          name=\"role\"\n                          onChange={(e) => {}}\n                          value={positions_name}\n                          error={\n                            this.state.error.target === \"position_id\"\n                              ? this.state.error.msg\n                              : \"\"\n                          }\n                          placeholder={\"Select a position\"}\n                          className=\"p-2\"\n                        />\n                      </div>\n                    )}\n                  </>\n                )}\n\n              {this.props.qualification_id === undefined &&\n                this.props.formAccess.qualification_id &&\n                this.props.basic.qualifications !== null && (\n                  <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                    <InputSelect\n                      data={[\n                        {\n                          title: \"\",\n                          value: \"\",\n                        },\n                        ...this.props.basic.qualifications.map((itm) => ({\n                          title: itm.qualification_name,\n                          value: itm.qualification_id,\n                        })),\n                      ]}\n                      error={\n                        this.state.error.target === \"qualification_id\"\n                          ? this.state.error.msg\n                          : \"\"\n                      }\n                      value={this.state.qualification_id}\n                      onChange={(e) => {\n                        // this.setState({\n                        //   qualification_id: e.target.value,\n                        //   error: { target: null, msg: \"\" },\n                        // })\n                      }}\n                      disabled\n                      label=\"Qualification\"\n                      name=\"accademic_year\"\n                      placeholder=\"Select a value\"\n                    />\n                  </div>\n                )}\n\n              {this.props.formAccess.sector_code && (\n                <>\n                  {this.state.select_sector_open === true ? (\n                    <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                      <SelectCustom\n                        click={(data: any) => {\n                          this.setState({\n                            sector_code: data.sector_code,\n                            select_sector_open: false,\n                          });\n                        }}\n                        close={() =>\n                          this.setState({ select_sector_open: false })\n                        }\n                        data={assign_teacher_assets.sectors.map((itm) => ({\n                          ...itm,\n                          sector_name: `${itm.sector_code} - ${itm.sector_name}`,\n                        }))}\n                        id=\"sector_code\"\n                        title=\"sector_name\"\n                        loading={this.state.loading}\n                      />\n                    </div>\n                  ) : (\n                    <div\n                      className=\"w-full lg:w-1/2 py-1 px-3\"\n                      onClick={() =>\n                        this.setState({ select_sector_open: true })\n                      }\n                    >\n                      <TextInput\n                        disabled={true}\n                        label=\"Sector name\"\n                        name=\"sector_name\"\n                        onChange={(e) => {}}\n                        value={sector_name}\n                        error={\n                          this.state.error.target === \"sector_code\"\n                            ? this.state.error.msg\n                            : \"\"\n                        }\n                        placeholder={\"Select a sector\"}\n                        className=\"p-2\"\n                      />\n                    </div>\n                  )}\n                </>\n              )}\n\n              {this.props.formAccess.start_date_in_the_school && (\n                <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                  <TextInput\n                    disabled={this.state.loading}\n                    label=\"Date of hire (Date in education)\"\n                    name=\"start_date_in_the_school\"\n                    type=\"date\"\n                    onChange={(e) =>\n                      this.setState({\n                        start_date_in_the_school: e.target.value,\n                        error: { target: null, msg: \"\" },\n                      })\n                    }\n                    value={this.state.start_date_in_the_school}\n                    error={\n                      this.state.error.target === \"start_date_in_the_school\"\n                        ? this.state.error.msg\n                        : \"\"\n                    }\n                    placeholder={\"Select date\"}\n                    className=\"p-2\"\n                  />\n                </div>\n              )}\n\n              {this.props.formAccess.country_id && (\n                <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                  <InputSelect\n                    data={[\n                      {\n                        title: \"No\",\n                        value: \"\",\n                      },\n                      {\n                        title: \"Yes\",\n                        value: \"1\",\n                      },\n                    ]}\n                    error={\n                      this.state.error.target === \"country_id\"\n                        ? this.state.error.msg\n                        : \"\"\n                    }\n                    value={this.state.country_id}\n                    onChange={(e) =>\n                      this.setState({\n                        country_id: e.target.value,\n                        error: { target: null, msg: \"\" },\n                      })\n                    }\n                    label=\"User on country level\"\n                    name=\"country_level\"\n                    placeholder=\"Select a value\"\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"px-6 text-right flex\">\n              <div className=\"flex-1\">\n                {this.state.error.target !== null &&\n                  this.state.error.target !== \"main-error\" &&\n                  this.state.error.target !== \"main-success\" && (\n                    <div className=\"text-sm text-red-400 pr-4\">\n                      Some fields are required! {\"(\"}\n                      {this.state.error.target}\n                      {\")\"}\n                    </div>\n                  )}\n              </div>\n              <div className=\"\">\n                <Button type=\"submit\" size=\"lg\" loading={this.state.loading}>\n                  {this.props.button_title === undefined\n                    ? \"Add new staff\"\n                    : this.props.button_title}\n                </Button>\n              </div>\n            </div>\n          </form>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const AssignStuffComponent = connect(mapStateToProps, {\n  FC_GetAssignAssets,\n  FC_GetSchoolsByDistrictRedux,\n})(_AssignStuffComponent);\n"],"sourceRoot":""}