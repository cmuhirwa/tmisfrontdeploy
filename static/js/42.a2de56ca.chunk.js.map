{"version":3,"sources":["actions/transfer.action.ts","containers/GeneralPlacementReport/DistrictPlacementDetails.tsx","containers/GeneralPlacementReport/GeneralReport.tsx","containers/GeneralPlacementReport/VacantSummary.tsx","containers/GeneralPlacementReport/GeneralPlacementReport.tsx"],"names":["FC_GetAllTransfers","district_id","callBack","dispatch","type","ActionTypes","GET_ALL_TRANSFER","payload","setAxiosToken","axios","get","APP_URL","res","needed_data","data","filter","item","requested_status","errorToText","FC_GetDistricts","district_code","district_name","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","console","log","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","DistrictPlacementDetails","props","className","selectedDistrictDetails","details","map","i","qualification_name","GeneralReport","getDistrictSchools","schools_submitted_placements","getPlaced","pla_district_total_summary","find","itm","getSchools","district_total_summary","total_schools","undefined","parseInt","placed_schools","getDistrictData","response","generalReport","qualification","toLocaleLowerCase","totalTeachersOnDistrict","basic","qualifications","sortData","result","state","sortBy","column","status","sort","a","b","schools","remainingA","districtsWithTotals","districts","push","pinned_districts","length","test","search","search_district","getGrandTotal","total_placed_schools","total_pending_schools","total_teachers","pinDistrict","auth","role","role_id","setState","loading","district","this","selected_district","academic_calender","FC_GetSubmittedPlacementSchools","academic_year_id","selected_month","msg","Loading","commaFy","value","onChange","e","target","placeholder","ExportToExcel","fileData","no","DistrictCode","DistrictName","A2","A1","A0","TotalPlacedTeachers","TotalDistrictSchools","TotalSchoolsSubmitted","PendingSchools","fileName","btnName","onClick","colSpan","k","Button","theme","to","Component","VacantSummary","getDistrictSummaryLimit","districts_limits","getTotalPlacedDistrict","districts_placements","totals","total_placed","getDistrictDataAvailable","Total","totalAvailable","totalPlaced","qualification_id","getAllTotalAvailable","getAllTotalExisting","getDistrictToBePlaced","toBePlacedData","toLowerCase","approved","getDistrictNameToBePlaced","getTotalDistrictToBePlaced","data_temp","getTotalQualificationToBePlacedByQualification","filtered","getTotalQualificationToBePlacedTotals","getTeachersAvailableAndToBePlaced","componentDidMount","loadToBePlacedData","District_Code","District_Name","AO_Placed","A0_to_be_placed","A0_grand_total","A0_total_ceiling","A1_Placed","A1_to_be_placed","A1_grand_total","A1_total_ceiling","A2_Placed","A2_to_be_placed","A2_grand_total","A2_total_ceiling","Grand_total_teachers","Grand_total_ceiling","Total_vacant","style","width","TodayDate","Date","_GeneralPlacementReport","setLoading","FC_LoadGeneralReport","GetGeneralPlacementReports","loadToBePlaced","report_type","districts_to_be_placed","FC_GetPostsToBePlacedSummaries","GetDistrictsLimits","MONTHS_LIST","getMonth","title","GeneralPlacementReport","connect","placement"],"mappings":"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","file":"static/js/42.a2de56ca.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  // TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n// import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: [],\n      });\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde/${district_id}`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      // console.log(\" ----- ------  ------\");\n\n      // console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      // console.log(\"=================FC_GetTransferReasons===================\");\n      // console.log({ FC_GetTransferReasons: res });\n      // console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  // callBack(true, null, \"\");\n  // try {\n  // setAxiosToken();\n  // const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n  // console.log(\"=================FC_GetDistricts===================\");\n  // console.log({ FC_GetDistricts: res });\n  // console.log(\"=================FC_GetDistricts===================\");\n\n  // * save data\n  callBack(\n    false,\n    [\n      {\n        district_code: \"11\",\n        district_name: \"Nyarugenge\",\n      },\n      {\n        district_code: \"12\",\n        district_name: \"Gasabo\",\n      },\n      {\n        district_code: \"13\",\n        district_name: \"Kicukiro\",\n      },\n      {\n        district_code: \"21\",\n        district_name: \"Nyanza\",\n      },\n      {\n        district_code: \"22\",\n        district_name: \"Gisagara\",\n      },\n      {\n        district_code: \"23\",\n        district_name: \"Nyaruguru\",\n      },\n      {\n        district_code: \"24\",\n        district_name: \"Huye\",\n      },\n      {\n        district_code: \"25\",\n        district_name: \"Nyamagabe\",\n      },\n      {\n        district_code: \"26\",\n        district_name: \"Ruhango\",\n      },\n      {\n        district_code: \"27\",\n        district_name: \"Muhanga\",\n      },\n      {\n        district_code: \"28\",\n        district_name: \"Kamonyi\",\n      },\n      {\n        district_code: \"31\",\n        district_name: \"Karongi\",\n      },\n      {\n        district_code: \"32\",\n        district_name: \"Rutsiro\",\n      },\n      {\n        district_code: \"33\",\n        district_name: \"Rubavu\",\n      },\n      {\n        district_code: \"34\",\n        district_name: \"Nyabihu\",\n      },\n      {\n        district_code: \"35\",\n        district_name: \"Ngororero\",\n      },\n      {\n        district_code: \"36\",\n        district_name: \"Rusizi\",\n      },\n      {\n        district_code: \"37\",\n        district_name: \"Nyamasheke\",\n      },\n      {\n        district_code: \"41\",\n        district_name: \"Rulindo\",\n      },\n      {\n        district_code: \"42\",\n        district_name: \"Gakenke\",\n      },\n      {\n        district_code: \"43\",\n        district_name: \"Musanze\",\n      },\n      {\n        district_code: \"44\",\n        district_name: \"Burera\",\n      },\n      {\n        district_code: \"45\",\n        district_name: \"Gicumbi\",\n      },\n      {\n        district_code: \"51\",\n        district_name: \"Rwamagana\",\n      },\n      {\n        district_code: \"52\",\n        district_name: \"Nyagatare\",\n      },\n      {\n        district_code: \"53\",\n        district_name: \"Gatsibo\",\n      },\n      {\n        district_code: \"54\",\n        district_name: \"Kayonza\",\n      },\n      {\n        district_code: \"55\",\n        district_name: \"Kirehe\",\n      },\n      {\n        district_code: \"56\",\n        district_name: \"Ngoma\",\n      },\n      {\n        district_code: \"57\",\n        district_name: \"Bugesera\",\n      },\n    ],\n    \"\"\n  );\n  // } catch (error) {\n  //   console.log(error);\n  //   callBack(false, null, errorToText(error));\n  //   callBack(\n  //     false,\n  //     errorToText(error, () => {})\n  //   );\n  // }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import React from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\n\ninterface DataInterface {\n  selectedDistrictDetails: {\n    district_code: string;\n    district_name: string;\n    details: {\n      qualification_name: string;\n      total: number;\n    }[];\n    total: number;\n  };\n}\n\nconst DistrictPlacementDetails = (props: DataInterface) => {\n  return (\n    <div>\n      <div className=\"flex flex-row items-center gap-2\">\n        <div>\n          <div className=\"rounded-full h-12 w-12 bg-gray-100 hover:bg-primary-100 flex items-center justify-center\">\n            <BsArrowLeft className=\"text-3xl\" />\n          </div>\n        </div>\n        <div className=\"font-extrabold text-2xl text-primary-800 border-b border-primary-800 px-3 py-2 w-full\">\n          {props.selectedDistrictDetails.district_name} District placement\n          details\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-12 my-8\">\n        <div className=\"col-span-4 flex flex-row gap-6 pl-3 pt-3\">\n          <div className=\"flex flex-col mb-3\">\n            <span className=\"font-light\">District name</span>\n            <span className=\"font-extrabold text-xl\">\n              {props.selectedDistrictDetails.district_name}\n            </span>\n          </div>\n          <div className=\"flex flex-col mb-3\">\n            <span className=\"font-light\">District Code</span>\n            <span className=\"font-extrabold text-xl\">\n              {props.selectedDistrictDetails.district_code}\n            </span>\n          </div>\n        </div>\n        <div className=\"col-span-8\">\n          <div className=\"p-4 grid grid-cols-12 w-full gap-5\">\n            {props.selectedDistrictDetails.details.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"col-span-4 bg-primary-100 rounded-lg overflow-hidden flex flex-row\"\n              >\n                <div className=\"text-xl w-full text-center flex items-center justify-center bg-gray-100 p-3 py-5 border-r border-primary-800 font-light\">\n                  {item.qualification_name}\n                </div>\n                <div className=\"font-extrabold text-3xl text-primary-800 w-full text-center flex items-center justify-center\">\n                  {item.total}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DistrictPlacementDetails;\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  Basic,\n  DistrictTotalsSummarySubmitted,\n  FC_GetSubmittedPlacementSchools,\n} from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy, search } from \"../../utils/functions\";\nimport DistrictPlacementDetails from \"./DistrictPlacementDetails\";\nimport { GeneralPlacementReportInterface } from \"./GeneralPlacementReport\";\n\ninterface GeneralReportProps {\n  loading: boolean;\n  generalReport: GeneralPlacementReportInterface[] | null;\n  selected_month: string;\n  error: string;\n  districts: DistrictTypes[] | null;\n  basic: Basic;\n  selected_district?: {\n    district_code: string;\n    district_name: string;\n  };\n  auth: Auth;\n}\ninterface GeneralReportState {\n  loading: boolean;\n  sortBy: {\n    column: \"teachers\" | \"schools_submitted\" | \"remaining\";\n    status: \"ASC\" | \"DESC\";\n  } | null;\n  search_district: string;\n  selectedDistrictDetails: {\n    district_code: string;\n    district_name: string;\n    details: {\n      qualification_name: string;\n      total: number;\n    }[];\n    total: number;\n  } | null;\n  schools_submitted_placements: DistrictTotalsSummarySubmitted | null;\n  pinned_districts: string[];\n}\n\nexport class GeneralReport extends Component<\n  GeneralReportProps,\n  GeneralReportState\n> {\n  constructor(props: GeneralReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      sortBy: null,\n      search_district: \"\",\n      selectedDistrictDetails: null,\n      schools_submitted_placements: null,\n      pinned_districts:\n        (this.props.auth.role?.role_id === \"3\" ||\n          this.props.auth.role?.role_id === \"2\" ||\n          this.props.auth.role?.role_id === \"1\") &&\n        this.props.auth.district !== null\n          ? [this.props.auth.district.district_code]\n          : [],\n    };\n  }\n\n  getDistrictSchools = (\n    district_code: string,\n    schools_submitted_placements: DistrictTotalsSummarySubmitted\n  ): {\n    total_schools: number;\n    placed_schools: number;\n  } => {\n    const getPlaced =\n      schools_submitted_placements.pla_district_total_summary.find(\n        (itm) => itm.district_code === district_code\n      );\n    const getSchools = schools_submitted_placements.district_total_summary.find(\n      (itm) => itm.district_code === district_code\n    );\n    return {\n      total_schools: getSchools === undefined ? 0 : parseInt(getSchools.total),\n      placed_schools: getPlaced === undefined ? 0 : parseInt(getPlaced.total),\n    };\n  };\n  getDistrictData = (\n    district_code: string,\n    qualification_name: string\n  ): number => {\n    const response = this.props.generalReport?.find(\n      (itm) =>\n        itm.district_code === district_code &&\n        itm.qualification.toLocaleLowerCase() ===\n          qualification_name.toLocaleLowerCase()\n    );\n    if (response !== undefined) {\n      return parseInt(response.total);\n    }\n    return 0;\n  };\n  totalTeachersOnDistrict = (district_code: string) => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.getDistrictData(district_code, item.qualification_name);\n    }\n    return total;\n  };\n\n  sortData = (\n    data: {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[]\n  ) => {\n    let result: {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[] = [];\n    switch (this.state.sortBy?.column) {\n      case \"teachers\":\n        result =\n          this.state.sortBy?.status === \"ASC\"\n            ? data.sort(function (a, b) {\n                return a.total - b.total;\n              })\n            : this.state.sortBy?.status === \"DESC\"\n            ? data.sort(function (a, b) {\n                return b.total - a.total;\n              })\n            : data;\n        break;\n      case \"schools_submitted\":\n        result =\n          this.state.sortBy?.status === \"ASC\"\n            ? data.sort(function (a, b) {\n                return a.placed_schools - b.placed_schools;\n              })\n            : this.state.sortBy?.status === \"DESC\"\n            ? data.sort(function (a, b) {\n                return b.placed_schools - a.placed_schools;\n              })\n            : data;\n        break;\n      case \"remaining\":\n        result =\n          this.state.sortBy?.status === \"ASC\"\n            ? data.sort(function (a, b) {\n                const remainingA = a.schools - a.placed_schools;\n                const remainingB = b.schools - b.placed_schools;\n                return remainingA - remainingB;\n              })\n            : this.state.sortBy?.status === \"DESC\"\n            ? data.sort(function (a, b) {\n                const remainingA = a.schools - a.placed_schools;\n                const remainingB = b.schools - b.placed_schools;\n                return remainingB - remainingA;\n              })\n            : data;\n        break;\n\n      default:\n        result = data;\n        break;\n    }\n    return result;\n  };\n\n  districtsWithTotals = (): {\n    district_code: string;\n    district_name: string;\n    total: number;\n    schools: number;\n    placed_schools: number;\n  }[] => {\n    let response: {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[] = [];\n    if (\n      this.props.districts !== null &&\n      this.props.generalReport !== null &&\n      this.state.schools_submitted_placements !== null\n    ) {\n      for (const item of this.props.districts) {\n        response.push({\n          district_code: item.district_code,\n          district_name: item.district_name,\n          total: this.totalTeachersOnDistrict(item.district_code),\n          schools: this.getDistrictSchools(\n            item.district_code,\n            this.state.schools_submitted_placements\n          ).total_schools,\n          placed_schools: this.getDistrictSchools(\n            item.district_code,\n            this.state.schools_submitted_placements\n          ).placed_schools,\n        });\n      }\n    }\n    response =\n      this.state.pinned_districts.length > 0\n        ? response.filter(\n            (itm) =>\n              this.state.pinned_districts.find(\n                (test) => test === itm.district_code\n              ) !== undefined\n          )\n        : response;\n    return search(this.sortData(response), this.state.search_district) as {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[];\n  };\n\n  getGrandTotal = () => {\n    let total_placed_schools = 0;\n    let total_schools = 0;\n    let total_pending_schools = 0;\n    let total_teachers = 0;\n    for (const item of this.districtsWithTotals()) {\n      total_placed_schools += item.placed_schools;\n      total_schools += item.schools;\n      total_pending_schools += item.schools - item.placed_schools;\n      total_teachers += item.total;\n    }\n    return {\n      total_placed_schools: total_placed_schools,\n      total_schools: total_schools,\n      total_pending_schools: total_pending_schools,\n      total_teachers: total_teachers,\n    };\n  };\n  componentDidMount(): void {\n    if (this.props.selected_district !== undefined) {\n      this.setState({\n        selectedDistrictDetails: {\n          district_code: this.props.selected_district.district_code,\n          district_name: this.props.selected_district.district_name,\n          details: this.props.basic.qualifications.map((itm) => ({\n            qualification_name: itm.qualification_name,\n            total: this.getDistrictData(\n              this.props.selected_district!.district_code,\n              itm.qualification_name\n            ),\n          })),\n          total: this.totalTeachersOnDistrict(\n            this.props.selected_district.district_code\n          ),\n        },\n      });\n    }\n    if (this.state.schools_submitted_placements === null) {\n      this.props.basic.academic_calender !== null &&\n        FC_GetSubmittedPlacementSchools(\n          this.props.basic.academic_calender.academic_year_id,\n          this.props.selected_month,\n          (\n            loading: boolean,\n            msg: string,\n            res: DistrictTotalsSummarySubmitted | null\n          ) => {\n            console.log(res);\n            this.setState({ loading: loading });\n            if (res !== null && loading === false) {\n              this.setState({\n                schools_submitted_placements: res,\n                loading: false,\n              });\n            }\n          }\n        );\n    }\n  }\n  pinDistrict = (district_code: string) => {\n    if (\n      this.props.auth.role?.role_id !== \"3\" &&\n      this.props.auth.role?.role_id !== \"2\" &&\n      this.props.auth.role?.role_id !== \"1\"\n    ) {\n      if (\n        this.state.pinned_districts.find((itm) => itm === district_code) ===\n        undefined\n      ) {\n        this.setState({\n          pinned_districts: [...this.state.pinned_districts, district_code],\n        });\n      } else {\n        this.setState({\n          pinned_districts: this.state.pinned_districts.filter(\n            (itm) => itm !== district_code\n          ),\n        });\n      }\n    }\n  };\n  render() {\n    if (\n      this.props.loading === true ||\n      this.state.loading === true ||\n      this.props.districts === null ||\n      this.props.generalReport === null\n    ) {\n      return (\n        <div className=\"bg-white p-4 flex flex-col items-center justify-center\">\n          <Loading />\n          <div className=\"animate__animated animate__falseIn animate__infinite mt-2 text-lg font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    if (this.state.selectedDistrictDetails !== null) {\n      return (\n        <DistrictPlacementDetails\n          selectedDistrictDetails={this.state.selectedDistrictDetails}\n        />\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row justify-between gap-3 mb-5\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-primary-800\">\n              Teacher placement summary\n            </span>\n            <span className=\"-mt-1\">\n              This file presents number of existing in the district\n            </span>\n            {/* <Link\n              title=\"Click here to print placement reports\"\n              to=\"/placement-books\"\n              className=\"underline text-accent-900 font-bold -mt-1\"\n            >\n              Print placement reports\n            </Link> */}\n          </div>\n          <div className=\"flex flex-row items-center gap-8 justify-end\">\n            <div className=\"flex flex-col text-green-700\">\n              <span>Existing teachers</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-green-600\">\n                {commaFy(this.getGrandTotal().total_teachers)}\n              </span>\n            </div>\n            <div className=\"flex flex-col\">\n              <span>Total Schools</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-gray-800\">\n                {commaFy(this.getGrandTotal().total_schools)}\n              </span>\n            </div>\n            <div className=\"flex flex-col\">\n              <span>Submitted Schools</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-primary-800\">\n                {commaFy(this.getGrandTotal().total_placed_schools)}\n              </span>\n            </div>\n            <div className=\"flex flex-col text-yellow-700\">\n              <span>Pending Schools</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-accent-900\">\n                {commaFy(this.getGrandTotal().total_pending_schools)}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3 flex flex-row items-center gap-2\">\n          <input\n            type=\"text\"\n            value={this.state.search_district}\n            onChange={(e) => this.setState({ search_district: e.target.value })}\n            placeholder=\"Search by district\"\n            className=\"px-3 py-2 rounded border border-gray-400 w-full font-bold text-primary-800\"\n          />\n          <div className=\"w-56\">\n            <ExportToExcel\n              fileData={this.districtsWithTotals().map((item, i) => ({\n                no: `${i + 1}`,\n                DistrictCode: `${item.district_code}`,\n                DistrictName: `${item.district_name}`,\n                A2: `${this.getDistrictData(item.district_code, \"a2\")}`,\n                A1: `${this.getDistrictData(item.district_code, \"a1\")}`,\n                A0: `${this.getDistrictData(item.district_code, \"a0\")}`,\n                TotalPlacedTeachers: `${item.total}`,\n                TotalDistrictSchools: `${item.schools}`,\n                TotalSchoolsSubmitted: `${item.placed_schools}`,\n                PendingSchools: `${item.schools - item.placed_schools}`,\n              }))}\n              fileName={`Districts Teacher placement summary`}\n              btnName=\"Download EXCEL\"\n            />\n          </div>\n        </div>\n        <table className=\"w-full\">\n          <thead>\n            <tr className=\"text-primary-800 text-left font-extrabold bg-primary-100 text-sm\">\n              <th className=\"px-4 py-2 border border-blue-300\">#</th>\n              <th className=\"px-4 py-2 border border-blue-300\">\n                District code\n              </th>\n              <th className=\"px-4 py-2 border border-blue-300\">\n                District name\n              </th>\n              {this.props.basic.qualifications.map((item, i) => (\n                <th\n                  className=\"border border-blue-300 text-center px-4 py-2\"\n                  key={i + 1}\n                >\n                  {item.qualification_name}\n                </th>\n              ))}\n              <th className=\"border border-blue-300 text-left text-green-700 bg-green-50\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      sortBy: {\n                        status:\n                          this.state.sortBy === null\n                            ? \"DESC\"\n                            : this.state.sortBy.status === \"ASC\"\n                            ? \"DESC\"\n                            : \"ASC\",\n                        column: \"teachers\",\n                      },\n                    })\n                  }\n                  className=\" flex flex-row items-center gap-3 px-4 py-2 hover:bg-primary-100 cursor-pointer text-left\"\n                >\n                  <span>Existing teachers</span>\n                  <BiSort />\n                </div>\n              </th>\n              <th className=\"border border-blue-300 text-center px-3 py-2\">\n                Total schools\n              </th>\n              <th className=\"border border-blue-300 text-center\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      sortBy: {\n                        status:\n                          this.state.sortBy === null\n                            ? \"DESC\"\n                            : this.state.sortBy.status === \"ASC\"\n                            ? \"DESC\"\n                            : \"ASC\",\n                        column: \"schools_submitted\",\n                      },\n                    })\n                  }\n                  className=\" flex flex-row items-center gap-3 px-4 py-2 hover:bg-primary-100 cursor-pointer text-center\"\n                >\n                  <span>Schools submitted</span>\n                  <BiSort />\n                </div>\n              </th>\n              <th className=\"border border-blue-300 text-center\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      sortBy: {\n                        status:\n                          this.state.sortBy === null\n                            ? \"DESC\"\n                            : this.state.sortBy.status === \"ASC\"\n                            ? \"DESC\"\n                            : \"ASC\",\n                        column: \"remaining\",\n                      },\n                    })\n                  }\n                  className=\" flex flex-row items-center gap-3 px-4 py-2 hover:bg-primary-100 cursor-pointer text-center\"\n                >\n                  <span>Remaining</span>\n                  <BiSort />\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.districtsWithTotals().length === 0 ? (\n              <tr>\n                <td\n                  colSpan={10}\n                  className={`text-center text-2xl font-extralight p-5 animate__animated animate__fadeIn border border-gray-300`}\n                >\n                  No Result Found!\n                </td>\n              </tr>\n            ) : (\n              this.districtsWithTotals().map((item, i) => (\n                <tr\n                  onClick={() => this.pinDistrict(item.district_code)}\n                  key={i + 1}\n                  className=\"hover:bg-primary-100 cursor-pointer\"\n                >\n                  <td className=\"px-4 py-2 border border-gray-300\">{i + 1}</td>\n                  <td className=\"px-4 py-2 border border-gray-300\">\n                    {item.district_code}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300\">\n                    {item.district_name}\n                  </td>\n                  {this.props.basic.qualifications.map((itm, k) => (\n                    <td\n                      key={k + 1}\n                      className=\"px-4 py-2 border border-gray-300 text-center\"\n                    >\n                      {commaFy(\n                        this.getDistrictData(\n                          item.district_code,\n                          itm.qualification_name\n                        )\n                      )}\n                    </td>\n                  ))}\n                  <td className=\"px-4 py-2 border border-gray-300 text-green-600 text-center\">\n                    {commaFy(item.total)}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300 text-gray-800 text-center\">\n                    {this.state.schools_submitted_placements === null\n                      ? \"Loading...\"\n                      : commaFy(item.schools)}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300 text-blue-600 text-center\">\n                    {this.state.schools_submitted_placements === null\n                      ? \"Loading...\"\n                      : commaFy(item.placed_schools)}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300 text-accent-900 text-center\">\n                    {this.state.schools_submitted_placements === null\n                      ? \"Loading...\"\n                      : commaFy(item.schools - item.placed_schools)}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n        {this.state.pinned_districts.length > 0 &&\n          this.props.auth.role?.role_id !== \"3\" &&\n          this.props.auth.role?.role_id !== \"2\" &&\n          this.props.auth.role?.role_id !== \"1\" && (\n            <div className=\"my-5\">\n              <Button\n                onClick={() => this.setState({ pinned_districts: [] })}\n                theme=\"accent\"\n              >\n                Unpin selected district\n              </Button>\n            </div>\n          )}\n        {this.props.auth.role?.role_id === \"3\" && (\n          <div>\n            <div className=\"my-3\">\n              You can view details for the above summary by viewing schools\n              lists and generating PDF format placement reports\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <Link\n                className=\"bg-accent-800 font-bold px-3 py-2 rounded hover:bg-yellow-800 hover:text-white\"\n                to={\"/placement-list-dde\"}\n              >\n                View placement list details\n              </Link>\n              <Link\n                className=\"border border-accent-900 text-accent-900 font-bold px-3 py-2 rounded hover:bg-accent-800 hover:text-black\"\n                to={\"/placement-books\"}\n              >\n                Print placement reports\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Auth, Basic, ToBePlacedDistrictsPostsInterface } from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy, search } from \"../../utils/functions\";\nimport { GeneralPlacementReportInterface } from \"./GeneralPlacementReport\";\n\ninterface DistrictTotalsDistrictsCountsItem {\n  Existing: number;\n  New: number;\n  Total: number;\n}\n\nexport interface DistrictTotalsDistrictsCounts {\n  district: string;\n  A2: DistrictTotalsDistrictsCountsItem;\n  A1: DistrictTotalsDistrictsCountsItem;\n  A0: DistrictTotalsDistrictsCountsItem;\n  Total: DistrictTotalsDistrictsCountsItem;\n}\n\ninterface VacantSummaryProps {\n  auth: Auth;\n  basic: Basic;\n  districts: DistrictTypes[] | null;\n  districts_limits: DistrictTotalsDistrictsCounts[];\n  districts_placements: GeneralPlacementReportInterface[];\n  toBePlacedData: ToBePlacedDistrictsPostsInterface[] | null;\n  loading: boolean;\n  loadToBePlacedData: () => void;\n}\ninterface VacantSummaryState {\n  loading: boolean;\n  search_district: string;\n  sortBy: {\n    status: string;\n    column: string;\n  } | null;\n  pinned_districts: string[];\n}\n\nexport class VacantSummary extends Component<\n  VacantSummaryProps,\n  VacantSummaryState\n> {\n  constructor(props: VacantSummaryProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      search_district: \"\",\n      sortBy: null,\n      pinned_districts:\n        (this.props.auth.role?.role_id === \"3\" ||\n          this.props.auth.role?.role_id === \"2\" ||\n          this.props.auth.role?.role_id === \"1\") &&\n        this.props.auth.district !== null\n          ? [this.props.auth.district.district_code]\n          : [],\n    };\n  }\n  getDistrictSummaryLimit = (district_name: string) => {\n    const test = this.props.districts_limits.find(\n      (itm) => itm.district === district_name\n    );\n    return test === undefined ? null : test;\n  };\n  getTotalPlacedDistrict = (district_code: string) => {\n    let response = 0;\n    const total = this.props.districts_placements.filter(\n      (itm) => itm.district_code === district_code\n    );\n    for (const item of total) {\n      response += parseInt(item.total);\n    }\n    return response;\n  };\n  districtsWithTotals = () => {\n    let response =\n      this.props.districts === null\n        ? []\n        : this.props.districts.map((item) => ({\n            district_code: item.district_code,\n            district_name: item.district_name,\n            totals: this.getDistrictSummaryLimit(item.district_name),\n            total_placed: this.getTotalPlacedDistrict(item.district_code),\n          }));\n    response =\n      this.state.pinned_districts.length > 0\n        ? response.filter(\n            (itm) =>\n              this.state.pinned_districts.find(\n                (test) => test === itm.district_code\n              ) !== undefined\n          )\n        : response;\n    return search(response, this.state.search_district) as {\n      district_code: string;\n      district_name: string;\n      totals: DistrictTotalsDistrictsCounts | null;\n      total_placed: number;\n    }[];\n  };\n\n  getDistrictData = (\n    district_code: string,\n    qualification_name: string\n  ): number => {\n    const response = this.props.districts_placements.find(\n      (itm) =>\n        itm.district_code === district_code &&\n        itm.qualification.toLocaleLowerCase() ===\n          qualification_name.toLocaleLowerCase()\n    );\n    if (response !== undefined) {\n      return parseInt(response.total);\n    }\n    return 0;\n  };\n  getDistrictDataAvailable = (\n    district_name: string,\n    qualification_name: string\n  ): number => {\n    var res = 0;\n    const response = this.props.districts_limits.find(\n      (itm) => itm.district === district_name\n    );\n    if (response !== undefined) {\n      switch (qualification_name.toLocaleLowerCase()) {\n        case \"a2\":\n          res = response.A2.Total;\n          break;\n        case \"a1\":\n          res = response.A1.Total;\n          break;\n        case \"a0\":\n          res = response.A0.Total;\n          break;\n      }\n    }\n    return res;\n  };\n  totalTeachersOnDistrict = (district_code: string) => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.getDistrictData(district_code, item.qualification_name);\n    }\n    return total;\n  };\n  totalAvailable = (qualification_name: string) => {\n    let total = 0;\n    if (this.props.districts !== null) {\n      for (const item of this.props.districts) {\n        total += this.getDistrictDataAvailable(\n          item.district_name,\n          qualification_name\n        );\n      }\n    }\n    return total;\n  };\n  totalPlaced = (qualification_id: string) => {\n    let total = 0;\n    if (this.props.districts !== null) {\n      for (const item of this.props.districts) {\n        total += this.getDistrictData(item.district_code, qualification_id);\n      }\n    }\n    return total;\n  };\n  getAllTotalAvailable = () => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.totalAvailable(item.qualification_name);\n    }\n    return total;\n  };\n  getAllTotalExisting = () => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.totalPlaced(item.qualification_name);\n    }\n    return total;\n  };\n  pinDistrict = (district_code: string) => {\n    if (\n      this.props.auth.role?.role_id !== \"3\" &&\n      this.props.auth.role?.role_id !== \"2\" &&\n      this.props.auth.role?.role_id !== \"1\"\n    ) {\n      if (\n        this.state.pinned_districts.find((itm) => itm === district_code) ===\n        undefined\n      ) {\n        this.setState({\n          pinned_districts: [...this.state.pinned_districts, district_code],\n        });\n      } else {\n        this.setState({\n          pinned_districts: this.state.pinned_districts.filter(\n            (itm) => itm !== district_code\n          ),\n        });\n      }\n    }\n  };\n\n  getDistrictToBePlaced = (\n    district_code: string,\n    qualification_name: string\n  ): number => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const response = this.props.toBePlacedData.find(\n        (itm) =>\n          itm.district_code === district_code &&\n          itm.qualification_name.toLowerCase() ===\n            qualification_name.toLocaleLowerCase()\n      );\n      if (response !== undefined) {\n        return parseInt(response.approved);\n      }\n    }\n    return total;\n  };\n\n  getDistrictNameToBePlaced = (\n    district_name: string,\n    qualification_name: string\n  ): number => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const response = this.props.toBePlacedData.find(\n        (itm) =>\n          itm.district_name.toLocaleLowerCase() ===\n            district_name.toLocaleLowerCase() &&\n          itm.qualification_name.toLowerCase() ===\n            qualification_name.toLocaleLowerCase()\n      );\n      if (response !== undefined) {\n        return parseInt(response.approved);\n      }\n    }\n    return total;\n  };\n\n  getTotalDistrictToBePlaced = (district_code: string) => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const data_temp = this.props.toBePlacedData.filter(\n        (itm) => itm.district_code === district_code\n      );\n      for (const item of data_temp) {\n        total += parseInt(item.approved);\n      }\n    }\n    return total;\n  };\n\n  getTotalQualificationToBePlacedByQualification = (\n    qualification_name: string\n  ) => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const filtered = this.props.toBePlacedData.filter(\n        (itm) =>\n          itm.qualification_name.toLocaleLowerCase() ===\n          qualification_name.toLocaleLowerCase()\n      );\n      for (const item of filtered) {\n        total += parseInt(item.approved);\n      }\n    }\n    return total;\n  };\n\n  getTotalQualificationToBePlacedTotals = () => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      for (const item of this.props.toBePlacedData) {\n        total += parseInt(item.approved);\n      }\n    }\n    return total;\n  };\n\n  getTeachersAvailableAndToBePlaced = (\n    district_code: string,\n    qualification_name: string\n  ) => {\n    return (\n      this.getDistrictToBePlaced(district_code, qualification_name) +\n      this.getDistrictData(district_code, qualification_name)\n    );\n  };\n  componentDidMount = () => {\n    if (this.props.toBePlacedData === null) {\n      this.setState({ loading: true });\n      this.props.loadToBePlacedData();\n    }\n  };\n\n  render() {\n    if (this.state.loading === true || this.props.toBePlacedData === null) {\n      return (\n        <div className=\"bg-white p-4 flex flex-col items-center justify-center\">\n          <Loading />\n          <div className=\"animate__animated animate__falseIn animate__infinite mt-2 text-lg font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row justify-between gap-3 mb-5\">\n          <div className=\"flex flex-col pl-4 pt-5\">\n            <span className=\"font-extrabold text-2xl text-primary-800\">\n              Posts management\n            </span>\n            <span className=\"-mt-1\">\n              This includes total ceiling and available teachers comparison\n            </span>\n            <div className=\"mt-3\">\n              <ExportToExcel\n                fileData={this.districtsWithTotals().map((item, i) => ({\n                  no: `${i + 1}`,\n                  District_Code: `${item.district_code}`,\n                  District_Name: `${item.district_name}`,\n                  AO_Placed: `${this.getDistrictData(\n                    item.district_code,\n                    \"a0\"\n                  )}`,\n                  A0_to_be_placed: `${this.getDistrictToBePlaced(\n                    item.district_code,\n                    \"a0\"\n                  )}`,\n                  A0_grand_total: `${this.getTeachersAvailableAndToBePlaced(\n                    item.district_code,\n                    \"a0\"\n                  )}`,\n                  A0_total_ceiling: `${this.getDistrictDataAvailable(\n                    item.district_name,\n                    \"a0\"\n                  )}`,\n                  A1_Placed: `${this.getDistrictData(\n                    item.district_code,\n                    \"a1\"\n                  )}`,\n                  A1_to_be_placed: `${this.getDistrictToBePlaced(\n                    item.district_code,\n                    \"a1\"\n                  )}`,\n                  A1_grand_total: `${this.getTeachersAvailableAndToBePlaced(\n                    item.district_code,\n                    \"a1\"\n                  )}`,\n                  A1_total_ceiling: `${this.getDistrictDataAvailable(\n                    item.district_name,\n                    \"a1\"\n                  )}`,\n                  A2_Placed: `${this.getDistrictData(\n                    item.district_code,\n                    \"a2\"\n                  )}`,\n                  A2_to_be_placed: `${this.getDistrictToBePlaced(\n                    item.district_code,\n                    \"a2\"\n                  )}`,\n                  A2_grand_total: `${this.getTeachersAvailableAndToBePlaced(\n                    item.district_code,\n                    \"a2\"\n                  )}`,\n                  A2_total_ceiling: `${this.getDistrictDataAvailable(\n                    item.district_name,\n                    \"a2\"\n                  )}`,\n                  Grand_total_teachers: `${\n                    item.total_placed +\n                    this.getTotalDistrictToBePlaced(item.district_code)\n                  }`,\n                  Grand_total_ceiling: `${\n                    item.totals === null ? \"0\" : item.totals.Total.Total\n                  }`,\n                  Total_vacant: `${\n                    item.totals === null\n                      ? \"0\"\n                      : item.totals.Total.Total -\n                        (item.total_placed +\n                          this.getTotalDistrictToBePlaced(item.district_code))\n                  }`,\n                }))}\n                fileName={`Districts ceiling tracking report`}\n                btnName=\"Download EXCEL\"\n              />\n            </div>\n          </div>\n          {this.props.auth.role?.role_id !== \"3\" &&\n            this.props.auth.role?.role_id !== \"2\" &&\n            this.props.auth.role?.role_id !== \"1\" && (\n              <div className=\"\">\n                <table className=\"\">\n                  <tbody>\n                    <tr className=\"bg-primary-100 font-light\">\n                      <td className=\"border border-blue-300 px-3\">\n                        Report type\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-blue-300 text-gray-800\"\n                        >\n                          {item.qualification_name}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3\">Total</td>\n                    </tr>\n                    <tr className=\"bg-gray-100 font-bold\">\n                      <td className=\"border border-gray-300 px-3\">\n                        National Ceiling\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-gray-300\"\n                        >\n                          {commaFy(\n                            this.totalAvailable(\n                              item.qualification_name.toLocaleLowerCase()\n                            )\n                          )}\n                        </td>\n                      ))}\n                      <td className=\"border border-gray-300 px-3\">\n                        {commaFy(this.getAllTotalAvailable())}\n                      </td>\n                    </tr>\n                    <tr className=\"text-green-700\">\n                      <td className=\"border border-blue-300 px-3\">\n                        Current teachers\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-blue-300\"\n                        >\n                          {commaFy(this.totalPlaced(item.qualification_name))}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3\">\n                        {commaFy(this.getAllTotalExisting())}\n                      </td>\n                    </tr>\n                    <tr className=\"text-yellow-700\">\n                      <td className=\"border border-blue-300 px-3\">\n                        Posts to be placed\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-blue-300\"\n                        >\n                          {commaFy(\n                            this.getTotalQualificationToBePlacedByQualification(\n                              item.qualification_name\n                            )\n                          )}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3\">\n                        {commaFy(this.getTotalQualificationToBePlacedTotals())}\n                      </td>\n                    </tr>\n                    <tr className={`bg-accent-400 text-black`}>\n                      <td className=\"border border-blue-300 font-extrabold px-3\">\n                        Total Vacant\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-bold border border-blue-300\"\n                        >\n                          {commaFy(\n                            this.totalAvailable(\n                              item.qualification_name.toLocaleLowerCase()\n                            ) -\n                              this.getTotalQualificationToBePlacedByQualification(\n                                item.qualification_name\n                              ) -\n                              this.totalPlaced(item.qualification_name)\n                          )}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3 font-extrabold text-black\">\n                        {commaFy(\n                          this.getAllTotalAvailable() -\n                            this.getTotalQualificationToBePlacedTotals() -\n                            this.getAllTotalExisting()\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            )}\n        </div>\n        <div className=\"mb-3 flex flex-row items-center gap-2\">\n          <input\n            type=\"text\"\n            value={this.state.search_district}\n            onChange={(e) => this.setState({ search_district: e.target.value })}\n            placeholder=\"Search by district\"\n            className=\"px-3 py-2 rounded border border-gray-400 w-full font-bold text-primary-800\"\n          />\n        </div>\n        <div\n          className=\"overflow-x-auto\"\n          style={{ width: \"calc(100vw - 300px)\" }}\n        >\n          <table className=\"\">\n            <thead>\n              <tr className=\"text-primary-800 text-left font-extrabold bg-primary-100 text-xs\">\n                <th className=\"px-1 py-2 border border-blue-300\">#</th>\n                <th className=\"px-1 py-2 border border-blue-300\">\n                  District code\n                </th>\n                <th className=\"px-1 py-2 border border-blue-300\">\n                  District name\n                </th>\n                {this.props.basic.qualifications.map((item, i) => (\n                  <th\n                    className=\"border border-blue-300 text-center\"\n                    key={i + 1}\n                  >\n                    <div>\n                      <div className=\"my-2\">{item.qualification_name}</div>\n                      <table className=\"w-full text-xs\">\n                        <thead>\n                          <tr>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">Placed</div>\n                            </td>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">To be placed</div>\n                            </td>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">G.Total</div>\n                            </td>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">Ceiling</div>\n                            </td>\n                          </tr>\n                        </thead>\n                      </table>\n                    </div>\n                  </th>\n                ))}\n                <th className=\"border border-blue-300 text-left text-primary-800\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        sortBy: {\n                          status:\n                            this.state.sortBy === null\n                              ? \"DESC\"\n                              : this.state.sortBy.status === \"ASC\"\n                              ? \"DESC\"\n                              : \"ASC\",\n                          column: \"teachers\",\n                        },\n                      })\n                    }\n                    className=\" flex flex-row items-center gap-3 px-2 py-2 hover:bg-primary-100 cursor-pointer text-left\"\n                  >\n                    <span>Total teachers</span>\n                    {/* <BiSort /> */}\n                  </div>\n                </th>\n                <th className=\"border border-blue-300 text-center px-3 py-2\">\n                  Total Ceiling\n                </th>\n                <th className=\"border border-blue-300 text-center\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        sortBy: {\n                          status:\n                            this.state.sortBy === null\n                              ? \"DESC\"\n                              : this.state.sortBy.status === \"ASC\"\n                              ? \"DESC\"\n                              : \"ASC\",\n                          column: \"schools_submitted\",\n                        },\n                      })\n                    }\n                    className=\" flex flex-row items-center gap-3 px-2 py-2 hover:bg-primary-100 cursor-pointer text-center\"\n                  >\n                    <span>Vacant posts</span>\n                    {/* <BiSort /> */}\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.districtsWithTotals().length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={10}\n                    className={`text-center text-2xl font-extralight p-5 animate__animated animate__fadeIn border border-gray-300`}\n                  >\n                    No Result Found!\n                  </td>\n                </tr>\n              ) : (\n                this.districtsWithTotals().map((item, i) => (\n                  <tr\n                    onClick={() => {\n                      this.pinDistrict(item.district_code);\n                    }}\n                    key={i + 1}\n                    className=\"hover:bg-primary-100 cursor-pointer text-xs\"\n                  >\n                    <td className=\"px-1 py-2 border border-gray-300 text-center\">\n                      {i + 1}\n                    </td>\n                    <td className=\"px-1 py-2 border border-gray-300 text-center\">\n                      {item.district_code}\n                    </td>\n                    <td className=\"px-1 py-2 border border-gray-300\">\n                      {item.district_name}\n                    </td>\n                    {this.props.basic.qualifications.map((itm, k) => (\n                      <td\n                        key={k + 1}\n                        className=\"border border-gray-300 text-center\"\n                      >\n                        <div>\n                          <table className=\"w-full text-xs\">\n                            <tbody>\n                              <tr>\n                                <td\n                                  className={`border border-blue-300 py-2 ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >\n                                    this.getDistrictData(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"\"\n                                      : \"bg-red-100\"\n                                  }`}\n                                >\n                                  <div className={`w-6 px-1 text-center`}>\n                                    {commaFy(\n                                      this.getDistrictData(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                                <td\n                                  className={`border border-blue-300 py-2 ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >\n                                    this.getDistrictData(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"\"\n                                      : \"bg-red-100\"\n                                  }`}\n                                >\n                                  <div\n                                    className={`w-6 px-1 text-center ${\n                                      this.getDistrictToBePlaced(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      ) > 0\n                                        ? \"text-accent-900\"\n                                        : \"text-gray-600\"\n                                    }`}\n                                  >\n                                    {commaFy(\n                                      this.getDistrictToBePlaced(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                                <td\n                                  className={`border py-2 ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >=\n                                    this.getTeachersAvailableAndToBePlaced(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"bg-green-50 text-green-700 border-blue-300\"\n                                      : \"bg-red-600 text-white border-red-700\"\n                                  }`}\n                                >\n                                  <div className={`w-6 text-center px-1`}>\n                                    {commaFy(\n                                      this.getTeachersAvailableAndToBePlaced(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                                <td\n                                  className={`border ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >=\n                                    this.getTeachersAvailableAndToBePlaced(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"bg-accent-400 border-blue-300\"\n                                      : \"bg-red-700 text-white border-red-600\"\n                                  } py-2 text-center`}\n                                >\n                                  <div className=\"w-6 px-1\">\n                                    {commaFy(\n                                      this.getDistrictDataAvailable(\n                                        item.district_name,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </td>\n                    ))}\n                    <td className=\"px-1 py-2 border border-gray-300 text-primary-600 text-center\">\n                      {commaFy(\n                        item.total_placed +\n                          this.getTotalDistrictToBePlaced(item.district_code)\n                      )}\n                    </td>\n                    <td className=\"px-1 py-2 border border-gray-300 text-gray-800 text-center\">\n                      {item.totals === null\n                        ? \"Loading...\"\n                        : commaFy(item.totals.Total.Total)}\n                    </td>\n                    <td\n                      className={`px-1 py-2 border ${\n                        item.totals === null\n                          ? \"\"\n                          : item.totals.Total.Total -\n                              (item.total_placed +\n                                this.getTotalDistrictToBePlaced(\n                                  item.district_code\n                                )) <\n                            0\n                          ? \"bg-red-600 text-white border-red-700\"\n                          : \"text-blue-600 border-gray-300\"\n                      }  text-center`}\n                    >\n                      {item.totals === null\n                        ? 0\n                        : commaFy(\n                            item.totals.Total.Total -\n                              (item.total_placed +\n                                this.getTotalDistrictToBePlaced(\n                                  item.district_code\n                                ))\n                          )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n        {this.state.pinned_districts.length > 0 &&\n          this.props.auth.role?.role_id !== \"3\" &&\n          this.props.auth.role?.role_id !== \"2\" &&\n          this.props.auth.role?.role_id !== \"1\" && (\n            <div className=\"my-5\">\n              <Button\n                onClick={() => this.setState({ pinned_districts: [] })}\n                theme=\"accent\"\n              >\n                Unpin selected district\n              </Button>\n            </div>\n          )}\n        {this.props.auth.role?.role_id === \"3\" && (\n          <div>\n            <div className=\"my-3\">\n              You can view details for the above summary by viewing schools\n              lists and generating PDF format placement reports\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <Link\n                className=\"bg-accent-800 font-bold px-3 py-2 rounded hover:bg-yellow-800 hover:text-white\"\n                to={\"/placement-list-dde\"}\n              >\n                View placement list details\n              </Link>\n              <Link\n                className=\"border border-accent-900 text-accent-900 font-bold px-3 py-2 rounded hover:bg-accent-800 hover:text-black\"\n                to={\"/placement-books\"}\n              >\n                Print placement reports\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetPostsToBePlacedSummaries,\n  GetDistrictsLimits,\n  GetGeneralPlacementReports,\n  Placement,\n  ToBePlacedDistrictsPostsInterface,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { MONTHS_LIST } from \"../../utils/functions\";\nimport { GeneralReport } from \"./GeneralReport\";\nimport { DistrictTotalsDistrictsCounts, VacantSummary } from \"./VacantSummary\";\n\nexport interface GeneralPlacementReportInterface {\n  district_code: string;\n  qualification: string;\n  total: string;\n}\n\ninterface GeneralPlacementReportProps {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n}\ninterface GeneralPlacementReportState {\n  loading: boolean;\n  report_type: \"general\" | \"vacant\" | \"search\";\n  generalReport: GeneralPlacementReportInterface[] | null;\n  selected_month: string;\n  error: string;\n  districts: DistrictTypes[] | null;\n  districts_limits: DistrictTotalsDistrictsCounts[] | null;\n  districts_to_be_placed: ToBePlacedDistrictsPostsInterface[] | null;\n}\n\nconst TodayDate = new Date();\n\nclass _GeneralPlacementReport extends Component<\n  GeneralPlacementReportProps,\n  GeneralPlacementReportState\n> {\n  constructor(props: GeneralPlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      report_type: \"general\",\n      generalReport: null,\n      selected_month: MONTHS_LIST[TodayDate.getMonth()],\n      error: \"\",\n      districts: null,\n      districts_limits: null,\n      districts_to_be_placed: null,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n\n  FC_LoadGeneralReport = () => {\n    this.setLoading(true);\n    this.props.basic.academic_calender !== null &&\n      GetGeneralPlacementReports(\n        this.props.basic.academic_calender.academic_year_id, //Add selection of academic\n        this.state.selected_month,\n        (\n          loading: boolean,\n          msg: string,\n          res: GeneralPlacementReportInterface[] | null\n        ) => {\n          this.setLoading(loading);\n          if (loading === false && msg === \"\" && res !== null) {\n            this.setState({ generalReport: res, loading: false });\n            console.log(\"Test report\", res);\n          } else {\n            if (msg !== \"\") {\n              this.setState({ error: msg, generalReport: [] });\n            }\n          }\n        }\n      );\n  };\n\n  loadToBePlaced = () => {\n    if (\n      this.state.report_type === \"vacant\" &&\n      this.state.districts_to_be_placed === null\n    ) {\n      this.setLoading(true);\n      FC_GetPostsToBePlacedSummaries(\n        (\n          loading: boolean,\n          msg: string,\n          res: ToBePlacedDistrictsPostsInterface[] | null\n        ) => {\n          this.setLoading(loading);\n          if (loading === false && res !== null) {\n            this.setState({ districts_to_be_placed: res });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.state.districts_limits === null) {\n      this.setLoading(true);\n      GetDistrictsLimits(\n        (loading: boolean, res: DistrictTotalsDistrictsCounts[] | null) => {\n          this.setState({\n            loading: loading,\n            districts_limits: res,\n          });\n        }\n      );\n    }\n    if (this.state.districts === null) {\n      this.setLoading(true);\n      FC_GetDistricts(\n        (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n          if (data !== null) {\n            this.setState({ districts: data, loading: false });\n          }\n        }\n      );\n    }\n    if (\n      this.state.report_type === \"general\" &&\n      this.state.generalReport === null\n    ) {\n      this.FC_LoadGeneralReport();\n    }\n    this.loadToBePlaced();\n  };\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className=\"bg-white p-4 flex flex-col items-center justify-center\">\n          <Loading />\n          <div className=\"animate__animated animate__falseIn animate__infinite mt-2 text-lg font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div className=\"px-3 md:px-6 py-6\">\n          <div className=\"flex flex-row items-center justify-between gap-3\">\n            <div className=\"text-2xl font-extrabold\">\n              General placement report\n            </div>\n            <div className=\"flex flex-row items-center justify-end gap-1 bg-white p-1 rounded\">\n              <div\n                onClick={() => {\n                  this.state.loading === false &&\n                    this.setState({ report_type: \"general\" });\n                }}\n                className={`px-3 py-2 rounded w-max hover:bg-yellow-50 hover:text-accent-900 ${\n                  this.state.report_type === \"general\"\n                    ? \"cursor-not-allowed bg-yellow-100 text-yellow-800 font-bold animate__animated animate__fadeIn\"\n                    : \"bg-white cursor-pointer font-bold\"\n                }`}\n              >\n                General report\n              </div>\n              <div\n                onClick={() => {\n                  this.state.loading === false &&\n                    this.setState({ report_type: \"vacant\" });\n                }}\n                className={`px-3 py-2 rounded w-max hover:bg-yellow-50 hover:text-accent-900 ${\n                  this.state.report_type === \"vacant\"\n                    ? \"cursor-not-allowed bg-yellow-100 text-yellow-800 font-bold animate__animated animate__fadeIn\"\n                    : \"bg-white cursor-pointer font-bold\"\n                }`}\n              >\n                Posts Management\n              </div>\n              <div\n                onClick={() => {\n                  this.state.loading === false &&\n                    this.setState({ report_type: \"search\" });\n                }}\n                className={`px-3 py-2 rounded w-max hover:bg-yellow-50 hover:text-accent-900 ${\n                  this.state.report_type === \"search\"\n                    ? \"cursor-not-allowed bg-yellow-100 text-yellow-800 font-bold animate__animated animate__fadeIn\"\n                    : \"bg-white cursor-pointer font-bold\"\n                } flex flex-row items-center gap-1`}\n              >\n                <div>\n                  <RiSearchLine className=\"text-2xl\" />\n                </div>\n                <span>Search</span>\n              </div>\n            </div>\n          </div>\n          {/* Report here */}\n          <div className=\"bg-white p-3 rounded mt-5\">\n            {/* Alerts here */}\n            {this.state.error !== \"\" && (\n              <div\n                title=\"Click to close alert\"\n                onClick={() => this.setState({ error: \"\" })}\n                className=\"rounded-md bg-red-50 border border-red-200 px-3 py-2 text-base font-light w-full cursor-pointer hover:bg-red-100 flex flex-row items-center justify-between gap-3 mb-3 animate__animated animate__shakeX\"\n              >\n                <span>{this.state.error}</span>\n                <div>\n                  <MdClose className=\"text-2xl hover:text-red-600\" />\n                </div>\n              </div>\n            )}\n            <div>\n              {this.state.report_type === \"general\" && (\n                <GeneralReport\n                  loading={this.state.loading}\n                  generalReport={this.state.generalReport}\n                  selected_month={this.state.selected_month}\n                  error={this.state.error}\n                  districts={this.state.districts}\n                  basic={this.props.basic}\n                  auth={this.props.auth}\n                  //   selected_district={{\n                  //     district_code: \"11\",\n                  //     district_name: \"Nyarugenge\",\n                  //   }}\n                />\n              )}\n              {this.state.report_type === \"vacant\" &&\n                this.state.districts_limits !== null &&\n                this.state.generalReport !== null && (\n                  <VacantSummary\n                    districts={this.state.districts}\n                    basic={this.props.basic}\n                    auth={this.props.auth}\n                    districts_limits={this.state.districts_limits}\n                    districts_placements={this.state.generalReport}\n                    toBePlacedData={this.state.districts_to_be_placed}\n                    loading={this.state.loading}\n                    loadToBePlacedData={() => {\n                      this.loadToBePlaced();\n                    }}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): { auth: Auth; basic: Basic; placement: Placement } => {\n  return { auth: auth, basic: basic, placement: placement };\n};\n\nexport const GeneralPlacementReport = connect(\n  mapStateToProps,\n  {}\n)(_GeneralPlacementReport);\n"],"sourceRoot":""}