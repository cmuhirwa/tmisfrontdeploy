<<<<<<<< HEAD:static/js/32.b6d30976.chunk.js.map
{"version":3,"sources":["actions/transfer.action.ts","actions/training-offers.ts","trainingModule/CentersManagement/AddCenter.tsx","trainingModule/CentersManagement/CentersList.tsx","trainingModule/CentersManagement/TrainingCentersList.tsx","trainingModule/CentersManagement/TrainingsList.tsx","trainingModule/CentersManagement/CentersManagement.tsx"],"names":["FC_GetAllTransfers","district_id","callBack","dispatch","type","ActionTypes","GET_ALL_TRANSFER","payload","setAxiosToken","axios","get","APP_URL","res","needed_data","data","filter","item","requested_status","errorToText","FC_GetDistricts","district_code","district_name","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","console","log","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","TrainingImplementationStatus","TrainingEvaluationStatus","GetSchoolTrainingProvidersByStatus","school_code","status","setResponse","TRAINING_APP_URL","msg","returnErrorToText","GetSchoolTrainingParticipants","training_id","toString","length","school_teachers","response","school_parents","undefined","find","itm","user_id","push","email","first_name","id","last_name","nid","phone_numbers","position_code","position_name","qualification_id","qualification_name","subjects","teaching_level","teaching_level_id","trainee_request_id","training_to_group_id","GetTraineesToBeTrainedOnSchool","AssignTraineeToTraining","RemoveTraineeToTraining","patch","GetParentsToAttendTraining","new","AddNewTraineeInfoAssignToTraining","GetDistrictTrainingProvidersByStatus","GetDistrictTrainingParticipants","role","role_id","staff_code","GetTraineesToBeTrainedOnDistrict","GetTrainingsListByStatus","AddCenter","props","CreateNewTraining","e","preventDefault","state","setState","target","center_type_id","name","loading","success","CreateNewCenter","onCreated","openSelectCenterType","openSelectDistrict","onSubmit","this","className","style","minHeight","onClick","districts","zIndex","SelectCustom","title","close","click","centerTypes","center_types","TextInput","onChange","value","label","placeholder","MainContainer_className","disabled","Button","theme","Component","CentersList","centers","colSpan","GetFilteredData","map","i","center_name","center_type_name","TrainingCentersList","GetTotalTrainees","number_of_trainees","GetTotalCenters","center_id","GetTotalRooms","group_id","GetTotalDistrict","commaFy","TrainingsList","LoadTrainings","selectedStatus","trainings","FilteredTrainings","search","searchData","INPROGRESS","trainingStatuses","key","COMPLETED","CANCELLED","READY_FOR_EVALUATION","DRAFT","stat","s","Alert","onSelected","topic","DATE","start_date","end_date","development_partner_name","dp_contact","_CentersManagement","GetAllCentersList","GetAllCenters","GetAllCentersListByTrainingSelected","GetAllCentersByTrainingID","trainingCenters","GetAllCenterTypesDetails","openSelectTraining","GetCenterTypes","center_room_type","LoadAllDistricts","selected_district_code","search_value","GetFilteredTrainingCenters","addCenter","selectedTraining","width","Loading","ExportToExcel","fileData","No","fileName","btnName","Modal","backDrop","backDropClose","displayClose","padding","body","footer","widthSizeClass","ModalSize","large","maxWidth","marginTop","ModalMarginTop","small","CentersManagement","connect","auth","basic"],"mappings":"wSAgFaA,EAAqB,SAChCC,EACAC,GAOA,OADAA,GAAS,EAAM,KAAM,IACrB,iDAAO,WAAOC,GAAP,mGAEHA,EAA+B,CAC7BC,KAAMC,IAAYC,iBAClBC,QAAS,KAEXC,cANG,SAOeC,IAAMC,IAAN,UACbC,IADa,0CAC4BV,IAR3C,OAOGW,EAPH,OAcGC,EAAcD,EAAIE,KAAKC,QAC3B,SAACC,GAAD,MAAoC,aAA1BA,EAAKC,gBAAf,IAIFd,EAA+B,CAC7BC,KAAMC,IAAYC,iBAClBC,QAASM,IAEXX,GAAS,EAAOW,EAAa,IAvB1B,kDA4BHX,GAAS,EAAO,KAAMgB,YAAY,EAAD,KA5B9B,0DAAP,qDAmCD,EA8EYC,EAAe,iDAAG,WAC7BjB,GAD6B,2EAY7BA,GACE,EACA,CACE,CACEkB,cAAe,KACfC,cAAe,cAEjB,CACED,cAAe,KACfC,cAAe,UAEjB,CACED,cAAe,KACfC,cAAe,YAEjB,CACED,cAAe,KACfC,cAAe,UAEjB,CACED,cAAe,KACfC,cAAe,YAEjB,CACED,cAAe,KACfC,cAAe,aAEjB,CACED,cAAe,KACfC,cAAe,QAEjB,CACED,cAAe,KACfC,cAAe,aAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,UAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,aAEjB,CACED,cAAe,KACfC,cAAe,UAEjB,CACED,cAAe,KACfC,cAAe,cAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,UAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,aAEjB,CACED,cAAe,KACfC,cAAe,aAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,WAEjB,CACED,cAAe,KACfC,cAAe,UAEjB,CACED,cAAe,KACfC,cAAe,SAEjB,CACED,cAAe,KACfC,cAAe,aAGnB,IAxI2B,2CAAH,sDAqJfC,EAAa,iDAAG,WAC3BC,EACArB,GAF2B,4FAW3BA,GAAS,EADLsB,EAA4B,EACE,KAAM,IAXb,SAazBhB,eACMiB,EAAW,IAAIC,UACZC,OAAO,8BAA+BJ,GAftB,SAgBPd,IAAMmB,KAAN,UACbjB,IADa,8CAEhBc,EACA,CACEI,iBAAkB,SAACC,GACjBN,IACG,OAACM,QAAD,IAACA,OAAD,EAACA,EAAeC,SAAUD,EAAcE,MAAS,IACpD9B,GAAS,EAAMsB,EAAmB,KAAM,GACzC,IAxBoB,OAgBnBZ,EAhBmB,OA2BzBqB,QAAQC,IAAI,sBAAuBtB,EAAIE,MACvCZ,GAAS,EAAOsB,EAAmBZ,EAAIE,KAAM,IA5BpB,kDA+BzBmB,QAAQE,MAAR,MACAjC,GAAS,EAAOsB,EAAmB,GAAIN,YAAY,EAAD,KAhCzB,0DAAH,wDAoIbkB,EAA0B,SACrCC,EACAC,EACApC,GAEAA,GAAS,EAAM,IAIf,wDAAO,WAAOC,GAAP,0FACLD,GAAS,EAAM,IAkBf+B,QAAQC,IAAI,iDACZD,QAAQC,IAAI,CAAEK,UAvBQ,KAwBtBN,QAAQC,IAAI,iDAEZhC,GAAS,EAAM,KAMTuB,EAAW,IAAIC,UACZC,OAAO,sBAAuBU,GACvCZ,EAASE,OAAO,eAAgBW,GAEhCL,QAAQC,IAAI,6DACZD,QAAQC,IAAI,CAAEK,UArCQ,KAsCtBN,QAAQC,IAAI,6DAnCP,UAsCH1B,cAtCG,UAuCeC,IAAMmB,KAAN,UACbjB,IADa,8BAEhBc,GAzCC,QAuCGb,EAvCH,OA2CHqB,QAAQC,IAAI,sBAAuBtB,EAAIE,MACvCX,EAAqC,CACnCC,KAAMC,IAAYmC,uBAClBjC,QAAS,CACPkC,oBAAqBJ,EACrBK,aAAc9B,EAAIE,KAAK4B,gBAG3BxC,GAAS,EAAO,IAnDb,mDAsDH+B,QAAQE,MAAR,MACAjC,GAAS,EAAOgB,YAAY,EAAD,KAvDxB,2DAAP,qDA2DD,C,+bCjiBWyB,EAQAC,E,uEARAD,K,cAAAA,E,4CAAAA,E,wBAAAA,E,sBAAAA,E,uBAAAA,M,cAQAC,K,kBAAAA,E,oBAAAA,E,qBAAAA,M,KAsNL,IAAMC,EAAkC,iDAAG,WAChDC,EACAC,EACAC,GAHgD,wFAYhDA,GAAY,EAAM,MAZ8B,kBAc5BvC,IAAMC,IAAN,UACbuC,IADa,4BACuBH,EADvB,YACsCC,IAfV,OAcxCnC,EAdwC,OAiB9CqB,QAAQC,IAAI,QAAStB,EAAIE,MACrBF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACN8C,IAAK,6BAtBqC,gDA0B9CF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA/B8C,yDAAH,0DAgDlCkB,EAA6B,iDAAG,WAC3CC,EACAP,EACAE,GAH2C,gGAY3CA,GAAY,EAAM,MAZyB,kBAcvBvC,IAAMC,IAAN,UAIbuC,IAJa,6BAKoB,IAAlCH,EAAYQ,WAAWC,OAAe,WAAa,SALrC,YAMZF,EANY,YAMGP,IApBoB,OAuBzC,GATMlC,EAdmC,OAsBzCqB,QAAQC,IAAI,yBAA0BtB,EAAIE,KAAK0C,iBAC3C5C,EAAK,CAEP,GADM6C,EAAW7C,EAAIE,KAAK0C,gBACtB5C,EAAIE,KAAK4C,eAAeH,OAAS,EAAG,CAAC,EAAD,YACnB3C,EAAIE,KAAK4C,gBADU,IACtC,IADsC,iBAC3B1C,EAD2B,aAGuB2C,IAAzDF,EAASG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAY9C,EAAK8C,OAA9B,KAEdL,EAASM,KAAK,CACZC,MAAOhD,EAAKgD,MACZC,WAAYjD,EAAKiD,WACjBC,GAAIlD,EAAKkD,GACTC,UAAWnD,EAAKmD,UAChBC,IAAKpD,EAAKoD,IACVC,cAAerD,EAAKqD,cACpBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,GAClBC,mBAAoB,GACpBC,SAAU,GACVC,eAAgB,GAChBC,kBAAmB,EACnBC,mBAAoB7D,EAAK6D,mBACzBxB,YAAarC,EAAKqC,YAClByB,qBACgC,OAA9B9D,EAAK8D,qBACD,GACA9D,EAAK8D,qBACXhB,QAAS9C,EAAK8C,SAzBkB,EACtC,uBAA6C,GADP,+BA6BvC,CACDd,GAAY,EAAO,CACjBlC,KAAM2C,EACNrD,KAAM,UACN8C,IAAK,4BAER,CA5DwC,gDA8DzCjB,QAAQC,IAAI,aAAZ,MACAc,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBApEyC,yDAAH,0DAwE7B6C,EAA8B,iDAAG,WAC5CjE,EACAkC,GAF4C,wFAW5CA,GAAY,EAAM,MAX0B,kBAaxBvC,IAAMmB,KAAN,UACbqB,IADa,4BAEhBnC,GAfwC,OAapCF,EAboC,OAiB1CqB,QAAQC,IAAI,2BAA4BtB,EAAIE,MACxCF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACN8C,IAAK,6BAtBiC,gDA0B1CF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA/B0C,yDAAH,wDAmC9B8C,EAAuB,iDAAG,WACrClE,EACAkC,GAFqC,wFAUrCA,GAAY,EAAM,MAVmB,kBAYjBvC,IAAMmB,KAAN,UAAcqB,IAAd,qBAAmDnC,GAZlC,OAY7BF,EAZ6B,OAanCqB,QAAQC,IAAI,+BAAgCtB,GACxCA,GACFoC,GAAY,EAAO,CACjB5C,KAAM,UACN8C,IAAK,gCAjB0B,gDAqBnCF,GAAY,EAAO,CACjB5C,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBAzBmC,yDAAH,wDA6BvB+C,EAAuB,iDAAG,WACrCnE,EAKAkC,GANqC,wFAcrCA,GAAY,EAAM,MAdmB,kBAgBjBvC,IAAMyE,MAAN,UACbjC,IADa,4BAEhBnC,GAlBiC,OAgB7BF,EAhB6B,OAoBnCqB,QAAQC,IAAI,aAActB,GACtBA,GACFoC,GAAY,EAAO,CACjB5C,KAAM,UACN8C,IAAK,gCAxB0B,gDA4BnCF,GAAY,EAAO,CACjB5C,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBAhCmC,yDAAH,wDAoCvBiD,EAA0B,iDAAG,WACxCrE,EAOAkC,GARwC,4FAkBxCA,GAAY,EAAM,MAlBsB,kBAoBpBvC,IAAMmB,KAAN,UACbqB,IADa,2BAEhBnC,GAtBoC,OAoBhCF,EApBgC,OAwBtCqB,QAAQC,IAAI,sCAAuCtB,EAAIE,MACnDF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACNgF,KAAK,EACLlC,IAAK,6BA9B6B,gDAkCtCF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACNgF,SAC8BzB,KAA5B,2CAAOF,gBAAP,eAAiBV,SAAoD,OAA5B,2CAAOU,gBAAP,eAAiBV,QAG5DG,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA3CsC,yDAAH,wDA+C1BmD,EAAiC,iDAAG,WAC/CvE,EACAkC,GAF+C,wFAW/CA,GAAY,EAAM,MAX6B,kBAa3BvC,IAAMmB,KAAN,UACbjB,IADa,4BAEhBG,GAf2C,OAavCF,EAbuC,OAiB7CqB,QAAQC,IAAI,mBAAoBtB,EAAIE,MAChCF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACN8C,IAAK,4BAtBoC,gDA0B7CF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA/B6C,yDAAH,wDAoCjCoD,EAAoC,iDAAG,WAClDlE,EACA2B,EACAC,GAHkD,wFAYlDA,GAAY,EAAM,MAZgC,kBAc9BvC,IAAMC,IAAN,UACbuC,IADa,8BACyB7B,EADzB,YAC0C2B,IAfZ,OAc1CnC,EAd0C,OAiBhDqB,QAAQC,IAAI,QAAStB,EAAIE,MACrBF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACN8C,IAAK,6BAtBuC,gDA0BhDF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA/BgD,yDAAH,0DAoCpCqD,EAA+B,iDAAG,WAC7ClC,EACAjC,EACA4B,GAH6C,gGAe7CA,GAAY,EAAM,MAf2B,kBAiBzBvC,IAAMC,IAAN,UAIbuC,IAJa,sCAIiCI,EAJjC,YAIgDjC,IArBvB,OAwB3C,GAPMR,EAjBqC,OAuB3CqB,QAAQC,IAAI,qBAAsBtB,EAAIE,MAClCF,EAAK,CACD6C,EAA2C,GAD1C,cAEY7C,EAAIE,KAAK0C,iBAFrB,IAEP,IAFO,iBAEIxC,EAFJ,aAIsD2C,IAAzDF,EAASG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAY9C,EAAK8C,OAA9B,KAEdL,EAASM,KAAK,CACZC,MAAOhD,EAAKgD,MACZC,WAAYjD,EAAKiD,WACjBE,UAAWnD,EAAKmD,UAChBC,IAAKpD,EAAKoD,IACVC,cAAerD,EAAKqD,cACpBP,QAAS9C,EAAK8C,QACd0B,KAAMxE,EAAKwE,KACXC,QAASzE,EAAKyE,QACdC,WAAY1E,EAAK0E,YAfhB,EAEP,uBAA8C,GAFvC,+BAmBP1C,GAAY,EAAO,CACjBlC,KAAM,CACJ4C,eAAgB,GAChBF,gBAAiBC,GAEnBrD,KAAM,UACN8C,IAAK,4BAER,CAnD0C,gDAqD3CF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA1D2C,yDAAH,0DA+D/ByD,EAAgC,iDAAG,WAC9C7E,EACAkC,GAF8C,wFAW9CA,GAAY,EAAM,MAX4B,kBAa1BvC,IAAMmB,KAAN,UACbqB,IADa,6BAEhBnC,GAf0C,OAatCF,EAbsC,OAiB5CqB,QAAQC,IAAI,2BAA4BtB,EAAIE,MACxCF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACN8C,IAAK,6BAtBmC,gDA0B5CF,GAAY,EAAO,CACjBlC,KAAM,KACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA/B4C,yDAAH,wDAmChC0D,EAAwB,iDAAG,WACtC7C,EACAC,GAFsC,wFAWtCA,GAAY,EAAM,MAXoB,kBAalBvC,IAAMC,IAAN,UACbuC,IADa,wCACmCF,IAdjB,OAa9BnC,EAb8B,OAgBpCqB,QAAQC,IAAI,QAAStB,EAAIE,MACrBF,GACFoC,GAAY,EAAO,CACjBlC,KAAMF,EAAIE,KACVV,KAAM,UACN8C,IAAK,KArB2B,gDAyBpCF,GAAY,EAAO,CACjBlC,KAAM,GACNV,KAAM,QACN8C,IAAKC,YAAkB,EAAD,MAExBlB,QAAQC,IAAI,QAAZ,sBA9BoC,yDAAH,uD,+QCznBxB2D,EAAb,kDACE,WAAYC,GAAwB,IAAD,8BACjC,cAAMA,IAaRC,kBAAoB,SAACC,GAEnB,OADAA,EAAEC,iBAC6B,KAA3B,EAAKC,MAAMjG,YACN,EAAKkG,SAAS,CACnBhE,MAAO,CACLiE,OAAQ,cACRlD,IAAK,4BAIuB,KAA9B,EAAKgD,MAAMG,eACN,EAAKF,SAAS,CACnBhE,MAAO,CACLiE,OAAQ,iBACRlD,IAAK,+BAIa,KAApB,EAAKgD,MAAMI,KACN,EAAKH,SAAS,CACnBhE,MAAO,CACLiE,OAAQ,OACRlD,IAAK,8BAIX,EAAKiD,SAAS,CAAEI,SAAS,EAAMpE,MAAO,KAAMqE,QAAS,UACrDC,YACE,CACEH,KAAM,EAAKJ,MAAMI,KACjBrG,YAAa,EAAKiG,MAAMjG,YACxBoG,eAAgB,EAAKH,MAAMG,iBAE7B,SACEE,EACA3F,GAKA,EAAKuF,SAAS,CAAEI,QAASA,IACL,aAAb,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,UACP,EAAKoD,SAAS,CACZhE,MAAO,KACPqE,QAAS,6BACTD,SAAS,EACTD,KAAM,KAER,EAAKR,MAAMY,aAEO,WAAb,OAAH9F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZhE,MAAO,CACLiE,OAAQ,OACRlD,IAAKtC,EAAIsC,KAEXqD,SAAS,EACTC,QAAS,IAGd,IAEJ,EAzEC,EAAKN,MAAQ,CACXK,SAAS,EACTD,KAAM,GACNrG,YAAa,GACboG,eAAgB,GAChBlE,MAAO,KACPqE,QAAS,GACTG,sBAAsB,EACtBC,oBAAoB,GAXW,CAalC,CAdH,0CA8EE,WAAU,IAAD,eACP,OACE,8BACE,uBAAMC,SAAUC,KAAKf,kBAAmBgB,UAAU,cAAlD,UACE,sBACEA,UAAU,0BACVC,OACoC,IAAlCF,KAAKZ,MAAMU,qBACyB,IAApCE,KAAKZ,MAAMS,qBACP,CAAEM,UAAW,SACb,CAAC,EANT,UASE,sBAAKF,UAAU,4BAAf,UACE,kDACA,sBACEG,QAAS,kBACP,EAAKf,SAAS,CACZS,oBAAqB,EAAKV,MAAMU,oBAF3B,EAKTG,UAAU,gKANZ,UAQE,qBAAKA,UAAU,gBAAf,SAC8B,KAA3BD,KAAKZ,MAAMjG,YACV,sBAAM8G,UAAU,uBAAhB,0BADD,UAGID,KAAKZ,MAAMjG,YAHf,wBAIG6G,KAAKhB,MAAMqB,UAAUvD,MACnB,SAACC,GAAD,OACEA,EAAIzC,cAAckC,aAClB,EAAK4C,MAAMjG,YAAYqD,UAFzB,WALL,aAIG,EAIGjC,iBAIT,8BACE,cAAC,IAAD,UAG+B,IAAlCyF,KAAKZ,MAAMU,oBACV,qBAAKG,UAAU,yBAAyBC,MAAO,CAAEI,OAAQ,GAAzD,SACE,cAACC,EAAA,EAAD,CACEd,SAAS,EACTrC,GAAI,gBACJoD,MAAO,gBACPC,MAAO,kBAAM,EAAKpB,SAAS,CAAES,oBAAoB,GAA1C,EACP9F,KAAMgG,KAAKhB,MAAMqB,UACjBK,MAAO,SAAC/D,GAIN,EAAK0C,SAAS,CACZlG,YAAawD,EAASrC,cACtBwF,oBAAoB,EACpBzE,MAAO,MAEV,MAIuB,iBAA7B,UAAA2E,KAAKZ,MAAM/D,aAAX,eAAkBiE,SACjB,qBAAKW,UAAU,eAAf,SAA+BD,KAAKZ,MAAM/D,MAAMe,SAGpD,sBAAK6D,UAAU,4BAAf,UACE,qDACA,sBACEG,QAAS,kBACP,EAAKf,SAAS,CACZQ,sBAAuB,EAAKT,MAAMS,sBAF7B,EAKTI,UAAU,gKANZ,UAQE,qBAAKA,UAAU,gBAAf,SACiC,KAA9BD,KAAKZ,MAAMG,eACV,sBAAMU,UAAU,uBAAhB,0BADD,UAGID,KAAKZ,MAAMG,eAHf,wBAIGS,KAAKhB,MAAM2B,YAAYC,aAAa9D,MAClC,SAACC,GAAD,OACEA,EAAIK,GAAGZ,aACP,EAAK4C,MAAMG,eAAe/C,UAF5B,WALL,aAIG,EAIGgD,QAIT,8BACE,cAAC,IAAD,UAGiC,IAApCQ,KAAKZ,MAAMS,sBACV,qBAAKI,UAAU,yBAAyBC,MAAO,CAAEI,OAAQ,GAAzD,SACE,cAACC,EAAA,EAAD,CACEd,SAAS,EACTrC,GAAI,KACJoD,MAAO,OACPC,MAAO,kBAAM,EAAKpB,SAAS,CAAEQ,sBAAsB,GAA5C,EACP7F,KAAMgG,KAAKhB,MAAM2B,YAAYC,aAC7BF,MAAO,SAAC/D,GACN,EAAK0C,SAAS,CACZE,eAAgB5C,EAASS,GACzByC,sBAAsB,EACtBxE,MAAO,MAEV,MAIuB,oBAA7B,UAAA2E,KAAKZ,MAAM/D,aAAX,eAAkBiE,SACjB,qBAAKW,UAAU,eAAf,SAA+BD,KAAKZ,MAAM/D,MAAMe,SAGpD,cAACyE,EAAA,EAAD,CACEC,SAAU,SAAC5B,GAAD,OACR,EAAKG,SAAS,CACZG,KAAMN,EAAEI,OAAOyB,MACf1F,MAAO,KACPqE,QAAS,IAJH,EAOVqB,MAAOf,KAAKZ,MAAMI,KAClBnE,MACuB,OAArB2E,KAAKZ,MAAM/D,OAA8C,SAA5B2E,KAAKZ,MAAM/D,MAAMiE,OAC1CU,KAAKZ,MAAM/D,MAAMe,IACjB,GAEN4E,MAAO,cACPC,YAAa,GACbzB,KAAM,GACN0B,wBAAwB,cACxBC,SAAUnB,KAAKZ,MAAMK,aAGH,OAArBO,KAAKZ,MAAM/D,OAA8C,SAA5B2E,KAAKZ,MAAM/D,MAAMiE,QAC7C,sBACEc,QAAS,kBAAM,EAAKf,SAAS,CAAEhE,MAAO,KAAMqE,QAAS,IAA5C,EACTO,UAAU,oHAFZ,UAIE,+BAAOD,KAAKZ,MAAM/D,MAAMe,MACxB,8BACE,cAAC,IAAD,CAAS6D,UAAU,kBAID,KAAvBD,KAAKZ,MAAMM,SACV,sBACEU,QAAS,kBAAM,EAAKf,SAAS,CAAEhE,MAAO,KAAMqE,QAAS,IAA5C,EACTO,UAAU,wHAFZ,UAIE,+BAAOD,KAAKZ,MAAMM,UAClB,8BACE,cAAC,IAAD,CAASO,UAAU,kBAIzB,sBAAKA,UAAU,oDAAf,WAC0B,IAAvBD,KAAKZ,MAAMK,SACV,sBAAKQ,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CACEA,UAAS,+DAGb,qBAAKA,UAAU,wEAAf,wCAKoB,IAAvBD,KAAKZ,MAAMK,SACV,cAAC2B,EAAA,EAAD,CACE9H,KAAK,SACL+H,MAAM,SACNF,SAAUnB,KAAKZ,MAAMK,QAHvB,SAKG,yBAOd,KArQH,GAA+B6B,aCrBlBC,EAAb,4JACE,WACE,OACE,qBAAKtB,UAAU,yBAAf,SACE,wBAAOA,UAAU,2BAAjB,UACE,uBAAOA,UAAU,wDAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAd,sBACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,mBAGlB,gCAC0B,OAAvBD,KAAKhB,MAAMwC,QACV,6BACE,oBACEC,QAAS,EACTxB,UAAU,2CAFZ,uCAOwC,IAAxCD,KAAKhB,MAAM0C,kBAAkBjF,OAC/B,6BACE,oBACEgF,QAAS,EACTxB,UAAU,2CAFZ,8BAQFD,KAAKhB,MAAM0C,kBAAkBC,KAAI,SAACzH,EAAM0H,GAAP,OAC/B,qBAEE3B,UAAS,UACP2B,EAAI,IAAM,EAAI,cAAgB,WADvB,6DAFX,UAOE,oBAAI3B,UAAU,YAAd,SAA2B2B,EAAI,IAC/B,oBAAI3B,UAAU,YAAd,SAA2B/F,EAAKK,gBAChC,oBAAI0F,UAAU,YAAd,SAA2B/F,EAAK2H,cAChC,oBAAI5B,UAAU,YAAd,SAA2B/F,EAAK4H,mBAChC,oBAAI7B,UAAU,YAAd,SACE,qBACEA,UAAS,UACS,WAAhB/F,EAAK+B,OACD,4BACA,0BAHG,uCADX,SAOG/B,EAAK+B,aAlBL2F,EAAI,EAFoB,UA8B5C,KAhEH,GAAiCN,a,QCCpBS,EAAb,4MAIEC,iBAAmB,WACjB,IADuB,EACnBrF,EAAmB,EADA,cAEJ,EAAKqC,MAAM0C,mBAFP,IAEvB,2BAAiD,CAC/C/E,GAD+C,QAC9BsF,kBAClB,CAJsB,+BAKvB,OAAOtF,CACR,EAVH,EAWEuF,gBAAkB,WAChB,IADsB,EAChBC,EAAsB,GADN,cAEH,EAAKnD,MAAM0C,mBAFR,yBAEXxH,EAFW,aAGoC2C,IAApDsF,EAAUrF,MAAK,SAACC,GAAD,OAASA,IAAQ7C,EAAKiI,SAAtB,KACjBA,EAAUlF,KAAK/C,EAAKiI,UAJF,EAEtB,2BAAkD,GAF5B,+BAOtB,OAAOA,EAAU1F,MAClB,EAnBH,EAoBE2F,cAAgB,WACd,IADoB,EACdC,EAAqB,GADP,cAED,EAAKrD,MAAM0C,mBAFV,yBAETxH,EAFS,aAGoC2C,IAAlDwF,EAASvF,MAAK,SAACC,GAAD,OAASA,IAAQ7C,EAAKmI,QAAtB,KAChBA,EAASpF,KAAK/C,EAAKmI,SAJH,EAEpB,2BAAkD,GAF9B,+BAOpB,OAAOA,EAAS5F,MACjB,EA5BH,EA6BE6F,iBAAmB,WACjB,IADuB,EACjBnJ,EAAwB,GADP,cAEJ,EAAK6F,MAAM0C,mBAFP,yBAEZxH,EAFY,aAGuC2C,IAAxD1D,EAAY2D,MAAK,SAACC,GAAD,OAASA,IAAQ7C,EAAKf,WAAtB,KACnBA,EAAY8D,KAAK/C,EAAKf,YAJH,EAEvB,2BAAkD,GAF3B,+BAOvB,OAAOA,EAAYsD,MACpB,EArCH,4CAsCE,WACE,OACE,gCACE,qBAAKwD,UAAU,OAAf,SACE,sBAAKA,UAAU,4FAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,oBAAf,6BACA,qBAAKA,UAAU,aAAf,oDAIF,sBAAKA,UAAU,mDAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,qBAAKA,UAAU,UAAf,6BACA,qBAAKA,UAAU,oBAAf,SACGsC,YAAQvC,KAAKsC,yBAGlB,sBAAKrC,UAAU,+DAAf,UACE,qBAAKA,UAAU,UAAf,2BACA,qBAAKA,UAAU,oBAAf,SACGsC,YAAQvC,KAAKkC,wBAGlB,sBAAKjC,UAAU,+DAAf,UACE,qBAAKA,UAAU,UAAf,yBACA,qBAAKA,UAAU,oBAAf,SACGsC,YAAQvC,KAAKoC,sBAGlB,sBAAKnC,UAAU,+DAAf,UACE,qBAAKA,UAAU,UAAf,4BACA,qBAAKA,UAAU,oBAAf,SACGsC,YAAQvC,KAAKgC,iCAMxB,qBAAK/B,UAAU,yBAAf,SACE,wBAAOA,UAAU,2BAAjB,UACE,uBAAOA,UAAU,wDAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAd,sBACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,YAAd,qCAGJ,gCAC0B,OAAvBD,KAAKhB,MAAMwC,QACV,6BACE,oBACEC,QAAS,EACTxB,UAAU,2CAFZ,uCAOwC,IAAxCD,KAAKhB,MAAM0C,kBAAkBjF,OAC/B,6BACE,oBACEgF,QAAS,EACTxB,UAAU,2CAFZ,8BAQFD,KAAKhB,MAAM0C,kBAAkBC,KAAI,SAACzH,EAAM0H,GAAP,OAC/B,qBAEE3B,UAAS,UACP2B,EAAI,IAAM,EAAI,cAAgB,WADvB,6DAFX,UAOE,oBAAI3B,UAAU,YAAd,SAA2B2B,EAAI,IAC/B,oBAAI3B,UAAU,YAAd,SAA2B/F,EAAKK,gBAChC,oBAAI0F,UAAU,YAAd,SAA2B/F,EAAK2H,cAChC,oBAAI5B,UAAU,YAAd,SAA2B/F,EAAKmI,WAChC,oBAAIpC,UAAU,YAAd,SAA2B/F,EAAK+H,uBAV3BL,EAAI,EAFoB,aAqB9C,KAjIH,GAAyCN,a,iBCS5BkB,EAAb,kDAIE,WAAYxD,GAA4B,IAAD,8BACrC,cAAMA,IAURyD,cAAgB,SAACC,GACf,EAAKrD,SAAS,CAAEI,SAAS,EAAMpE,MAAO,GAAIqH,eAAgBA,IAC1D5D,YACE4D,GACA,SACEjD,EACA3F,GAMA,EAAKuF,SAAS,CAAEI,QAASA,IACP,aAAX,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKR,OACP,EAAK+F,SAAS,CAAEsD,UAAW7I,EAAIE,KAAMqB,MAAO,GAAIoE,SAAS,IAEzC,WAAX,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKR,OACP,EAAK+F,SAAS,CAAEsD,UAAW,GAAItH,MAAOvB,EAAIsC,IAAKqD,SAAS,GAE3D,GAEJ,EAhCsC,EAiCvCmD,kBAAoB,WAClB,GAA6B,OAAzB,EAAKxD,MAAMuD,UACb,MAAO,GAET,IAAIhG,EAAW,EAAKyC,MAAMuD,UAC1B,OAAOE,YACLlG,EACA,EAAKyC,MAAM0D,WAEd,EAvCC,EAAK1D,MAAQ,CACXK,SAAS,EACTpE,MAAO,GACPsH,UAAW,KACXD,eAAgB7G,IAA6BkH,WAC7CD,WAAY,IARuB,CAUtC,CAdH,qDA+CE,WACE9C,KAAKyC,cAAczC,KAAKZ,MAAMsD,eAC/B,GAjDH,oBAkDE,WAAU,IAAD,OACDM,EAGA,CACJ,CACExC,MAAO,cACPyC,IAAKpH,IAA6BkH,YAEpC,CACEvC,MAAO,YACPyC,IAAKpH,IAA6BqH,WAEpC,CACE1C,MAAO,WACPyC,IAAKpH,IAA6BsH,WAEpC,CACE3C,MAAO,uBACPyC,IAAKpH,IAA6BuH,sBAEpC,CACE5C,MAAO,QACPyC,IAAKpH,IAA6BwH,QAGtC,OAA2B,IAAvBrD,KAAKZ,MAAMK,SAA6C,OAAzBO,KAAKZ,MAAMuD,UAE1C,8BACE,sBAAK1C,UAAU,mFAAf,UACE,8BACE,cAAC,IAAD,CACEA,UAAS,+DAGb,qBAAKA,UAAU,yEAAf,0CAQN,8BACE,gCACE,sBAAKA,UAAU,+CAAf,UACE,wBACEa,SAAU,SAAC5B,GAAD,OACR,EAAKuD,cACHvD,EAAEI,OAAOyB,MAFH,EAKVA,MAAOf,KAAKZ,MAAMsD,eAClBzC,UAAU,8FAPZ,SASG+C,EAAiBrB,KAAI,SAAC2B,EAAMC,GAAP,OACpB,wBAAoBxC,MAAOuC,EAAKL,IAAhC,SACGK,EAAK9C,OADK+C,EAAI,EADG,MAMxB,uBACEjK,KAAK,SACL2G,UAAU,iDACVgB,YAAY,iBACZF,MAAOf,KAAKZ,MAAM0D,WAClBhC,SAAU,SAAC5B,GAAD,OACR,EAAKG,SAAS,CAAEyD,WAAY5D,EAAEI,OAAOyB,MAAO1F,MAAO,IAD3C,OAKQ,KAArB2E,KAAKZ,MAAM/D,OACV,qBAAK4E,UAAU,OAAf,SACE,cAACuD,EAAA,EAAD,CACEnC,MAAM,SACNjB,QAAS,kBAAM,EAAKf,SAAS,CAAEhE,MAAO,IAA7B,EAFX,SAIG2E,KAAKZ,MAAM/D,UAIe,IAAhC2E,KAAKZ,MAAMuD,UAAUlG,OACpB,sBAAKwD,UAAU,gDAAf,UACE,qBAAKA,UAAU,qBAAf,iCACA,qBAAKA,UAAU,gBAAf,kEAKF,qBAAKA,UAAU,yBAAf,SACE,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,mBAAd,eACA,oBAAIA,UAAU,mBAAd,4BACA,oBAAIA,UAAU,mBAAd,mBACA,oBAAIA,UAAU,mBAAd,wBACA,oBAAIA,UAAU,mBAAd,yBACA,oBAAIA,UAAU,mBAAd,+BACA,oBAAIA,UAAU,mBAAd,0BACA,oBAAIA,UAAU,0BAGlB,gCACuC,IAApCD,KAAK4C,oBAAoBnG,OACxB,6BACE,oBAAIwD,UAAU,iCAAd,gCAKFD,KAAK4C,oBAAoBjB,KAAI,SAACzH,EAAM0H,GAAP,OAC3B,qBAEE3B,UAAU,iEACVG,QAAS,kBAAM,EAAKpB,MAAMyE,WAAWvJ,EAA5B,EAHX,UAKE,oBAAI+F,UAAU,mBAAd,SAAkC2B,EAAI,IACtC,oBAAI3B,UAAU,mBAAd,SAAkC/F,EAAKsG,QACvC,oBAAIP,UAAU,mBAAd,SAAkC/F,EAAKwJ,QACvC,oBAAIzD,UAAU,mBAAd,SACG0D,YAAKzJ,EAAK0J,cAEb,oBAAI3D,UAAU,mBAAd,SACG0D,YAAKzJ,EAAK2J,YAEb,oBAAI5D,UAAU,mBAAd,SACG/F,EAAK4J,2BAER,oBAAI7D,UAAU,mBAAd,SAAkC/F,EAAK6J,aACvC,oBAAI9D,UAAU,wBAAd,SACE,qBAAKA,UAAU,6HAAf,wBAlBG2B,EAAI,EAFgB,eAkC9C,KAnMH,GAAmCN,aC2B7B0C,E,kDAIJ,WAAYhF,GAAgC,IAAD,8BACzC,cAAMA,IAkBRiF,kBAAoB,WAClB,EAAK5E,SAAS,CAAEI,SAAS,EAAMpE,MAAO,GAAIqE,QAAS,KACnDwE,aACE,SACEzE,EACA3F,GAMA,EAAKuF,SAAS,CAAEI,QAASA,IACL,aAAb,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZI,SAAS,EACT+B,QAAS1H,EAAIE,KACbqB,MAAO,GACPqE,QAAS,KAGO,WAAb,OAAH5F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZI,SAAS,EACT+B,QAAS,GACTnG,MAAOvB,EAAIsC,IACXsD,QAAS,IAGd,GAEJ,EAjD0C,EAkD3CyE,oCAAsC,SAAC5H,GACrC,EAAK8C,SAAS,CAAEI,SAAS,EAAMpE,MAAO,GAAIqE,QAAS,KACnD0E,YACE7H,GACA,SACEkD,EACA3F,GAMA,EAAKuF,SAAS,CAAEI,QAASA,IACL,aAAb,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZI,SAAS,EACT4E,gBAAiBvK,EAAIE,KACrBqB,MAAO,GACPqE,QAAS,KAGO,WAAb,OAAH5F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZI,SAAS,EACT+B,QAAS,GACTnG,MAAOvB,EAAIsC,IACXsD,QAAS,IAGd,GAEJ,EAjF0C,EAkF3C4E,yBAA2B,WACzB,EAAKjF,SAAS,CACZI,SAAS,EACTpE,MAAO,GACPqE,QAAS,GACT6E,oBAAoB,IAEtBC,aACE,SACE/E,EACA3F,GAMA,EAAKuF,SAAS,CAAEI,QAASA,IACL,aAAb,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZhE,MAAO,GACPqE,QAAS,GACTiB,YAAa7G,EAAIE,KACjByF,SAAS,IAGO,WAAb,OAAH3F,QAAG,IAAHA,OAAA,EAAAA,EAAKmC,SACP,EAAKoD,SAAS,CACZI,SAAS,EACTkB,YAAa,CACXC,aAAc,GACd6D,iBAAkB,IAEpBpJ,MAAOvB,EAAIsC,IACXsD,QAAS,IAGd,GAEJ,EAxH0C,EAyH3CgF,iBAAmB,WACjB,EAAKrF,SAAS,CAAEI,SAAS,IACzBpF,aACE,SAAC4B,EAAiBjC,EAA8BoC,GACjC,OAATpC,GACF,EAAKqF,SAAS,CAAEgB,UAAWrG,EAAMyF,SAAS,GAE7C,GAEJ,EAlI0C,EAmI3CiC,gBAAkB,WAChB,GAA2B,OAAvB,EAAKtC,MAAMoC,QACb,MAAO,GAET,IAAI7E,EAAW,EAAKyC,MAAMoC,QAQ1B,MAP0C,KAAtC,EAAKpC,MAAMuF,yBACbhI,EAAWA,EAAS1C,QAClB,SAAC8C,GAAD,OACEA,EAAI5D,YAAYqD,aAChB,EAAK4C,MAAMuF,uBAAuBnI,UAFpC,KAKGqG,YAAOlG,EAAU,EAAKyC,MAAMwF,aACpC,EAhJ0C,EAiJ3CC,2BAA6B,WAC3B,GAAmC,OAA/B,EAAKzF,MAAMiF,gBACb,MAAO,GAET,IAAI1H,EAAW,EAAKyC,MAAMiF,gBAQ1B,MAP0C,KAAtC,EAAKjF,MAAMuF,yBACbhI,EAAWA,EAAS1C,QAClB,SAAC8C,GAAD,OACEA,EAAI5D,YAAYqD,aAChB,EAAK4C,MAAMuF,uBAAuBnI,UAFpC,KAKGqG,YACLlG,EACA,EAAKyC,MAAMwF,aAEd,EA9JC,EAAKxF,MAAQ,CACXK,SAAS,EACT+B,QAAS,KACTb,YAAa,KACbjB,QAAS,GACTrE,MAAO,GACPuJ,aAAc,GACdD,uBAAwB,GACxB7E,oBAAoB,EACpBgF,WAAW,EACXzE,UAAW,GACXkE,oBAAoB,EACpBQ,iBAAkB,KAClBV,gBAAiB,MAhBsB,CAkB1C,C,qDAgJD,WACErE,KAAKsE,2BACLtE,KAAKiE,oBACLjE,KAAK0E,kBACN,G,oBACD,WAAU,IAAD,SACP,OACE,eAAC,WAAD,WACE,sBAAKzE,UAAU,wBAAf,UAEE,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,0BAAf,yCAMA,qBAAKA,UAAU,wBAAf,yDAKJ,qBAAKA,UAAU,iEAAf,SACE,sBACEG,QAAS,kBAAM,EAAKf,SAAS,CAAEkF,oBAAoB,GAA1C,EACTtE,UAAS,mGACyB,OAAhCD,KAAKZ,MAAM2F,iBACP,mBACA,oBAHG,UAFX,UAQE,8BACE,qBACE9E,UAAS,UACyB,OAAhCD,KAAKZ,MAAM2F,iBACP,gCACA,8BAHG,0DADX,SAOE,cAAC,IAAD,CAAqB9E,UAAU,iBAGnC,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,+CAAf,yCAGA,qBACEA,UAAU,qCACVC,MAAO,CAAE8E,MAAO,SAFlB,SAImC,OAAhChF,KAAKZ,MAAM2F,iBACV,sBAAM9E,UAAU,uBAAhB,0BAIAD,KAAKZ,MAAM2F,iBAAiBvE,WAIlC,8BACE,cAAC,IAAD,CAAqBP,UAAU,+DAMjB,IAAvBD,KAAKZ,MAAMK,SACe,OAA3BO,KAAKZ,MAAMuB,aACY,OAAvBX,KAAKZ,MAAMoC,QACT,sBAAKvB,UAAU,0EAAf,UACE,cAACgF,EAAA,EAAD,IACA,qBAAKhF,UAAU,+CAAf,wCAKF,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,6DAAf,UACE,sBAAKA,UAAU,iBAAf,WACqC,IAAlCD,KAAKZ,MAAMU,mBACV,sBACEM,QAAS,kBACP,EAAKf,SAAS,CACZS,oBAAqB,EAAKV,MAAMU,oBAF3B,EAKTG,UAAU,gKANZ,UAQE,qBAAKA,UAAU,gBAAf,SACyC,KAAtCD,KAAKZ,MAAMuF,uBACR,qBADH,UAEM3E,KAAKZ,MAAMuF,uBAFjB,wBAGK3E,KAAKZ,MAAMiB,UAAUvD,MACnB,SAACC,GAAD,OACEA,EAAIzC,cAAckC,aAClB,EAAK4C,MAAMuF,uBAAuBnI,UAFpC,WAJP,aAGK,EAIGjC,iBAGX,8BACE,cAAC,IAAD,SAIJ,sBACE6F,QAAS,kBACP,EAAKf,SAAS,CAAES,oBAAoB,GAD7B,EAGTG,UAAU,kFAJZ,UAME,mDACA,8BACyC,KAAtCD,KAAKZ,MAAMuF,uBACV,sBACEvE,QAAS,kBACP,EAAKf,SAAS,CACZsF,uBAAwB,GACxB7E,oBAAoB,GAHf,EAMTG,UAAU,wIAPZ,UASE,8BACE,cAAC,IAAD,CAASA,UAAU,cAErB,4CAGF,cAAC,IAAD,UAK2B,IAAlCD,KAAKZ,MAAMU,oBACV,qBAAKG,UAAU,gCAAf,SACE,cAACM,EAAA,EAAD,CACEd,SAAS,EACTrC,GAAI,gBACJoD,MAAO,gBACPC,MAAO,kBACL,EAAKpB,SAAS,CAAES,oBAAoB,GAD/B,EAGP9F,KAAMgG,KAAKZ,MAAMiB,UACjBK,MAAO,SAAC/D,GAIN,EAAK0C,SAAS,CACZsF,uBAAwBhI,EAASrC,cACjCwF,oBAAoB,GAEvB,SAOT,uBACExG,KAAK,SACL2G,UAAU,iDACVgB,YAAY,YACZF,MAAOf,KAAKZ,MAAMwF,aAClB9D,SAAU,SAAC5B,GAAD,OACR,EAAKG,SAAS,CAAEuF,aAAc1F,EAAEI,OAAOyB,OAD/B,IAIqB,OAAhCf,KAAKZ,MAAM2F,kBACV,sBAAK9E,UAAU,GAAf,UACE,qBAAKA,UAAU,iCAAf,2BAGA,qBAAKA,UAAU,oBAAf,SACGD,KAAK0B,kBAAkBjF,YAIG,OAAhCuD,KAAKZ,MAAM2F,iBACV,cAAC3D,EAAA,EAAD,CACEhB,QAAS,kBAAM,EAAKf,SAAS,CAAEyF,WAAW,GAAjC,EACT7E,UAAU,GAFZ,SAIE,sBAAMA,UAAU,WAAhB,0BAGF,eAACmB,EAAA,EAAD,CACEhB,QAAS,WACP,EAAKf,SAAS,CAAE0F,iBAAkB,OAClC,EAAKd,mBACN,EACDhE,UAAU,kDACVoB,MAAM,eANR,UAQE,8BACE,cAAC,IAAD,CAAapB,UAAU,eAEzB,sBAAMA,UAAU,WAAhB,qCAG6B,OAAhCD,KAAKZ,MAAM2F,iBACV,cAACG,EAAA,EAAD,CACEC,SAAUnF,KAAK6E,6BAA6BlD,KAC1C,SAACzH,EAAM0H,GAAP,MAAc,CACZwD,GAAG,GAAD,OAAKxD,EAAI,GACX,gBAAiB1H,EAAKf,YACtB,gBAAiBe,EAAKK,cACtB,cAAeL,EAAK2H,YACpB,cAAe3H,EAAKmI,SACpB,YAAanI,EAAKsF,KAClB,qBAAsBtF,EAAK+H,mBAP7B,IAUFoD,SAAQ,UAAKrF,KAAKZ,MAAM2F,iBAAiBvE,MAAjC,yCACRP,UAAU,yJACVqF,QAAQ,aAGV,cAACJ,EAAA,EAAD,CACEC,SAAUnF,KAAK0B,kBAAkBC,KAAI,SAACzH,EAAM0H,GAAP,MAAc,CACjDwD,GAAG,GAAD,OAAKxD,EAAI,GACX,gBAAiB1H,EAAKf,YACtB,gBAAiBe,EAAKK,cACtB,cAAeL,EAAK2H,YACpB,kBAAmB3H,EAAK4H,iBALW,IAOrCuD,SAAQ,+BACRpF,UAAU,yJACVqF,QAAQ,gBAKmB,OAAhCtF,KAAKZ,MAAM2F,iBACV,cAAC,EAAD,CACErD,gBAAiB1B,KAAK0B,gBACtBF,QAASxB,KAAKZ,MAAMoC,QACpBnB,UAAWL,KAAKZ,MAAMiB,YAGO,OAA/BL,KAAKZ,MAAMiF,iBACT,cAAC,EAAD,CACE3C,gBAAiB1B,KAAK6E,2BACtBrD,QAASxB,KAAKZ,MAAMiF,gBACpBhE,UAAWL,KAAKZ,MAAMiB,mBAOR,IAAzBL,KAAKZ,MAAM0F,WACV,cAACS,EAAA,EAAD,CACEC,UAAU,EACV/E,MAAO,kBAAM,EAAKpB,SAAS,CAAEyF,WAAW,GAAjC,EACPW,eAAe,EACfC,cAAc,EACdC,QAAS,CACPnF,OAAO,EACPoF,MAAM,EACNC,YAAQhJ,GAEV2D,MAAM,sBACNsF,eAAgBC,IAAUC,MAX5B,SAa8B,OAA3BhG,KAAKZ,MAAMuB,aACV,cAAC,EAAD,CACEN,UAAWL,KAAKZ,MAAMiB,UACtBM,YAAaX,KAAKZ,MAAMuB,YACxBf,UAAW,kBAAM,EAAKqE,mBAAX,OAKgB,IAAlCjE,KAAKZ,MAAMmF,oBACV,cAACgB,EAAA,EAAD,CACEC,UAAU,EACV/E,MAAO,kBAAM,EAAKpB,SAAS,CAAEkF,oBAAoB,GAA1C,EACPkB,eAAe,EACfC,cAAc,EACdC,QAAS,CACPnF,OAAO,EACPoF,MAAM,EACNC,YAAQhJ,GAEV2D,MAAM,sBACNsF,eAAgBC,IAAUE,SAC1BC,UAAWC,IAAeC,MAZ5B,SAcE,qBAAKnG,UAAU,QAAf,SAC8B,OAA3BD,KAAKZ,MAAMuB,aACV,cAAC,EAAD,CACE8C,WAAY,SAACzJ,GACX,EAAKqF,SAAS,CACZkF,oBAAoB,EACpBQ,iBAAkB/K,IAEpB,EAAKmK,oCAAoCnK,EAAKoD,GAC/C,UAQhB,K,GA1d8BkE,aAmepB+E,EAAoBC,aAPT,SAAC,GAIvB,MAAO,CAAEC,KADqC,EAF9CA,KAGqBC,MADyB,EAD9CA,MAGD,GAIC,CAAC,EAF8BF,CAG/BtC,E","file":"static/js/32.b6d30976.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  // TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n// import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: [],\n      });\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde/${district_id}`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      // console.log(\" ----- ------  ------\");\n\n      // console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      // console.log(\"=================FC_GetTransferReasons===================\");\n      // console.log({ FC_GetTransferReasons: res });\n      // console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  // callBack(true, null, \"\");\n  // try {\n  // setAxiosToken();\n  // const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n  // console.log(\"=================FC_GetDistricts===================\");\n  // console.log({ FC_GetDistricts: res });\n  // console.log(\"=================FC_GetDistricts===================\");\n\n  // * save data\n  callBack(\n    false,\n    [\n      {\n        district_code: \"11\",\n        district_name: \"Nyarugenge\",\n      },\n      {\n        district_code: \"12\",\n        district_name: \"Gasabo\",\n      },\n      {\n        district_code: \"13\",\n        district_name: \"Kicukiro\",\n      },\n      {\n        district_code: \"21\",\n        district_name: \"Nyanza\",\n      },\n      {\n        district_code: \"22\",\n        district_name: \"Gisagara\",\n      },\n      {\n        district_code: \"23\",\n        district_name: \"Nyaruguru\",\n      },\n      {\n        district_code: \"24\",\n        district_name: \"Huye\",\n      },\n      {\n        district_code: \"25\",\n        district_name: \"Nyamagabe\",\n      },\n      {\n        district_code: \"26\",\n        district_name: \"Ruhango\",\n      },\n      {\n        district_code: \"27\",\n        district_name: \"Muhanga\",\n      },\n      {\n        district_code: \"28\",\n        district_name: \"Kamonyi\",\n      },\n      {\n        district_code: \"31\",\n        district_name: \"Karongi\",\n      },\n      {\n        district_code: \"32\",\n        district_name: \"Rutsiro\",\n      },\n      {\n        district_code: \"33\",\n        district_name: \"Rubavu\",\n      },\n      {\n        district_code: \"34\",\n        district_name: \"Nyabihu\",\n      },\n      {\n        district_code: \"35\",\n        district_name: \"Ngororero\",\n      },\n      {\n        district_code: \"36\",\n        district_name: \"Rusizi\",\n      },\n      {\n        district_code: \"37\",\n        district_name: \"Nyamasheke\",\n      },\n      {\n        district_code: \"41\",\n        district_name: \"Rulindo\",\n      },\n      {\n        district_code: \"42\",\n        district_name: \"Gakenke\",\n      },\n      {\n        district_code: \"43\",\n        district_name: \"Musanze\",\n      },\n      {\n        district_code: \"44\",\n        district_name: \"Burera\",\n      },\n      {\n        district_code: \"45\",\n        district_name: \"Gicumbi\",\n      },\n      {\n        district_code: \"51\",\n        district_name: \"Rwamagana\",\n      },\n      {\n        district_code: \"52\",\n        district_name: \"Nyagatare\",\n      },\n      {\n        district_code: \"53\",\n        district_name: \"Gatsibo\",\n      },\n      {\n        district_code: \"54\",\n        district_name: \"Kayonza\",\n      },\n      {\n        district_code: \"55\",\n        district_name: \"Kirehe\",\n      },\n      {\n        district_code: \"56\",\n        district_name: \"Ngoma\",\n      },\n      {\n        district_code: \"57\",\n        district_name: \"Bugesera\",\n      },\n    ],\n    \"\"\n  );\n  // } catch (error) {\n  //   console.log(error);\n  //   callBack(false, null, errorToText(error));\n  //   callBack(\n  //     false,\n  //     errorToText(error, () => {})\n  //   );\n  // }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import axios from \"axios\";\nimport { APP_URL, TRAINING_APP_URL } from \"../config/app.config\";\nimport { SearchParentResponseInterface } from \"../trainingModule/TrainingOffers/School/Details/FormToAddParticipant\";\nimport { returnErrorToText } from \"../utils/functions\";\nimport { SystemRole } from \"./basic.action\";\n\nexport enum TrainingImplementationStatus {\n  DRAFT = \"DRAFT\",\n  READY_FOR_EVALUATION = \"READY_FOR_EVALUATION\",\n  INPROGRESS = \"INPROGRESS\",\n  COMPLETED = \"COMPLETED\",\n  CANCELLED = \"CANCELLED\",\n}\n\nexport enum TrainingEvaluationStatus {\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n  REJECTED = \"REJECTED\",\n}\n\nexport interface GetTrainingsListByStatusInterface {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervention_area_id: number;\n  intervention_area: string;\n  sub_area_id: number;\n  sub_area_name: string;\n  topic_id: number;\n  topic: string;\n  total: number | null;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n  partner_type_name: string;\n  trainee_category: { id: string; name: string; roles: SystemRole[] | null }[];\n  trainee_criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n  centers: { id: string; name: string }[];\n  trainee_request_id: string; //new to be added\n  training_to_group_id: string; //new to be added\n  is_approved: 1 | 0 | \"\" | undefined;\n}\n\nexport interface TrainingByImplementationStatusDetails {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  agenda_file_name: string;\n  intervention_area_id: string;\n  intervention_area: string;\n  sub_area_id: string;\n  subarea: string;\n  topic_id: string;\n  topic: string;\n  material_links: {\n    title: string;\n  }[];\n  total: number;\n  budget: number;\n  development_partner_id: string;\n  development_partner_name: string;\n  dp_contact: string;\n  dp_email: string;\n  evaluation_status: TrainingEvaluationStatus;\n  evaluated_date: string;\n  evaluation_comment: string;\n  implementation_status: TrainingImplementationStatus;\n}\n\nexport interface TrainingParticipants {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  id: number;\n  user_id: string;\n  training_id: string;\n  training_to_group_id: string;\n  trainee_request_id: number;\n  position_code: string;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  teaching_level_id: number;\n  teaching_level: string;\n  subjects: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[];\n  role?: string;\n  role_id?: string;\n}\nexport interface DistrictTrainingParticipants {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n}\nexport interface TeachersToBeTrainedResponse {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  province_code: string | null;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  teaching_level_id: number;\n  teaching_level: string;\n  subjects: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[];\n  position_code: string;\n  district_code: string | null;\n  sector_code: string | null;\n  user_id: string;\n  role: string;\n  role_id: string;\n}\n\nexport interface DistrictToBeTrainedResponse {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n}\n\nexport interface GetTraineesToBeTrainedOnSchoolInterface {\n  training_id: string;\n  topic: number;\n  sub_area_id: number;\n  school_code: string;\n  criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}\n\nexport interface GetTraineesToBeTrainedOnDistrictInterface {\n  training_id: string;\n  topic: number;\n  sub_area_id: number;\n  district_code: string;\n  criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}\n\nexport interface AssignTraineeToTrainingDataInterface {\n  training_id: string;\n  user_id: string;\n  training_to_group_id: number;\n  trainee_request_id: number;\n  district_code: number | null;\n  school_code: number | null;\n  position_code: string;\n  qualification_id: string;\n  level_id: string;\n  sector_id: string | null;\n  trainee_category_id: string;\n}\n\nexport interface NewTraineeInTheSystemInterface {\n  nid: string;\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  school_code: string;\n  training_id: string;\n  trainee_request_id: string;\n}\n\nexport const GetSchoolTrainingProvidersByStatus = async (\n  school_code: string,\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: GetTrainingsListByStatusInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<GetTrainingsListByStatusInterface[]>(\n      `${TRAINING_APP_URL}/training/school/${school_code}/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport interface AddedTraineesWhoAreNotInUserToRole {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  id: number;\n  user_id: string;\n  training_id: string;\n  training_to_group_id: string | null;\n  trainee_request_id: number;\n}\n\nexport const GetSchoolTrainingParticipants = async (\n  training_id: string,\n  school_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TrainingParticipants[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<{\n      school_teachers: TrainingParticipants[];\n      school_parents: AddedTraineesWhoAreNotInUserToRole[];\n    }>(\n      `${TRAINING_APP_URL}/training/trainee/${\n        school_code.toString().length === 2 ? \"district\" : \"school\"\n      }/${training_id}/${school_code}`\n    );\n    console.log(\"Res participants one: \", res.data.school_teachers);\n    if (res) {\n      const response = res.data.school_teachers;\n      if (res.data.school_parents.length > 0) {\n        for (const item of res.data.school_parents) {\n          if (\n            response.find((itm) => itm.user_id === item.user_id) === undefined\n          ) {\n            response.push({\n              email: item.email,\n              first_name: item.first_name,\n              id: item.id,\n              last_name: item.last_name,\n              nid: item.nid,\n              phone_numbers: item.phone_numbers,\n              position_code: \"\",\n              position_name: \"\",\n              qualification_id: \"\",\n              qualification_name: \"\",\n              subjects: [],\n              teaching_level: \"\",\n              teaching_level_id: 1,\n              trainee_request_id: item.trainee_request_id,\n              training_id: item.training_id,\n              training_to_group_id:\n                item.training_to_group_id === null\n                  ? \"\"\n                  : item.training_to_group_id,\n              user_id: item.user_id,\n            });\n          }\n        }\n      }\n      setResponse(false, {\n        data: response,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    console.log(\"error no: \", error);\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetTraineesToBeTrainedOnSchool = async (\n  data: GetTraineesToBeTrainedOnSchoolInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TeachersToBeTrainedResponse[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<TeachersToBeTrainedResponse[]>(\n      `${TRAINING_APP_URL}/training/search/teacher`,\n      data\n    );\n    console.log(\"Teachers to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const AssignTraineeToTraining = async (\n  data: AssignTraineeToTrainingDataInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post(`${TRAINING_APP_URL}/training/trainee`, data);\n    console.log(\"Assign trainee to training: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg: \"Trainee added successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const RemoveTraineeToTraining = async (\n  data: {\n    training_id: string;\n    user_id: string;\n    status: \"DISABLED\";\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.patch(\n      `${TRAINING_APP_URL}/training/trainee/toggle`,\n      data\n    );\n    console.log(\"Removing: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg: \"Trainee added successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetParentsToAttendTraining = async (\n  data: {\n    topic_id: string;\n    sub_area_id: number;\n    nid: string;\n    start_date: string;\n    end_date: string;\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      new: boolean;\n      data: SearchParentResponseInterface | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<SearchParentResponseInterface>(\n      `${TRAINING_APP_URL}/training/search/parent`,\n      data\n    );\n    console.log(\"Parents/Other users to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        new: false,\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      new:\n        error?.response?.status !== undefined && error?.response?.status === 400\n          ? true\n          : false,\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const AddNewTraineeInfoAssignToTraining = async (\n  data: NewTraineeInTheSystemInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: SearchParentResponseInterface | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<SearchParentResponseInterface>(\n      `${APP_URL}/user/training/pregister`,\n      data\n    );\n    console.log(\"New user added: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data added successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// District training offers\nexport const GetDistrictTrainingProvidersByStatus = async (\n  district_code: string,\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: GetTrainingsListByStatusInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<GetTrainingsListByStatusInterface[]>(\n      `${TRAINING_APP_URL}/training/district/${district_code}/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get District training added participants\nexport const GetDistrictTrainingParticipants = async (\n  training_id: string,\n  district_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: {\n        school_parents: [];\n        school_teachers: DistrictTrainingParticipants[];\n      } | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<{\n      school_parents: [];\n      school_teachers: DistrictTrainingParticipants[];\n    }>(\n      `${TRAINING_APP_URL}/training/trainee/district/${training_id}/${district_code}`\n    );\n    console.log(\"Res participants: \", res.data);\n    if (res) {\n      const response: DistrictTrainingParticipants[] = [];\n      for (const item of res.data.school_teachers) {\n        if (\n          response.find((itm) => itm.user_id === item.user_id) === undefined\n        ) {\n          response.push({\n            email: item.email,\n            first_name: item.first_name,\n            last_name: item.last_name,\n            nid: item.nid,\n            phone_numbers: item.phone_numbers,\n            user_id: item.user_id,\n            role: item.role,\n            role_id: item.role_id,\n            staff_code: item.staff_code,\n          });\n        }\n      }\n      setResponse(false, {\n        data: {\n          school_parents: [],\n          school_teachers: response,\n        },\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get to be trained on district level\nexport const GetTraineesToBeTrainedOnDistrict = async (\n  data: GetTraineesToBeTrainedOnDistrictInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: DistrictToBeTrainedResponse[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<DistrictToBeTrainedResponse[]>(\n      `${TRAINING_APP_URL}/training/search/district`,\n      data\n    );\n    console.log(\"Teachers to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetTrainingsListByStatus = async (\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TrainingByImplementationStatusDetails[];\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<TrainingByImplementationStatusDetails[]>(\n      `${TRAINING_APP_URL}/training/application/status/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: [],\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdClose } from \"react-icons/md\";\nimport {\n  CenterTypeDetailsInterface,\n  CreateNewCenter,\n} from \"../../actions/training_settings_create_edit\";\nimport Button from \"../../components/Buttons/Button\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport SelectCustom from \"../../components/SelectCustom/SelectCustom\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface AddCenterProps {\n  districts: DistrictTypes[];\n  centerTypes: CenterTypeDetailsInterface;\n  onCreated: () => void;\n}\ninterface AddCenterState {\n  name: string;\n  district_id: string;\n  center_type_id: string;\n  loading: boolean;\n  success: string;\n  error: {\n    target: \"main\" | \"name\" | \"district_id\" | \"center_type_id\";\n    msg: string;\n  } | null;\n  openSelectDistrict: boolean;\n  openSelectCenterType: boolean;\n}\n\nexport class AddCenter extends Component<AddCenterProps, AddCenterState> {\n  constructor(props: AddCenterProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      name: \"\",\n      district_id: \"\",\n      center_type_id: \"\",\n      error: null,\n      success: \"\",\n      openSelectCenterType: false,\n      openSelectDistrict: false,\n    };\n  }\n  CreateNewTraining = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.district_id === \"\") {\n      return this.setState({\n        error: {\n          target: \"district_id\",\n          msg: \"Please choose district\",\n        },\n      });\n    }\n    if (this.state.center_type_id === \"\") {\n      return this.setState({\n        error: {\n          target: \"center_type_id\",\n          msg: \"Please choose center type\",\n        },\n      });\n    }\n    if (this.state.name === \"\") {\n      return this.setState({\n        error: {\n          target: \"name\",\n          msg: \"Please fill center name\",\n        },\n      });\n    }\n    this.setState({ loading: true, error: null, success: \"\" });\n    CreateNewCenter(\n      {\n        name: this.state.name,\n        district_id: this.state.district_id,\n        center_type_id: this.state.center_type_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            error: null,\n            success: \"Center added successfully!\",\n            loading: false,\n            name: \"\",\n          });\n          this.props.onCreated();\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            error: {\n              target: \"main\",\n              msg: res.msg,\n            },\n            loading: false,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.CreateNewTraining} className=\"w-full my-3\">\n          <div\n            className=\"grid grid-cols-12 gap-2\"\n            style={\n              this.state.openSelectDistrict === true ||\n              this.state.openSelectCenterType === true\n                ? { minHeight: \"300px\" }\n                : {}\n            }\n          >\n            <div className=\"col-span-12 md:col-span-6\">\n              <div>Choose district</div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    openSelectDistrict: !this.state.openSelectDistrict,\n                  })\n                }\n                className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n              >\n                <div className=\"w-52 truncate\">\n                  {this.state.district_id === \"\" ? (\n                    <span className=\"italic text-gray-400\">Not selected</span>\n                  ) : (\n                    `${this.state.district_id} - ${\n                      this.props.districts.find(\n                        (itm) =>\n                          itm.district_code.toString() ===\n                          this.state.district_id.toString()\n                      )?.district_name\n                    }`\n                  )}\n                </div>\n                <div>\n                  <IoIosArrowDown />\n                </div>\n              </div>\n              {this.state.openSelectDistrict === true && (\n                <div className=\"absolute mt-2 bg-white\" style={{ zIndex: 9 }}>\n                  <SelectCustom\n                    loading={false}\n                    id={\"district_code\"}\n                    title={\"district_name\"}\n                    close={() => this.setState({ openSelectDistrict: false })}\n                    data={this.props.districts}\n                    click={(response: {\n                      district_code: string;\n                      district_name: string;\n                    }) => {\n                      this.setState({\n                        district_id: response.district_code,\n                        openSelectDistrict: false,\n                        error: null,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {this.state.error?.target === \"district_id\" && (\n                <div className=\"text-red-700\">{this.state.error.msg}</div>\n              )}\n            </div>\n            <div className=\"col-span-12 md:col-span-6\">\n              <div>Choose center type</div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    openSelectCenterType: !this.state.openSelectCenterType,\n                  })\n                }\n                className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n              >\n                <div className=\"w-52 truncate\">\n                  {this.state.center_type_id === \"\" ? (\n                    <span className=\"italic text-gray-400\">Not selected</span>\n                  ) : (\n                    `${this.state.center_type_id} - ${\n                      this.props.centerTypes.center_types.find(\n                        (itm) =>\n                          itm.id.toString() ===\n                          this.state.center_type_id.toString()\n                      )?.name\n                    }`\n                  )}\n                </div>\n                <div>\n                  <IoIosArrowDown />\n                </div>\n              </div>\n              {this.state.openSelectCenterType === true && (\n                <div className=\"absolute mt-2 bg-white\" style={{ zIndex: 9 }}>\n                  <SelectCustom\n                    loading={false}\n                    id={\"id\"}\n                    title={\"name\"}\n                    close={() => this.setState({ openSelectCenterType: false })}\n                    data={this.props.centerTypes.center_types}\n                    click={(response: { id: string; name: string }) => {\n                      this.setState({\n                        center_type_id: response.id,\n                        openSelectCenterType: false,\n                        error: null,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {this.state.error?.target === \"center_type_id\" && (\n                <div className=\"text-red-700\">{this.state.error.msg}</div>\n              )}\n            </div>\n            <TextInput\n              onChange={(e) =>\n                this.setState({\n                  name: e.target.value,\n                  error: null,\n                  success: \"\",\n                })\n              }\n              value={this.state.name}\n              error={\n                this.state.error !== null && this.state.error.target === \"name\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n              label={\"Center name\"}\n              placeholder={\"\"}\n              name={\"\"}\n              MainContainer_className=\"col-span-12\"\n              disabled={this.state.loading}\n            />\n          </div>\n          {this.state.error !== null && this.state.error.target === \"main\" && (\n            <div\n              onClick={() => this.setState({ error: null, success: \"\" })}\n              className=\"cursor-pointer px-3 py-2 font-bold bg-red-100 text-red-700 flex flex-row items-center justify-between w-full my-2\"\n            >\n              <span>{this.state.error.msg}</span>\n              <div>\n                <MdClose className=\"text-2xl\" />\n              </div>\n            </div>\n          )}\n          {this.state.success !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: null, success: \"\" })}\n              className=\"cursor-pointer px-3 py-2 font-bold bg-green-100 text-green-700 flex flex-row items-center justify-between w-full my-2\"\n            >\n              <span>{this.state.success}</span>\n              <div>\n                <MdClose className=\"text-2xl\" />\n              </div>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center justify-end gap-2 mt-3\">\n            {this.state.loading === true && (\n              <div className=\"flex flex-row items-center gap-2\">\n                <div>\n                  <AiOutlineLoading3Quarters\n                    className={`loading-animate text-5xl text-accent-900 dark:text-white`}\n                  />\n                </div>\n                <div className=\"text-lg font-bold animate__animated animate__fadeIn animate__infinite\">\n                  Saving, please wait...\n                </div>\n              </div>\n            )}\n            {this.state.loading === false && (\n              <Button\n                type=\"submit\"\n                theme=\"accent\"\n                disabled={this.state.loading}\n              >\n                {\"Create center\"}\n              </Button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { CenterItemInterface } from \"../../actions/training_settings_create_edit\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface CentersListProps {\n  centers: CenterItemInterface[];\n  GetFilteredData: () => CenterItemInterface[];\n  districts: DistrictTypes[];\n}\ninterface CentersListState {}\n\nexport class CentersList extends Component<CentersListProps, CentersListState> {\n  render() {\n    return (\n      <div className=\"w-full overflow-x-auto\">\n        <table className=\"w-full text-sm text-left\">\n          <thead className=\"bg-primary-100 text-primary-800 border-4 border-white\">\n            <tr>\n              <th className=\"px-3 py-2\">#</th>\n              <th className=\"px-3 py-2\">District</th>\n              <th className=\"px-3 py-2\">Center name</th>\n              <th className=\"px-3 py-2\">Center type</th>\n              <th className=\"px-3 py-2\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.centers === null ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-xl px-4 py-3 font-light text-center\"\n                >\n                  Loading, please wait...\n                </td>\n              </tr>\n            ) : this.props.GetFilteredData().length === 0 ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-xl px-4 py-3 font-light text-center\"\n                >\n                  No data found!\n                </td>\n              </tr>\n            ) : (\n              this.props.GetFilteredData().map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                  } hover:bg-accent-400 hover:text-accent-900 cursor-pointer`}\n                  //   onClick={() => this.setState({ preview: item })}\n                >\n                  <td className=\"px-3 py-2\">{i + 1}</td>\n                  <td className=\"px-3 py-2\">{item.district_name}</td>\n                  <td className=\"px-3 py-2\">{item.center_name}</td>\n                  <td className=\"px-3 py-2\">{item.center_type_name}</td>\n                  <td className=\"px-2 py-2\">\n                    <div\n                      className={`${\n                        item.status === \"ACTIVE\"\n                          ? \"bg-gray-100 text-gray-700\"\n                          : \"bg-red-100 text-red-700\"\n                      } px-1 py-0 w-max rounded-md text-xs`}\n                    >\n                      {item.status}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TrainingCenterItemInterface } from \"../../actions/training_settings_create_edit\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy } from \"../../utils/functions\";\n\ninterface TrainingCentersListProps {\n  centers: TrainingCenterItemInterface[];\n  GetFilteredData: () => TrainingCenterItemInterface[];\n  districts: DistrictTypes[];\n}\ninterface TrainingCentersListState {}\n\nexport class TrainingCentersList extends Component<\n  TrainingCentersListProps,\n  TrainingCentersListState\n> {\n  GetTotalTrainees = () => {\n    var response: number = 0;\n    for (const item of this.props.GetFilteredData()) {\n      response += item.number_of_trainees;\n    }\n    return response;\n  };\n  GetTotalCenters = () => {\n    const center_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (center_id.find((itm) => itm === item.center_id) === undefined) {\n        center_id.push(item.center_id);\n      }\n    }\n    return center_id.length;\n  };\n  GetTotalRooms = () => {\n    const group_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (group_id.find((itm) => itm === item.group_id) === undefined) {\n        group_id.push(item.group_id);\n      }\n    }\n    return group_id.length;\n  };\n  GetTotalDistrict = () => {\n    const district_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (district_id.find((itm) => itm === item.district_id) === undefined) {\n        district_id.push(item.district_id);\n      }\n    }\n    return district_id.length;\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"px-2\">\n          <div className=\"bg-primary-700 text-white p-2 rounded-md flex flex-row items-center justify-between gap-2\">\n            <div className=\"pl-2\">\n              <div className=\"text-xl font-bold\">General summary</div>\n              <div className=\"font-light\">\n                Get the summary from the list below\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-between gap-2\">\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total districts</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalDistrict())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total centers</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalCenters())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total rooms</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalRooms())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total trainees</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalTrainees())}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full text-sm text-left\">\n            <thead className=\"bg-primary-100 text-primary-800 border-4 border-white\">\n              <tr>\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">District</th>\n                <th className=\"px-3 py-2\">Center name</th>\n                <th className=\"px-3 py-2\">Room</th>\n                <th className=\"px-3 py-2\">Number of trainees</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.centers === null ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-xl px-4 py-3 font-light text-center\"\n                  >\n                    Loading, please wait...\n                  </td>\n                </tr>\n              ) : this.props.GetFilteredData().length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-xl px-4 py-3 font-light text-center\"\n                  >\n                    No data found!\n                  </td>\n                </tr>\n              ) : (\n                this.props.GetFilteredData().map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } hover:bg-accent-400 hover:text-accent-900 cursor-pointer`}\n                    //   onClick={() => this.setState({ preview: item })}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.district_name}</td>\n                    <td className=\"px-3 py-2\">{item.center_name}</td>\n                    <td className=\"px-3 py-2\">{item.group_id}</td>\n                    <td className=\"px-3 py-2\">{item.number_of_trainees}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport {\n  GetTrainingsListByStatus,\n  TrainingByImplementationStatusDetails,\n  TrainingImplementationStatus,\n} from \"../../actions/training-offers\";\nimport Alert from \"../../components/Alert/Alert\";\nimport { DATE, search } from \"../../utils/functions\";\n\ninterface TrainingsListProps {\n  onSelected: (data: TrainingByImplementationStatusDetails) => void;\n}\ninterface TrainingsListState {\n  loading: boolean;\n  error: string;\n  trainings: TrainingByImplementationStatusDetails[] | null;\n  selectedStatus: TrainingImplementationStatus;\n  searchData: string;\n}\n\nexport class TrainingsList extends Component<\n  TrainingsListProps,\n  TrainingsListState\n> {\n  constructor(props: TrainingsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      trainings: null,\n      selectedStatus: TrainingImplementationStatus.INPROGRESS,\n      searchData: \"\",\n    };\n  }\n  LoadTrainings = (selectedStatus: TrainingImplementationStatus) => {\n    this.setState({ loading: true, error: \"\", selectedStatus: selectedStatus });\n    GetTrainingsListByStatus(\n      selectedStatus,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: TrainingByImplementationStatusDetails[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.type === \"success\") {\n          this.setState({ trainings: res.data, error: \"\", loading: false });\n        }\n        if (res?.type === \"error\") {\n          this.setState({ trainings: [], error: res.msg, loading: false });\n        }\n      }\n    );\n  };\n  FilteredTrainings = () => {\n    if (this.state.trainings === null) {\n      return [];\n    }\n    var response = this.state.trainings;\n    return search(\n      response,\n      this.state.searchData\n    ) as TrainingByImplementationStatusDetails[];\n  };\n  componentDidMount(): void {\n    this.LoadTrainings(this.state.selectedStatus);\n  }\n  render() {\n    const trainingStatuses: {\n      title: string;\n      key: TrainingImplementationStatus;\n    }[] = [\n      {\n        title: \"In progress\",\n        key: TrainingImplementationStatus.INPROGRESS,\n      },\n      {\n        title: \"Completed\",\n        key: TrainingImplementationStatus.COMPLETED,\n      },\n      {\n        title: \"Canceled\",\n        key: TrainingImplementationStatus.CANCELLED,\n      },\n      {\n        title: \"Ready for evaluation\",\n        key: TrainingImplementationStatus.READY_FOR_EVALUATION,\n      },\n      {\n        title: \"Draft\",\n        key: TrainingImplementationStatus.DRAFT,\n      },\n    ];\n    if (this.state.loading === true || this.state.trainings === null) {\n      return (\n        <div>\n          <div className=\"bg-gray-100 rounded-md w-full flex flex-col items-center justify-center p-3 py-6\">\n            <div>\n              <AiOutlineLoading3Quarters\n                className={`loading-animate text-6xl text-accent-900 dark:text-white`}\n              />\n            </div>\n            <div className=\"text-xl font-light animate__animated animate__fadeIn animate__infinite\">\n              Loading, please wait...\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"flex flex-row items-center gap-3 w-full mb-6\">\n            <select\n              onChange={(e) =>\n                this.LoadTrainings(\n                  e.target.value as TrainingImplementationStatus\n                )\n              }\n              value={this.state.selectedStatus}\n              className=\"px-3 py-2 rounded border border-primary-500 bg-primary-100 font-bold text-primary-700 w-1/3\"\n            >\n              {trainingStatuses.map((stat, s) => (\n                <option key={s + 1} value={stat.key}>\n                  {stat.title}\n                </option>\n              ))}\n            </select>\n            <input\n              type=\"search\"\n              className=\"px-3 py-2 rounded border border-gray-400 w-2/3\"\n              placeholder=\"Search by name\"\n              value={this.state.searchData}\n              onChange={(e) =>\n                this.setState({ searchData: e.target.value, error: \"\" })\n              }\n            />\n          </div>\n          {this.state.error !== \"\" && (\n            <div className=\"my-3\">\n              <Alert\n                theme=\"danger\"\n                onClick={() => this.setState({ error: \"\" })}\n              >\n                {this.state.error}\n              </Alert>\n            </div>\n          )}\n          {this.state.trainings.length === 0 ? (\n            <div className=\"text-center p-4 rounded-md bg-gray-100 w-full\">\n              <div className=\"text-2xl font-bold\">No trainings found!</div>\n              <div className=\"text-gray-500\">\n                For selected status, there are no trainings found\n              </div>\n            </div>\n          ) : (\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"min-w-full text-left text-sm\">\n                <thead>\n                  <tr>\n                    <th className=\"px-3 py-2 border\">#</th>\n                    <th className=\"px-3 py-2 border\">Training title</th>\n                    <th className=\"px-3 py-2 border\">Topic</th>\n                    <th className=\"px-3 py-2 border\">Start date</th>\n                    <th className=\"px-3 py-2 border\">Ending date</th>\n                    <th className=\"px-3 py-2 border\">Training provider</th>\n                    <th className=\"px-3 py-2 border\">Phone number</th>\n                    <th className=\"px-3 py-2 border\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.FilteredTrainings().length === 0 ? (\n                    <tr>\n                      <td className=\"text-xl text-center font-light\">\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.FilteredTrainings().map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className=\"cursor-pointer hover:bg-accent-400 hover:text-accent-900 group\"\n                        onClick={() => this.props.onSelected(item)}\n                      >\n                        <td className=\"px-3 py-2 border\">{i + 1}</td>\n                        <td className=\"px-3 py-2 border\">{item.title}</td>\n                        <td className=\"px-3 py-2 border\">{item.topic}</td>\n                        <td className=\"px-3 py-2 border\">\n                          {DATE(item.start_date)}\n                        </td>\n                        <td className=\"px-3 py-2 border\">\n                          {DATE(item.end_date)}\n                        </td>\n                        <td className=\"px-3 py-2 border\">\n                          {item.development_partner_name}\n                        </td>\n                        <td className=\"px-3 py-2 border\">{item.dp_contact}</td>\n                        <td className=\"px-1 py-1 border w-10\">\n                          <div className=\"bg-gray-100 group-hover:bg-accent-900 group-hover:text-white font-bold px-3 py-2 rounded w-max text-current cursor-pointer\">\n                            Select\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BiReset } from \"react-icons/bi\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdClose, MdKeyboardArrowDown } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../actions\";\nimport { TrainingByImplementationStatusDetails } from \"../../actions/training-offers\";\nimport {\n  CenterItemInterface,\n  CenterTypeDetailsInterface,\n  GetAllCenters,\n  GetAllCentersByTrainingID,\n  GetCenterTypes,\n  TrainingCenterItemInterface,\n} from \"../../actions/training_settings_create_edit\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalMarginTop, ModalSize } from \"../../components/Modal/Modal\";\nimport SelectCustom from \"../../components/SelectCustom/SelectCustom\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { search } from \"../../utils/functions\";\nimport { AddCenter } from \"./AddCenter\";\nimport { CentersList } from \"./CentersList\";\nimport { TrainingCentersList } from \"./TrainingCentersList\";\nimport { TrainingsList } from \"./TrainingsList\";\n\ninterface CentersManagementProps {}\ninterface CentersManagementState {\n  loading: boolean;\n  centers: CenterItemInterface[] | null;\n  centerTypes: CenterTypeDetailsInterface | null;\n  success: string;\n  error: string;\n  search_value: string;\n  selected_district_code: string;\n  openSelectDistrict: boolean;\n  addCenter: boolean;\n  districts: DistrictTypes[];\n  openSelectTraining: boolean;\n  selectedTraining: TrainingByImplementationStatusDetails | null;\n  trainingCenters: TrainingCenterItemInterface[] | null;\n}\n\nclass _CentersManagement extends Component<\n  CentersManagementProps,\n  CentersManagementState\n> {\n  constructor(props: CentersManagementProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      centers: null,\n      centerTypes: null,\n      success: \"\",\n      error: \"\",\n      search_value: \"\",\n      selected_district_code: \"\",\n      openSelectDistrict: false,\n      addCenter: false,\n      districts: [],\n      openSelectTraining: false,\n      selectedTraining: null,\n      trainingCenters: null,\n    };\n  }\n  GetAllCentersList = () => {\n    this.setState({ loading: true, error: \"\", success: \"\" });\n    GetAllCenters(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: CenterItemInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            loading: false,\n            centers: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centers: [],\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  GetAllCentersListByTrainingSelected = (training_id: string) => {\n    this.setState({ loading: true, error: \"\", success: \"\" });\n    GetAllCentersByTrainingID(\n      training_id,\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: TrainingCenterItemInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            loading: false,\n            trainingCenters: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centers: [],\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  GetAllCenterTypesDetails = () => {\n    this.setState({\n      loading: true,\n      error: \"\",\n      success: \"\",\n      openSelectTraining: false,\n    });\n    GetCenterTypes(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: CenterTypeDetailsInterface;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            error: \"\",\n            success: \"\",\n            centerTypes: res.data,\n            loading: false,\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centerTypes: {\n              center_types: [],\n              center_room_type: [],\n            },\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  LoadAllDistricts = () => {\n    this.setState({ loading: true });\n    FC_GetDistricts(\n      (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n        if (data !== null) {\n          this.setState({ districts: data, loading: false });\n        }\n      }\n    );\n  };\n  GetFilteredData = () => {\n    if (this.state.centers === null) {\n      return [];\n    }\n    var response = this.state.centers;\n    if (this.state.selected_district_code !== \"\") {\n      response = response.filter(\n        (itm) =>\n          itm.district_id.toString() ===\n          this.state.selected_district_code.toString()\n      );\n    }\n    return search(response, this.state.search_value) as CenterItemInterface[];\n  };\n  GetFilteredTrainingCenters = () => {\n    if (this.state.trainingCenters === null) {\n      return [];\n    }\n    var response = this.state.trainingCenters;\n    if (this.state.selected_district_code !== \"\") {\n      response = response.filter(\n        (itm) =>\n          itm.district_id.toString() ===\n          this.state.selected_district_code.toString()\n      );\n    }\n    return search(\n      response,\n      this.state.search_value\n    ) as TrainingCenterItemInterface[];\n  };\n  componentDidMount(): void {\n    this.GetAllCenterTypesDetails();\n    this.GetAllCentersList();\n    this.LoadAllDistricts();\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container mx-auto p-3\">\n          {/* Top menu bar */}\n          <div className=\"bg-white rounded-md p-3\">\n            <div className=\"grid grid-cols-12 gap-2\">\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col pl-2\">\n                  <div className=\"text-2xl font-extrabold\">\n                    Training centers management\n                    {/* <span className=\"text-sm font-bold px-2 rounded-md bg-primary-100 text-primary-800\">\n                  {this.state.selected_status}\n                </span> */}\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    List of centers in different locations\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-span-6 flex flex-row items-center justify-end w-full gap-2\">\n                <div\n                  onClick={() => this.setState({ openSelectTraining: true })}\n                  className={`flex flex-row items-center gap-3 p-1 hover:bg-yellow-50 rounded-md cursor-pointer border ${\n                    this.state.selectedTraining !== null\n                      ? \"border-green-400\"\n                      : \"border-yellow-300\"\n                  } group`}\n                >\n                  <div>\n                    <div\n                      className={`${\n                        this.state.selectedTraining === null\n                          ? \"bg-yellow-100 text-accent-900\"\n                          : \"bg-green-100 text-green-700\"\n                      } rounded-md h-12 w-12 flex items-center justify-center`}\n                    >\n                      <FaChalkboardTeacher className=\"text-3xl\" />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <div className=\"text-sm text-gray-500 group-hover:text-black\">\n                      Filter by training training\n                    </div>\n                    <div\n                      className=\"font-bold text-base -mt-1 truncate\"\n                      style={{ width: \"300px\" }}\n                    >\n                      {this.state.selectedTraining === null ? (\n                        <span className=\"italic text-gray-400\">\n                          Not selected\n                        </span>\n                      ) : (\n                        this.state.selectedTraining.title\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    <MdKeyboardArrowDown className=\"text-2xl text-gray-400 group-hover:text-black\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.loading === true ||\n          this.state.centerTypes === null ||\n          this.state.centers === null ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md mt-2 py-5\">\n              <Loading />\n              <div className=\"text-center text-xl font-light text-gray-500\">\n                Loading, please wait...\n              </div>\n            </div>\n          ) : (\n            <div className=\"bg-white rounded-md mt-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between mb-3 mx-2 gap-3\">\n                <div className=\"relative w-1/3\">\n                  {this.state.openSelectDistrict === false ? (\n                    <div\n                      onClick={() =>\n                        this.setState({\n                          openSelectDistrict: !this.state.openSelectDistrict,\n                        })\n                      }\n                      className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n                    >\n                      <div className=\"w-52 truncate\">\n                        {this.state.selected_district_code === \"\"\n                          ? \"Filter by district\"\n                          : `${this.state.selected_district_code} - ${\n                              this.state.districts.find(\n                                (itm) =>\n                                  itm.district_code.toString() ===\n                                  this.state.selected_district_code.toString()\n                              )?.district_name\n                            }`}\n                      </div>\n                      <div>\n                        <IoIosArrowDown />\n                      </div>\n                    </div>\n                  ) : (\n                    <div\n                      onClick={() =>\n                        this.setState({ openSelectDistrict: false })\n                      }\n                      className=\"font-bold flex flex-row items-center gap-4 cursor-pointer hover:text-accent-900\"\n                    >\n                      <span>Select district</span>\n                      <div>\n                        {this.state.selected_district_code !== \"\" ? (\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selected_district_code: \"\",\n                                openSelectDistrict: false,\n                              })\n                            }\n                            className=\"font-normal text-sm cursor-pointer px-2 py-1 rounded-md bg-accent-400 text-accent-900 flex flex-row items-center justify-center gap-2\"\n                          >\n                            <div>\n                              <BiReset className=\"text-xl\" />\n                            </div>\n                            <span>Reset</span>\n                          </div>\n                        ) : (\n                          <MdClose />\n                        )}\n                      </div>\n                    </div>\n                  )}\n                  {this.state.openSelectDistrict === true && (\n                    <div className=\"w-full absolute mt-2 bg-white\">\n                      <SelectCustom\n                        loading={false}\n                        id={\"district_code\"}\n                        title={\"district_name\"}\n                        close={() =>\n                          this.setState({ openSelectDistrict: false })\n                        }\n                        data={this.state.districts}\n                        click={(response: {\n                          district_code: string;\n                          district_name: string;\n                        }) => {\n                          this.setState({\n                            selected_district_code: response.district_code,\n                            openSelectDistrict: false,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                </div>\n                {/* ------------------------------- */}\n\n                <input\n                  type=\"search\"\n                  className=\"px-3 py-2 rounded w-1/2 border border-gray-400\"\n                  placeholder=\"Search...\"\n                  value={this.state.search_value}\n                  onChange={(e) =>\n                    this.setState({ search_value: e.target.value })\n                  }\n                />\n                {this.state.selectedTraining === null && (\n                  <div className=\"\">\n                    <div className=\"text-sm text-gray-500 truncate\">\n                      Total centers\n                    </div>\n                    <div className=\"text-xl font-bold\">\n                      {this.GetFilteredData().length}\n                    </div>\n                  </div>\n                )}\n                {this.state.selectedTraining === null ? (\n                  <Button\n                    onClick={() => this.setState({ addCenter: true })}\n                    className=\"\"\n                  >\n                    <span className=\"truncate\">Add center</span>\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => {\n                      this.setState({ selectedTraining: null });\n                      this.GetAllCentersList();\n                    }}\n                    className=\"flex flex-row items-center justify-center gap-2\"\n                    theme=\"accent-light\"\n                  >\n                    <div>\n                      <BsArrowLeft className=\"text-2xl\" />\n                    </div>\n                    <span className=\"truncate\">Back to general list</span>\n                  </Button>\n                )}\n                {this.state.selectedTraining !== null ? (\n                  <ExportToExcel\n                    fileData={this.GetFilteredTrainingCenters().map(\n                      (item, i) => ({\n                        No: `${i + 1}`,\n                        \"District Code\": item.district_id,\n                        \"District Name\": item.district_name,\n                        \"Center Name\": item.center_name,\n                        \"Room Number\": item.group_id,\n                        \"Room Name\": item.name,\n                        \"Number of trainees\": item.number_of_trainees,\n                      })\n                    )}\n                    fileName={`${this.state.selectedTraining.title} - List of training centers and rooms`}\n                    className=\"py-2 rounded flex flex-row items-center justify-center gap-2 px-3 border border-green-600 hover:bg-green-600 hover:text-white text-green-600 font-bold\"\n                    btnName=\"Download\"\n                  />\n                ) : (\n                  <ExportToExcel\n                    fileData={this.GetFilteredData().map((item, i) => ({\n                      No: `${i + 1}`,\n                      \"District Code\": item.district_id,\n                      \"District Name\": item.district_name,\n                      \"Center Name\": item.center_name,\n                      \"Center Category\": item.center_type_name,\n                    }))}\n                    fileName={`List of all training centers`}\n                    className=\"py-2 rounded flex flex-row items-center justify-center gap-2 px-3 border border-green-600 hover:bg-green-600 hover:text-white text-green-600 font-bold\"\n                    btnName=\"Download\"\n                  />\n                )}\n              </div>\n              {/* Centers list */}\n              {this.state.selectedTraining === null ? (\n                <CentersList\n                  GetFilteredData={this.GetFilteredData}\n                  centers={this.state.centers}\n                  districts={this.state.districts}\n                />\n              ) : (\n                this.state.trainingCenters !== null && (\n                  <TrainingCentersList\n                    GetFilteredData={this.GetFilteredTrainingCenters}\n                    centers={this.state.trainingCenters}\n                    districts={this.state.districts}\n                  />\n                )\n              )}\n            </div>\n          )}\n        </div>\n        {this.state.addCenter === true && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ addCenter: false })}\n            backDropClose={false}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n              footer: undefined,\n            }}\n            title=\"Add training center\"\n            widthSizeClass={ModalSize.large}\n          >\n            {this.state.centerTypes !== null && (\n              <AddCenter\n                districts={this.state.districts}\n                centerTypes={this.state.centerTypes}\n                onCreated={() => this.GetAllCentersList()}\n              />\n            )}\n          </Modal>\n        )}\n        {this.state.openSelectTraining === true && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ openSelectTraining: false })}\n            backDropClose={true}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n              footer: undefined,\n            }}\n            title=\"Available trainings\"\n            widthSizeClass={ModalSize.maxWidth}\n            marginTop={ModalMarginTop.small}\n          >\n            <div className=\"-mt-5\">\n              {this.state.centerTypes !== null && (\n                <TrainingsList\n                  onSelected={(data: TrainingByImplementationStatusDetails) => {\n                    this.setState({\n                      openSelectTraining: false,\n                      selectedTraining: data,\n                    });\n                    this.GetAllCentersListByTrainingSelected(data.id);\n                  }}\n                />\n              )}\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const CentersManagement = connect(\n  mapStateToProps,\n  {}\n)(_CentersManagement);\n"],"sourceRoot":""}
========
{"version":3,"sources":["actions/transfer.action.ts","actions/training-offers.ts","trainingModule/CentersManagement/AddCenter.tsx","trainingModule/CentersManagement/CentersList.tsx","trainingModule/CentersManagement/TrainingCentersList.tsx","trainingModule/CentersManagement/TrainingsList.tsx","trainingModule/CentersManagement/CentersManagement.tsx"],"names":["FC_GetAllTransfers","district_id","callBack","dispatch","type","ActionTypes","GET_ALL_TRANSFER","payload","setAxiosToken","axios","get","APP_URL","res","needed_data","data","filter","item","requested_status","errorToText","FC_GetDistricts","district_code","district_name","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","console","log","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","TrainingImplementationStatus","TrainingEvaluationStatus","GetSchoolTrainingProvidersByStatus","school_code","status","setResponse","TRAINING_APP_URL","msg","returnErrorToText","GetSchoolTrainingParticipants","training_id","toString","length","school_teachers","response","school_parents","undefined","find","itm","user_id","push","email","first_name","id","last_name","nid","phone_numbers","position_code","position_name","qualification_id","qualification_name","subjects","teaching_level","teaching_level_id","trainee_request_id","training_to_group_id","GetTraineesToBeTrainedOnSchool","AssignTraineeToTraining","RemoveTraineeToTraining","patch","GetParentsToAttendTraining","new","AddNewTraineeInfoAssignToTraining","GetDistrictTrainingProvidersByStatus","GetDistrictTrainingParticipants","role","role_id","staff_code","GetTraineesToBeTrainedOnDistrict","GetTrainingsListByStatus","AddCenter","props","CreateNewTraining","e","preventDefault","state","setState","target","center_type_id","name","loading","success","CreateNewCenter","onCreated","openSelectCenterType","openSelectDistrict","onSubmit","this","className","style","minHeight","onClick","districts","zIndex","SelectCustom","title","close","click","centerTypes","center_types","TextInput","onChange","value","label","placeholder","MainContainer_className","disabled","Button","theme","Component","CentersList","centers","colSpan","GetFilteredData","map","i","center_name","center_type_name","TrainingCentersList","GetTotalTrainees","number_of_trainees","GetTotalCenters","center_id","GetTotalRooms","group_id","GetTotalDistrict","commaFy","TrainingsList","LoadTrainings","selectedStatus","trainings","FilteredTrainings","search","searchData","INPROGRESS","trainingStatuses","key","COMPLETED","CANCELLED","READY_FOR_EVALUATION","DRAFT","stat","s","Alert","onSelected","topic","DATE","start_date","end_date","development_partner_name","dp_contact","_CentersManagement","GetAllCentersList","GetAllCenters","GetAllCentersListByTrainingSelected","GetAllCentersByTrainingID","trainingCenters","GetAllCenterTypesDetails","openSelectTraining","GetCenterTypes","center_room_type","LoadAllDistricts","selected_district_code","search_value","GetFilteredTrainingCenters","addCenter","selectedTraining","width","Loading","ExportToExcel","fileData","No","fileName","btnName","Modal","backDrop","backDropClose","displayClose","padding","body","footer","widthSizeClass","ModalSize","large","maxWidth","marginTop","ModalMarginTop","small","CentersManagement","connect","auth","basic"],"mappings":"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","file":"static/js/32.d2bd56d9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  // TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n// import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: [],\n      });\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde/${district_id}`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      // console.log(\" ----- ------  ------\");\n\n      // console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      // console.log(\"=================FC_GetTransferReasons===================\");\n      // console.log({ FC_GetTransferReasons: res });\n      // console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  // callBack(true, null, \"\");\n  // try {\n  // setAxiosToken();\n  // const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n  // console.log(\"=================FC_GetDistricts===================\");\n  // console.log({ FC_GetDistricts: res });\n  // console.log(\"=================FC_GetDistricts===================\");\n\n  // * save data\n  callBack(\n    false,\n    [\n      {\n        district_code: \"11\",\n        district_name: \"Nyarugenge\",\n      },\n      {\n        district_code: \"12\",\n        district_name: \"Gasabo\",\n      },\n      {\n        district_code: \"13\",\n        district_name: \"Kicukiro\",\n      },\n      {\n        district_code: \"21\",\n        district_name: \"Nyanza\",\n      },\n      {\n        district_code: \"22\",\n        district_name: \"Gisagara\",\n      },\n      {\n        district_code: \"23\",\n        district_name: \"Nyaruguru\",\n      },\n      {\n        district_code: \"24\",\n        district_name: \"Huye\",\n      },\n      {\n        district_code: \"25\",\n        district_name: \"Nyamagabe\",\n      },\n      {\n        district_code: \"26\",\n        district_name: \"Ruhango\",\n      },\n      {\n        district_code: \"27\",\n        district_name: \"Muhanga\",\n      },\n      {\n        district_code: \"28\",\n        district_name: \"Kamonyi\",\n      },\n      {\n        district_code: \"31\",\n        district_name: \"Karongi\",\n      },\n      {\n        district_code: \"32\",\n        district_name: \"Rutsiro\",\n      },\n      {\n        district_code: \"33\",\n        district_name: \"Rubavu\",\n      },\n      {\n        district_code: \"34\",\n        district_name: \"Nyabihu\",\n      },\n      {\n        district_code: \"35\",\n        district_name: \"Ngororero\",\n      },\n      {\n        district_code: \"36\",\n        district_name: \"Rusizi\",\n      },\n      {\n        district_code: \"37\",\n        district_name: \"Nyamasheke\",\n      },\n      {\n        district_code: \"41\",\n        district_name: \"Rulindo\",\n      },\n      {\n        district_code: \"42\",\n        district_name: \"Gakenke\",\n      },\n      {\n        district_code: \"43\",\n        district_name: \"Musanze\",\n      },\n      {\n        district_code: \"44\",\n        district_name: \"Burera\",\n      },\n      {\n        district_code: \"45\",\n        district_name: \"Gicumbi\",\n      },\n      {\n        district_code: \"51\",\n        district_name: \"Rwamagana\",\n      },\n      {\n        district_code: \"52\",\n        district_name: \"Nyagatare\",\n      },\n      {\n        district_code: \"53\",\n        district_name: \"Gatsibo\",\n      },\n      {\n        district_code: \"54\",\n        district_name: \"Kayonza\",\n      },\n      {\n        district_code: \"55\",\n        district_name: \"Kirehe\",\n      },\n      {\n        district_code: \"56\",\n        district_name: \"Ngoma\",\n      },\n      {\n        district_code: \"57\",\n        district_name: \"Bugesera\",\n      },\n    ],\n    \"\"\n  );\n  // } catch (error) {\n  //   console.log(error);\n  //   callBack(false, null, errorToText(error));\n  //   callBack(\n  //     false,\n  //     errorToText(error, () => {})\n  //   );\n  // }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import axios from \"axios\";\nimport { APP_URL, TRAINING_APP_URL } from \"../config/app.config\";\nimport { SearchParentResponseInterface } from \"../trainingModule/TrainingOffers/School/Details/FormToAddParticipant\";\nimport { returnErrorToText } from \"../utils/functions\";\nimport { SystemRole } from \"./basic.action\";\n\nexport enum TrainingImplementationStatus {\n  DRAFT = \"DRAFT\",\n  READY_FOR_EVALUATION = \"READY_FOR_EVALUATION\",\n  INPROGRESS = \"INPROGRESS\",\n  COMPLETED = \"COMPLETED\",\n  CANCELLED = \"CANCELLED\",\n}\n\nexport enum TrainingEvaluationStatus {\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n  REJECTED = \"REJECTED\",\n}\n\nexport interface GetTrainingsListByStatusInterface {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervention_area_id: number;\n  intervention_area: string;\n  sub_area_id: number;\n  sub_area_name: string;\n  topic_id: number;\n  topic: string;\n  total: number | null;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n  partner_type_name: string;\n  trainee_category: { id: string; name: string; roles: SystemRole[] | null }[];\n  trainee_criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n  centers: { id: string; name: string }[];\n  trainee_request_id: string; //new to be added\n  training_to_group_id: string; //new to be added\n  is_approved: 1 | 0 | \"\" | undefined;\n}\n\nexport interface TrainingByImplementationStatusDetails {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  agenda_file_name: string;\n  intervention_area_id: string;\n  intervention_area: string;\n  sub_area_id: string;\n  subarea: string;\n  topic_id: string;\n  topic: string;\n  material_links: {\n    title: string;\n  }[];\n  total: number;\n  budget: number;\n  development_partner_id: string;\n  development_partner_name: string;\n  dp_contact: string;\n  dp_email: string;\n  evaluation_status: TrainingEvaluationStatus;\n  evaluated_date: string;\n  evaluation_comment: string;\n  implementation_status: TrainingImplementationStatus;\n}\n\nexport interface TrainingParticipants {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  id: number;\n  user_id: string;\n  training_id: string;\n  training_to_group_id: string;\n  trainee_request_id: number;\n  position_code: string;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  teaching_level_id: number;\n  teaching_level: string;\n  subjects: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[];\n  role?: string;\n  role_id?: string;\n}\nexport interface DistrictTrainingParticipants {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n}\nexport interface TeachersToBeTrainedResponse {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  province_code: string | null;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  teaching_level_id: number;\n  teaching_level: string;\n  subjects: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[];\n  position_code: string;\n  district_code: string | null;\n  sector_code: string | null;\n  user_id: string;\n  role: string;\n  role_id: string;\n}\n\nexport interface DistrictToBeTrainedResponse {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n}\n\nexport interface GetTraineesToBeTrainedOnSchoolInterface {\n  training_id: string;\n  topic: number;\n  sub_area_id: number;\n  school_code: string;\n  criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}\n\nexport interface GetTraineesToBeTrainedOnDistrictInterface {\n  training_id: string;\n  topic: number;\n  sub_area_id: number;\n  district_code: string;\n  criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}\n\nexport interface AssignTraineeToTrainingDataInterface {\n  training_id: string;\n  user_id: string;\n  training_to_group_id: number;\n  trainee_request_id: number;\n  district_code: number | null;\n  school_code: number | null;\n  position_code: string;\n  qualification_id: string;\n  level_id: string;\n  sector_id: string | null;\n  trainee_category_id: string;\n}\n\nexport interface NewTraineeInTheSystemInterface {\n  nid: string;\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  school_code: string;\n  training_id: string;\n  trainee_request_id: string;\n}\n\nexport const GetSchoolTrainingProvidersByStatus = async (\n  school_code: string,\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: GetTrainingsListByStatusInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<GetTrainingsListByStatusInterface[]>(\n      `${TRAINING_APP_URL}/training/school/${school_code}/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport interface AddedTraineesWhoAreNotInUserToRole {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  id: number;\n  user_id: string;\n  training_id: string;\n  training_to_group_id: string | null;\n  trainee_request_id: number;\n}\n\nexport const GetSchoolTrainingParticipants = async (\n  training_id: string,\n  school_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TrainingParticipants[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<{\n      school_teachers: TrainingParticipants[];\n      school_parents: AddedTraineesWhoAreNotInUserToRole[];\n    }>(\n      `${TRAINING_APP_URL}/training/trainee/${\n        school_code.toString().length === 2 ? \"district\" : \"school\"\n      }/${training_id}/${school_code}`\n    );\n    console.log(\"Res participants one: \", res.data.school_teachers);\n    if (res) {\n      const response = res.data.school_teachers;\n      if (res.data.school_parents.length > 0) {\n        for (const item of res.data.school_parents) {\n          if (\n            response.find((itm) => itm.user_id === item.user_id) === undefined\n          ) {\n            response.push({\n              email: item.email,\n              first_name: item.first_name,\n              id: item.id,\n              last_name: item.last_name,\n              nid: item.nid,\n              phone_numbers: item.phone_numbers,\n              position_code: \"\",\n              position_name: \"\",\n              qualification_id: \"\",\n              qualification_name: \"\",\n              subjects: [],\n              teaching_level: \"\",\n              teaching_level_id: 1,\n              trainee_request_id: item.trainee_request_id,\n              training_id: item.training_id,\n              training_to_group_id:\n                item.training_to_group_id === null\n                  ? \"\"\n                  : item.training_to_group_id,\n              user_id: item.user_id,\n            });\n          }\n        }\n      }\n      setResponse(false, {\n        data: response,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    console.log(\"error no: \", error);\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetTraineesToBeTrainedOnSchool = async (\n  data: GetTraineesToBeTrainedOnSchoolInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TeachersToBeTrainedResponse[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<TeachersToBeTrainedResponse[]>(\n      `${TRAINING_APP_URL}/training/search/teacher`,\n      data\n    );\n    console.log(\"Teachers to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const AssignTraineeToTraining = async (\n  data: AssignTraineeToTrainingDataInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post(`${TRAINING_APP_URL}/training/trainee`, data);\n    console.log(\"Assign trainee to training: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg: \"Trainee added successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const RemoveTraineeToTraining = async (\n  data: {\n    training_id: string;\n    user_id: string;\n    status: \"DISABLED\";\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.patch(\n      `${TRAINING_APP_URL}/training/trainee/toggle`,\n      data\n    );\n    console.log(\"Removing: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg: \"Trainee added successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetParentsToAttendTraining = async (\n  data: {\n    topic_id: string;\n    sub_area_id: number;\n    nid: string;\n    start_date: string;\n    end_date: string;\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      new: boolean;\n      data: SearchParentResponseInterface | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<SearchParentResponseInterface>(\n      `${TRAINING_APP_URL}/training/search/parent`,\n      data\n    );\n    console.log(\"Parents/Other users to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        new: false,\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      new:\n        error?.response?.status !== undefined && error?.response?.status === 400\n          ? true\n          : false,\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const AddNewTraineeInfoAssignToTraining = async (\n  data: NewTraineeInTheSystemInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: SearchParentResponseInterface | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<SearchParentResponseInterface>(\n      `${APP_URL}/user/training/pregister`,\n      data\n    );\n    console.log(\"New user added: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data added successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// District training offers\nexport const GetDistrictTrainingProvidersByStatus = async (\n  district_code: string,\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: GetTrainingsListByStatusInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<GetTrainingsListByStatusInterface[]>(\n      `${TRAINING_APP_URL}/training/district/${district_code}/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get District training added participants\nexport const GetDistrictTrainingParticipants = async (\n  training_id: string,\n  district_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: {\n        school_parents: [];\n        school_teachers: DistrictTrainingParticipants[];\n      } | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<{\n      school_parents: [];\n      school_teachers: DistrictTrainingParticipants[];\n    }>(\n      `${TRAINING_APP_URL}/training/trainee/district/${training_id}/${district_code}`\n    );\n    console.log(\"Res participants: \", res.data);\n    if (res) {\n      const response: DistrictTrainingParticipants[] = [];\n      for (const item of res.data.school_teachers) {\n        if (\n          response.find((itm) => itm.user_id === item.user_id) === undefined\n        ) {\n          response.push({\n            email: item.email,\n            first_name: item.first_name,\n            last_name: item.last_name,\n            nid: item.nid,\n            phone_numbers: item.phone_numbers,\n            user_id: item.user_id,\n            role: item.role,\n            role_id: item.role_id,\n            staff_code: item.staff_code,\n          });\n        }\n      }\n      setResponse(false, {\n        data: {\n          school_parents: [],\n          school_teachers: response,\n        },\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get to be trained on district level\nexport const GetTraineesToBeTrainedOnDistrict = async (\n  data: GetTraineesToBeTrainedOnDistrictInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: DistrictToBeTrainedResponse[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<DistrictToBeTrainedResponse[]>(\n      `${TRAINING_APP_URL}/training/search/district`,\n      data\n    );\n    console.log(\"Teachers to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetTrainingsListByStatus = async (\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TrainingByImplementationStatusDetails[];\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<TrainingByImplementationStatusDetails[]>(\n      `${TRAINING_APP_URL}/training/application/status/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: [],\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdClose } from \"react-icons/md\";\nimport {\n  CenterTypeDetailsInterface,\n  CreateNewCenter,\n} from \"../../actions/training_settings_create_edit\";\nimport Button from \"../../components/Buttons/Button\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport SelectCustom from \"../../components/SelectCustom/SelectCustom\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface AddCenterProps {\n  districts: DistrictTypes[];\n  centerTypes: CenterTypeDetailsInterface;\n  onCreated: () => void;\n}\ninterface AddCenterState {\n  name: string;\n  district_id: string;\n  center_type_id: string;\n  loading: boolean;\n  success: string;\n  error: {\n    target: \"main\" | \"name\" | \"district_id\" | \"center_type_id\";\n    msg: string;\n  } | null;\n  openSelectDistrict: boolean;\n  openSelectCenterType: boolean;\n}\n\nexport class AddCenter extends Component<AddCenterProps, AddCenterState> {\n  constructor(props: AddCenterProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      name: \"\",\n      district_id: \"\",\n      center_type_id: \"\",\n      error: null,\n      success: \"\",\n      openSelectCenterType: false,\n      openSelectDistrict: false,\n    };\n  }\n  CreateNewTraining = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.district_id === \"\") {\n      return this.setState({\n        error: {\n          target: \"district_id\",\n          msg: \"Please choose district\",\n        },\n      });\n    }\n    if (this.state.center_type_id === \"\") {\n      return this.setState({\n        error: {\n          target: \"center_type_id\",\n          msg: \"Please choose center type\",\n        },\n      });\n    }\n    if (this.state.name === \"\") {\n      return this.setState({\n        error: {\n          target: \"name\",\n          msg: \"Please fill center name\",\n        },\n      });\n    }\n    this.setState({ loading: true, error: null, success: \"\" });\n    CreateNewCenter(\n      {\n        name: this.state.name,\n        district_id: this.state.district_id,\n        center_type_id: this.state.center_type_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            error: null,\n            success: \"Center added successfully!\",\n            loading: false,\n            name: \"\",\n          });\n          this.props.onCreated();\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            error: {\n              target: \"main\",\n              msg: res.msg,\n            },\n            loading: false,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.CreateNewTraining} className=\"w-full my-3\">\n          <div\n            className=\"grid grid-cols-12 gap-2\"\n            style={\n              this.state.openSelectDistrict === true ||\n              this.state.openSelectCenterType === true\n                ? { minHeight: \"300px\" }\n                : {}\n            }\n          >\n            <div className=\"col-span-12 md:col-span-6\">\n              <div>Choose district</div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    openSelectDistrict: !this.state.openSelectDistrict,\n                  })\n                }\n                className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n              >\n                <div className=\"w-52 truncate\">\n                  {this.state.district_id === \"\" ? (\n                    <span className=\"italic text-gray-400\">Not selected</span>\n                  ) : (\n                    `${this.state.district_id} - ${\n                      this.props.districts.find(\n                        (itm) =>\n                          itm.district_code.toString() ===\n                          this.state.district_id.toString()\n                      )?.district_name\n                    }`\n                  )}\n                </div>\n                <div>\n                  <IoIosArrowDown />\n                </div>\n              </div>\n              {this.state.openSelectDistrict === true && (\n                <div className=\"absolute mt-2 bg-white\" style={{ zIndex: 9 }}>\n                  <SelectCustom\n                    loading={false}\n                    id={\"district_code\"}\n                    title={\"district_name\"}\n                    close={() => this.setState({ openSelectDistrict: false })}\n                    data={this.props.districts}\n                    click={(response: {\n                      district_code: string;\n                      district_name: string;\n                    }) => {\n                      this.setState({\n                        district_id: response.district_code,\n                        openSelectDistrict: false,\n                        error: null,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {this.state.error?.target === \"district_id\" && (\n                <div className=\"text-red-700\">{this.state.error.msg}</div>\n              )}\n            </div>\n            <div className=\"col-span-12 md:col-span-6\">\n              <div>Choose center type</div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    openSelectCenterType: !this.state.openSelectCenterType,\n                  })\n                }\n                className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n              >\n                <div className=\"w-52 truncate\">\n                  {this.state.center_type_id === \"\" ? (\n                    <span className=\"italic text-gray-400\">Not selected</span>\n                  ) : (\n                    `${this.state.center_type_id} - ${\n                      this.props.centerTypes.center_types.find(\n                        (itm) =>\n                          itm.id.toString() ===\n                          this.state.center_type_id.toString()\n                      )?.name\n                    }`\n                  )}\n                </div>\n                <div>\n                  <IoIosArrowDown />\n                </div>\n              </div>\n              {this.state.openSelectCenterType === true && (\n                <div className=\"absolute mt-2 bg-white\" style={{ zIndex: 9 }}>\n                  <SelectCustom\n                    loading={false}\n                    id={\"id\"}\n                    title={\"name\"}\n                    close={() => this.setState({ openSelectCenterType: false })}\n                    data={this.props.centerTypes.center_types}\n                    click={(response: { id: string; name: string }) => {\n                      this.setState({\n                        center_type_id: response.id,\n                        openSelectCenterType: false,\n                        error: null,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {this.state.error?.target === \"center_type_id\" && (\n                <div className=\"text-red-700\">{this.state.error.msg}</div>\n              )}\n            </div>\n            <TextInput\n              onChange={(e) =>\n                this.setState({\n                  name: e.target.value,\n                  error: null,\n                  success: \"\",\n                })\n              }\n              value={this.state.name}\n              error={\n                this.state.error !== null && this.state.error.target === \"name\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n              label={\"Center name\"}\n              placeholder={\"\"}\n              name={\"\"}\n              MainContainer_className=\"col-span-12\"\n              disabled={this.state.loading}\n            />\n          </div>\n          {this.state.error !== null && this.state.error.target === \"main\" && (\n            <div\n              onClick={() => this.setState({ error: null, success: \"\" })}\n              className=\"cursor-pointer px-3 py-2 font-bold bg-red-100 text-red-700 flex flex-row items-center justify-between w-full my-2\"\n            >\n              <span>{this.state.error.msg}</span>\n              <div>\n                <MdClose className=\"text-2xl\" />\n              </div>\n            </div>\n          )}\n          {this.state.success !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: null, success: \"\" })}\n              className=\"cursor-pointer px-3 py-2 font-bold bg-green-100 text-green-700 flex flex-row items-center justify-between w-full my-2\"\n            >\n              <span>{this.state.success}</span>\n              <div>\n                <MdClose className=\"text-2xl\" />\n              </div>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center justify-end gap-2 mt-3\">\n            {this.state.loading === true && (\n              <div className=\"flex flex-row items-center gap-2\">\n                <div>\n                  <AiOutlineLoading3Quarters\n                    className={`loading-animate text-5xl text-accent-900 dark:text-white`}\n                  />\n                </div>\n                <div className=\"text-lg font-bold animate__animated animate__fadeIn animate__infinite\">\n                  Saving, please wait...\n                </div>\n              </div>\n            )}\n            {this.state.loading === false && (\n              <Button\n                type=\"submit\"\n                theme=\"accent\"\n                disabled={this.state.loading}\n              >\n                {\"Create center\"}\n              </Button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { CenterItemInterface } from \"../../actions/training_settings_create_edit\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface CentersListProps {\n  centers: CenterItemInterface[];\n  GetFilteredData: () => CenterItemInterface[];\n  districts: DistrictTypes[];\n}\ninterface CentersListState {}\n\nexport class CentersList extends Component<CentersListProps, CentersListState> {\n  render() {\n    return (\n      <div className=\"w-full overflow-x-auto\">\n        <table className=\"w-full text-sm text-left\">\n          <thead className=\"bg-primary-100 text-primary-800 border-4 border-white\">\n            <tr>\n              <th className=\"px-3 py-2\">#</th>\n              <th className=\"px-3 py-2\">District</th>\n              <th className=\"px-3 py-2\">Center name</th>\n              <th className=\"px-3 py-2\">Center type</th>\n              <th className=\"px-3 py-2\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.centers === null ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-xl px-4 py-3 font-light text-center\"\n                >\n                  Loading, please wait...\n                </td>\n              </tr>\n            ) : this.props.GetFilteredData().length === 0 ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-xl px-4 py-3 font-light text-center\"\n                >\n                  No data found!\n                </td>\n              </tr>\n            ) : (\n              this.props.GetFilteredData().map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                  } hover:bg-accent-400 hover:text-accent-900 cursor-pointer`}\n                  //   onClick={() => this.setState({ preview: item })}\n                >\n                  <td className=\"px-3 py-2\">{i + 1}</td>\n                  <td className=\"px-3 py-2\">{item.district_name}</td>\n                  <td className=\"px-3 py-2\">{item.center_name}</td>\n                  <td className=\"px-3 py-2\">{item.center_type_name}</td>\n                  <td className=\"px-2 py-2\">\n                    <div\n                      className={`${\n                        item.status === \"ACTIVE\"\n                          ? \"bg-gray-100 text-gray-700\"\n                          : \"bg-red-100 text-red-700\"\n                      } px-1 py-0 w-max rounded-md text-xs`}\n                    >\n                      {item.status}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TrainingCenterItemInterface } from \"../../actions/training_settings_create_edit\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy } from \"../../utils/functions\";\n\ninterface TrainingCentersListProps {\n  centers: TrainingCenterItemInterface[];\n  GetFilteredData: () => TrainingCenterItemInterface[];\n  districts: DistrictTypes[];\n}\ninterface TrainingCentersListState {}\n\nexport class TrainingCentersList extends Component<\n  TrainingCentersListProps,\n  TrainingCentersListState\n> {\n  GetTotalTrainees = () => {\n    var response: number = 0;\n    for (const item of this.props.GetFilteredData()) {\n      response += item.number_of_trainees;\n    }\n    return response;\n  };\n  GetTotalCenters = () => {\n    const center_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (center_id.find((itm) => itm === item.center_id) === undefined) {\n        center_id.push(item.center_id);\n      }\n    }\n    return center_id.length;\n  };\n  GetTotalRooms = () => {\n    const group_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (group_id.find((itm) => itm === item.group_id) === undefined) {\n        group_id.push(item.group_id);\n      }\n    }\n    return group_id.length;\n  };\n  GetTotalDistrict = () => {\n    const district_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (district_id.find((itm) => itm === item.district_id) === undefined) {\n        district_id.push(item.district_id);\n      }\n    }\n    return district_id.length;\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"px-2\">\n          <div className=\"bg-primary-700 text-white p-2 rounded-md flex flex-row items-center justify-between gap-2\">\n            <div className=\"pl-2\">\n              <div className=\"text-xl font-bold\">General summary</div>\n              <div className=\"font-light\">\n                Get the summary from the list below\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-between gap-2\">\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total districts</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalDistrict())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total centers</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalCenters())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total rooms</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalRooms())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total trainees</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalTrainees())}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full text-sm text-left\">\n            <thead className=\"bg-primary-100 text-primary-800 border-4 border-white\">\n              <tr>\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">District</th>\n                <th className=\"px-3 py-2\">Center name</th>\n                <th className=\"px-3 py-2\">Room</th>\n                <th className=\"px-3 py-2\">Number of trainees</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.centers === null ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-xl px-4 py-3 font-light text-center\"\n                  >\n                    Loading, please wait...\n                  </td>\n                </tr>\n              ) : this.props.GetFilteredData().length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-xl px-4 py-3 font-light text-center\"\n                  >\n                    No data found!\n                  </td>\n                </tr>\n              ) : (\n                this.props.GetFilteredData().map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } hover:bg-accent-400 hover:text-accent-900 cursor-pointer`}\n                    //   onClick={() => this.setState({ preview: item })}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.district_name}</td>\n                    <td className=\"px-3 py-2\">{item.center_name}</td>\n                    <td className=\"px-3 py-2\">{item.group_id}</td>\n                    <td className=\"px-3 py-2\">{item.number_of_trainees}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport {\n  GetTrainingsListByStatus,\n  TrainingByImplementationStatusDetails,\n  TrainingImplementationStatus,\n} from \"../../actions/training-offers\";\nimport Alert from \"../../components/Alert/Alert\";\nimport { DATE, search } from \"../../utils/functions\";\n\ninterface TrainingsListProps {\n  onSelected: (data: TrainingByImplementationStatusDetails) => void;\n}\ninterface TrainingsListState {\n  loading: boolean;\n  error: string;\n  trainings: TrainingByImplementationStatusDetails[] | null;\n  selectedStatus: TrainingImplementationStatus;\n  searchData: string;\n}\n\nexport class TrainingsList extends Component<\n  TrainingsListProps,\n  TrainingsListState\n> {\n  constructor(props: TrainingsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      trainings: null,\n      selectedStatus: TrainingImplementationStatus.INPROGRESS,\n      searchData: \"\",\n    };\n  }\n  LoadTrainings = (selectedStatus: TrainingImplementationStatus) => {\n    this.setState({ loading: true, error: \"\", selectedStatus: selectedStatus });\n    GetTrainingsListByStatus(\n      selectedStatus,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: TrainingByImplementationStatusDetails[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.type === \"success\") {\n          this.setState({ trainings: res.data, error: \"\", loading: false });\n        }\n        if (res?.type === \"error\") {\n          this.setState({ trainings: [], error: res.msg, loading: false });\n        }\n      }\n    );\n  };\n  FilteredTrainings = () => {\n    if (this.state.trainings === null) {\n      return [];\n    }\n    var response = this.state.trainings;\n    return search(\n      response,\n      this.state.searchData\n    ) as TrainingByImplementationStatusDetails[];\n  };\n  componentDidMount(): void {\n    this.LoadTrainings(this.state.selectedStatus);\n  }\n  render() {\n    const trainingStatuses: {\n      title: string;\n      key: TrainingImplementationStatus;\n    }[] = [\n      {\n        title: \"In progress\",\n        key: TrainingImplementationStatus.INPROGRESS,\n      },\n      {\n        title: \"Completed\",\n        key: TrainingImplementationStatus.COMPLETED,\n      },\n      {\n        title: \"Canceled\",\n        key: TrainingImplementationStatus.CANCELLED,\n      },\n      {\n        title: \"Ready for evaluation\",\n        key: TrainingImplementationStatus.READY_FOR_EVALUATION,\n      },\n      {\n        title: \"Draft\",\n        key: TrainingImplementationStatus.DRAFT,\n      },\n    ];\n    if (this.state.loading === true || this.state.trainings === null) {\n      return (\n        <div>\n          <div className=\"bg-gray-100 rounded-md w-full flex flex-col items-center justify-center p-3 py-6\">\n            <div>\n              <AiOutlineLoading3Quarters\n                className={`loading-animate text-6xl text-accent-900 dark:text-white`}\n              />\n            </div>\n            <div className=\"text-xl font-light animate__animated animate__fadeIn animate__infinite\">\n              Loading, please wait...\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"flex flex-row items-center gap-3 w-full mb-6\">\n            <select\n              onChange={(e) =>\n                this.LoadTrainings(\n                  e.target.value as TrainingImplementationStatus\n                )\n              }\n              value={this.state.selectedStatus}\n              className=\"px-3 py-2 rounded border border-primary-500 bg-primary-100 font-bold text-primary-700 w-1/3\"\n            >\n              {trainingStatuses.map((stat, s) => (\n                <option key={s + 1} value={stat.key}>\n                  {stat.title}\n                </option>\n              ))}\n            </select>\n            <input\n              type=\"search\"\n              className=\"px-3 py-2 rounded border border-gray-400 w-2/3\"\n              placeholder=\"Search by name\"\n              value={this.state.searchData}\n              onChange={(e) =>\n                this.setState({ searchData: e.target.value, error: \"\" })\n              }\n            />\n          </div>\n          {this.state.error !== \"\" && (\n            <div className=\"my-3\">\n              <Alert\n                theme=\"danger\"\n                onClick={() => this.setState({ error: \"\" })}\n              >\n                {this.state.error}\n              </Alert>\n            </div>\n          )}\n          {this.state.trainings.length === 0 ? (\n            <div className=\"text-center p-4 rounded-md bg-gray-100 w-full\">\n              <div className=\"text-2xl font-bold\">No trainings found!</div>\n              <div className=\"text-gray-500\">\n                For selected status, there are no trainings found\n              </div>\n            </div>\n          ) : (\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"min-w-full text-left text-sm\">\n                <thead>\n                  <tr>\n                    <th className=\"px-3 py-2 border\">#</th>\n                    <th className=\"px-3 py-2 border\">Training title</th>\n                    <th className=\"px-3 py-2 border\">Topic</th>\n                    <th className=\"px-3 py-2 border\">Start date</th>\n                    <th className=\"px-3 py-2 border\">Ending date</th>\n                    <th className=\"px-3 py-2 border\">Training provider</th>\n                    <th className=\"px-3 py-2 border\">Phone number</th>\n                    <th className=\"px-3 py-2 border\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.FilteredTrainings().length === 0 ? (\n                    <tr>\n                      <td className=\"text-xl text-center font-light\">\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.FilteredTrainings().map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className=\"cursor-pointer hover:bg-accent-400 hover:text-accent-900 group\"\n                        onClick={() => this.props.onSelected(item)}\n                      >\n                        <td className=\"px-3 py-2 border\">{i + 1}</td>\n                        <td className=\"px-3 py-2 border\">{item.title}</td>\n                        <td className=\"px-3 py-2 border\">{item.topic}</td>\n                        <td className=\"px-3 py-2 border\">\n                          {DATE(item.start_date)}\n                        </td>\n                        <td className=\"px-3 py-2 border\">\n                          {DATE(item.end_date)}\n                        </td>\n                        <td className=\"px-3 py-2 border\">\n                          {item.development_partner_name}\n                        </td>\n                        <td className=\"px-3 py-2 border\">{item.dp_contact}</td>\n                        <td className=\"px-1 py-1 border w-10\">\n                          <div className=\"bg-gray-100 group-hover:bg-accent-900 group-hover:text-white font-bold px-3 py-2 rounded w-max text-current cursor-pointer\">\n                            Select\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BiReset } from \"react-icons/bi\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdClose, MdKeyboardArrowDown } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../actions\";\nimport { TrainingByImplementationStatusDetails } from \"../../actions/training-offers\";\nimport {\n  CenterItemInterface,\n  CenterTypeDetailsInterface,\n  GetAllCenters,\n  GetAllCentersByTrainingID,\n  GetCenterTypes,\n  TrainingCenterItemInterface,\n} from \"../../actions/training_settings_create_edit\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalMarginTop, ModalSize } from \"../../components/Modal/Modal\";\nimport SelectCustom from \"../../components/SelectCustom/SelectCustom\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { search } from \"../../utils/functions\";\nimport { AddCenter } from \"./AddCenter\";\nimport { CentersList } from \"./CentersList\";\nimport { TrainingCentersList } from \"./TrainingCentersList\";\nimport { TrainingsList } from \"./TrainingsList\";\n\ninterface CentersManagementProps {}\ninterface CentersManagementState {\n  loading: boolean;\n  centers: CenterItemInterface[] | null;\n  centerTypes: CenterTypeDetailsInterface | null;\n  success: string;\n  error: string;\n  search_value: string;\n  selected_district_code: string;\n  openSelectDistrict: boolean;\n  addCenter: boolean;\n  districts: DistrictTypes[];\n  openSelectTraining: boolean;\n  selectedTraining: TrainingByImplementationStatusDetails | null;\n  trainingCenters: TrainingCenterItemInterface[] | null;\n}\n\nclass _CentersManagement extends Component<\n  CentersManagementProps,\n  CentersManagementState\n> {\n  constructor(props: CentersManagementProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      centers: null,\n      centerTypes: null,\n      success: \"\",\n      error: \"\",\n      search_value: \"\",\n      selected_district_code: \"\",\n      openSelectDistrict: false,\n      addCenter: false,\n      districts: [],\n      openSelectTraining: false,\n      selectedTraining: null,\n      trainingCenters: null,\n    };\n  }\n  GetAllCentersList = () => {\n    this.setState({ loading: true, error: \"\", success: \"\" });\n    GetAllCenters(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: CenterItemInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            loading: false,\n            centers: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centers: [],\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  GetAllCentersListByTrainingSelected = (training_id: string) => {\n    this.setState({ loading: true, error: \"\", success: \"\" });\n    GetAllCentersByTrainingID(\n      training_id,\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: TrainingCenterItemInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            loading: false,\n            trainingCenters: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centers: [],\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  GetAllCenterTypesDetails = () => {\n    this.setState({\n      loading: true,\n      error: \"\",\n      success: \"\",\n      openSelectTraining: false,\n    });\n    GetCenterTypes(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: CenterTypeDetailsInterface;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            error: \"\",\n            success: \"\",\n            centerTypes: res.data,\n            loading: false,\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centerTypes: {\n              center_types: [],\n              center_room_type: [],\n            },\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  LoadAllDistricts = () => {\n    this.setState({ loading: true });\n    FC_GetDistricts(\n      (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n        if (data !== null) {\n          this.setState({ districts: data, loading: false });\n        }\n      }\n    );\n  };\n  GetFilteredData = () => {\n    if (this.state.centers === null) {\n      return [];\n    }\n    var response = this.state.centers;\n    if (this.state.selected_district_code !== \"\") {\n      response = response.filter(\n        (itm) =>\n          itm.district_id.toString() ===\n          this.state.selected_district_code.toString()\n      );\n    }\n    return search(response, this.state.search_value) as CenterItemInterface[];\n  };\n  GetFilteredTrainingCenters = () => {\n    if (this.state.trainingCenters === null) {\n      return [];\n    }\n    var response = this.state.trainingCenters;\n    if (this.state.selected_district_code !== \"\") {\n      response = response.filter(\n        (itm) =>\n          itm.district_id.toString() ===\n          this.state.selected_district_code.toString()\n      );\n    }\n    return search(\n      response,\n      this.state.search_value\n    ) as TrainingCenterItemInterface[];\n  };\n  componentDidMount(): void {\n    this.GetAllCenterTypesDetails();\n    this.GetAllCentersList();\n    this.LoadAllDistricts();\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container mx-auto p-3\">\n          {/* Top menu bar */}\n          <div className=\"bg-white rounded-md p-3\">\n            <div className=\"grid grid-cols-12 gap-2\">\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col pl-2\">\n                  <div className=\"text-2xl font-extrabold\">\n                    Training centers management\n                    {/* <span className=\"text-sm font-bold px-2 rounded-md bg-primary-100 text-primary-800\">\n                  {this.state.selected_status}\n                </span> */}\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    List of centers in different locations\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-span-6 flex flex-row items-center justify-end w-full gap-2\">\n                <div\n                  onClick={() => this.setState({ openSelectTraining: true })}\n                  className={`flex flex-row items-center gap-3 p-1 hover:bg-yellow-50 rounded-md cursor-pointer border ${\n                    this.state.selectedTraining !== null\n                      ? \"border-green-400\"\n                      : \"border-yellow-300\"\n                  } group`}\n                >\n                  <div>\n                    <div\n                      className={`${\n                        this.state.selectedTraining === null\n                          ? \"bg-yellow-100 text-accent-900\"\n                          : \"bg-green-100 text-green-700\"\n                      } rounded-md h-12 w-12 flex items-center justify-center`}\n                    >\n                      <FaChalkboardTeacher className=\"text-3xl\" />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <div className=\"text-sm text-gray-500 group-hover:text-black\">\n                      Filter by training training\n                    </div>\n                    <div\n                      className=\"font-bold text-base -mt-1 truncate\"\n                      style={{ width: \"300px\" }}\n                    >\n                      {this.state.selectedTraining === null ? (\n                        <span className=\"italic text-gray-400\">\n                          Not selected\n                        </span>\n                      ) : (\n                        this.state.selectedTraining.title\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    <MdKeyboardArrowDown className=\"text-2xl text-gray-400 group-hover:text-black\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.loading === true ||\n          this.state.centerTypes === null ||\n          this.state.centers === null ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md mt-2 py-5\">\n              <Loading />\n              <div className=\"text-center text-xl font-light text-gray-500\">\n                Loading, please wait...\n              </div>\n            </div>\n          ) : (\n            <div className=\"bg-white rounded-md mt-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between mb-3 mx-2 gap-3\">\n                <div className=\"relative w-1/3\">\n                  {this.state.openSelectDistrict === false ? (\n                    <div\n                      onClick={() =>\n                        this.setState({\n                          openSelectDistrict: !this.state.openSelectDistrict,\n                        })\n                      }\n                      className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n                    >\n                      <div className=\"w-52 truncate\">\n                        {this.state.selected_district_code === \"\"\n                          ? \"Filter by district\"\n                          : `${this.state.selected_district_code} - ${\n                              this.state.districts.find(\n                                (itm) =>\n                                  itm.district_code.toString() ===\n                                  this.state.selected_district_code.toString()\n                              )?.district_name\n                            }`}\n                      </div>\n                      <div>\n                        <IoIosArrowDown />\n                      </div>\n                    </div>\n                  ) : (\n                    <div\n                      onClick={() =>\n                        this.setState({ openSelectDistrict: false })\n                      }\n                      className=\"font-bold flex flex-row items-center gap-4 cursor-pointer hover:text-accent-900\"\n                    >\n                      <span>Select district</span>\n                      <div>\n                        {this.state.selected_district_code !== \"\" ? (\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selected_district_code: \"\",\n                                openSelectDistrict: false,\n                              })\n                            }\n                            className=\"font-normal text-sm cursor-pointer px-2 py-1 rounded-md bg-accent-400 text-accent-900 flex flex-row items-center justify-center gap-2\"\n                          >\n                            <div>\n                              <BiReset className=\"text-xl\" />\n                            </div>\n                            <span>Reset</span>\n                          </div>\n                        ) : (\n                          <MdClose />\n                        )}\n                      </div>\n                    </div>\n                  )}\n                  {this.state.openSelectDistrict === true && (\n                    <div className=\"w-full absolute mt-2 bg-white\">\n                      <SelectCustom\n                        loading={false}\n                        id={\"district_code\"}\n                        title={\"district_name\"}\n                        close={() =>\n                          this.setState({ openSelectDistrict: false })\n                        }\n                        data={this.state.districts}\n                        click={(response: {\n                          district_code: string;\n                          district_name: string;\n                        }) => {\n                          this.setState({\n                            selected_district_code: response.district_code,\n                            openSelectDistrict: false,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                </div>\n                {/* ------------------------------- */}\n\n                <input\n                  type=\"search\"\n                  className=\"px-3 py-2 rounded w-1/2 border border-gray-400\"\n                  placeholder=\"Search...\"\n                  value={this.state.search_value}\n                  onChange={(e) =>\n                    this.setState({ search_value: e.target.value })\n                  }\n                />\n                {this.state.selectedTraining === null && (\n                  <div className=\"\">\n                    <div className=\"text-sm text-gray-500 truncate\">\n                      Total centers\n                    </div>\n                    <div className=\"text-xl font-bold\">\n                      {this.GetFilteredData().length}\n                    </div>\n                  </div>\n                )}\n                {this.state.selectedTraining === null ? (\n                  <Button\n                    onClick={() => this.setState({ addCenter: true })}\n                    className=\"\"\n                  >\n                    <span className=\"truncate\">Add center</span>\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => {\n                      this.setState({ selectedTraining: null });\n                      this.GetAllCentersList();\n                    }}\n                    className=\"flex flex-row items-center justify-center gap-2\"\n                    theme=\"accent-light\"\n                  >\n                    <div>\n                      <BsArrowLeft className=\"text-2xl\" />\n                    </div>\n                    <span className=\"truncate\">Back to general list</span>\n                  </Button>\n                )}\n                {this.state.selectedTraining !== null ? (\n                  <ExportToExcel\n                    fileData={this.GetFilteredTrainingCenters().map(\n                      (item, i) => ({\n                        No: `${i + 1}`,\n                        \"District Code\": item.district_id,\n                        \"District Name\": item.district_name,\n                        \"Center Name\": item.center_name,\n                        \"Room Number\": item.group_id,\n                        \"Room Name\": item.name,\n                        \"Number of trainees\": item.number_of_trainees,\n                      })\n                    )}\n                    fileName={`${this.state.selectedTraining.title} - List of training centers and rooms`}\n                    className=\"py-2 rounded flex flex-row items-center justify-center gap-2 px-3 border border-green-600 hover:bg-green-600 hover:text-white text-green-600 font-bold\"\n                    btnName=\"Download\"\n                  />\n                ) : (\n                  <ExportToExcel\n                    fileData={this.GetFilteredData().map((item, i) => ({\n                      No: `${i + 1}`,\n                      \"District Code\": item.district_id,\n                      \"District Name\": item.district_name,\n                      \"Center Name\": item.center_name,\n                      \"Center Category\": item.center_type_name,\n                    }))}\n                    fileName={`List of all training centers`}\n                    className=\"py-2 rounded flex flex-row items-center justify-center gap-2 px-3 border border-green-600 hover:bg-green-600 hover:text-white text-green-600 font-bold\"\n                    btnName=\"Download\"\n                  />\n                )}\n              </div>\n              {/* Centers list */}\n              {this.state.selectedTraining === null ? (\n                <CentersList\n                  GetFilteredData={this.GetFilteredData}\n                  centers={this.state.centers}\n                  districts={this.state.districts}\n                />\n              ) : (\n                this.state.trainingCenters !== null && (\n                  <TrainingCentersList\n                    GetFilteredData={this.GetFilteredTrainingCenters}\n                    centers={this.state.trainingCenters}\n                    districts={this.state.districts}\n                  />\n                )\n              )}\n            </div>\n          )}\n        </div>\n        {this.state.addCenter === true && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ addCenter: false })}\n            backDropClose={false}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n              footer: undefined,\n            }}\n            title=\"Add training center\"\n            widthSizeClass={ModalSize.large}\n          >\n            {this.state.centerTypes !== null && (\n              <AddCenter\n                districts={this.state.districts}\n                centerTypes={this.state.centerTypes}\n                onCreated={() => this.GetAllCentersList()}\n              />\n            )}\n          </Modal>\n        )}\n        {this.state.openSelectTraining === true && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ openSelectTraining: false })}\n            backDropClose={true}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n              footer: undefined,\n            }}\n            title=\"Available trainings\"\n            widthSizeClass={ModalSize.maxWidth}\n            marginTop={ModalMarginTop.small}\n          >\n            <div className=\"-mt-5\">\n              {this.state.centerTypes !== null && (\n                <TrainingsList\n                  onSelected={(data: TrainingByImplementationStatusDetails) => {\n                    this.setState({\n                      openSelectTraining: false,\n                      selectedTraining: data,\n                    });\n                    this.GetAllCentersListByTrainingSelected(data.id);\n                  }}\n                />\n              )}\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const CentersManagement = connect(\n  mapStateToProps,\n  {}\n)(_CentersManagement);\n"],"sourceRoot":""}
>>>>>>>> 9bbac69f6af6c76cba2a0c5b90ff37fe37d29df2:static/js/32.d2bd56d9.chunk.js.map
