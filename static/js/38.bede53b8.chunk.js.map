{"version":3,"sources":["components/PopUpContainer/PopUpContainer.tsx","trainingModule/TrainingOffers/components/TrainingItem.tsx","actions/training_approval.action.ts","trainingModule/TrainingApproval/components/TrainingsList.tsx","trainingModule/TrainingApproval/DDETrainingApproval.tsx"],"names":["PopUpContainer","className","this","props","children","Component","TrainingItem","item","title","description","DATE","start_date","end_date","development_partner_name","theme","onClick","i","GetTrainingsFromSelectedDistrict","district_code","setResponse","axios","get","TRAINING_APP_URL","res","console","log","data","type","msg","returnErrorToText","TrainingsList","ReturnFilterTrainings","search","trainings_list","state","search_data","loading","onGoBack","placeholder","value","onChange","e","setState","target","length","map","centers","development_partner_id","id","toString","implementation_status","intervention_area","intervantion_area","intervention_area_id","intervation_id","partner_type_name","sub_area_id","sub_area_name","subarea_name","topic","topic_name","topic_id","total","trainee_category","trainee_criteria","positions","qualifications","levels","districts","sectors","subjects","strict","trainee_request_id","training_to_group_id","onSelected","_DDETrainingApproval","GetDistrictsList","FC_GetDistrictList","status","districts_list","district_name","province_code","error","FC_GetTrainingsListToBeApproved","selected_district","FC_GetTrainingsList","response","undefined","find","itm","training_id","FC_GetTrainingSchools","selected_training","filter","push","school_code","school_name","chooseTrainingProvider","Button","Loading","DDETrainingApproval","connect","basic","auth"],"mappings":"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","file":"static/js/38.bede53b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\ninterface PopUpContainerProps {\n  children: React.ReactNode;\n  className?: string;\n}\ninterface PopUpContainerState {}\n\nexport class PopUpContainer extends Component<\n  PopUpContainerProps,\n  PopUpContainerState\n> {\n  render() {\n    return (\n      <div className=\"bg-black bg-opacity-20 absolute top-0 right-0 left-0 bottom-0 p-2 md:p-10 flex items-center justify-center animate__animated animate__fadeIn h-screen\">\n        <div\n          className={`bg-white rounded-md h-full w-full overflow-y-auto shadow-xl animate__animated animate__fadeInUp ${this.props.className}`}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsArrowUpRight, BsFillArrowRightCircleFill } from \"react-icons/bs\";\nimport { IoMdTime } from \"react-icons/io\";\nimport { MdOutlineAddModerator } from \"react-icons/md\";\nimport { GetTrainingsListByStatusInterface } from \"../../../actions/training-offers\";\nimport Button from \"../../../components/Buttons/Button\";\nimport { DATE } from \"../../../utils/functions\";\n\ninterface TrainingItemProps {\n  i: number;\n  item: GetTrainingsListByStatusInterface;\n  onClick: () => void;\n}\ninterface TrainingItemState {}\n\nexport class TrainingItem extends Component<\n  TrainingItemProps,\n  TrainingItemState\n> {\n  render() {\n    return (\n      <div\n        key={this.props.i}\n        className=\"bg-white border border-primary-300 hover:border-primary-500 mt-3 rounded-md flex flex-col lg:flex-row items-end lg:items-center justify-between gap-2 p-4 group animate__animated animate__fadeIn\"\n      >\n        <div className=\"flex flex-col md:flex-row gap-5 w-full\">\n          {/* Icon here */}\n          <div>\n            <div className=\"relative bg-accent-400 text-accent-900 rounded-lg p-4 h-24 w-24\">\n              <div className=\"px-1 rounded-xl bg-primary-700 text-white w-max font-bold absolute text-xs top-0 right-0 -mt-2 -mr-2 animate__animated animate__fadeIn\">\n                New\n              </div>\n              <div>\n                <MdOutlineAddModerator className=\"text-6xl\" />\n              </div>\n            </div>\n          </div>\n          {/* Details here */}\n          <div className=\"flex flex-col\">\n            <div className=\"text-lg font-bold mb-1\">\n              {this.props.item.title}\n            </div>\n\n            <div className=\"text-sm text-black font-light\">\n              {this.props.item.description}\n            </div>\n            {/* Time date */}\n            <div className=\"flex flex-row items-center gap-4 mt-2\">\n              {/* Start date */}\n              <div className=\"flex flex-row items-center gap-2\">\n                <div>\n                  <IoMdTime className=\"text-3xl text-accent-900\" />\n                </div>\n                <div className=\"flex flex-col\">\n                  <div className=\"text-sm text-gray-500\">Start date</div>\n                  <div className=\"font-bold text-sm\">\n                    {DATE(this.props.item.start_date, \"DD/MM/YYYY\")}\n                  </div>\n                </div>\n              </div>\n              {/* ........ */}\n              <div className=\"flex flex-row items-center gap-3\">\n                <div className=\"h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n                <div className=\"h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n                <div className=\"h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n                <div className=\"hidden md:block h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n                <div className=\"hidden md:block h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n                <div className=\"hidden md:block h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n              </div>\n              {/* Ending date */}\n              <div className=\"flex flex-row items-center gap-2\">\n                <div>\n                  <IoMdTime className=\"text-3xl text-accent-900\" />\n                </div>\n                <div className=\"flex flex-col\">\n                  <div className=\"text-sm text-gray-500\">Ending date</div>\n                  <div className=\"font-bold text-sm\">\n                    {DATE(this.props.item.end_date, \"DD/MM/YYYY\")}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-2 mt-3\">\n              <div>\n                <BsFillArrowRightCircleFill className=\"text-accent-800\" />\n              </div>\n              <span className=\"text-sm\">\n                Provider: {this.props.item.development_partner_name}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"\">\n          <Button\n            className=\"w-40 bg-accent-400 border-accent-500 group-hover:bg-accent-800 group-hover:border-accent-800 group-hover:text-black flex flex-row items-center justify-center gap-2\"\n            theme=\"accent-light\"\n            onClick={this.props.onClick}\n          >\n            <span>More details</span>\n            <div>\n              <BsArrowUpRight className=\"text-xl\" />\n            </div>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport { TRAINING_APP_URL } from \"../config/app.config\";\nimport { returnErrorToText } from \"../utils/functions\";\nimport { TrainingImplementationStatus } from \"./training-offers\";\n\nexport interface DistrictListTrainingsListInterface {\n  id: number;\n  school_code: number | null;\n  school_name: string | null;\n  total: number | null;\n  training_id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervation_id: number;\n  intervantion_area: string;\n  sub_area_id: number;\n  subarea_name: string;\n  topic_id: number;\n  topic_name: string;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n}\n\nexport interface GetTrainingsToBeApprovedListInterface {\n  id: number;\n  training_id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervation_id: number;\n  intervantion_area: string;\n  sub_area_id: number;\n  subarea_name: string;\n  topic_id: number;\n  topic_name: string;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n}\n\n// ************* Functions -------------------------------------------------------------------------------\n\n// Get to be trained on district level\nexport const GetTrainingsFromSelectedDistrict = async (\n  district_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: DistrictListTrainingsListInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<DistrictListTrainingsListInterface[]>(\n      `${TRAINING_APP_URL}/district/training/${district_code}`\n    );\n    console.log(\"Trainings list: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n","import React, { Component } from \"react\";\nimport { BsArrowLeft, BsCalendar2Range } from \"react-icons/bs\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { GetTrainingsListByStatusInterface } from \"../../../actions/training-offers\";\nimport { GetTrainingsToBeApprovedListInterface } from \"../../../actions/training_approval.action\";\nimport { search } from \"../../../utils/functions\";\nimport { TrainingItem } from \"../../TrainingOffers/components/TrainingItem\";\n\ninterface TrainingsListProps {\n  trainings_list: GetTrainingsToBeApprovedListInterface[];\n  selected_training: GetTrainingsToBeApprovedListInterface | null;\n  onSelected: (data: GetTrainingsToBeApprovedListInterface) => void;\n  onGoBack: () => void;\n}\ninterface TrainingsListState {\n  search_data: string;\n  loading: boolean;\n}\n\nexport class TrainingsList extends Component<\n  TrainingsListProps,\n  TrainingsListState\n> {\n  constructor(props: TrainingsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      search_data: \"\",\n    };\n  }\n  ReturnFilterTrainings = () => {\n    return search(\n      this.props.trainings_list,\n      this.state.search_data\n    ) as GetTrainingsListByStatusInterface[];\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"flex flex-row items-center gap-3 justify-between px-2 py-2 pb-4 mb-4 border-b border-gray-300\">\n          <div className=\"flex flex-row items-center gap-3 w-full\">\n            <div>\n              <div\n                onClick={this.props.onGoBack}\n                className=\"p-1 rounded-full bg-accent-400 h-12 w-12 flex items-center justify-center cursor-pointer\"\n              >\n                <BsArrowLeft className=\"text-3xl text-accent-900 animate__animated animate__zoomIn\" />\n              </div>\n            </div>\n            <div className=\"truncate\">\n              <div className=\"text-xl font-bold\">Trainings list</div>\n              <div className=\"text-gray-500\">\n                Choose or select a training from the list\n              </div>\n            </div>\n          </div>\n          {/* Search */}\n          <div className=\"relative w-full\">\n            <div className=\"absolute px-3 py-2\">\n              <RiSearchLine className=\"text-2xl text-gray-600\" />\n            </div>\n            <input\n              type=\"search\"\n              className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded\"\n              placeholder=\"Search...\"\n              value={this.state.search_data}\n              onChange={(e) => this.setState({ search_data: e.target.value })}\n            />\n          </div>\n        </div>\n        {/* Trainings list */}\n        {this.props.trainings_list.length === 0 ? (\n          <div>\n            <div className=\"flex flex-col items-center justify-center bg-gray-100 rounded-md p-6\">\n              <div className=\"mb-2\">\n                <BsCalendar2Range className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n              </div>\n              <div className=\"text-xl font-bold\">No trainings available</div>\n              <div className=\"text-sm\">\n                No trainings available for the selected district to be approved\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {this.props.trainings_list.map((item, i) => (\n              <TrainingItem\n                i={i + 1}\n                item={{\n                  centers: [],\n                  description: item.description,\n                  development_partner_id: item.development_partner_id,\n                  development_partner_name: item.development_partner_name,\n                  end_date: item.end_date,\n                  id: item.id.toString(),\n                  implementation_status: item.implementation_status,\n                  intervention_area: item.intervantion_area,\n                  intervention_area_id: item.intervation_id,\n                  partner_type_name: \"\",\n                  start_date: item.start_date,\n                  sub_area_id: item.sub_area_id,\n                  sub_area_name: item.subarea_name,\n                  title: item.title,\n                  topic: item.topic_name,\n                  topic_id: item.topic_id,\n                  total: 0,\n                  trainee_category: [],\n                  trainee_criteria: {\n                    positions: [],\n                    qualifications: [],\n                    levels: [],\n                    districts: [],\n                    sectors: [],\n                    subjects: [],\n                    strict: false,\n                  },\n                  trainee_request_id: \"\",\n                  training_to_group_id: \"\",\n                }}\n                onClick={() => this.props.onSelected(item)}\n                key={i + 1}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { HiOutlineSelector } from \"react-icons/hi\";\nimport { MdOutlineGppGood } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, DistrictList, FC_GetDistrictList } from \"../../actions\";\nimport {\n  DistrictListTrainingsListInterface,\n  GetTrainingsFromSelectedDistrict,\n  GetTrainingsToBeApprovedListInterface,\n} from \"../../actions/training_approval.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { PopUpContainer } from \"../../components/PopUpContainer/PopUpContainer\";\nimport { StoreState } from \"../../reducers\";\nimport { TrainingsList } from \"./components/TrainingsList\";\n\nexport interface SelectedDistrictInterface {\n  district_code: string;\n  district_name: string;\n  province_code: string;\n}\n\ninterface DDETrainingApprovalProps {\n  basic: Basic;\n  auth: Auth;\n}\ninterface DDETrainingApprovalState {\n  loading: boolean;\n  selected_district: SelectedDistrictInterface | null;\n  districts_list: SelectedDistrictInterface[] | null;\n  error: string;\n  chooseTrainingProvider: boolean;\n  trainings_list: DistrictListTrainingsListInterface[] | null;\n  selected_training: GetTrainingsToBeApprovedListInterface | null;\n}\n\nclass _DDETrainingApproval extends Component<\n  DDETrainingApprovalProps,\n  DDETrainingApprovalState\n> {\n  constructor(props: DDETrainingApprovalProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      districts_list: null,\n      selected_district: {\n        district_code: \"28\",\n        district_name: \"Nyagatare\",\n        province_code: \"2\",\n      },\n      // this.props.auth.district !== null\n      //   ? {\n      //       district_code: this.props.auth.district.district_code,\n      //       district_name: this.props.auth.district.district_name,\n      //       province_code: this.props.auth.district.province_code,\n      //     }\n      //   : null,\n      chooseTrainingProvider: false,\n      trainings_list: null,\n      selected_training: null,\n    };\n  }\n  GetDistrictsList = () => {\n    this.setState({ loading: true });\n    FC_GetDistrictList((status: boolean, data: DistrictList[], msg: string) => {\n      if (status === true) {\n        this.setState({\n          loading: false,\n          districts_list: data.map((item) => ({\n            district_code: item.district_code,\n            district_name: item.district_name,\n            province_code: \"\",\n          })),\n          error: \"\",\n        });\n      }\n    });\n  };\n  FC_GetTrainingsListToBeApproved = () => {\n    this.state.selected_district !== null &&\n      GetTrainingsFromSelectedDistrict(\n        this.state.selected_district.district_code,\n        (\n          loading: boolean,\n          res: {\n            type: \"success\" | \"error\";\n            msg: string;\n            data: DistrictListTrainingsListInterface[] | null;\n          } | null\n        ) => {\n          this.setState({ loading: loading });\n          if (res !== null && res.type === \"success\" && res.data !== null) {\n            this.setState({ trainings_list: res.data, loading: false });\n          }\n          if (res !== null && res.type === \"error\") {\n            this.setState({\n              trainings_list: [],\n              loading: false,\n              error: res.msg,\n            });\n          }\n        }\n      );\n  };\n  // GetTrainingsList\n  FC_GetTrainingsList = (): GetTrainingsToBeApprovedListInterface[] => {\n    if (this.state.trainings_list !== null) {\n      var response: GetTrainingsToBeApprovedListInterface[] = [];\n      for (const item of this.state.trainings_list) {\n        if (\n          response.find((itm) => itm.id.toString() === item.id.toString()) ===\n          undefined\n        ) {\n          response = [\n            ...response,\n            {\n              description: item.description,\n              development_partner_id: item.development_partner_id,\n              development_partner_name: item.development_partner_name,\n              end_date: item.end_date,\n              id: item.id,\n              implementation_status: item.implementation_status,\n              intervantion_area: item.intervantion_area,\n              intervation_id: item.intervation_id,\n              start_date: item.start_date,\n              sub_area_id: item.sub_area_id,\n              subarea_name: item.subarea_name,\n              title: item.title,\n              topic_id: item.topic_id,\n              topic_name: item.topic_name,\n              training_id: item.training_id,\n            },\n          ];\n        }\n      }\n      return response;\n    }\n    return [];\n  };\n  FC_GetTrainingSchools = (): {\n    school_code: string;\n    school_name: string;\n    total: number;\n  }[] => {\n    if (\n      this.state.selected_training === null ||\n      this.state.trainings_list === null\n    ) {\n      return [];\n    } else {\n      var response: {\n        school_code: string;\n        school_name: string;\n        total: number;\n      }[] = [];\n      if (this.state.selected_training !== null) {\n        for (const item of this.state.trainings_list.filter(\n          (itm) => itm.id === this.state.selected_training?.id\n        )) {\n          response.push({\n            school_code:\n              item.school_code === null ? \"\" : item.school_code.toString(),\n            school_name: item.school_name === null ? \"\" : item.school_name,\n            total: item.total === null ? 0 : item.total,\n          });\n        }\n      }\n      return response;\n    }\n    return [];\n  };\n  componentDidMount(): void {\n    if (this.state.selected_district === null) {\n      //   Loading all districts list\n      this.GetDistrictsList();\n    }\n    if (this.state.trainings_list === null) {\n      this.FC_GetTrainingsListToBeApproved();\n    }\n  }\n  render() {\n    return (\n      <div className=\"container mx-auto p-3 relative h-full\">\n        <div>\n          <div className=\"bg-white rounded p-2\">\n            <div className=\"flex flex-col lg:flex-row lg:justify-between gap-2 w-full\">\n              <div className=\"flex flex-row items-center gap-2 w-full lg:w-1/2\">\n                <div>\n                  <div className=\"h-14 w-14 rounded-md bg-accent-400 text-accent-900 flex items-center justify-center\">\n                    <MdOutlineGppGood className=\"text-5xl\" />\n                  </div>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-xl font-bold\">\n                    Training participants approval\n                  </span>\n                  <span className=\"text-sm text-gray-500\">\n                    View list of selected participants for the training\n                  </span>\n                </div>\n              </div>\n              {/* Select DP */}\n              <div className=\"w-full lg:w-1/2\">\n                <div\n                  onClick={() =>\n                    this.state.loading === false &&\n                    this.setState({\n                      chooseTrainingProvider:\n                        !this.state.chooseTrainingProvider,\n                    })\n                  }\n                  className=\"bg-gray-100 hover:bg-accent-400 border border-white hover:border-accent-500 w-full pl-3 py-1 pr-1 rounded flex flex-row items-center justify-between gap-20 group cursor-pointer animate__animated animate__fadeIn\"\n                >\n                  {this.state.selected_training !== null ? (\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-black text-sm\">\n                        Selected training\n                      </span>\n                      <div className=\"font-bold group-hover:text-yellow-700\">\n                        {this.state.selected_training.title}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-lg font-normal pl-2 text-gray-500\">\n                      No training selected!\n                    </div>\n                  )}\n                  <div className=\"\">\n                    <div className=\"bg-white group-hover:bg-accent-900 group-hover:text-white rounded p-1 flex items-center justify-center\">\n                      <HiOutlineSelector className=\"text-4xl text-accent-900 group-hover:text-white\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Body */}\n        <div className=\"h-full\">\n          {/* Filter and search training */}\n          {this.state.loading === false ? (\n            this.state.selected_training === null ? (\n              <div>\n                <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6 mt-3\">\n                  <div className=\"mb-2\">\n                    <FaChalkboardTeacher className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n                  </div>\n                  <div className=\"text-xl font-bold\">\n                    Select training for approval\n                  </div>\n                  <div className=\"text-sm\">\n                    No training selected to be approved, click to select\n                    training\n                  </div>\n                  <Button\n                    onClick={() =>\n                      this.state.loading === false &&\n                      this.setState({\n                        chooseTrainingProvider:\n                          !this.state.chooseTrainingProvider,\n                      })\n                    }\n                    className=\"mt-3\"\n                  >\n                    Select training\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-white rounded my-2 p-2 h-full\">\n                <div className=\"text-xl font-light\">\n                  <table className=\"w-full text-left text-sm\">\n                    <thead>\n                      <tr className=\"border-b border-gray-300\">\n                        <th className=\"px-3 py-3 border border-gray-300\">#</th>\n                        <th className=\"px-3 py-3 border border-gray-300\">\n                          School code\n                        </th>\n                        <th className=\"px-3 py-3 border border-gray-300\">\n                          School name\n                        </th>\n                        <th className=\"px-3 py-3 border border-gray-300\">\n                          Total required\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.FC_GetTrainingSchools().map((item, i) => (\n                        <tr key={i + 1}>\n                          <td className=\"px-3 py-2 border border-gray-300\">\n                            {i + 1}\n                          </td>\n                          <td className=\"px-3 py-2 border border-gray-300\">\n                            {item.school_code === \"\"\n                              ? this.state.selected_district?.district_code\n                              : item.school_code}\n                          </td>\n                          <td className=\"px-3 py-2 border border-gray-300\">\n                            {item.school_name === \"\"\n                              ? this.state.selected_district?.district_name\n                              : item.school_name}\n                          </td>\n                          <td className=\"px-3 py-2 border border-gray-300\">\n                            {item.total}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            )\n          ) : (\n            <div className=\"flex flex-col items-center justify-center p-6 bg-white rounded my-4\">\n              <Loading />\n              <div className=\"text-center font-light text-lg\">\n                Loading, please wait...\n              </div>\n            </div>\n          )}\n        </div>\n        {this.state.chooseTrainingProvider === true &&\n          this.state.trainings_list !== null && (\n            <PopUpContainer className=\"p-3 px-4\">\n              <TrainingsList\n                onGoBack={() =>\n                  this.setState({ chooseTrainingProvider: false })\n                }\n                trainings_list={this.FC_GetTrainingsList()}\n                selected_training={this.state.selected_training}\n                onSelected={(data: GetTrainingsToBeApprovedListInterface) => {\n                  this.setState({\n                    chooseTrainingProvider: false,\n                    selected_training: data,\n                  });\n                }}\n              />\n            </PopUpContainer>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  basic,\n  auth,\n}: StoreState): { basic: Basic; auth: Auth } => {\n  return { basic: basic, auth: auth };\n};\n\nexport const DDETrainingApproval = connect(\n  mapStateToProps,\n  {}\n)(_DDETrainingApproval);\n"],"sourceRoot":""}