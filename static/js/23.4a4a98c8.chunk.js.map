{"version":3,"sources":["types/PlacementReportTypes.ts","utils/validatedStaff.ts","components/PlacementListPreview/PlacementListPreview.tsx","containers/CreatePlacementList/CreatePlacementList.tsx"],"names":["SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","full_name","title","status","isChangeAllowed","nid","sex","dob","marital_status","phone_numbers","email","qualification","position","subjects","grades","specialization","role","date_of_hire","date_in_school","school_name","school_code","school_category","school_status","district_name","forReportRoles","system","country","district","school","FC_GetStringValue","value","FC_isDateValid","DATE","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","periods","element","includes","push","isEmptyOrSpaces","course_name","grade_code","findIndex","item","index","JSON","parse","grade_group","length","grade_name","FC_ConvertArrayToString","Number","teaching_period","toString","dateWrapper","Date","isNaN","getDate","ValidatePosition","staff","schools_positions","positionFound","find","itm","position_code","match_position","undefined","position_name","qualification_id","qualification_name","validateAuthUser","auth","errors","user","validated","first_name","last_name","hired_date","role_id","validateStaff","nationality","containsNumbersOnly","passport","dateYear","getFullYear","staff_code","teaching_level_id","education_certificate_id","PlacementListPreview","placement_list","footer","header","className","filter","map","i","Hierachy","location","district_code","staff_category","middle_name","rssb_number","bank_account","bank_name","nationality_id","start_date_in_the_school","_PlacementList","props","submitLogin","e","preventDefault","componentDidMount","RenderPageAccess","access","UsersAccess","HEADTEACHER_CREATE_PLACEMENT_LIST","startApp","basic","academic_calender","setState","error","target","msg","FC_GetTeachersBySchool","data","loading_data","roles","req","FC_GetSchoolsPositions","data_positions","err","school_positions_loading","UpdatePlacement","el","submitList","substring","loading_placement_submit","FC_SubmitPlacementList","academic_year_id","list","stringify","state","month","MONTHS_LIST","getMonth","ht_comment","selected_month","setTimeout","setApprovedList","approved_list","SelectAll","DeSelectAll","loading","selected_role","selected_request_id","selected_value","selected_comment","selected_auto_level","search","selected_qualification","accepted_changes","selected_check_validation","this","to","RequestsList","user_id","username","theme","fixed","size","onClick","disabled","type","onSubmit","label","name","onChange","placeholder","full","qualifications","colSpan","existOnPlacement","validatedCheck","validatePositionCandidate","bind","React","Component","CreatePlacementList","connect"],"mappings":"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","file":"static/js/23.4a4a98c8.chunk.js","sourcesContent":["import {\n  DATE,\n  FC_ConvertArrayToString,\n  isEmptyOrSpaces,\n} from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  // staff_code: string;\n  full_name: string;\n  // first_name: string;\n  // last_name: string;\n  nid: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  // nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  // staff_category: string;\n  // rssb_number: string;\n  // bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  // region_code: string;\n  // LOCATION INFO ##############\n  // village_name: string;\n  // cell_name: string;\n  // cell_code: string;\n  // sector_code: string;\n  district_name: string;\n  // district_code: string;\n  // province_name: string;\n  // province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  // periods: string;\n  // NEW FIELD =====================\n  date_in_school: string;\n  date_of_hire: string;\n  // nationality: string;\n  // middle_name: string;\n  // bank_name: string;\n  sector_name: string;\n  teaching_level: string;\n  education_certificate: string;\n  // END NEW FIELD =================\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  // first_name = \"first_name\",\n  // last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  nid = \"nid\",\n  // rssb_number = \"rssb_number\",\n  // nationality_id = \"nationality_id\",\n  // bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  // staff_category = \"staff_category\",\n  // staff_code = \"staff_code\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  // region_code = \"region_code\",\n  // village_name = \"village_name\",\n  // cell_name = \"cell_name\",\n  // cell_code = \"cell_code\",\n  // sector_name = \"sector_name\",\n  // sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  // district_code = \"district_code\",\n  // province_name = \"province_name\",\n  // province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  // periods = \"periods\",\n\n  // NEW FIELDS ================\n  date_in_school = \"date_in_school\",\n  date_of_hire = \"date_of_hire\",\n  // nationality = \"nationality\",\n  // middle_name = \"middle_name\",\n  // bank_name = \"bank_name\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    //* ADD TEACHING LEVEL\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    //* CERTIFIED / NON-CERTIFIED\n    {\n      key: PlacementReportActiveContentKeyInterface.status,\n      title: \"Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_in_school,\n      title: \"Date in school\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.staff_code,\n    //   title: \"Staff code\",\n    //   status: true,\n    //   isChangeAllowed: false,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.first_name,\n    //   title: \"Staff First Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.middle_name,\n    //   title: \"Staff Middle Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.last_name,\n    //   title: \"Staff Last Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.rssb_number,\n    //   title: \"RSSB\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.bank_name,\n    //   title: \"Bank name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.bank_account,\n    //   title: \"Bank account\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.district_code,\n    //   title: \"District Code\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.nationality,\n    //   title: \"Nationality\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.periods,\n    //   title: \"Periods\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  system: string[];\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  system: [\"26\", \"Admin\"],\n  country: [\"REB\", \"4\", \"RTB\", \"300\", \"MINECOFIN\", \"27\", \"26\", \"Admin\"],\n  district: [\"DDE\", \"3\", \"Human Resource\", \"25\"],\n  school: [\"Head Teacher\", \"Teacher\", \"2\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | Date | null): string => {\n  if (value === null) return \"\";\n  if (FC_isDateValid(value)) return DATE(value);\n  return value as string;\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: string[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(\n          FC_ConvertArrayToString(JSON.parse(element.grade_group))\n        );\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | Date | null): boolean => {\n  if (value === null) return false;\n  var dateWrapper = new Date(value);\n  return !isNaN(dateWrapper.getDate());\n};\n","import { Auth, SchoolPositions, TeacherData } from \"../actions\";\nimport { ProfileType } from \"../types/userInfo\";\nimport { containsNumbersOnly } from \"./functions\";\n\nexport const ValidatePosition = (\n  staff: TeacherData,\n  schools_positions: SchoolPositions[]\n): {\n  position: {\n    position_code: string | null;\n    position_name: string | null;\n    qualification_id: string | null;\n    qualification_name: string | null;\n  };\n  match_position: boolean;\n} => {\n  let positionFound = schools_positions.find(\n    (itm) => staff.position_code === itm.position_code\n  );\n\n  return {\n    match_position: positionFound === undefined ? false : true,\n    position:\n      positionFound !== undefined\n        ? {\n            position_code: positionFound?.position_code,\n            position_name: positionFound?.position_name,\n            qualification_id: positionFound?.qualification_id,\n            qualification_name: positionFound?.qualification_name,\n          }\n        : {\n            position_code: \"\",\n            position_name: staff.position,\n            qualification_id: \"\",\n            qualification_name: \"\",\n          },\n  };\n};\n\n// ********** Placement report validator ***********\nconst validateStaff = (\n  staff: TeacherData\n): { validated: boolean; errors: string[] } => {\n  let errors: string[] = [];\n\n  // first name\n  if (!staff.first_name || staff.first_name.length <= 2)\n    errors.push(\"First name is not valid\");\n\n  // last name\n  if (!staff.last_name || staff.last_name.length <= 2)\n    errors.push(\"Last name is not valid\");\n\n  // // bank name\n  // if (!staff.bank_name || staff.bank_name.length <= 2)\n  //   errors.push(\"Bank name is not valid\");\n\n  // // bank account\n  // if (!staff.bank_account || staff.bank_account.length <= 2)\n  //   errors.push(\"Bank account number is not valid\");\n\n  // bank account\n  if (!staff.full_name || staff.full_name.length <= 2)\n    errors.push(\"Full names\");\n\n  // hired date\n  if (!staff.hired_date || staff.hired_date.length <= 2)\n    errors.push(\"Hired date is not valid\");\n\n  // martial status\n  if (!staff.marital_status || staff.marital_status.length <= 2)\n    errors.push(\"Martial status not valid\");\n\n  // National status\n  if (!staff.nationality || staff.nationality.length <= 2)\n    errors.push(\"Nationality is not valid\");\n\n  // National status\n  if (staff.nid && staff.nid.length >= 2) {\n    if (staff.nid.length !== 16) errors.push(\"NID is not valid\");\n    if (!containsNumbersOnly(staff.nid))\n      errors.push(\"NID should be numbers only\");\n  }\n\n  if (\n    (!staff.nid || staff.nid.length <= 0) &&\n    (!staff.passport || staff.passport.length <= 0)\n  ) {\n    errors.push(\"Provide NID or a passport\");\n  }\n\n  // Phone number\n  if (!staff.dob || staff.dob.length <= 2)\n    errors.push(`DOB is not valid (${staff.dob})`);\n\n  if (staff.dob) {\n    let dateYear = new Date(staff.dob).getFullYear();\n    if (dateYear >= 2006 || dateYear <= 1940)\n      errors.push(`DOB is not valid (${staff.dob})`);\n  }\n\n  if (!staff.hired_date || staff.hired_date.length <= 2)\n    errors.push(`Hire date is not valid (${staff.hired_date})`);\n\n  if (staff.hired_date) {\n    let dateYear = new Date(staff.hired_date).getFullYear();\n    if (dateYear <= 1955)\n      errors.push(`Hire date is not valid (${staff.hired_date})`);\n  }\n\n  // Phone number\n  if (!staff.phone_numbers || staff.phone_numbers.length <= 8)\n    errors.push(\"Phone number is not valid\");\n\n  // Phone number\n  if (!staff.position || staff.position.length <= 2)\n    errors.push(\"No selected position\");\n\n  // Qualification\n  if (!staff.qualification || staff.qualification.length <= 1)\n    errors.push(\"No selected qualification\");\n\n  // Role\n  if (!staff.role || staff.role.length <= 2) errors.push(\"No selected role\");\n\n  // // RSSB number\n  // if (!staff.rssb_number || staff.rssb_number.length <= 4)\n  //   errors.push(\"Invalid RSSB Number\");\n\n  // School\n  if (\n    !staff.school ||\n    !staff.school?.school_name ||\n    staff.school?.school_name.length <= 1\n  )\n    errors.push(\"Invalid School\");\n\n  // No sex selected\n  if (!staff.sex || staff.sex.length <= 2) errors.push(\"No sex selected\");\n\n  // Specialization\n  if (!staff.specialization || staff.specialization.length <= 2)\n    errors.push(\"Invalid specialization\");\n\n  // Specialization\n  if (!staff.staff_code || staff.staff_code.length <= 2)\n    errors.push(\"Invalid Staff category\");\n\n  // Hierarch\n  if (staff.role_id === \"1\")\n    if (!staff.teacher_hierarch || staff.teacher_hierarch.length <= 0)\n      errors.push(\"This user is a teacher, and must have at least one course\");\n\n  // Role\n  if (!staff.role || staff.role.length <= 0)\n    errors.push(\"Your role id is not validated\");\n\n  if (!staff.teaching_level_id || staff.teaching_level_id.length <= 2)\n    errors.push(\"Teaching level does not found\");\n\n  if (\n    !staff.education_certificate_id ||\n    staff.education_certificate_id.length <= 2\n  )\n    errors.push(\"Education certificate does not found\");\n\n  return {\n    errors: errors,\n    validated: errors.length > 0 ? false : true,\n  };\n};\n\n//*********************************************************************** */\n\nexport const validateAuthUser = (\n  auth: Auth\n): { validated: boolean; errors: string[] } => {\n  let errors: string[] = [];\n\n  if (!auth.user)\n    return {\n      validated: false,\n      errors: [\n        \"You are not authenticated, please refresh your browser or login later\",\n      ],\n    };\n  let staff = auth.user;\n\n  // first name\n  if (!auth.user?.first_name || staff.first_name.length <= 2)\n    errors.push(\"First name is not valid\");\n\n  // last name\n  if (!staff.last_name || staff.last_name.length <= 2)\n    errors.push(\"Last name is not valid\");\n\n  // // bank name\n  // if (!staff.bank_id || staff.bank_id.length <= 0)\n  //   errors.push(\"Bank is not valid\");\n\n  // // bank account\n  // if (!staff.bank_account || staff.bank_account.length <= 2)\n  //   errors.push(\"Bank account number is not valid\");\n\n  // bank account\n  if (!staff.full_name || staff.full_name.length <= 2)\n    errors.push(\"Full names\");\n\n  // hired date\n  if (!staff.hired_date || staff.hired_date.length <= 2)\n    errors.push(\"Hired date is not valid\");\n\n  // martial status\n  if (!staff.marital_status || staff.marital_status.length <= 2)\n    errors.push(\"Martial status not valid\");\n\n  // National status\n  // if (!staff.nationality_id || staff.nationality_id.length <= 2)\n  //   errors.push(\"Nationality is not valid\");\n\n  // National status\n  if (!staff.nid || staff.nid.length <= 4) errors.push(\"NID is not valid\");\n\n  // Phone number\n  if (!staff.phone_numbers || staff.phone_numbers.length <= 8)\n    errors.push(\"Phone number is not valid\");\n\n  // position\n  if (!auth.position || !auth.position.position_code)\n    errors.push(\"You have no position, please ask your head teacher\");\n\n  // Role\n  if (!auth.role || !auth.role.role_id)\n    errors.push(\"There is no role assigned to you\");\n\n  // // RSSB number\n  // if (!staff.rssb_number || staff.rssb_number.length <= 4)\n  //   errors.push(\"Invalid RSSB Number\");\n\n  // School\n  if (\n    !auth.school ||\n    !auth.school?.school_name ||\n    auth.school?.school_name.length <= 1\n  )\n    errors.push(\"No schools found assigned to you!\");\n\n  // No sex selected\n  if (!staff.sex || staff.sex.length <= 2) errors.push(\"No sex selected\");\n\n  // Specialization\n  // if (!staff.specialization || staff.specialization.length <= 2)\n  //   errors.push(\"Invalid specialization\");\n\n  // Specialization\n  // if (!staff.staff_code || staff.staff_code.length <= 2)\n  //   errors.push(\"Invalid Staff category\");\n\n  // Role\n  if (!auth.role || auth.role?.role_id.length <= 0)\n    errors.push(\"Your role id is not validated\");\n\n  // if (!staff.teaching_level_id || staff.teaching_level_id.length <= 0)\n  //   errors.push(\"Your teaching level does not found\");\n\n  // if (\n  //   !staff.education_certificate_id ||\n  //   staff.education_certificate_id.length <= 0\n  // )\n  //   errors.push(\"Your education certificate does not found\");\n\n  // teaching_level_id(pin):\"1\"\n  // education_certificate_id(pin):\"1\"\n\n  return {\n    errors: errors,\n    validated: errors.length > 0 ? false : true,\n  };\n};\n\n// validate user by profile fettched\n\nexport const validateProfileByProfilePage = (user: ProfileType) => {\n  let errors: string[] = [];\n\n  if (!user.staffDetails) errors.push(\"Your role id is not validated\");\n\n  if (!user.staffDetails.basicInfo.address)\n    errors.push(\" role id is not validated\");\n  if (!user.staffDetails.basicInfo.bank_account)\n    errors.push(\" bank account is not validated\");\n  if (!user.staffDetails.basicInfo.dob) errors.push(\" dob is not validated\");\n  // if (!user.staffDetails.basicInfo.email) errors.push(\" email is not validated\");\n  if (!user.staffDetails.basicInfo.email)\n    errors.push(\" email is not validated\");\n};\n\nexport default validateStaff;\n","import React, { FC, ReactElement } from \"react\";\nimport { TeacherData } from \"../../actions\";\nimport { FC_GetHierarchStrings } from \"../../types/PlacementReportTypes\";\nimport Heading from \"../Heading/Heading\";\n// import Heading from \"../Heading/Heading\";\n\ntype PlacementListPreviewProps = {\n  placement_list: TeacherData[];\n  header: React.ReactNode | undefined;\n  footer: React.ReactNode | undefined;\n};\n\nconst PlacementListPreview: FC<PlacementListPreviewProps> = ({\n  placement_list,\n  footer,\n  header,\n}): ReactElement => {\n  return (\n    <div className=\"fixed top-0 bottom-0 right-0 left-0 animate__animated animate__fadeIn  bg-black bg-opacity-95 z-60 overflow-auto\">\n      <div className=\"w-full mx-auto bg-white px-3 py-8 animate__animated animate__zoomIn animate__faster\">\n        {header && header}\n\n        <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                {/* <th className=\"p-1 border\">Date to School</th> */}\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status === \"Active\")\n                .map((itm, i) => {\n                  let Hierachy = FC_GetHierarchStrings(itm.teacher_hierarch);\n                  return (\n                    <tr key={i}>\n                      <th className=\"p-1 border\">{i + 1}</th>\n                      <th className=\"p-1 border\">\n                        {itm?.location?.district_code}\n                      </th>\n                      <th className=\"p-1 border\">\n                        {itm?.location?.district_name}\n                      </th>\n                      <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                      <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                      <th className=\"p-1 border\">\n                        {itm?.school?.school_category}\n                      </th>\n                      <th className=\"p-1 border\">\n                        {itm?.school?.school_status}\n                      </th>\n                      <th className=\"p-1 border\">{itm?.staff_category}</th>\n                      <th className=\"p-1 border\">{itm?.staff_code}</th>\n                      <th className=\"p-1 border\">{itm?.nid}</th>\n                      <th className=\"p-1 border\">{itm?.full_name}</th>\n                      <th className=\"p-1 border\">{itm?.first_name}</th>\n                      <th className=\"p-1 border\">{itm?.middle_name}</th>\n                      <th className=\"p-1 border\">{itm?.last_name}</th>\n                      <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                      <th className=\"p-1 border\">{itm?.email}</th>\n                      <th className=\"p-1 border\">{itm?.dob}</th>\n                      <th className=\"p-1 border\">{itm?.sex}</th>\n                      <th className=\"p-1 border\">{itm?.nationality}</th>\n                      <th className=\"p-1 border\">{itm?.marital_status}</th>\n                      <th className=\"p-1 border\">{itm?.qualification}</th>\n                      <th className=\"p-1 border\">{itm?.position}</th>\n                      <th className=\"p-1 border\">{itm?.specialization}</th>\n                      <th className=\"p-1 border\">{itm?.hired_date}</th>\n                      {/* <th className=\"p-1 border\">\n                        {itm?.start_date_in_the_school}\n                      </th> */}\n                      <th className=\"p-1 border\">{Hierachy.courses}</th>\n                      <th className=\"p-1 border\">{Hierachy.periods}</th>\n                      <th className=\"p-1 border\">{Hierachy.grades}</th>\n                      <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                      <th className=\"p-1 border\">{itm?.bank_account}</th>\n                      <th className=\"p-1 border\">{itm?.bank_name}</th>\n                      <th className=\"p-1 border\">{itm?.status}</th>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n        <br />\n        <Heading className=\"text-center\">\n          Others candidates on placement list\n        </Heading>\n        <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                <th className=\"p-1 border\">Date to School</th>\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status !== \"Active\")\n                .map((itm, i) => (\n                  <tr key={i}>\n                    <th className=\"p-1 border\">{i + 1}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_code}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_name}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                    <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.school?.school_category}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_status}</th>\n                    <th className=\"p-1 border\">{itm?.staff_category}</th>\n                    <th className=\"p-1 border\">{itm?.staff_code}</th>\n                    <th className=\"p-1 border\">{itm?.nid}</th>\n                    <th className=\"p-1 border\">{itm?.full_name}</th>\n                    <th className=\"p-1 border\">{itm?.first_name}</th>\n                    <th className=\"p-1 border\">{itm?.last_name}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                    <th className=\"p-1 border\">{itm?.email}</th>\n                    <th className=\"p-1 border\">{itm?.dob}</th>\n                    <th className=\"p-1 border\">{itm?.sex}</th>\n                    <th className=\"p-1 border\">{itm?.nationality_id}</th>\n                    <th className=\"p-1 border\">{itm?.marital_status}</th>\n                    <th className=\"p-1 border\">{itm?.qualification}</th>\n                    <th className=\"p-1 border\">{itm?.position}</th>\n                    <th className=\"p-1 border\">{itm?.specialization}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                    <th className=\"p-1 border\">{itm?.bank_account}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.status}</th>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"\">{footer && footer}</div>\n      </div>\n    </div>\n  );\n};\nexport default PlacementListPreview;\n","import React, { Fragment } from \"react\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdWarning } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nimport {\n  Auth,\n  Basic,\n  TeacherData,\n  TeacherDataRole,\n  FC_GetTeachersBySchool,\n  FC_SubmitPlacementList,\n  FC_GetSchoolsPositions,\n  SchoolPositions,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport PlacementListPreview from \"../../components/PlacementListPreview/PlacementListPreview\";\nimport { StoreState } from \"../../reducers\";\nimport { RenderPageAccess, UsersAccess } from \"../../utils/access\";\nimport { DATE, MONTHS_LIST, search } from \"../../utils/functions\";\nimport validateStaff, { ValidatePosition } from \"../../utils/validatedStaff\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n}\n\ninterface AppState {\n  loading: boolean;\n  approved_list: boolean;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"update-error\"\n      | \"main-error\"\n      | \"submit-list-error\"\n      | \"submit-month-error\"\n      | \"submit-list-success\"\n      | \"submit-list-success-redirect\"\n      | null;\n    msg: string;\n  };\n  data: TeacherData[];\n  placement_list: TeacherData[];\n  roles: TeacherDataRole[];\n  loading_data: boolean;\n  selected_role: string;\n  selected_request_id: string;\n  selected_value: string;\n  selected_comment: string;\n  selected_auto_level: string;\n  search: string;\n  selected_qualification: string;\n  selected_month: string;\n  loading_placement_submit: boolean;\n  ht_comment: string;\n  accepted_changes: boolean;\n  selected_check_validation: string;\n  school_positions_loading: boolean;\n  schools_positions: SchoolPositions[];\n}\n\nclass _PlacementList extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      schools_positions: [],\n      school_positions_loading: true,\n      approved_list: false,\n      loading: false,\n      data: [],\n      placement_list: [],\n      roles: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_data: true,\n      selected_role: \"\",\n      selected_request_id: \"\",\n      selected_value: \"0\",\n      selected_comment: \"\",\n      selected_auto_level: \"\",\n      search: \"\",\n      selected_qualification: \"\",\n      selected_month: \"\",\n      loading_placement_submit: false,\n      ht_comment: `I,  ${this.props.auth.user?.first_name} ${\n        this.props.auth.user?.middle_name\n      } ${this.props.auth.user?.last_name} with Staff code: ${\n        this.props.auth.user?.staff_code\n      } and with NID: ${this.props.auth.user?.nid}, Head Teacher of ${\n        this.props.auth.school?.school_name\n      } - ${\n        this.props.auth.school?.school_code\n      }, confirm that the list of teachers displayed on this teacher placement report for ${\n        MONTHS_LIST[new Date().getMonth()]\n      } generated on ${DATE(\n        new Date()\n      )} is valid. I also confirm that every teacher is assigned to his/her teaching qualification as per their appointment letters. `,\n\n      accepted_changes: false,\n      selected_check_validation: \"\",\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n  };\n\n  componentDidMount = () => {\n    RenderPageAccess(\n      this.props.auth.role?.access,\n      UsersAccess.HEADTEACHER_CREATE_PLACEMENT_LIST,\n      () => {\n        this.startApp();\n      }\n    );\n  };\n\n  startApp = () => {\n    if (this.props.basic.academic_calender === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"failed to load data, please reload the page (Refresh)\",\n        },\n      });\n    } else if (this.props.auth.school === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No school assigned to you\",\n        },\n      });\n    } else {\n      let school_code = this.props.auth.school.school_code;\n      this.setState({\n        error: {\n          target: null,\n          msg: \"\",\n        },\n      });\n      FC_GetTeachersBySchool(school_code, (status, data, msg) => {\n        if (status === true && data !== null) {\n          // console.log({ teachers: data.staff });\n\n          // * Get the positions of the schools\n          // let ValidatedData =\n\n          this.setState({\n            loading_data: false,\n            data: data.staff,\n            roles: data.role,\n            placement_list: data.staff.filter(\n              (req) => validateStaff(req).validated\n            ),\n            // placement_list: data.staff.filter(\n            //   (req) => !(req.first_name == null || req.first_name === \"\")\n            // ),\n          });\n          // this.SelectAll()\n\n          FC_GetSchoolsPositions(school_code, (status, data_positions, err) => {\n            // schools_positions: [],\n            //     school_positions_loading: true,\n            if (status === true) {\n              this.setState({\n                schools_positions: data_positions,\n                school_positions_loading: false,\n                placement_list: data.staff.filter(\n                  (req) =>\n                    validateStaff(req).validated &&\n                    ValidatePosition(req, data_positions).match_position\n                ),\n              });\n            } else {\n              this.setState({\n                schools_positions: [],\n                school_positions_loading: false,\n                error: {\n                  msg: err,\n                  target: \"main-error\",\n                },\n              });\n            }\n          });\n        } else {\n          this.setState({\n            loading_data: false,\n            error: {\n              msg: msg,\n              target: \"main-error\",\n            },\n          });\n        }\n      });\n    }\n  };\n\n  UpdatePlacement = (el: TeacherData, status: number) => {\n    // if (status < 0) {\n    //   this.setState({\n    //     placement_list: [...this.state.placement_list, el],\n    //   });\n    // } else {\n    //   this.setState({\n    //     placement_list: this.state.placement_list.filter(\n    //       (itm) => itm.user_id !== el.user_id\n    //     ),\n    //   });\n    // }\n  };\n\n  submitList = (e: any) => {\n    e.preventDefault();\n\n    // if (this.state.selected_month === \"\")\n    //   return this.setState({\n    //     error: {\n    //       target: \"submit-month-error\",\n    //       msg: \"Please select the month\",\n    //     },\n    //   });\n\n    if (\n      this.props.basic.academic_calender === null ||\n      this.props.auth.school === null\n    )\n      return this.setState({\n        error: {\n          target: \"submit-list-error\",\n          msg: \"You don't has a district assigned to you\",\n        },\n      });\n\n    let district_code = this.props.auth.school.school_code.substring(0, 2);\n\n    this.setState({\n      loading_placement_submit: true,\n    });\n    FC_SubmitPlacementList(\n      {\n        academic_year_id: this.props.basic.academic_calender?.academic_year_id,\n        district_code: district_code,\n        list: JSON.stringify(this.state.placement_list),\n        month: MONTHS_LIST[new Date().getMonth()],\n        school_code: this.props.auth.school.school_code,\n        ht_comment: this.state.ht_comment,\n      },\n      (status, data, msg) => {\n        if (status === true) {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-success\",\n              msg: `Placement list for ${this.state.selected_month} has been submitted successfully`,\n            },\n          });\n\n          //* redirect the data\n          setTimeout(() => {\n            this.setState({\n              error: {\n                target: \"submit-list-success-redirect\",\n                msg: \"\",\n              },\n            });\n          }, 2000);\n        } else {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-error\",\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  setApprovedList = () =>\n    this.setState({ approved_list: !this.state.approved_list });\n\n  SelectAll = () => this.setState({ placement_list: this.state.data });\n  DeSelectAll = () => this.setState({ placement_list: [] });\n\n  render() {\n    if (this.state.error.target === \"submit-list-success-redirect\")\n      return <Redirect to=\"/placement-list-ht\" />;\n\n    let RequestsList =\n      this.state.selected_role === \"\"\n        ? this.state.data\n        : this.state.data.filter(\n            (itm) => itm.role_id === this.state.selected_role\n          );\n\n    RequestsList =\n      this.state.selected_qualification === \"\"\n        ? RequestsList\n        : RequestsList.filter(\n            (itm) => itm.qualification === this.state.selected_qualification\n          );\n\n    RequestsList = search(RequestsList, this.state.search, {\n      email: true,\n      first_name: true,\n      full_name: true,\n      last_name: true,\n      phone_numbers: true,\n      qualification: true,\n      role: true,\n      role_id: true,\n      status: true,\n      user_id: true,\n      username: true,\n    });\n\n    if (this.state.loading_data === true)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.error.target === \"main-error\") {\n      return (\n        <Alert theme=\"danger\" fixed>\n          {this.state.error.msg}\n        </Alert>\n      );\n    }\n\n    if (this.state.approved_list === true)\n      return (\n        <>\n          <PlacementListPreview\n            placement_list={this.state.placement_list}\n            header={\n              <>\n                <div className=\"flex\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-xl\">\n                      <h2>\n                        School code:{\" \"}\n                        <b>{this.props.auth.school?.school_code}</b>\n                      </h2>\n                      <h2>\n                        School name:{\" \"}\n                        <b>{this.props.auth.school?.school_name}</b>\n                      </h2>\n                      <h2>\n                        Done by: <b>{this.props.auth.user?.full_name}</b>\n                      </h2>\n                    </div>\n                  </div>\n                  <div className=\"flex-1 text-right\">\n                    <Button\n                      size=\"lg\"\n                      theme=\"danger-light\"\n                      onClick={this.setApprovedList}\n                      disabled={this.state.loading_placement_submit}\n                      type=\"button\"\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n\n                <h1 className=\"text-center text-3xl font-bold mb-4 \">\n                  Placement list\n                </h1>\n              </>\n            }\n            footer={\n              <>\n                <form onSubmit={this.submitList}>\n                  <div className=\"mt-5 flex border-t pt-3\">\n                    <div className=\"lg:flex-1\"></div>\n                    <div className=\"flex-1\">\n                      {this.state.error.target === \"submit-list-success\" && (\n                        <Alert theme=\"success\">{this.state.error.msg}</Alert>\n                      )}\n                      {this.state.error.target === \"submit-list-error\" && (\n                        <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n                      )}\n                      <div className=\"\">\n                        <span>Comment:</span>\n                        <div\n                          // readOnly\n                          // onChange={(e) =>\n                          //   this.setState({\n                          //     ht_comment: e.target.value,\n                          //   })\n                          // }\n                          className=\"w-full  border-2 bg-blue-100 border-blue-900  rounded p-2\"\n                        >\n                          {this.state.ht_comment}\n                        </div>\n                      </div>\n\n                      <div\n                        onClick={() =>\n                          this.setState({\n                            accepted_changes: !this.state.accepted_changes,\n                          })\n                        }\n                        className={`flex my-2 p-1 bg-gray-100 rounded gap-2 cursor-pointer ${\n                          this.state.accepted_changes === true\n                            ? \"text-green-600\"\n                            : \"text-gray-800\"\n                        }`}\n                      >\n                        <div className=\"\">\n                          {this.state.accepted_changes === true ? (\n                            <MdCheckBox className=\"text-3xl\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"text-3xl\" />\n                          )}\n                        </div>\n                        <div className=\"flex-1 \">\n                          <p className=\"text-xl\">\n                            I have read and agree/agreed with the comment.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex w-full items-end gap-4\">\n                        <div className=\"flex-1\">\n                          <InputSelect\n                            data={[\n                              {\n                                title: MONTHS_LIST[new Date().getMonth()],\n                                value: MONTHS_LIST[new Date().getMonth()],\n                              },\n                              // ...MONTHS_LIST.map((itm) => ({\n                              //   title: itm,\n                              //   value: itm,\n                              // })),\n                            ]}\n                            label=\"Current month\"\n                            name=\"selected-month\"\n                            onChange={(e) =>\n                              this.setState({\n                                selected_month: e.target.value,\n                                error: { target: null, msg: \"\" },\n                              })\n                            }\n                            placeholder=\"Select month\"\n                            value={this.state.selected_month}\n                            error={\n                              this.state.error.target === \"submit-month-error\"\n                                ? this.state.error.msg\n                                : \"\"\n                            }\n                            // disabled={this.state.loading_placement_submit}\n                            disabled={true}\n                          />\n                        </div>\n\n                        {this.state.accepted_changes === true && (\n                          <div className=\"flex-1 pb-2 animate__animated animate__zoomIn animate__faster\">\n                            <Button\n                              full\n                              size=\"lg\"\n                              className=\"flex-1\"\n                              loading={this.state.loading_placement_submit}\n                            >\n                              Submit placement list\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </>\n            }\n          />\n        </>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"fixed bottom-0 right-0 flex left-0 bg-white shadow-lg border-t-2 px-3 items-center\">\n          <div className=\"main-side-spacer\"></div>\n          <div className=\"flex-1 p-2 flex items-center\">\n            <div className=\"mr-4 bg-green-50 text-green-700 px-2\">\n              <span className=\"text-sm\">Total validated</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.placement_list.length}\n              </h3>\n            </div>\n            <div className=\"px-2 bg-gray-50 rounded\">\n              <span className=\"text-sm\">Total Teachers</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.data.length}\n              </h3>\n            </div>\n            <div className=\"flex-1\"></div>\n            <div className=\"\">\n              {this.state.placement_list.length >= 1 && (\n                <Button\n                  theme=\"accent\"\n                  onClick={this.setApprovedList}\n                  className=\"animate__animated animate__zoomIn animate__faster\"\n                >\n                  Preview list\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <DashboardContainer>\n          {this.state.error.target === \"main\" && (\n            <Alert theme=\"danger\" fixed>\n              {this.state.error.msg}\n            </Alert>\n          )}\n          {this.state.error.target === \"loading-update-error\" && (\n            <Alert theme=\"danger\" fixed>\n              {this.state.error.msg}\n            </Alert>\n          )}\n\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <Heading>Placement List Approval Process</Heading>\n              <p className=\"opacity-60 text-lg -mt-1 font-bold text-accent-900 dark:text-accent-800\">\n                {this.props.auth.school?.school_name}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"border border-t mt-2 mb-1 flex items-center pl-3 pr-2 rounded\">\n              <div className=\"flex-1 pr-2\">\n                <TextInput\n                  error=\"\"\n                  label=\"Search\"\n                  name=\"\"\n                  type=\"search\"\n                  onChange={(e) => this.setState({ search: e.target.value })}\n                  placeholder=\"Search by teacher name\"\n                  value={this.state.search}\n                  size=\"sm\"\n                />\n              </div>\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    { title: \"All Roles\", value: \"\" },\n                    ...this.state.roles.map((el) => ({\n                      title: el.role,\n                      value: el.role_id,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_role\"\n                  onChange={(e) =>\n                    this.setState({ selected_role: e.target.value })\n                  }\n                  label=\"Role\"\n                  placeholder=\"Select role\"\n                  value={this.state.selected_role}\n                  size=\"sm\"\n                />\n              </div>\n              {this.props.basic.qualifications !== null && (\n                <div className=\"px-2\">\n                  <InputSelect\n                    data={[\n                      { title: \"All\", value: \"\" },\n                      ...this.props.basic.qualifications.map((el) => ({\n                        title: el.qualification_name,\n                        value: el.qualification_name,\n                      })),\n                    ]}\n                    error=\"\"\n                    name=\"select_qualification\"\n                    onChange={(e) =>\n                      this.setState({ selected_qualification: e.target.value })\n                    }\n                    label=\"Qualification\"\n                    placeholder=\"Select Qualification\"\n                    value={this.state.selected_qualification}\n                    size=\"sm\"\n                  />\n                </div>\n              )}\n            </div>\n            <div className=\"p-2 flex\"></div>\n            <table className=\"w-full text-left table-auto border\">\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Names</th>\n                  <th>First name</th>\n                  <th>Last name</th>\n                  <th>Phone number</th>\n                  <th>Role</th>\n                  <th>Qualification</th>\n                </tr>\n              </thead>\n              <tbody>\n                {RequestsList.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={8}\n                      className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      <Heading size=\"md\" className=\"opacity-60 font-light\">\n                        No results found\n                      </Heading>\n                    </td>\n                  </tr>\n                ) : (\n                  RequestsList.map((req, i) => {\n                    let existOnPlacement = this.state.placement_list.findIndex(\n                      (itm) => itm.user_id === req.user_id\n                    );\n\n                    let validatedCheck = validateStaff(req);\n                    let validatePositionCandidate = ValidatePosition(\n                      req,\n                      this.state.schools_positions\n                    );\n                    if (validatePositionCandidate.match_position === false) {\n                      validatedCheck = {\n                        ...validatedCheck,\n                        errors: [\n                          ...validatedCheck.errors,\n                          `Position: ${validatePositionCandidate.position.position_name} is not assigned to this school`,\n                        ],\n                      };\n                    }\n\n                    return (\n                      <Fragment key={i}>\n                        <tr\n                          className={`group border rounded hover:bg-blue-500 hover:bg-opacity-20 ${\n                            existOnPlacement < 0\n                              ? \"\"\n                              : \"bg-green-600 bg-opacity-10\"\n                          } `}\n                        >\n                          <td\n                            className=\"p-1 border cursor-pointer\"\n                            key={i}\n                            onClick={this.UpdatePlacement.bind(\n                              this,\n                              req,\n                              existOnPlacement\n                            )}\n                          >\n                            {existOnPlacement < 0 ? (\n                              <button\n                                onClick={() =>\n                                  this.setState({\n                                    selected_check_validation: req.user_id,\n                                  })\n                                }\n                              >\n                                <MdWarning\n                                  className=\"text-3xl text-yellow-500 mx-auto\"\n                                  title=\"This teacher is not validated\"\n                                />\n                              </button>\n                            ) : (\n                              <MdCheckBox className=\"text-3xl text-green-600 mx-auto\" />\n                            )}\n                          </td>\n                          <td className=\"p-2 border\">{req.full_name}</td>\n                          <td className=\"p-2 border\">{req.first_name}</td>\n                          <td className=\"p-2 border\">{req.last_name}</td>\n                          <td className=\"p-2 border\">{req.phone_numbers}</td>\n                          <td className=\"p-2 border\">{req.role}</td>\n                          <td className=\"p-2 border\">{req.qualification}</td>\n                        </tr>\n                        {this.state.selected_check_validation ===\n                          req.user_id && (\n                          <tr>\n                            <td colSpan={10} className=\"pb-5\">\n                              <div className=\"pb-2 rounded-b-lg -mt-1 animate__animated animate__zoomIn animate__faster border bg-red-100\">\n                                <div className=\"p-1 px-2 flex bg-red-200\">\n                                  <h2 className=\"flex-1 text-lg text-red-800 font-bold\">\n                                    <span className=\"p-0.5 text-center rounded-full bg-red-600 pr-1 inline-block text-white\">\n                                      {validatedCheck.errors.length}\n                                    </span>{\" \"}\n                                    Items to be validated\n                                  </h2>\n                                  <Button\n                                    className=\"\"\n                                    size=\"sm\"\n                                    theme=\"danger-light\"\n                                    onClick={() =>\n                                      this.setState({\n                                        selected_check_validation: \"\",\n                                      })\n                                    }\n                                  >\n                                    Close\n                                  </Button>\n                                </div>\n\n                                <div className=\"px-2 gap-1 rounded grid md:grid-cols-2 lg:grid-cols-3 pt-2\">\n                                  {validatedCheck.errors.map((itm, i) => (\n                                    <div\n                                      key={i}\n                                      className=\"border rounded full mb-1 mx-2 border-red-300 bg-white p-1 flex\"\n                                    >\n                                      <MdWarning className=\"pr-1 text-xl inline-block text-yellow-600\" />{\" \"}\n                                      <p>{itm}</p>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n                        )}\n                      </Fragment>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n        <div className=\"h-24\"></div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const CreatePlacementList = connect(mapStateToProps, {})(_PlacementList);\n"],"sourceRoot":""}