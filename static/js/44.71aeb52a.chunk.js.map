{"version":3,"sources":["containers/CandidateSwaping/PermutationItem.tsx","containers/RebAprovePermutation/RebAprovePermutation.tsx"],"names":["PermutationItem","permutation","more","approveUser","approveReb","userRejectPermutation","loading","loading_reject_permutation","close","useState","expandItem","setExpand","expand","user_1","usersInfo","find","itm","user_id","user_one","user_2","user_two","school_1","schools","school_code","school_one","school_2","school_two","UserComponent","user","school","undefined","className","size","label","value","full_name","inline","staff_code","nid","sex","phone_numbers","marital_status","map","i","school_name","onClick","theme","bind","reb_status","permutation_code","position_code","position_name","qualification_name","role","user_one_date","user_two_date","permutation_status","permutation_id","ActiveTabPermutation","_RebAprovePermutation","props","componentDidMount","loadData","state","tab","page","limit","setState","FC_REB_Permutation","status","data","msg","total_pages","Math","ceil","total_users","console","log","error","target","permutations","total_pagination","approveRebPermutation","loading_approve","FC_REB_APPROVE_Permutation","el","setTab","selected_permutation","Pending","this","Approved","Rejected","length","colSpan","user1","user2","school1","school2","title","Array","fill","_","disabled","React","Component","RebAprovePermutation","connect","auth"],"mappings":"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","file":"static/js/44.71aeb52a.chunk.js","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { MdAccountBox, MdSwapHorizontalCircle } from \"react-icons/md\";\nimport {\n  PermutationItem__Interface,\n  PermutationSchool__Interface,\n  PermutationUser__Interface,\n} from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\n\ntype PermutationItemProps = {\n  permutation: PermutationItem__Interface;\n  more?: boolean;\n  approveReb?: (id: string | null) => void;\n  approveUser?: (id: string | null) => void;\n  loading?: boolean;\n  close?: () => void;\n  userRejectPermutation?: (id: string | null) => void;\n  loading_reject_permutation?: boolean;\n};\n\nconst PermutationItem: FC<PermutationItemProps> = ({\n  permutation,\n  more = false,\n  approveUser,\n  approveReb,\n  userRejectPermutation,\n  loading = false,\n  loading_reject_permutation,\n  close,\n}): ReactElement => {\n  const [expandItem, setExpand] = useState(false);\n\n  let expand = more === true ? true : expandItem;\n  let user_1 = permutation.usersInfo.find(\n    (itm) => itm.user_id === permutation.user_one\n  );\n  let user_2 = permutation.usersInfo.find(\n    (itm) => itm.user_id === permutation.user_two\n  );\n  let school_1 = permutation.schools.find(\n    (itm) => itm.school_code === permutation.school_one\n  );\n  let school_2 = permutation.schools.find(\n    (itm) => itm.school_code === permutation.school_two\n  );\n\n  let UserComponent = (\n    user: PermutationUser__Interface | undefined,\n    school: PermutationSchool__Interface | undefined\n  ) => {\n    if (user === undefined || school === undefined)\n      return <div className=\"p-2 text-center text-lg\">No users found</div>;\n\n    return (\n      <div className={`flex-1 w-full rounded bg-white border`}>\n        <div\n          className={`rounded m-1 border flex ${\n            expand === true ? \"\" : \"items-center\"\n          }`}\n        >\n          <section>\n            <MdAccountBox className=\"text-gray-400\" size={expand ? 80 : 30} />\n          </section>\n          <div className=\"flex-1 pl-2\">\n            {[\n              {\n                label: \"Names: \",\n                value: user.full_name,\n                more: true,\n                inline: false,\n              },\n              {\n                label: \"Staff code: \",\n                value: user.staff_code,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"NID: \",\n                value: user.nid,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"Sex: \",\n                value: user.sex,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"Phone number: \",\n                value: user.phone_numbers,\n                inline: true,\n                more: false,\n              },\n              {\n                label: \"Martial status: \",\n                value: user.marital_status,\n                inline: true,\n                more: false,\n              },\n            ].map((itm, i) => {\n              if (itm.more === false && expand === false) return null;\n              if (!itm.value) return null;\n              return (\n                <section\n                  key={i}\n                  className={`border-b ${\n                    itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                  }`}\n                >\n                  <span className=\"text-sm text-gray-500 block\">\n                    {itm?.label}\n                  </span>\n                  <h2\n                    className={` ${\n                      itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                    } font-bold block `}\n                  >\n                    {itm?.value}\n                  </h2>\n                </section>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"rounded m-1 border flex items-center mt-3\">\n          <section className=\"px-4\">\n            <FaSchool className=\"text-gray-400\" size={expand ? 50 : 20} />\n          </section>\n          <div className=\"flex-1\">\n            {[\n              {\n                label: \"School code: \",\n                value: school.school_code,\n                inline: true,\n                more: true,\n              },\n              {\n                label: \"School name: \",\n                value: school.school_name,\n                inline: true,\n                more: false,\n              },\n            ].map((itm, i) => {\n              if (itm.more === true && expand === false) return null;\n              if (!itm.value) return null;\n              return (\n                <section\n                  key={i}\n                  className={`border-b ${\n                    itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                  }`}\n                >\n                  <span className=\"text-sm text-gray-500 block\">\n                    {itm?.label}\n                  </span>\n                  <h2\n                    className={` ${\n                      itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                    } font-bold block `}\n                  >\n                    {itm?.value}\n                  </h2>\n                </section>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white p-2 mb-3 rounded animate__animated animate__zoomIn animate__faster\">\n      {close && !loading && (\n        <div className=\"text-right pb-2 border-b mb-2\">\n          <Button className=\"\" onClick={close} theme=\"danger-light\">\n            Close\n          </Button>\n        </div>\n      )}\n      <div\n        className=\"items-center flex flex-col md:flex-row cursor-pointer\"\n        onClick={setExpand.bind(this, !expand)}\n      >\n        {UserComponent(user_1, school_1)}\n        <div className=\"-mx-2 z-40 \">\n          <MdSwapHorizontalCircle\n            className={`rounded ${\n              permutation.reb_status === \"Approved\"\n                ? \"text-green-500\"\n                : \"text-accent-900\"\n            } `}\n            size={50}\n          />\n        </div>\n        {UserComponent(user_2, school_2)}\n      </div>\n      {expand && (\n        <div className=\"pt-3\">\n          <div className=\"p-1 px-2 rounded mt-2 border grid lg:grid-cols-3 gap-1 \">\n            {[\n              {\n                label: \"Permutation Code: \",\n                value: permutation.permutation_code,\n                inline: true,\n              },\n              {\n                label: \"Position: \",\n                value: `${permutation.position_code} - ${permutation.position_name}`,\n                inline: true,\n              },\n              {\n                label: \"Qualification name: \",\n                value: permutation.qualification_name,\n                inline: true,\n              },\n              {\n                label: \"Qualification name: \",\n                value: permutation.role,\n                inline: true,\n              },\n              {\n                label: \"Initiated date: \",\n                value: permutation.user_one_date,\n                inline: true,\n              },\n              {\n                label: \"Accepted date: \",\n                value: permutation.user_two_date,\n                inline: true,\n              },\n            ].map((itm, i) => (\n              <section\n                key={i}\n                className={`border-b border-l pl-2 ${\n                  itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                }`}\n              >\n                <span className=\"text-sm text-gray-500 block\">\n                  {itm?.label}\n                </span>\n                <h2\n                  className={` ${\n                    itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                  } font-bold block `}\n                >\n                  {itm?.value}\n                </h2>\n              </section>\n            ))}\n          </div>\n\n          <div className=\"grid grid-cols-2 pt-3 items-center\">\n            <div className=\"flex gap-1\">\n              {permutation.reb_status && (\n                <section\n                  className={`flex items-center gap-1 px-2 py-0.5 rounded-lg  ${\n                    permutation.permutation_status === \"Accepted\"\n                      ? \"bg-green-100 text-green-900\"\n                      : \"bg-accent-400 text-accent-900\"\n                  }`}\n                >\n                  <span className=\"text-xs opacity-70\">User status</span>\n                  <h5 className={`text  block  font-bold `}>\n                    {permutation.permutation_status}\n                  </h5>\n                </section>\n              )}\n\n              {permutation.reb_status && (\n                <section\n                  className={`flex items-center gap-1 px-2 py-0.5 rounded-lg  ${\n                    permutation.reb_status === \"Approved\"\n                      ? \"bg-green-100 text-green-900\"\n                      : \"bg-accent-400 text-accent-900\"\n                  }`}\n                >\n                  <span className=\"text-xs opacity-70\">REB status</span>\n                  <h5 className={`text  block  font-bold `}>\n                    {permutation.reb_status}\n                  </h5>\n                </section>\n              )}\n            </div>\n            <div className=\"text-right grid gap-2\">\n              {approveUser && (\n                <Button\n                  onClick={approveUser.bind(this, permutation.permutation_id)}\n                  loading={loading}\n                  size=\"lg\"\n                >\n                  Accept permutation\n                </Button>\n              )}\n\n              {userRejectPermutation && (\n                <Button\n                  onClick={userRejectPermutation.bind(\n                    this,\n                    permutation.permutation_id\n                  )}\n                  loading={loading_reject_permutation}\n                  size=\"lg\"\n                  theme=\"danger-light\"\n                >\n                  Reject permutation\n                </Button>\n              )}\n\n              {approveReb && (\n                <>\n                  {permutation.reb_status !== \"Approved\" && (\n                    <Button\n                      onClick={approveReb.bind(\n                        this,\n                        permutation.permutation_id\n                      )}\n                      loading={loading}\n                      size=\"lg\"\n                    >\n                      Approve permutation\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PermutationItem;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_REB_APPROVE_Permutation,\n  FC_REB_Permutation,\n  PermutationItem__Interface,\n} from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport PermutationItem from \"../CandidateSwaping/PermutationItem\";\n// import Alert, { AlertInterface } from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\nexport enum ActiveTabPermutation {\n  Approved = \"Approved\",\n  Pending = \"Pending\",\n  Rejected = \"Rejected\",\n}\n\ninterface AppState {\n  loading: boolean;\n  permutations: PermutationItem__Interface[];\n  selected_permutation: string;\n  error: {\n    target: \"main-success\" | \"main-error\" | null;\n    msg: string;\n  };\n  page: number;\n  limit: number;\n  loading_approve: string;\n  total_pagination: number;\n  tab: ActiveTabPermutation;\n}\n\nclass _RebAprovePermutation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      permutations: [],\n      selected_permutation: \"\",\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      page: 1,\n      limit: 8,\n      total_pagination: 0,\n      loading_approve: \"\",\n      tab: ActiveTabPermutation.Pending,\n    };\n  }\n\n  componentDidMount = () => {\n    this.loadData(1, 8, this.state.tab);\n  };\n\n  loadData = (page: number, limit: number, tab: ActiveTabPermutation) => {\n    // janvier\n    this.setState({\n      loading: true,\n      page: page,\n    });\n    FC_REB_Permutation(page + \"\", limit + \"\", tab, (status, data, msg) => {\n      if (status === true && data !== null) {\n        let total_pages = Math.ceil(\n          (data.total_users ? +data.total_users : 0) / 8\n        );\n        console.log({ total_pages });\n\n        this.setState({\n          error: {\n            target: null,\n            msg: \"\",\n          },\n          loading: false,\n          permutations: data?.permutations,\n          total_pagination: total_pages,\n          // limit: limit,\n          // page: page,\n        });\n        console.log(data);\n      } else {\n        this.setState({\n          error: {\n            target: \"main-error\",\n            msg: msg,\n          },\n          loading: false,\n          permutations: [],\n          // limit: limit,\n          // page: page,\n        });\n      }\n    });\n  };\n\n  approveRebPermutation = (permutation_id: string | null) => {\n    this.setState({\n      loading_approve: permutation_id + \"\",\n    });\n\n    FC_REB_APPROVE_Permutation(permutation_id + \"\", (status, msg) => {\n      if (status === true) {\n        this.setState({\n          loading_approve: \"\",\n          error: {\n            target: \"main-success\",\n            msg: \"\",\n          },\n          permutations: this.state.permutations.map((el) =>\n            el.permutation_id === permutation_id + \"\"\n              ? { ...el, reb_status: \"Approved\" }\n              : el\n          ),\n        });\n      } else {\n        this.setState({\n          loading_approve: \"\",\n          error: {\n            msg: msg,\n            target: \"main-error\",\n          },\n          permutations: [],\n        });\n      }\n    });\n  };\n\n  setTab = (tab: ActiveTabPermutation) => {\n    console.log(tab);\n\n    if (tab !== this.state.tab) {\n      this.setState({\n        tab: tab,\n        page: 1,\n      });\n      this.loadData(1, this.state.limit, tab);\n    }\n  };\n\n  render() {\n    if (this.state.loading === true)\n      return (\n        <div className=\"py-8 text-center\">\n          <Loading />\n          <h4 className=\"text-lg pt-2 text-gray-600\">\n            Loading permutations...\n          </h4>\n        </div>\n      );\n    return (\n      <>\n        <DashboardContainer className=\"p-3 flex items-center\">\n          <section className=\"\">\n            <Heading>Permutations</Heading>\n          </section>\n          <section className=\"flex-1\">\n            <section className=\"p-1 bg-yellow-600 bg-opacity-20 rounded-lg text-sm w-80 mx-auto flex\">\n              <button\n                className={`px-2 flex-1 ${\n                  this.state.tab === ActiveTabPermutation.Pending\n                    ? \"bg-yellow-600 text-white\"\n                    : \"\"\n                } py-1 rounded-lg`}\n                onClick={this.setTab.bind(this, ActiveTabPermutation.Pending)}\n              >\n                Pending\n              </button>\n              <button\n                className={`px-2 flex-1 ${\n                  this.state.tab === ActiveTabPermutation.Approved\n                    ? \"bg-yellow-600 text-white\"\n                    : \"\"\n                } py-1 rounded-lg`}\n                onClick={this.setTab.bind(this, ActiveTabPermutation.Approved)}\n              >\n                Approved\n              </button>\n              <button\n                className={`px-2 flex-1 ${\n                  this.state.tab === ActiveTabPermutation.Rejected\n                    ? \"bg-yellow-600 text-white\"\n                    : \"\"\n                } py-1 rounded-lg`}\n                onClick={this.setTab.bind(this, ActiveTabPermutation.Rejected)}\n              >\n                Rejected\n              </button>\n            </section>\n          </section>\n          <section>\n            <Button theme=\"accent-light\">Approve all permutation</Button>\n          </section>\n        </DashboardContainer>\n\n        <div className=\"px-2 container mx-auto\">\n          <>\n            <div className=\"p-1 rounded\">\n              <table className=\" w-full rounded\">\n                <thead>\n                  <tr className=\"bg-white\">\n                    <th className=\"border p-2 text-left\">#</th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      Candidate 1{\" \"}\n                      <span className=\"text-xs bg-yellow-500 px-2 py-0.5 rounded-full\">\n                        Initiator\n                      </span>\n                    </th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      School 1\n                    </th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      Candidate 2\n                    </th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      School 2\n                    </th>\n                    <th className=\"border p-2 text-left\">Users status</th>\n                    <th className=\"border p-2 text-left\">Dates</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {this.state.permutations.length <= 0 ? (\n                    <tr>\n                      <td colSpan={8} className=\"py-10 text-center\">\n                        <h3 className=\"text-5xl text-gray-400 font-bold\">\n                          No permutation found!\n                        </h3>\n                      </td>\n                    </tr>\n                  ) : (\n                    this.state.permutations.map(\n                      (el: PermutationItem__Interface, i) => {\n                        // return <PermutationItem key={i} permutation={el} />;\n                        let user1 = el.usersInfo.find(\n                          (itm) => itm.user_id === el.user_one\n                        );\n                        let user2 = el.usersInfo.find(\n                          (itm) => itm.user_id === el.user_two\n                        );\n\n                        let school1 = el.schools.find(\n                          (itm) => itm.school_code === el.school_one\n                        );\n                        let school2 = el.schools.find(\n                          (itm) => itm.school_code === el.school_two\n                        );\n                        if (\n                          this.state.selected_permutation === el.permutation_id\n                        )\n                          return (\n                            <tr key={i} className=\"\">\n                              <td colSpan={30} className=\"pt-1\">\n                                <PermutationItem\n                                  more\n                                  permutation={el}\n                                  // approveUser={this.userApprovePermutationUser}\n                                  approveReb={this.approveRebPermutation}\n                                  loading={\n                                    this.state.loading_approve ===\n                                    el.permutation_id\n                                      ? true\n                                      : false\n                                  }\n                                  close={() =>\n                                    this.setState({\n                                      selected_permutation: \"\",\n                                    })\n                                  }\n                                />\n                              </td>\n                            </tr>\n                          );\n                        return (\n                          <Fragment key={i}>\n                            <tr>\n                              <td className=\"p-1\"></td>\n                            </tr>\n                            <tr\n                              className=\"hover:bg-yellow-500 hover:bg-opacity-20 cursor-pointer bg-white my-2\"\n                              onClick={() =>\n                                this.setState({\n                                  selected_permutation: el.permutation_id + \"\",\n                                })\n                              }\n                            >\n                              <td className=\"border p-2 bg-white\">{i + 1}</td>\n                              <td\n                                className=\"border p-2 bg-blue-100 bg-opacity-5\"\n                                title=\"Candidate 1 (Initiator)\"\n                              >\n                                <h6 className=\"font-bold\">\n                                  {user1?.full_name}\n                                </h6>\n                                <span\n                                  title=\"Staff code\"\n                                  className=\"text-sm text-gray-400\"\n                                >\n                                  {user1?.staff_code}\n                                </span>\n                              </td>\n                              <td\n                                className=\"border p-2 bg-blue-200 bg-opacity-5\"\n                                title=\"School for Candidate 1 (Initiator)\"\n                              >\n                                <h6 className=\"font-bold\">\n                                  {school1?.school_name}\n                                </h6>\n                                <span\n                                  title=\"School code\"\n                                  className=\"text-sm text-gray-400\"\n                                >\n                                  {el.school_one}\n                                </span>\n                              </td>\n\n                              <td\n                                className=\"border p-2 bg-indigo-100 bg-opacity-5 border-l-4 border-l-\"\n                                title=\"Candidate 2\"\n                              >\n                                <h6 className=\"font-bold\">\n                                  {user2?.full_name}\n                                </h6>\n                                <span\n                                  title=\"Staff code\"\n                                  className=\"text-sm text-gray-400\"\n                                >\n                                  {user2?.staff_code}\n                                </span>\n                              </td>\n                              <td\n                                className=\"border p-2 bg-indigo-200 bg-opacity-5\"\n                                title=\"School for Candidate 2\"\n                              >\n                                <h6 className=\"font-bold\">\n                                  {school2?.school_name}\n                                </h6>\n                                <span\n                                  title=\"School code\"\n                                  className=\"text-sm text-gray-400\"\n                                >\n                                  {el.school_two}\n                                </span>\n                              </td>\n\n                              <td className=\"border p-2 bg-white\">\n                                <h6 className=\"text-sm\">\n                                  User: <b>{el.permutation_status}</b>\n                                </h6>\n                                <hr />\n                                <h6 className=\"text-sm\">\n                                  REB:{\" \"}\n                                  <b\n                                    className={`${\n                                      el.reb_status === \"Approved\"\n                                        ? \"text-green-500\"\n                                        : \"\"\n                                    }`}\n                                  >\n                                    {el.reb_status}\n                                  </b>\n                                </h6>\n                              </td>\n\n                              <td className=\"border p-2 bg-white\">\n                                <h6 className=\"text-sm\">\n                                  Created: <b>{el.user_one_date}</b>\n                                </h6>\n                                <hr />\n                                <h6 className=\"text-sm\">\n                                  User 2: <b>{el.user_two_date}</b>\n                                </h6>\n                                <hr />\n                                <h6 className=\"text-sm\">\n                                  REB: <b>{el.user_two_date}</b>\n                                </h6>\n                              </td>\n                            </tr>\n                          </Fragment>\n                        );\n                      }\n                    )\n                  )}\n                  {this.state.permutations.length >= 1 && (\n                    <tr>\n                      <td colSpan={9} className=\"pt-4\">\n                        <div className=\"flex gap-3 mx-auto text-center justify-center place-items-center\">\n                          {this.state.total_pagination >= 2 &&\n                            new Array(this.state.total_pagination + 1)\n                              .fill(0)\n                              .map((_, i) => {\n                                if (i === 0) return null;\n                                return (\n                                  <button\n                                    key={i}\n                                    className={`${\n                                      i === this.state.page\n                                        ? \"bg-yellow-600 text-white\"\n                                        : \"bg-yellow-600 bg-opacity-10 hover:bg-opacity-40\"\n                                    }  font-bold rounded-full w-12 h-10`}\n                                    onClick={() =>\n                                      this.loadData(\n                                        i,\n                                        this.state.limit,\n                                        this.state.tab\n                                      )\n                                    }\n                                    disabled={i === this.state.page}\n                                  >\n                                    {i}\n                                  </button>\n                                );\n                              })}\n                        </div>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const RebAprovePermutation = connect(\n  mapStateToProps,\n  {}\n)(_RebAprovePermutation);\n"],"sourceRoot":""}