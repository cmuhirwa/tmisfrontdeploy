{"version":3,"sources":["containers/CandidateSwaping/HeaderSwapping.tsx","containers/CandidateSwaping/CandidateSwaping.tsx"],"names":["HeaderSwapping","back","title","className","Button","onClick","size","theme","_CandidateSwaping","props","setTab","itm","setState","selected_option","searchUser","state","loading","search_nid","loading_user","prevProps","this","DashboardContainer","Heading","icon","MdAdd","id","description","MdOutlinePassword","map","i","Icon","bind","TextInput","onChange","e","target","value","error","label","placeholder","name","React","Component","CandidateSwaping","connect","auth"],"mappings":"kQA+BeA,EAtBiC,SAAC,GAG5B,IAFnBC,EAEkB,EAFlBA,KACAC,EACkB,EADlBA,MAGA,OACE,sBAAKC,UAAU,0BAAf,UACE,eAACC,EAAA,EAAD,CACEC,QAASJ,EACTK,KAAK,KACLC,MAAM,UACNJ,UAAU,gCAJZ,UAME,cAAC,IAAD,CAAaG,KAAM,KACnB,uBAAOH,UAAU,eAAjB,qBAEF,yBAASA,UAAU,qBAAnB,SACE,qBAAIA,UAAU,YAAd,UAA2BD,EAA3B,aCHFM,E,kDACJ,WAAYC,GAAkB,IAAD,8BAC3B,cAAMA,IAWRC,OAAS,SAACC,GAAD,OAAuB,EAAKC,SAAS,CAAEC,gBAAiBF,KAZpC,EAc7BG,WAAa,aAXX,EAAKC,MAAQ,CACXC,SAAS,EACTH,gBAAiB,EACjBI,WAAY,GACZC,cAAc,GAPW,E,sDAW7B,SAAmBC,M,oBAOnB,WAAU,IAAD,OACP,OACE,qCACkC,OAA/BC,KAAKL,MAAMF,iBACV,eAACQ,EAAA,EAAD,CAAoBlB,UAAU,oDAA9B,UACE,cAACmB,EAAA,EAAD,CAASnB,UAAU,6DAAnB,0BAIA,qBAAKA,UAAU,uCAAf,SACG,CACC,CACEoB,KAAMC,IACNtB,MAAO,mCACPuB,GAAI,EACJC,YACE,6DACFrB,QAAS,kBAAM,EAAKK,OAAO,KAE7B,CACEa,KAAMI,IACNzB,MAAO,2BACPuB,GAAI,EACJC,YACE,gEACFrB,QAAS,kBAAM,EAAKK,OAAO,MAE7BkB,KAAI,SAACjB,EAAKkB,GACV,IAAIC,EAAOnB,EAAIY,KACf,OACE,sBAEElB,QAASM,EAAIN,QACbF,UAAU,wFAHZ,UAKE,yBAASA,UAAU,6FAAnB,SACE,cAAC2B,EAAD,CAAMxB,KAAM,OAEd,0BAASH,UAAU,cAAnB,UACE,oBAAIA,UAAU,yBAAd,SAAwCQ,EAAIT,QAC5C,mBAAGC,UAAU,wBAAb,SAAsCQ,EAAIe,mBATvCG,WAkBe,IAA/BT,KAAKL,MAAMF,iBACV,eAACQ,EAAA,EAAD,CAAoBlB,UAAU,oDAA9B,UACE,cAAC,EAAD,CACED,MAAM,mCACND,KAAMmB,KAAKV,OAAOqB,KAAKX,KAAM,QAG/B,sBAAKjB,UAAU,mBAAf,UACE,oBAAIA,UAAU,qBAAd,0CAGA,oBAAGA,UAAU,qBAAb,yEAC+D,IAC7D,uBAFF,iFAMA,sBAAKA,UAAU,mFAAf,UACE,cAAC6B,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OACR,EAAKtB,SAAS,CAAEK,WAAYiB,EAAEC,OAAOC,SAEvCjC,UAAU,SACViC,MAAOhB,KAAKL,MAAME,WAClBoB,MAAO,GACPC,MAAO,GACPC,YAAa,GACbC,KAAM,KAER,cAACpC,EAAA,EAAD,CACEE,KAAK,KACLH,UAAU,OACVa,QAASI,KAAKL,MAAMG,aACpBb,QAASe,KAAKN,WAJhB,kCAawB,IAA/BM,KAAKL,MAAMF,iBACV,eAACQ,EAAA,EAAD,CAAoBlB,UAAU,oDAA9B,UACE,cAAC,EAAD,CACED,MAAM,2BACND,KAAMmB,KAAKV,OAAOqB,KAAKX,KAAM,QAE/B,qBAAKjB,UAAU,MAAf,0C,GApHoBsC,IAAMC,WAgIzBC,EAAmBC,aAJR,SAAC,GACvB,MAAO,CAAEC,KADuD,EAAvCA,QAI8B,GAAzBD,CAA6BpC","file":"static/js/42.6ea824f9.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport Button from \"../../components/Buttons/Button\";\n\ntype HeaderSwappingProps = {\n  back: () => void;\n  title: string;\n};\n\nconst HeaderSwapping: FC<HeaderSwappingProps> = ({\n  back,\n  title,\n}): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"flex pt-2 border-b pb-2\">\n      <Button\n        onClick={back}\n        size=\"sm\"\n        theme=\"default\"\n        className=\"flex flex-center items-center\"\n      >\n        <MdArrowBack size={20} />\n        <label className=\"pl-1 flex-1 \">Back</label>\n      </Button>\n      <section className=\"pl-3 text-gray-600\">\n        <h2 className=\"text-2xl \">{title} </h2>\n      </section>\n    </div>\n  );\n};\nexport default HeaderSwapping;\n","import React from \"react\";\nimport { MdAdd, MdArrowBack, MdOutlinePassword } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { StoreState } from \"../../reducers\";\nimport HeaderSwapping from \"./HeaderSwapping\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  selected_option: 1 | 2 | null;\n  search_nid: string;\n  loading_user: boolean;\n}\n\nclass _CandidateSwaping extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selected_option: 1,\n      search_nid: \"\",\n      loading_user: false,\n    };\n  }\n\n  componentDidUpdate(prevProps: AppProps): void {}\n  setTab = (itm: 1 | 2 | null) => this.setState({ selected_option: itm });\n\n  searchUser = () => {\n    // FC_GetUserProfile()\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.selected_option === null && (\n          <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n            <Heading className=\" py-2 lg:pb-3 lg:pt-2 font-light text-center text-gray-500\">\n              Permutations\n            </Heading>\n\n            <div className=\"pt-2 flex gap-3 flex-col lg:flex-row\">\n              {[\n                {\n                  icon: MdAdd,\n                  title: \"Generate new permutation request\",\n                  id: 1,\n                  description:\n                    \"You will need the id of the teacher you want to swap with.\",\n                  onClick: () => this.setTab(1),\n                },\n                {\n                  icon: MdOutlinePassword,\n                  title: \"Find permutation by code\",\n                  id: 2,\n                  description:\n                    \"You will need a code, that was generated by the other teacher\",\n                  onClick: () => this.setTab(2),\n                },\n              ].map((itm, i) => {\n                let Icon = itm.icon;\n                return (\n                  <div\n                    key={i}\n                    onClick={itm.onClick}\n                    className=\"p-2  group items-center rounded border flex flex-1 hover:bg-accent-400 cursor-pointer\"\n                  >\n                    <section className=\"p-2 bg-accent-400 rounded group-hover:bg-accent-800 group-hover:text-white text-accent-800\">\n                      <Icon size={40} />\n                    </section>\n                    <section className=\"flex-1 pl-3\">\n                      <h2 className=\"text-xl  text-gray-900\">{itm.title}</h2>\n                      <p className=\"text-gray-400 text-sm\">{itm.description}</p>\n                    </section>\n                  </div>\n                );\n              })}\n            </div>\n          </DashboardContainer>\n        )}\n\n        {this.state.selected_option === 1 && (\n          <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n            <HeaderSwapping\n              title=\"Generate new permutation request\"\n              back={this.setTab.bind(this, null)}\n            />\n\n            <div className=\"py-6 text-center\">\n              <h3 className=\"font-bold text-2xl\">\n                Who do you want to swap with\n              </h3>\n              <p className=\"pt-1 text-gray-600\">\n                Make sure that he/she is aware that you are choosing him/her{\" \"}\n                <br /> If he/she does not know the about this your request will\n                not reach him/her\n              </p>\n\n              <div className=\"pt-2 flex items-center max-w-screen-sm mx-auto p-1 px-3 rounded mt-3 bg-gray-100\">\n                <TextInput\n                  onChange={(e) =>\n                    this.setState({ search_nid: e.target.value })\n                  }\n                  className=\"flex-1\"\n                  value={this.state.search_nid}\n                  error={\"\"}\n                  label={\"\"}\n                  placeholder={\"\"}\n                  name={\"\"}\n                />\n                <Button\n                  size=\"lg\"\n                  className=\"w-48\"\n                  loading={this.state.loading_user}\n                  onClick={this.searchUser}\n                >\n                  Search user\n                </Button>\n              </div>\n            </div>\n          </DashboardContainer>\n        )}\n\n        {this.state.selected_option === 2 && (\n          <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n            <HeaderSwapping\n              title=\"Find permutation by code\"\n              back={this.setTab.bind(this, null)}\n            />\n            <div className=\"p-2\">janvier is working</div>\n          </DashboardContainer>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const CandidateSwaping = connect(mapStateToProps, {})(_CandidateSwaping);\n"],"sourceRoot":""}