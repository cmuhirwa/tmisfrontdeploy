{"version":3,"sources":["components/GenerateReport/ExportToExcel.tsx","containers/OutgoingTransfers/OutGoingExcel.tsx","containers/OutgoingTransfers/OutgoingTransfers.tsx"],"names":["ExportToExcel","fileData","fileName","btnName","className","showIcon","onClick","e","apiData","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","React","memo","OutGoingExcel","close","district_id","useState","loading","setLoading","setData","error","setError","useEffect","FC_GetOutgoingReportExcel","status","msg","console","log","Modal","backDrop","theme","Themes","default","backDropClose","widthSizeClass","ModalSize","large","displayClose","padding","title","body","footer","Alert","Loading","map","el","teacher_id","teacher_first_name","teacher_last_name","teacher_full_name","teacher_phone_number","position_code","position_name","qualification","qualification_name","school_from_code","school_from_info","school_code","school_form_name","school_name","district_from_name","district_name","approved_school_code","approved_school_info","approved_school_name","approved_district_name","transfer_reason","transfer_type","teacher_requested_transfer_date","errorDefault","target","_OutgoingTransfers","props","setOpenDownload","setState","open_download_excel","state","loadingData","district","page","selected_transfer_id","transfer_issue","FC_GetOutGoingTransfers","district_code","limit","status_req","district_transfer_request","total","total_transfer","next","previous","paginateData","auth","submitIssue","length","loading_request","FC_SendTransferIssue","teacher_transfer_id","transfer_issue_comment","changeStatus","value","this","total_pages","toFixed","fixed","Heading","Button","DashboardContainer","transparent","colSpan","itm","i","Array","fill","bind","Component","OutgoingTransfers","connect"],"mappings":"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","file":"static/js/35.b4350834.chunk.js","sourcesContent":["import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default React.memo(ExportToExcel);\n","import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport {\n  FC_GetOutgoingReportExcel,\n  GetTransferForUser__Interface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n\ntype OutGoingExcelProps = {\n  close: () => void;\n  district_id: string;\n};\n\nconst OutGoingExcel: FC<OutGoingExcelProps> = ({\n  close,\n  district_id,\n}): ReactElement => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<GetTransferForUser__Interface[]>([]);\n  const [error, setError] = useState(\"\");\n  /* function body */\n  useEffect(() => {\n    if (loading === true)\n      FC_GetOutgoingReportExcel(district_id, (status, data, msg) => {\n        setLoading(false);\n        setData(data);\n        setError(msg);\n        // GetTransferForUser__Interface\n        console.log({ data });\n      });\n  }, [loading, district_id]);\n\n  return (\n    <Modal\n      backDrop={true}\n      theme={Themes.default}\n      close={close}\n      backDropClose={false}\n      widthSizeClass={ModalSize.large}\n      displayClose={true}\n      padding={{\n        title: true,\n        body: false,\n        footer: false,\n      }}\n      title=\"Export report\"\n    >\n      <div className=\"border-t p-4 py-8\">\n        {error !== \"\" && <Alert theme=\"danger\">{error}</Alert>}\n        {loading === true ? (\n          <div className=\"text-xl text-center\">\n            <Loading />\n\n            <h2 className=\"text-2xl font-bold pt-2\">Preparing report</h2>\n            <h4 className=\"text-gray-500 text-sm\">Please wait...</h4>\n          </div>\n        ) : (\n          <div className=\"text-center\">\n            <h1 className=\"text-3xl\">\n              Your <b>Outgoing Transfer</b> report is ready\n            </h1>\n            <h1>You can download it now</h1>\n            <div className=\"inline-block pt-5\">\n              <ExportToExcel\n                fileData={data.map((el) => ({\n                  teacher_id: el.teacher_id,\n                  teacher_first_name: el.teacher_first_name,\n                  teacher_last_name: el.teacher_last_name,\n                  teacher_full_name: el.teacher_full_name,\n                  teacher_phone_number: el.teacher_phone_number,\n                  position_code: el.position_code,\n                  position_name: el.position_name,\n                  qualification: el.qualification_name,\n\n                  school_from_code: el.school_from_info?.school_code,\n                  school_form_name: el.school_from_info?.school_name,\n                  district_from_name: el.school_from_info?.district_name,\n\n                  approved_school_code: el.approved_school_info?.school_code,\n                  approved_school_name: el.approved_school_info?.school_name,\n                  approved_district_name:\n                    el.approved_school_info?.district_name,\n\n                  transfer_reason: el.transfer_reason,\n                  transfer_type: el.transfer_type,\n                  teacher_requested_transfer_date:\n                    el.teacher_requested_transfer_date,\n                }))}\n                fileName={`OUTGOING TRANSFERS - ${district_id}`}\n                btnName=\"Download EXCEL\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\nexport default OutGoingExcel;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_GetOutGoingTransfers,\n  FC_SendTransferIssue,\n  GetTransferForUser__Interface,\n  TransferStatus,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\n// import TextArea from \"../../components/Inputs/TextArea\";\nimport Loading from \"../../components/Loading/Loading\";\n// import Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\n// import TransferItem from \"../RequestTransfer/TransferItem\";\nimport OutGoingExcel from \"./OutGoingExcel\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\" | null | \"request-input\";\n    msg: string;\n  };\n  limit: number;\n  page: number;\n  data: GetTransferForUser__Interface[];\n  total: number;\n  next: number;\n  previous: number;\n  selected_transfer_id: string | null;\n  transfer_issue: string;\n  loading_request: boolean;\n  status: TransferStatus;\n  open_download_excel: boolean;\n}\n\nconst errorDefault = {\n  target: null,\n  msg: \"\",\n};\n\nclass _OutgoingTransfers extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: errorDefault,\n      data: [],\n      limit: 14,\n      page: 1,\n      total: 0,\n      next: 0,\n      previous: 0,\n      selected_transfer_id: null,\n      transfer_issue: \"\",\n      loading_request: false,\n      status: \"NO-ISSUE\",\n      open_download_excel: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.district || !this.props.auth.district.district_code) {\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"There is no district assigned to you!\",\n        },\n      });\n    }\n\n    this.loadingData(\n      this.props.auth.district.district_code,\n      this.state.page,\n      this.state.status\n    );\n  }\n\n  setOpenDownload = () =>\n    this.setState({\n      open_download_excel: !this.state.open_download_excel,\n    });\n\n  loadingData = (district: string, page: number, status?: TransferStatus) => {\n    this.setState({\n      loading: true,\n      selected_transfer_id: null,\n      data: [],\n      transfer_issue: \"\",\n    });\n    FC_GetOutGoingTransfers(\n      {\n        district_code: district,\n        limit: this.state.limit,\n        page: page,\n        status: status ? status : this.state.status,\n      },\n      (status_req, data, msg) => {\n        this.setState({\n          loading: false,\n          data: data?.district_transfer_request\n            ? data?.district_transfer_request\n            : [],\n          total: data?.total_transfer ? data.total_transfer : 0,\n          next: data?.next ? +data?.next : 0,\n          previous: data?.previous ? +data?.previous : 0,\n          error: !status_req\n            ? {\n                target: \"main-error\",\n                msg: `Error: ${msg}`,\n              }\n            : errorDefault,\n          page: page,\n        });\n      }\n    );\n  };\n\n  paginateData = (page: number) => {\n    if (this.props.auth.district?.district_code)\n      this.loadingData(this.props.auth.district.district_code, page);\n  };\n\n  submitIssue = () => {\n    if (this.state.transfer_issue.length <= 20)\n      return this.setState({\n        error: {\n          target: \"request-input\",\n          msg: \"Your message is too short, minimum characters are 20\",\n        },\n      });\n\n    if (\n      this.state.selected_transfer_id === \"\" ||\n      this.state.selected_transfer_id === null\n    )\n      return this.setState({\n        error: {\n          target: \"request-input\",\n          msg: \"Your message is too short, minimum characters are 20\",\n        },\n      });\n\n    this.setState({\n      loading_request: true,\n    });\n\n    FC_SendTransferIssue(\n      {\n        teacher_transfer_id: this.state.selected_transfer_id,\n        transfer_issue_comment: this.state.transfer_issue,\n      },\n      (status, data, msg) => {\n        this.setState({\n          loading_request: false,\n          error:\n            status === true\n              ? {\n                  target: \"main-success\",\n                  msg: \"The request has been submitted successfully.\",\n                }\n              : {\n                  target: \"main-error\",\n                  msg: msg,\n                },\n          data: this.state.data.map((el) =>\n            el.teacher_transfer_id === this.state.selected_transfer_id\n              ? { ...el, transfer_issue_comment: this.state.transfer_issue }\n              : el\n          ),\n        });\n      }\n    );\n  };\n\n  changeStatus = (value: TransferStatus) => {\n    if (this.state.status === value || !this.props.auth.district) return;\n    this.setState({\n      status: value,\n    });\n    this.loadingData(this.props.auth.district.district_code, 1, value);\n  };\n\n  render() {\n    let total_pages = (this.state.total / this.state.limit).toFixed(0);\n    // let foundTransfer = this.state.data.find(\n    //   (transf) => transf.teacher_transfer_id === this.state.selected_transfer_id\n    // );\n    return (\n      <>\n        {this.state.open_download_excel === true &&\n          this.props.auth.district && (\n            <OutGoingExcel\n              district_id={this.props.auth.district.district_code}\n              close={this.setOpenDownload}\n            />\n          )}\n\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {/* {this.state.selected_transfer_id !== null &&\n          foundTransfer !== undefined && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={() =>\n                this.setState({\n                  selected_transfer_id: null,\n                  transfer_issue: \"\",\n                })\n              }\n              backDropClose={false}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              title=\"Transfer details\"\n              padding={{\n                title: true,\n                body: false,\n                footer: undefined,\n              }}\n            >\n              <div className=\"border-t\">\n                <div className=\"p-4 text-gray-500\">\n                  <section>\n                    Transfer id:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_transfer_id}\n                    </b>\n                  </section>\n                  <section>\n                    Teacher names:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_full_name}\n                    </b>\n                  </section>\n                  <section>\n                    Teacher's Phone number:{\" \"}\n                    <b className=\"text-black\">\n                      {foundTransfer.teacher_phone_number}\n                    </b>\n                  </section>\n                </div>\n                <TransferItem expand={true} transf={foundTransfer} />\n\n                <div className=\"pt-3 px-2 bg-gray-100 m-2\">\n                  <TextArea\n                    onChange={(e) =>\n                      this.setState({ transfer_issue: e.target.value })\n                    }\n                    disabled={this.state.loading_request}\n                    value={this.state.transfer_issue}\n                    error={\n                      this.state.error.target === \"request-input\"\n                        ? this.state.error.msg\n                        : \"\"\n                    }\n                    label={\"Why do you want this transfer to be Canceled?\"}\n                    placeholder={\"Type the reason here\"}\n                    name={\"\"}\n                  ></TextArea>\n\n                  <div className=\"pt-1 pb-3 text-right\">\n                    <Button\n                      onClick={this.submitIssue}\n                      loading={this.state.loading_request}\n                    >\n                      Submit request\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Modal>\n          )} */}\n        <div className=\"container mx-auto px-4 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading className=\"\">Outgoing transfers</Heading>\n          </div>\n          {/* <div className=\"flex flex-1 gap-1\">\n            <Button\n              size=\"sm\"\n              theme={\n                this.state.status === \"NO-ISSUE\" ? \"accent\" : \"accent-light\"\n              }\n              onClick={this.changeStatus.bind(this, \"NO-ISSUE\")}\n            >\n              NO-ISSUE\n            </Button>\n            <Button\n              size=\"sm\"\n              theme={\n                this.state.status === \"ISSUE-APPROVED\"\n                  ? \"accent\"\n                  : \"accent-light\"\n              }\n              onClick={this.changeStatus.bind(this, \"ISSUE-APPROVED\")}\n            >\n              ISSUE-APPROVED\n            </Button>\n            <Button\n              size=\"sm\"\n              theme={this.state.status === \"ISSUED\" ? \"accent\" : \"accent-light\"}\n              onClick={this.changeStatus.bind(this, \"ISSUED\")}\n            >\n              ISSUED\n            </Button>\n          </div> */}\n          <section className=\"pr-3\">\n            <Button onClick={this.setOpenDownload} theme=\"success\">\n              Generate Excel\n            </Button>\n          </section>\n          <section className=\"text-center p-1 bg-accent-800 bg-opacity-20 text-accent-900 px-4 rounded\">\n            <span className=\"text-sm block text-gray-500 -mb-1\">Total:</span>\n            <h3 className=\"font-bold text-xl\">{this.state.total}</h3>\n          </section>\n        </div>\n        <DashboardContainer transparent>\n          <table className=\"w-full\">\n            <thead className=\"text-left bg-white\">\n              <tr className=\"bg-accent-900 bg-opacity-10\">\n                <th className=\"p-2 border-gray-300 border\">#</th>\n                <th className=\"p-2 border-gray-300 border\">Names</th>\n                <th className=\"p-2 border-gray-300 border\">School Code</th>\n                <th className=\"p-2 border-gray-300 border\">School name</th>\n                <th className=\"p-2 border-gray-300 border\">Position code</th>\n                <th className=\"p-2 border-gray-300 border\">Position name</th>\n                <th className=\"p-2 border-gray-300 border\">Qualification</th>\n                {/* <th className=\"p-2 border-gray-300 border\">Error</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.loading === true ? (\n                <tr className=\" \">\n                  <td colSpan={8} className=\"py-4 text-center border\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : this.state.data.length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"py-4 text-center border\">\n                    <h1 className=\"text-2xl text-gray-400\">No data found</h1>\n                    {/* <p className=\"text-gray\"></p> */}\n                  </td>\n                </tr>\n              ) : (\n                this.state.data.map((itm, i) => (\n                  <tr\n                    key={i}\n                    className=\"bg-white hover:bg-yellow-400 hover:bg-opacity-30\"\n                    // onClick={() =>\n                    //   this.setState({\n                    //     selected_transfer_id: itm.teacher_transfer_id,\n                    //     transfer_issue: itm.transfer_issue_comment\n                    //       ? itm.transfer_issue_comment\n                    //       : \"\",\n                    //   })\n                    // }\n                  >\n                    <td className=\"border p-2\">{i + 1}</td>\n                    <td className=\"p-2 border\">{itm.teacher_full_name}</td>\n                    <td className=\"p-2 border\">\n                      {itm.school_from_info?.school_code}\n                    </td>\n                    <td className=\"p-2 border\">\n                      {itm.school_from_info?.school_name}\n                    </td>\n                    <td className=\"p-2 border\">{itm.position_code}</td>\n                    <td className=\"p-2 border text-sm\">{itm.position_name}</td>\n                    <td className=\"p-2 border\">{itm.qualification_name}</td>\n                    {/* <td className=\"p-2 border\">\n                      {itm.transfer_issue_comment &&\n                      itm.transfer_issue_comment !== null ? (\n                        <span className=\"text-sm p-0.5 bg-red-400 px-2 rounded-full font-bold text-white\">\n                          Issue\n                        </span>\n                      ) : (\n                        <span></span>\n                      )}\n                    \n                    </td> */}\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n\n          <div className=\"flex gap-3 mx-auto pt-3\">\n            {Array(+total_pages)\n              .fill(\"0\")\n              .map((e, i) => (\n                <button\n                  className={`p-2 py-1 ${\n                    +this.state.page === i + 1\n                      ? \"bg-accent-800 text-black font-bold\"\n                      : \"bg-opacity-25\"\n                  } rounded-full bg-accent-800 `}\n                  onClick={this.paginateData.bind(this, i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const OutgoingTransfers = connect(\n  mapStateToProps,\n  {}\n)(_OutgoingTransfers);\n"],"sourceRoot":""}