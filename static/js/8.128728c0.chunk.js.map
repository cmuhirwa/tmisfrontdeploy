{"version":3,"sources":["trainingModule/components/NoResult/NoResultFound.tsx","trainingModule/TrainingOffers/components/Criteria.tsx","trainingModule/TrainingOffers/components/Header.tsx","trainingModule/TrainingOffers/components/TrainingItem.tsx","trainingModule/TrainingOffers/components/TrainingCohort.tsx","trainingModule/TrainingOffers/components/CohortDateRange.tsx","trainingModule/TrainingOffers/components/DetailsInfo.tsx","trainingModule/TrainingOffers/components/CohortTab.tsx","trainingModule/components/BackButton/BackButton.tsx","trainingModule/TrainingOffers/components/SelectCohort.tsx","trainingModule/TrainingOffers/School/Details/TrainingDetails.tsx","trainingModule/TrainingOffers/School/Details/Participants.tsx","trainingModule/TrainingOffers/School/TrainingOffers.tsx"],"names":["NoResultFound","props","ButtonSelected","button","className","undefined","title","description","onClick","Criteria","ReturnCriteriaComponent","data","map","item","i","name","trainee_criteria","positions","length","qualifications","subjects","id","course_code","course_name","level_name","districts","levels","sectors","Header","type","placeholder","value","this","search_value","onChange","onChangeSearchValue","TrainingImplementationStatus","INPROGRESS","COMPLETED","onSelectTab","selected_status","Component","TrainingItem","training","trainingCohorts","cohort","c","trainingCohort","development_partner_name","TrainingCohort","state","loading","commaFy","total_trainees","buttonTitle","theme","CohortDateRange","DATE","cohort_start_date","cohort_end_date","DetailsInfo","training_details","total","onParticipants","topic","intervention_area","sub_area_name","trainee_category","CohortTab","setOpenSwitchSelectCohort","switchSelectedCohort","selectedCohort","BackButton","SelectCohort","onGoBack","cohortList","setSelectedCohort","TABS","Participants","GetParticipantUnique","response","find","itm","user_id","push","LoadParticipants","setState","GetSchoolTrainingParticipants","school_code","res","setParticipants","participants","error","msg","RemoveParticipantOnTraining","names","cohort_id","removing_user_id","RemoveTraineeToTraining","training_id","status","filter","success","FilteredCohortData","selected_cohort","addParticipants","search_data","view_subjects","Loading","e","target","is_approved","toString","Button","setDisplayTabs","search","colSpan","first_name","last_name","nid","teaching_level","qualification_name","position_name","removeDuplicateParticipantsSubjects","style","zIndex","course","window","confirm","AddParticipants","onClose","onSubmitParticipants","newData","email","phone_numbers","position_code","qualification_id","teaching_level_id","trainee_request_id","parseInt","training_to_group_id","scrollTo","addedParticipants","TrainingDetails","display_tabs","selected_tab","PARTICIPANTS","details","DETAILS","CRITERIA","setSelectCohort","RemoveDuplicateTrainingRequests","trainings","trainingsWithNoDuplicate","index","tr","indexOf","cohorts","cohort_name","cohort_sessions","_TrainingOffers","ValidateTrainingIsOnSchoolLevel","test","roles","level","access_level","LoadAllTrainings","selected_training","GetSchoolTrainingProvidersByStatus","trainings_list","auth","school","school_name","cohort_list","PopUpContainer","TrainingOffers","connect","basic"],"mappings":"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","file":"static/js/8.128728c0.chunk.js","sourcesContent":["export const NoResultFound = (props: {\n  title?: string;\n  description?: string;\n  button?: JSX.Element;\n  onClick?: () => void;\n}) => {\n  const ButtonSelected = props.button;\n  return (\n    <div className=\"bg-gray-100 rounded-md p-3 py-6 text-center\">\n      <div className=\"font-bold text-xl\">\n        {props.title === undefined ? \"No result found!\" : props.title}\n      </div>\n      <div className=\"text-sm text-gray-500\">\n        {props.description === undefined\n          ? \"Try another keyword to view the result!\"\n          : props.description}\n      </div>\n      <div className=\"flex flex-row items-center justify-center\">\n        {ButtonSelected !== undefined && (\n          <div onClick={props.onClick}>{ButtonSelected}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n  ","import React from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\n\nconst Criteria = (props: {\n  trainee_criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}) => {\n  const ReturnCriteriaComponent = (props: {\n    data: {\n      id: string;\n      name: string;\n    }[];\n  }) => {\n    return (\n      <div className=\"mt-2\">\n        {props.data.map((item, i) => (\n          <div\n            key={i + 1}\n            className=\"bg-gray-100 mb-2 rounded-md px-2 py-2 flex flex-row items-center gap-2\"\n          >\n            <div>\n              <div className=\"bg-white rounded-full h-8 w-8 flex items-center justify-center text-primary-700\">\n                <FaRegCheckCircle className=\"text-xl\" />\n              </div>\n            </div>\n            <span>{item.name}</span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  return (\n    <div>\n      {props.trainee_criteria.positions.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <BiRightArrowAlt className=\"text-xl\" />\n            </div>\n            <span className=\"font-bold\">Required Position</span>\n          </div>\n          <ReturnCriteriaComponent data={props.trainee_criteria.positions} />\n        </div>\n      )}\n      {props.trainee_criteria.qualifications.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <BiRightArrowAlt className=\"text-xl\" />\n            </div>\n            <span className=\"font-bold\">Required Qualification</span>\n          </div>\n          <ReturnCriteriaComponent\n            data={props.trainee_criteria.qualifications}\n          />\n        </div>\n      )}\n      {props.trainee_criteria.subjects.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <BiRightArrowAlt className=\"text-xl\" />\n            </div>\n            <span className=\"font-bold\">Required Subjects</span>\n          </div>\n          <ReturnCriteriaComponent\n            data={props.trainee_criteria.subjects.map((item) => ({\n              id: `${item.course_code}`,\n              name: `${item.course_name} - ${item.level_name}`,\n            }))}\n          />\n        </div>\n      )}\n      {props.trainee_criteria.districts.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <BiRightArrowAlt className=\"text-xl\" />\n            </div>\n            <span className=\"font-bold\">Required Districts</span>\n          </div>\n          <ReturnCriteriaComponent data={props.trainee_criteria.districts} />\n        </div>\n      )}\n      {props.trainee_criteria.levels.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <BiRightArrowAlt className=\"text-xl\" />\n            </div>\n            <span className=\"font-bold\">Required teaching level</span>\n          </div>\n          <ReturnCriteriaComponent data={props.trainee_criteria.levels} />\n        </div>\n      )}\n      {props.trainee_criteria.sectors.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <BiRightArrowAlt className=\"text-xl\" />\n            </div>\n            <span className=\"font-bold\">Required sectors</span>\n          </div>\n          <ReturnCriteriaComponent data={props.trainee_criteria.sectors} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Criteria;\n","import React, { Component } from \"react\";\nimport { AiOutlineHistory } from \"react-icons/ai\";\nimport { FaChalkboard, FaChalkboardTeacher } from \"react-icons/fa\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { TrainingImplementationStatus } from \"../../../actions/training-offers\";\n\ninterface HeaderProps {\n  loading: boolean;\n  onSelectTab: (status: TrainingImplementationStatus) => void;\n  selected_status: TrainingImplementationStatus;\n  search_value: string;\n  onChangeSearchValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\ninterface HeaderState {}\n\nexport class Header extends Component<HeaderProps, HeaderState> {\n  render() {\n    return (\n      <div className=\"bg-white rounded p-3\">\n        <div className=\"grid grid-cols-12 gap-2 items-center justify-center\">\n          <div className=\"col-span-12 lg:col-span-3 flex flex-row items-center gap-2 pr-2\">\n            <div>\n              <div className=\"p-1 rounded-md bg-primary-100 h-12 w-12 flex items-center justify-center\">\n                <FaChalkboardTeacher className=\"text-3xl text-primary-800 animate__animated animate__tada\" />\n              </div>\n            </div>\n            <div className=\"truncate\">\n              <div className=\"text-xl font-bold text-primary-800\">\n                Training Offers\n              </div>\n            </div>\n          </div>\n          <div className=\"col-span-12 md:col-span-6 lg:col-span-5\">\n            <div className=\"relative\">\n              <div className=\"absolute px-3 py-2\">\n                <RiSearchLine className=\"text-2xl text-gray-600\" />\n              </div>\n              <input\n                type=\"search\"\n                className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded\"\n                placeholder=\"Search...\"\n                value={this.props.search_value}\n                onChange={this.props.onChangeSearchValue}\n              />\n            </div>\n          </div>\n          <div className=\"col-span-12 md:col-span-6 lg:col-span-4\">\n            <div className=\"flex flex-row items-center justify-end gap-2\">\n              {[\n                TrainingImplementationStatus.INPROGRESS,\n                TrainingImplementationStatus.COMPLETED,\n              ].map((item, i) => (\n                <div\n                  onClick={() => this.props.onSelectTab(item)}\n                  key={i + 1}\n                  className={`rounded-md px-1 py-1 pr-3 mt-1 flex flex-row items-center gap-2 ${\n                    item === this.props.selected_status\n                      ? \"bg-primary-100 text-primary-800 font-bold animate__animated animate__fadeIn\"\n                      : \"hover:text-primary-800 hover:bg-primary-100 text-black bg-white\"\n                  } cursor-pointer group`}\n                >\n                  <div>\n                    <div\n                      className={`h-7 w-7 ${\n                        item === this.props.selected_status\n                          ? \"bg-white text-primary-800\"\n                          : \"bg-primary-100 text-primary-700 group-hover:bg-primary-800 group-hover:text-white\"\n                      } rounded-full flex items-center justify-center`}\n                    >\n                      {item === TrainingImplementationStatus.INPROGRESS ? (\n                        <FaChalkboard className=\"text-md\" />\n                      ) : (\n                        <AiOutlineHistory className=\"text-md\" />\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    {item === TrainingImplementationStatus.INPROGRESS\n                      ? \"New trainings\"\n                      : \"History\"}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsFillArrowRightCircleFill } from \"react-icons/bs\";\nimport { TrainingCohort, TrainingCohortItemInterface } from \"./TrainingCohort\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { NewTrainingRequestDistinct } from \"../School/TrainingOffers\";\n\ninterface TrainingItemProps {\n  i: number;\n  item: NewTrainingRequestDistinct;\n  onClick: (\n    cohort: TrainingCohortItemInterface,\n    cohorts_temp: TrainingCohortItemInterface[]\n  ) => void;\n}\ninterface TrainingItemState {}\n\nexport class TrainingItem extends Component<\n  TrainingItemProps,\n  TrainingItemState\n> {\n  render() {\n    return (\n      <div\n        key={this.props.i}\n        className=\"bg-white border border-primary-300 hover:border-primary-500 mt-3 rounded-lg flex flex-col lg:flex-row items-end lg:items-center justify-between gap-2 p-3 animate__animated animate__fadeIn\"\n      >\n        <div className=\"flex flex-col md:flex-row gap-5 w-full\">\n          {/* Icon here */}\n          {/* <div>\n            <div className=\"relative bg-accent-400 text-accent-900 rounded-lg p-4 h-24 w-24\">\n              {this.props.item.implementation_status ===\n                TrainingImplementationStatus.INPROGRESS && (\n                <div className=\"px-1 rounded-xl bg-primary-700 text-white w-max font-bold absolute text-xs top-0 right-0 -mt-2 -mr-2 animate__animated animate__fadeIn\">\n                  New\n                </div>\n              )}\n              <div>\n                <FaChalkboard className=\"text-6xl\" />\n              </div>\n            </div>\n          </div> */}\n          {/* Details here */}\n          <div className=\"flex flex-col w-full\">\n            <div className=\"flex flex-row gap-2 mb-2\">\n              <div>\n                <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-gray-100 text-gray-400 group-hover:bg-primary-700 group-hover:text-white\">\n                  <FaChalkboardTeacher className=\"text-3xl\" />\n                </div>\n              </div>\n              <div>\n                <div className=\"text-lg font-bold mb-0\">\n                  {this.props.item.training.title}\n                </div>\n                <div className=\"text-sm text-black font-light\">\n                  {this.props.item.training.description}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"py-2 grid grid-cols-12 gap-2\">\n              <div className=\"col-span-12\">\n                <div className=\"flex flex-row items-center gap-2 -mb-1\">\n                  <span className=\"font-bold text-gray-500 text-base\">\n                    Training Cohorts\n                  </span>\n                  <span className=\"px-2 rounded-md bg-accent-400 text-accent-900 text-sm font-bold\">\n                    {this.props.item.trainingCohorts.length}\n                  </span>\n                </div>\n              </div>\n              {this.props.item.trainingCohorts.map((cohort, c) => (\n                <div key={c + 1} className=\"col-span-12\">\n                  <TrainingCohort\n                    trainingCohort={cohort}\n                    onClick={() =>\n                      this.props.onClick(\n                        cohort,\n                        this.props.item.trainingCohorts\n                      )\n                    }\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"flex flex-row items-center gap-2 mt-2\">\n              <div>\n                <BsFillArrowRightCircleFill className=\"text-accent-800\" />\n              </div>\n              <span className=\"text-sm\">\n                Provider: {this.props.item.training.development_partner_name}\n              </span>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"\">\n          <Button\n            className=\"w-40 bg-accent-400 border-accent-500 group-hover:bg-accent-800 group-hover:border-accent-800 group-hover:text-black flex flex-row items-center justify-center gap-2\"\n            theme=\"accent-light\"\n            onClick={this.props.onClick}\n          >\n            <span>More details</span>\n            <div>\n              <BsArrowUpRight className=\"text-xl\" />\n            </div>\n          </Button>\n        </div> */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { commaFy } from \"../../../utils/functions\";\nimport Button from \"../../../components/Buttons/Button\";\nimport { BsArrowUpRight } from \"react-icons/bs\";\nimport { CohortDateRange } from \"./CohortDateRange\";\n\nexport interface TrainingCohortItemInterface {\n  cohort_end_date: string;\n  cohort_id: string;\n  cohort_name: string;\n  cohort_sessions: {\n    end_date: string;\n    day_total: number;\n    session_id: string;\n    start_date: string;\n  }[];\n  cohort_start_date: string;\n  total_trainees: number;\n}\n\ninterface TrainingCohortProps {\n  trainingCohort: TrainingCohortItemInterface;\n  onClick: (cohort: TrainingCohortItemInterface) => void;\n  className?: string;\n  buttonTitle?: string;\n}\ninterface TrainingCohortState {\n  loading: boolean;\n}\n\nexport class TrainingCohort extends Component<\n  TrainingCohortProps,\n  TrainingCohortState\n> {\n  constructor(props: TrainingCohortProps) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n  }\n  render() {\n    return (\n      <div\n        onClick={() => this.props.onClick(this.props.trainingCohort)}\n        className={`border border-primary-300 hover:border-accent-600 hover:bg-accent-200 w-full rounded-lg p-3 pl-5 group cursor-pointer ${this.props.className}`}\n      >\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2\">\n          {/* Cohort date ranger */}\n          <CohortDateRange trainingCohort={this.props.trainingCohort} />\n          <div className=\"flex flex-row items-center justify-end gap-2\">\n            <div className=\"flex flex-col\">\n              <div className=\"font-light text-sm\">Requests</div>\n              <div className=\"font-extrabold text-2xl -mt-1 text-gray-400 group-hover:text-black\">\n                {commaFy(this.props.trainingCohort.total_trainees)}\n              </div>\n            </div>\n            {this.props.buttonTitle === undefined ? (\n              <Button\n                className=\"w-max text-black bg-accent-400 border-accent-500 group-hover:bg-accent-800 group-hover:border-accent-800 group-hover:text-black flex flex-row items-center justify-center gap-2 rounded-md\"\n                theme=\"accent-light\"\n              >\n                <span className=\"text-black\">\n                  {this.props.buttonTitle ?? \"Open\"}\n                </span>\n                {this.props.buttonTitle === undefined && (\n                  <div>\n                    <BsArrowUpRight className=\"text-xl\" />\n                  </div>\n                )}\n              </Button>\n            ) : (\n              <div className=\"w-max text-black bg-accent-400 border-accent-500 group-hover:bg-accent-800 group-hover:border-accent-800 group-hover:text-black flex flex-row items-center justify-center gap-2 rounded-md px-3 py-2 font-bold\">\n                <span className=\"text-black\">\n                  {this.props.buttonTitle ?? \"Open\"}\n                </span>\n                <div>\n                  <BsArrowUpRight className=\"text-xl\" />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsCalendar3 } from \"react-icons/bs\";\nimport { DATE } from \"../../../utils/functions\";\nimport { TrainingCohortItemInterface } from \"./TrainingCohort\";\n\ninterface CohortDateRangeProps {\n  trainingCohort: TrainingCohortItemInterface;\n}\ninterface CohortDateRangeState {}\n\nexport class CohortDateRange extends Component<\n  CohortDateRangeProps,\n  CohortDateRangeState\n> {\n  constructor(props: CohortDateRangeProps) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"flex flex-row items-center gap-4\">\n        {/* Start date */}\n        <div className=\"flex flex-row items-center gap-2\">\n          <div>\n            <BsCalendar3 className=\"text-3xl text-gray-300 group-hover:text-yellow-600\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"text-sm text-gray-500\">Start date</div>\n            <div className=\"font-bold text-sm\">\n              {DATE(this.props.trainingCohort.cohort_start_date, \"DD/MM/YYYY\")}\n            </div>\n          </div>\n        </div>\n        {/* ........ */}\n        <div className=\"flex flex-row items-center gap-3\">\n          <div className=\"h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n          <div className=\"h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n          <div className=\"hidden md:block h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n          <div className=\"hidden lg:block h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n          <div className=\"hidden lg:block h-3 w-3 rounded-full bg-gray-300 group-hover:bg-accent-500\"></div>\n        </div>\n        {/* Ending date */}\n        <div className=\"flex flex-row items-center gap-2\">\n          <div>\n            <BsCalendar3 className=\"text-3xl text-gray-300 group-hover:text-yellow-600\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"text-sm text-gray-500\">Ending date</div>\n            <div className=\"font-bold text-sm\">\n              {DATE(this.props.trainingCohort.cohort_end_date, \"DD/MM/YYYY\")}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsFillPeopleFill } from \"react-icons/bs\";\nimport { FaChalkboard } from \"react-icons/fa\";\nimport {\n  MdKeyboardArrowRight,\n  MdOutlineAdminPanelSettings,\n} from \"react-icons/md\";\nimport { GetTrainingsListByStatusInterface } from \"../../../actions/training-offers\";\nimport Button from \"../../../components/Buttons/Button\";\nimport { commaFy } from \"../../../utils/functions\";\nimport Criteria from \"./Criteria\";\n\ninterface DetailsInfoProps {\n  training_details: GetTrainingsListByStatusInterface;\n  onParticipants: () => void;\n}\ninterface DetailsInfoState {\n  loading: boolean;\n}\n\nexport class DetailsInfo extends Component<DetailsInfoProps, DetailsInfoState> {\n  constructor(props: DetailsInfoProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn mb-10\">\n        <div>\n          <div className=\"flex flex-row items-center gap-2 w-full bg-primary-100 p-2 rounded-md\">\n            <div className=\"\">\n              <div className=\"h-8 w-8 rounded-md flex items-center justify-center bg-white text-primary-700\">\n                <FaChalkboard className=\"text-xl\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <div className=\"font-bold text-lg text-primary-800\">\n                Training details\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Details here */}\n\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-3 my-3 px-0 md:px-2\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div className=\"bg-primary-100 rounded-md h-10 w-10 flex justify-center items-center\">\n                <MdOutlineAdminPanelSettings className=\"text-3xl text-primary-800\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"text-gray-500\">Training provider</span>\n              <span className=\"font-bold\">\n                {this.props.training_details.development_partner_name}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center justify-between md:justify-end gap-2\">\n            <div className=\"flex flex-col\">\n              <div className=\"text-sm text-gray-500\">Total trainees</div>\n              <div className=\"-mt-1 text-lg font-bold\">\n                {commaFy(\n                  this.props.training_details.total === null\n                    ? 0\n                    : this.props.training_details.total\n                )}\n              </div>\n            </div>\n            <Button\n              type=\"button\"\n              className=\"\"\n              onClick={this.props.onParticipants}\n            >\n              View trainees\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"border-b border-gray-300 p-2 pb-4 mt-2\">\n          <div className=\"flex flex-col\">\n            <div className=\"text-gray-400 font-bold\">Training title</div>\n            <div>{this.props.training_details.title}</div>\n          </div>\n        </div>\n        {/* -------------------- */}\n        <div className=\"border-b border-gray-300 p-2 pb-4 mt-2\">\n          <div className=\"flex flex-col\">\n            <div className=\"text-gray-400 font-bold\">Training description</div>\n            <div>{this.props.training_details.description}</div>\n          </div>\n        </div>\n        {/* -------------------- */}\n        <div className=\"border-b border-gray-300 p-2 pb-4 mt-2\">\n          <div className=\"flex flex-col\">\n            <div className=\"text-gray-400 font-bold\">Training topic</div>\n            <div>{this.props.training_details.topic}</div>\n          </div>\n        </div>\n        {/* -------------------- */}\n        <div className=\"border-b border-gray-300 p-2 pb-4 mt-2\">\n          <div className=\"flex flex-col\">\n            <div className=\"text-gray-400 font-bold\">\n              Training area of intervention\n            </div>\n            <div className=\"flex flex-row items-center gap-2\">\n              <div>{this.props.training_details.intervention_area}</div>\n              <div>\n                <MdKeyboardArrowRight className=\"text-xl\" />\n              </div>\n              <div>{this.props.training_details.sub_area_name}</div>\n            </div>\n          </div>\n        </div>\n        {/* -------------------- */}\n        <div className=\"border-b border-gray-300 p-2 pb-4 mt-2\">\n          <div className=\"flex flex-col\">\n            <div className=\"text-gray-400 font-bold\">Trainee's categories</div>\n            <div className=\"mt-2\">\n              {this.props.training_details.trainee_category.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"bg-gray-100 mb-2 rounded-md px-2 py-2 flex flex-row items-center gap-2\"\n                >\n                  <div>\n                    <div className=\"bg-white rounded-full h-8 w-8 flex items-center justify-center text-primary-700\">\n                      <BsFillPeopleFill className=\"text-xl\" />\n                    </div>\n                  </div>\n                  <span>{item.name}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* -------------------- */}\n        <div className=\"p-2 pb-4 mt-2\">\n          <div className=\"flex flex-col\">\n            <div className=\"text-gray-400 font-bold mb-2\">\n              Criteria to select participants\n            </div>\n            <div>\n              <Criteria\n                trainee_criteria={this.props.training_details.trainee_criteria}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TrainingCohortItemInterface } from \"./TrainingCohort\";\nimport { commaFy } from \"../../../utils/functions\";\nimport { HiOutlineSwitchHorizontal } from \"react-icons/hi\";\nimport { CohortDateRange } from \"./CohortDateRange\";\n\ninterface CohortTabProps {\n  switchSelectedCohort: boolean;\n  setOpenSwitchSelectCohort: (status: boolean) => void;\n  selectedCohort: TrainingCohortItemInterface | null;\n  setSelectCohort: (selectedCohort: TrainingCohortItemInterface) => void;\n}\ninterface CohortTabState {}\n\nexport class CohortTab extends Component<CohortTabProps, CohortTabState> {\n  render() {\n    return (\n      <div\n        onClick={() =>\n          this.props.setOpenSwitchSelectCohort(!this.props.switchSelectedCohort)\n        }\n        className=\"w-full my-3 p-3 py-2 pr-2 bg-white hover:bg-accent-200 rounded-md flex flex-col md:flex-row md:items-center md:justify-between gap-2 group border border-accent-600 cursor-pointer\"\n      >\n        {this.props.selectedCohort !== null && (\n          <CohortDateRange trainingCohort={this.props.selectedCohort} />\n        )}\n        <div className=\"flex flex-row items-center justify-between gap-2\">\n          {this.props.selectedCohort !== null && (\n            <div>\n              <div className=\"text-sm text-gray-500 group-hover:text-black\">\n                Total Requests\n              </div>\n              <div className=\"text-xl font-extrabold -mt-1\">\n                {commaFy(this.props.selectedCohort.total_trainees)}\n              </div>\n            </div>\n          )}\n          <div>\n            <div className=\"bg-accent-400 text-accent-900 group-hover:bg-white border border-white group-hover:border-accent-600 cursor-pointer group-hover:text-accent-900 rounded-lg h-10 w-10 flex items-center justify-center\">\n              <HiOutlineSwitchHorizontal className=\"text-2xl\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { HiOutlineArrowSmLeft } from \"react-icons/hi\";\n\nconst BackButton = (props: {\n  onClick?: () => void;\n  className?: string;\n  title: string;\n}) => {\n  return (\n    <div\n      className={`px-3 pl-2 py-2 rounded flex flex-row items-center justify-center gap-1 cursor-pointer animate__animated animate__fadeIn ${props.className}`}\n      onClick={props.onClick}\n    >\n      <div>\n        <HiOutlineArrowSmLeft className=\"text-2xl\" />\n      </div>\n      <span>{props.title}</span>\n    </div>\n  );\n};\n\nexport default BackButton;\n","import React, { Component } from \"react\";\nimport { TrainingCohort, TrainingCohortItemInterface } from \"./TrainingCohort\";\nimport { NoResultFound } from \"../../components/NoResult/NoResultFound\";\nimport BackButton from \"../../components/BackButton/BackButton\";\n\ninterface SelectCohortProps {\n  cohortList: TrainingCohortItemInterface[];\n  onGoBack: () => void;\n  selectedCohort: TrainingCohortItemInterface | null;\n  setSelectedCohort: (selectedCohort: TrainingCohortItemInterface) => void;\n}\ninterface SelectCohortState {}\n\nexport class SelectCohort extends Component<\n  SelectCohortProps,\n  SelectCohortState\n> {\n  constructor(props: SelectCohortProps) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"md:bg-primary-50 h-full md:p-3 rounded-lg animate__animated animate__fadeInUp animate__fast\">\n        <div className=\"flex flex-row items-center gap-2 mb-4 border-gray-300\">\n          <BackButton\n            title=\"Back\"\n            className=\"bg-white text-black border border-accent-600 hover:border-accent-800 hover:bg-accent-400 rounded-md\"\n            onClick={this.props.onGoBack}\n          />\n          <div>\n            <div className=\"font-bold text-lg\">Switch Training Cohort</div>\n            <div className=\"text-sm text-gray-500 -mt-1\">\n              From the following list, choose training cohort\n            </div>\n          </div>\n        </div>\n        {this.props.cohortList.length === 0 ? (\n          <div>\n            <NoResultFound\n              title=\"No Training Cohorts\"\n              description=\"This training has no Cohorts assigned to it\"\n            />\n          </div>\n        ) : (\n          <div>\n            {/* Cohorts list */}\n            <div className=\"grid grid-cols-12 gap-2\">\n              {this.props.cohortList.map((item, i) => (\n                <div key={i + 1} className=\"col-span-12\">\n                  <TrainingCohort\n                    trainingCohort={item}\n                    onClick={() => this.props.setSelectedCohort(item)}\n                    className=\"bg-white\"\n                    buttonTitle=\"Select\"\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport {\n  GetTrainingsListByStatusInterface,\n  TrainingParticipants,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport Criteria from \"../../components/Criteria\";\nimport { DetailsInfo } from \"../../components/DetailsInfo\";\nimport { Participants } from \"./Participants\";\nimport { TrainingCohortItemInterface } from \"../../components/TrainingCohort\";\nimport { SelectCohort } from \"../../components/SelectCohort\";\nimport { CohortTab } from \"../../components/CohortTab\";\n\nenum TABS {\n  PARTICIPANTS = \"PARTICIPANTS\",\n  DETAILS = \"DETAILS\",\n  CRITERIA = \"CRITERIA\",\n}\n\ninterface TrainingDetailsProps {\n  training_details: GetTrainingsListByStatusInterface;\n  selected_cohort: TrainingCohortItemInterface | null;\n  school_code: string;\n  onClose: () => void;\n  cohortList: TrainingCohortItemInterface[];\n}\ninterface TrainingDetailsState {\n  selected_tab: TABS;\n  loading: boolean;\n  display_tabs: boolean;\n  selectedCohort: TrainingCohortItemInterface | null;\n  switchSelectedCohort: boolean;\n  participants: TrainingParticipants[] | null;\n}\n\nexport class TrainingDetails extends Component<\n  TrainingDetailsProps,\n  TrainingDetailsState\n> {\n  constructor(props: TrainingDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selected_tab: TABS.PARTICIPANTS,\n      display_tabs: true,\n      selectedCohort: this.props.selected_cohort,\n      switchSelectedCohort: false,\n      participants: null,\n    };\n  }\n  setDisplayTabs = (status: boolean) => this.setState({ display_tabs: status });\n  componentDidMount(): void {\n    // Automatically scroll to top\n    window.scrollTo(0, 0);\n  }\n  render() {\n    const details: GetTrainingsListByStatusInterface =\n      this.props.training_details;\n    return (\n      <div>\n        {/* Title */}\n        {this.state.display_tabs === true && (\n          <div className=\"flex flex-col lg:flex-row items-center justify-between gap-2 w-full borde-b border-primary-600\">\n            <div className=\"flex flex-row items-center gap-2 w-full\">\n              <div>\n                <div\n                  onClick={() => {\n                    this.state.loading === false && this.props.onClose();\n                  }}\n                  className=\"h-11 w-11 flex items-center justify-center rounded-full bg-accent-400 text-accent-900 hover:bg-accent-500 hover:text-accent-900 cursor-pointer\"\n                >\n                  <BsArrowLeft className=\"text-2xl\" />\n                </div>\n              </div>\n              <div className=\"flex flex-col\">\n                <div className=\"font-bold text-xl text-gray-00\">\n                  {details.title}\n                </div>\n                <div className=\"text-sm text-gray-500 font-normal\">\n                  {details.development_partner_name}\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex flex-row items-center justify-end gap-0\">\n                {[TABS.PARTICIPANTS, TABS.DETAILS, TABS.CRITERIA].map(\n                  (item, i) => (\n                    <div\n                      onClick={() => {\n                        this.setState({\n                          selected_tab: item,\n                        });\n                      }}\n                      key={i + 1}\n                      className={`rounded-t-md px-3 py-2 flex flex-row items-center gap-2 border-b-4 ${\n                        item === this.state.selected_tab\n                          ? \"bg-white text-primary-700 border-primary-700 font-bold animate__animated animate__fadeIn\"\n                          : \"hover:bg-primary-100 hover:border-primary-700  text-gray-700 hover:text-primary-700 bg-gray-10\"\n                      } cursor-pointer`}\n                    >\n                      <div className=\"truncate\">\n                        {item === TABS.PARTICIPANTS\n                          ? \"List of trainees\"\n                          : item === TABS.DETAILS\n                          ? \"Details\"\n                          : \"Training criteria\"}\n                      </div>\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Cohort details here */}\n        <CohortTab\n          selectedCohort={this.state.selectedCohort}\n          setOpenSwitchSelectCohort={(status: boolean) =>\n            this.setState({ switchSelectedCohort: status, display_tabs: true })\n          }\n          setSelectCohort={(selectedCohort: TrainingCohortItemInterface) =>\n            this.setState({ selectedCohort: selectedCohort })\n          }\n          switchSelectedCohort={this.state.switchSelectedCohort}\n        />\n        {this.state.switchSelectedCohort === false ? (\n          <>\n            {/* Details */}\n            {this.state.selected_tab === TABS.PARTICIPANTS && (\n              <Participants\n                training={this.props.training_details}\n                setDisplayTabs={this.setDisplayTabs}\n                school_code={this.props.school_code}\n                selected_cohort={this.state.selectedCohort}\n                setSelectedCohort={(cohort: TrainingCohortItemInterface) =>\n                  this.setState({ selectedCohort: cohort })\n                }\n                participants={this.state.participants}\n                setParticipants={(data: TrainingParticipants[]) =>\n                  this.setState({ participants: data })\n                }\n              />\n            )}\n            {this.state.selected_tab === TABS.DETAILS && (\n              <DetailsInfo\n                training_details={this.props.training_details}\n                onParticipants={() =>\n                  this.setState({ selected_tab: TABS.PARTICIPANTS })\n                }\n              />\n            )}\n            {this.state.selected_tab === TABS.CRITERIA && (\n              <div>\n                <div className=\"flex flex-row items-center justify-between gap-2 border-b border-gray-300 pb-3 mb-3\">\n                  <div className=\"flex flex-row items-center gap-2\">\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ selected_tab: TABS.DETAILS })\n                        }\n                        className=\"bg-accent-400 hover:bg-accent-500 text-accent-900 rounded px-3 py-2 font-bold cursor-pointer w-max flex flex-row items-center gap-2\"\n                      >\n                        {/* <div>\n                    <BsArrowLeft className=\"text-2xl\" />\n                  </div> */}\n                        <div>Back to details</div>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-lg font-bold text-black\">\n                        Training criteria\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        List of training criteria that the system consider while\n                        choosing participants\n                      </div>\n                    </div>\n                  </div>\n                  {/* Right side */}\n                  <div>\n                    <Button\n                      onClick={() =>\n                        this.setState({ selected_tab: TABS.PARTICIPANTS })\n                      }\n                      theme=\"accent\"\n                    >\n                      View trainees\n                    </Button>\n                  </div>\n                </div>\n                <Criteria\n                  trainee_criteria={\n                    this.props.training_details.trainee_criteria\n                  }\n                />\n              </div>\n            )}\n          </>\n        ) : (\n          <div>\n            {/* Select Training cohort here */}\n            <SelectCohort\n              cohortList={this.props.cohortList}\n              onGoBack={() => this.setState({ switchSelectedCohort: false })}\n              selectedCohort={this.state.selectedCohort}\n              setSelectedCohort={(\n                selectedCohort: TrainingCohortItemInterface\n              ) =>\n                this.setState({\n                  selectedCohort: selectedCohort,\n                  switchSelectedCohort: false,\n                })\n              }\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsJournalArrowDown } from \"react-icons/bs\";\nimport { FaUserEdit, FaUsers } from \"react-icons/fa\";\nimport { MdClose, MdInfo } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport {\n  GetSchoolTrainingParticipants,\n  GetTrainingsListByStatusInterface,\n  RemoveTraineeToTraining,\n  TeachersToBeTrainedResponse,\n  TrainingParticipants,\n} from \"../../../../actions/training-offers\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { search } from \"../../../../utils/functions\";\nimport {\n  AddParticipants,\n  removeDuplicateParticipantsSubjects,\n} from \"./AddParticipants\";\nimport { TrainingCohortItemInterface } from \"../../components/TrainingCohort\";\n\ninterface ParticipantsProps {\n  training: GetTrainingsListByStatusInterface;\n  school_code: string;\n  setDisplayTabs: (status: boolean) => void;\n  selected_cohort: TrainingCohortItemInterface | null;\n  setSelectedCohort: (cohort: TrainingCohortItemInterface) => void;\n  participants: TrainingParticipants[] | null;\n  setParticipants: (data: TrainingParticipants[]) => void;\n}\ninterface ParticipantsState {\n  loading: boolean;\n  participants: TrainingParticipants[] | null;\n  addParticipants: boolean;\n  error: string;\n  success: string;\n  search_data: string;\n  view_subjects: TrainingParticipants | null;\n  removing_user_id: string | null;\n}\n\nexport class Participants extends Component<\n  ParticipantsProps,\n  ParticipantsState\n> {\n  constructor(props: ParticipantsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      participants: this.props.participants,\n      addParticipants: false,\n      error: \"\",\n      success: \"\",\n      search_data: \"\",\n      view_subjects: null,\n      removing_user_id: null,\n    };\n  }\n\n  GetParticipantUnique = (\n    data: TrainingParticipants[]\n  ): TrainingParticipants[] => {\n    var response: TrainingParticipants[] = [];\n    for (const item of data) {\n      if (response.find((itm) => itm.user_id === item.user_id) === undefined) {\n        response.push(item);\n      }\n    }\n    return response;\n  };\n\n  LoadParticipants = () => {\n    this.setState({ loading: true });\n    GetSchoolTrainingParticipants(\n      this.props.training.id,\n      this.props.school_code,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: TrainingParticipants[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          this.props.setParticipants(\n            res.data === null ? [] : this.GetParticipantUnique(res.data)\n          );\n          this.setState({\n            participants:\n              res.data === null ? null : this.GetParticipantUnique(res.data),\n            loading: false,\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ participants: [], loading: false, error: res.msg });\n        }\n      }\n    );\n  };\n\n  RemoveParticipantOnTraining = (\n    user_id: string,\n    names: string,\n    cohort_id: string\n  ) => {\n    this.setState({ removing_user_id: user_id });\n    RemoveTraineeToTraining(\n      {\n        training_id: this.props.training.id,\n        user_id: user_id,\n        status: \"DISABLED\",\n        cohort_id: cohort_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        if (res !== null && res.type === \"success\") {\n          this.setState({\n            participants:\n              this.state.participants === null\n                ? []\n                : this.state.participants.filter(\n                    (itm) => itm.user_id !== user_id\n                  ),\n            removing_user_id: null,\n            success: `${names} has been removed from participants list successfully!`,\n            error: \"\",\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({\n            removing_user_id: null,\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n\n  FilteredCohortData = (data: TrainingParticipants[]) => {\n    return data.filter(\n      (itm) => itm.cohort_id === this.props.selected_cohort?.cohort_id\n    );\n  };\n\n  componentDidMount(): void {\n    if (\n      this.state.participants === null ||\n      this.state.participants.length === 0\n    ) {\n      this.LoadParticipants();\n    }\n  }\n\n  render() {\n    if (this.state.loading === true || this.state.participants === null) {\n      return (\n        <div className=\"flex flex-col items-center justify-center p-6 bg-gray-100 rounded my-4\">\n          <Loading />\n          <div className=\"text-center font-light text-lg\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.addParticipants === false && (\n          <div className=\"animate__animated animate__fadeIn\">\n            <div className=\"bg-gray-10 rounded-md\">\n              <div>\n                {this.FilteredCohortData(this.state.participants).length >\n                  0 && (\n                  <div className=\"flex flex-col lg:flex-row items-center justify-between gap-2 w-full\">\n                    <div className=\"flex flex-row items-center gap-4 w-full truncate\">\n                      <div>\n                        <BsJournalArrowDown className=\"text-3xl text-accent-900\" />\n                      </div>\n                      <div className=\"text-lg font-bold flex flex-col truncate\">\n                        <div>List of trainees</div>\n                        <div\n                          className=\"text-sm font-normal truncate\"\n                          title={`${this.props.training.development_partner_name}`}\n                        >\n                          {this.props.training.development_partner_name}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col md:flex-row items-center justify-between gap-2 w-full\">\n                      <div className=\"relative w-full\">\n                        <div className=\"absolute px-3 py-2\">\n                          <RiSearchLine className=\"text-2xl text-gray-600\" />\n                        </div>\n                        <input\n                          type=\"search\"\n                          className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded\"\n                          placeholder=\"Search...\"\n                          value={this.state.search_data}\n                          onChange={(e) =>\n                            this.setState({ search_data: e.target.value })\n                          }\n                        />\n                      </div>\n                      <div className=\"flex flex-row items-center justify-between md:justify-end gap-2 w-full mt-2 md:mt-0\">\n                        <div\n                          className={`${\n                            this.FilteredCohortData(this.state.participants)\n                              .length ===\n                            this.props.selected_cohort?.total_trainees\n                              ? \"text-green-600 bg-green-50 px-3 pt-1 rounded-md\"\n                              : \"text-gray-900 bg-white px-3 pt-1 rounded-md\"\n                          } flex flex-col items-start justify-center truncate`}\n                        >\n                          <div className={`text-sm`}>Total trainees</div>\n                          <div\n                            className={`flex flex-row items-center gap-2 font-bold -mt-1 text-lg`}\n                          >\n                            <span>\n                              {\n                                this.FilteredCohortData(this.state.participants)\n                                  .length\n                              }\n                            </span>{\" \"}\n                            of{\" \"}\n                            <span>\n                              {this.props.selected_cohort?.total_trainees}\n                            </span>\n                          </div>\n                        </div>\n                        <div>\n                          {this.FilteredCohortData(this.state.participants)\n                            .length !==\n                            this.props.selected_cohort?.total_trainees &&\n                          this.props.training.is_approved?.toString() !==\n                            \"1\" ? (\n                            <Button\n                              theme=\"accent\"\n                              className=\"animate__animated animate__zoomIn truncate flex flex-row items-center justify-center gap-2\"\n                              onClick={() => {\n                                if (this.state.removing_user_id === null) {\n                                  this.setState({ addParticipants: true });\n                                  this.props.setDisplayTabs(false);\n                                }\n                              }}\n                            >\n                              <div>\n                                <FaUserEdit className=\"text-2xl\" />\n                              </div>\n                              <span>Add trainees</span>\n                            </Button>\n                          ) : (\n                            // <Button\n                            //   theme=\"success-light\"\n                            //   className=\"flex flex-row items-center justify-center gap-2 px-0 cursor-not-allowed\"\n                            // >\n                            //   <div className=\"-ml-2\">\n                            //     <MdCheckCircle className=\"text-2xl\" />\n                            //   </div>\n                            //   <span className=\"font-normal\">Done</span>\n                            // </Button>\n                            \"\"\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n              {/* Body */}\n              {this.FilteredCohortData(this.state.participants).length ===\n                0 && (\n                <div>\n                  <div className=\"bg-gray-100 text-center flex flex-col items-center justify-center p-3 py-8 rounded-lg mt-3\">\n                    <div className=\"text-center\">\n                      <FaUsers className=\"text-6xl text-gray-400 animate__animated animate__zoomIn\" />\n                    </div>\n                    <div className=\"text-xl font-bold mt-2\">\n                      List of trainees\n                    </div>\n                    <div className=\"text-sm font-light\">\n                      You are required to add trainee from this training\n                    </div>\n                    <div className=\"mt-2\">\n                      {this.props.training.is_approved?.toString() !== \"1\" && (\n                        <Button\n                          theme=\"accent\"\n                          className=\"animate__animated animate__zoomIn flex flex-row items-center justify-center gap-2\"\n                          onClick={() => {\n                            this.setState({\n                              addParticipants: true,\n                              success: \"\",\n                              error: \"\",\n                            });\n                            this.props.setDisplayTabs(false);\n                          }}\n                        >\n                          <div>\n                            <FaUserEdit className=\"text-2xl\" />\n                          </div>\n                          <span>Add trainees</span>\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n              {this.FilteredCohortData(this.state.participants).length ===\n                this.props.selected_cohort?.total_trainees && (\n                <div className=\"p-1 flex flex-row items-center gap-3 rounded-md bg-primary-100 my-3\">\n                  <div className=\"rounded-md h-14 w-14 flex items-center justify-center bg-white\">\n                    <MdInfo className=\"text-5xl text-primary-600 animate__animated animate__zoomIn\" />\n                  </div>\n                  <div>\n                    <div className=\"font-bold text-primary-800 text-lg\">\n                      Verify the selected trainees before the approval\n                    </div>\n                    <div className=\"text-sm text-primary-800\">\n                      Now you are able to make modification until the approval\n                      will be made. make sure you have well verified the\n                      selected trainees\n                    </div>\n                  </div>\n                </div>\n              )}\n              {/* error */}\n              {this.state.error !== \"\" && (\n                <div\n                  onClick={() => this.setState({ error: \"\", success: \"\" })}\n                  className=\"bg-red-100 text-red-700 px-3 py-2 rounded cursor-pointer flex flex-row items-center justify-between gap-2 my-2 animate__animated animate__shakeX\"\n                >\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-lg font-bold\">Error occurred:</span>\n                    <span>{this.state.error}</span>\n                  </div>\n                  <div>\n                    <MdClose className=\"text-2xl\" />\n                  </div>\n                </div>\n              )}\n              {/* Success */}\n              {this.state.success !== \"\" && (\n                <div\n                  onClick={() => this.setState({ error: \"\", success: \"\" })}\n                  className=\"bg-green-100 text-green-700 px-3 py-2 rounded cursor-pointer flex flex-row items-center justify-between gap-2 my-2 animate__animated animate__fadeIn\"\n                >\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-lg font-bold\">Done successfully</span>\n                    <span>{this.state.success}</span>\n                  </div>\n                  <div>\n                    <MdClose className=\"text-2xl\" />\n                  </div>\n                </div>\n              )}\n              {/* List of participants */}\n              {this.FilteredCohortData(this.state.participants).length > 0 && (\n                <div className=\"mt-3 w-full overflow-x-auto\">\n                  <table className=\"min-w-full text-left text-sm animate__animated animate__fadeIn\">\n                    <thead>\n                      <tr className=\"text-primary-800 truncate\">\n                        <th className=\"px-2 py-2 border border-gray-300 text-center\">\n                          #\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Full name\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          National ID\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Teaching level\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Qualification\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300\">\n                          Position\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300 text-right\">\n                          Subjects taught\n                        </th>\n                        <th className=\"px-2 py-2 border border-gray-300 text-right\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {(\n                        search(\n                          this.FilteredCohortData(this.state.participants),\n                          this.state.search_data\n                        ) as TrainingParticipants[]\n                      ).length === 0 ? (\n                        <tr>\n                          <td\n                            colSpan={8}\n                            className=\"p-6 text-lg font-light text-center\"\n                          >\n                            <div className=\"animate__animated animate__shakeX text-center\">\n                              No result found!\n                            </div>\n                          </td>\n                        </tr>\n                      ) : (\n                        (\n                          search(\n                            this.FilteredCohortData(this.state.participants),\n                            this.state.search_data\n                          ) as TrainingParticipants[]\n                        ).map((item, i) => (\n                          <tr key={i + 1} className=\"group\">\n                            <td className=\"px-2 py-2 border border-gray-300 text-center\">\n                              {i + 1}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.first_name} {item.last_name}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.nid}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.teaching_level}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.qualification_name}\n                            </td>\n                            <td className=\"px-2 py-2 border border-gray-300\">\n                              {item.position_name}\n                            </td>\n                            <td className=\"px-1 py-1 border border-gray-300\">\n                              {item.subjects !== undefined &&\n                              item.subjects.length > 0 ? (\n                                <div\n                                  onClick={() =>\n                                    this.setState({ view_subjects: item })\n                                  }\n                                  className=\"bg-gray-100 px-2 py-2 rounded cursor-pointer hover:text-primary-800 text-sm w-max hover:bg-primary-100 float-right\"\n                                >\n                                  View subjects (\n                                  {\n                                    removeDuplicateParticipantsSubjects(\n                                      item.subjects\n                                    ).length\n                                  }\n                                  )\n                                </div>\n                              ) : (\n                                <div className=\"px-3\">No subjects</div>\n                              )}\n                              {this.state.view_subjects !== null &&\n                                this.state.view_subjects.nid === item.nid && (\n                                  <div\n                                    className=\"bg-white border rounded-md shadow-lg absolute right-5 animate__animated animate__zoomIn animate__faster\"\n                                    style={{ zIndex: 9 }}\n                                  >\n                                    <div className=\"flex flex-row items-center justify-between gap-2 p-2 px-3\">\n                                      <span className=\"font-bold text-lg\">\n                                        Subjects taught\n                                      </span>\n                                      <div>\n                                        <div\n                                          onClick={() =>\n                                            this.setState({\n                                              view_subjects: null,\n                                            })\n                                          }\n                                          className=\"h-8 w-8 rounded-full bg-red-100 text-red-700 cursor-pointer hover:bg-red-200 flex items-center justify-center\"\n                                        >\n                                          <MdClose className=\"text-2xl\" />\n                                        </div>\n                                      </div>\n                                    </div>\n                                    {/* List */}\n                                    <div className=\"p-2\">\n                                      <table className=\"w-full text-sm text-left\">\n                                        <thead>\n                                          <td className=\"px-3 py-2 border border-gray-300 font-bold\">\n                                            #\n                                          </td>\n                                          <td className=\"px-3 py-2 border border-gray-300 font-bold\">\n                                            Course code\n                                          </td>\n                                          <td className=\"px-3 py-2 border border-gray-300 font-bold\">\n                                            Course name\n                                          </td>\n                                        </thead>\n                                        <tbody>\n                                          {removeDuplicateParticipantsSubjects(\n                                            this.state.view_subjects.subjects\n                                          ).map((course, i) => (\n                                            <tr key={i + 1} className={``}>\n                                              <td className=\"px-3 py-2 border border-gray-300\">\n                                                {i + 1}\n                                              </td>\n                                              <td className=\"px-3 py-2 border border-gray-300\">\n                                                {course.course_code}\n                                              </td>\n                                              <td className=\"px-3 py-2 border border-gray-300\">\n                                                {course.course_name}\n                                              </td>\n                                            </tr>\n                                          ))}\n                                        </tbody>\n                                      </table>\n                                    </div>\n                                  </div>\n                                )}\n                            </td>\n                            <td className=\"px-1 py-1 border border-gray-300\">\n                              <div\n                                onClick={() => {\n                                  if (\n                                    this.state.removing_user_id === null &&\n                                    item.cohort_id !== null\n                                  ) {\n                                    if (\n                                      window.confirm(\n                                        `Are you sure do you want to remove ${item.first_name} ${item.last_name} from participants list?`\n                                      ) === true\n                                    ) {\n                                      this.RemoveParticipantOnTraining(\n                                        item.user_id,\n                                        `${item.first_name} ${item.last_name}`,\n                                        item.cohort_id\n                                      );\n                                    }\n                                  }\n                                }}\n                                className={`flex items-center justify-center gap-2 rounded px-3 py-2 ${\n                                  this.state.removing_user_id === item.user_id\n                                    ? \"bg-primary-100 text-primary-800 cursor-wait font-bold\"\n                                    : \"bg-red-100 text-red-800 group-hover:bg-red-700 group-hover:text-white\"\n                                } text-sm w-max float-right cursor-pointer font-normal`}\n                              >\n                                {this.state.removing_user_id ===\n                                  item.user_id && (\n                                  <div>\n                                    <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                                  </div>\n                                )}\n                                <span>\n                                  {this.state.removing_user_id === item.user_id\n                                    ? \"Removing...\"\n                                    : \"Remove\"}\n                                </span>\n                              </div>\n                            </td>\n                          </tr>\n                        ))\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        {this.state.addParticipants === true &&\n          this.props.selected_cohort !== null && (\n            <AddParticipants\n              onClose={() => {\n                this.setState({ addParticipants: false });\n                this.props.setDisplayTabs(true);\n              }}\n              onSubmitParticipants={(\n                participants: TeachersToBeTrainedResponse[]\n              ) => {\n                const newData = [\n                  ...(this.props.participants === null\n                    ? []\n                    : this.props.participants),\n                  {\n                    email: participants[0].email,\n                    first_name: participants[0].first_name,\n                    id: 1,\n                    last_name: participants[0].last_name,\n                    nid: participants[0].nid,\n                    phone_numbers: participants[0].phone_numbers,\n                    position_code: participants[0].position_name,\n                    position_name: participants[0].position_name,\n                    qualification_id: participants[0].qualification_id,\n                    qualification_name: participants[0].qualification_name,\n                    teaching_level: participants[0].teaching_level,\n                    teaching_level_id: participants[0].teaching_level_id,\n                    trainee_request_id: parseInt(\n                      this.props.training.trainee_request_id\n                    ),\n                    training_id: this.props.training.id,\n                    training_to_group_id: \"\",\n                    user_id: participants[0].user_id,\n                    subjects: participants[0].subjects,\n                    cohort_id: this.props.selected_cohort!.cohort_id,\n                  },\n                ];\n                this.props.setParticipants(newData);\n                this.setState({\n                  participants: newData,\n                });\n                window.scrollTo(0, 0);\n              }}\n              addedParticipants={this.FilteredCohortData(\n                this.state.participants\n              )}\n              school_code={this.props.school_code}\n              training_details={this.props.training}\n              selected_cohort={this.props.selected_cohort}\n            />\n          )}\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BiTargetLock } from \"react-icons/bi\";\nimport { BsCalendar2Range } from \"react-icons/bs\";\nimport { MdClose } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../../actions\";\nimport {\n  GetSchoolTrainingProvidersByStatus,\n  GetTrainingsListByStatusInterface,\n  TrainingImplementationStatus,\n} from \"../../../actions/training-offers\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { PopUpContainer } from \"../../../components/PopUpContainer/PopUpContainer\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { Header } from \"../components/Header\";\nimport { TrainingItem } from \"../components/TrainingItem\";\nimport { TrainingDetails } from \"./Details/TrainingDetails\";\nimport { TrainingCohortItemInterface } from \"../components/TrainingCohort\";\n\nexport interface NewTrainingRequestDistinct {\n  trainingCohorts: TrainingCohortItemInterface[];\n  training: GetTrainingsListByStatusInterface;\n}\n\nexport const RemoveDuplicateTrainingRequests = (\n  trainings: GetTrainingsListByStatusInterface[]\n): NewTrainingRequestDistinct[] => {\n  if (trainings.length === 0) {\n    return [];\n  }\n  // Remove Duplicate\n  const trainingsWithNoDuplicate = trainings.filter(\n    (item, index) => trainings.map((tr) => tr.id).indexOf(item.id) === index\n  );\n  const response: NewTrainingRequestDistinct[] = [];\n  for (const item of trainingsWithNoDuplicate) {\n    const cohorts: TrainingCohortItemInterface[] = trainings\n      .filter((itm) => itm.id === item.id)\n      .map((itm) => ({\n        cohort_end_date: itm.cohort_end_date,\n        cohort_id: itm.cohort_id,\n        cohort_name: itm.cohort_name,\n        cohort_sessions: itm.cohort_sessions,\n        cohort_start_date: itm.cohort_start_date,\n        total_trainees: itm.total ?? 0,\n      }));\n    response.push({\n      training: item,\n      trainingCohorts: cohorts,\n    });\n  }\n  return response;\n};\n\ninterface TrainingOffersProps {\n  auth: Auth;\n  basic: Basic;\n}\ninterface TrainingOffersState {\n  loading: boolean;\n  selected_training: {\n    training: GetTrainingsListByStatusInterface;\n    cohort: TrainingCohortItemInterface;\n    cohort_list: TrainingCohortItemInterface[];\n  } | null;\n  trainings_list: GetTrainingsListByStatusInterface[] | null;\n  selected_status: TrainingImplementationStatus;\n  error: string;\n  school_code: string;\n  search_value: string;\n}\n\nclass _TrainingOffers extends Component<\n  TrainingOffersProps,\n  TrainingOffersState\n> {\n  constructor(props: TrainingOffersProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selected_training: null,\n      trainings_list: null,\n      selected_status: TrainingImplementationStatus.INPROGRESS,\n      search_value: \"\",\n      error: \"\",\n      school_code:\n        this.props.auth.school !== null\n          ? this.props.auth.school.school_code\n          : \"\",\n    };\n  }\n\n  // Verify if it is on school level\n  ValidateTrainingIsOnSchoolLevel = (\n    data: GetTrainingsListByStatusInterface[]\n  ): GetTrainingsListByStatusInterface[] => {\n    const test = data.filter(\n      (item) =>\n        item.trainee_category.find(\n          (itm) =>\n            itm.roles?.find((level) => level.access_level === \"SCHOOL\") !==\n            undefined\n        ) !== undefined\n    );\n    if (test.length > 0) {\n      return test;\n    }\n    return [];\n  };\n  LoadAllTrainings = (status: TrainingImplementationStatus) => {\n    this.setState({ loading: true, selected_training: null });\n    // Loading data\n    GetSchoolTrainingProvidersByStatus(\n      this.state.school_code,\n      status,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: GetTrainingsListByStatusInterface[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          this.setState({\n            trainings_list:\n              res.data !== null\n                ? this.ValidateTrainingIsOnSchoolLevel(res.data)\n                : res.data,\n            loading: false,\n            error: \"\",\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ trainings_list: [], error: res.msg, loading: false });\n        }\n      }\n    );\n  };\n  componentDidMount(): void {\n    if (this.state.trainings_list === null) {\n      this.LoadAllTrainings(this.state.selected_status);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container mx-auto p-3 relative\">\n          {/* Header */}\n          <Header\n            loading={this.state.loading}\n            onChangeSearchValue={(e: React.ChangeEvent<HTMLInputElement>) =>\n              this.setState({ search_value: e.target.value })\n            }\n            onSelectTab={(status: TrainingImplementationStatus) => {\n              if (this.state.loading === false) {\n                this.setState({\n                  selected_status: status,\n                  trainings_list: null,\n                });\n                this.LoadAllTrainings(status);\n              }\n            }}\n            search_value={this.state.search_value}\n            selected_status={this.state.selected_status}\n          />\n          <div className=\"bg-white my-2 rounded px-3 py-3 flex flex-row items-center justify-between gap-2\">\n            <div className=\"flex flex-row items-center gap-2\">\n              <div>\n                <BiTargetLock className=\"text-2xl text-accent-900\" />\n              </div>\n              <div className=\"text-gray-500 font-light\">\n                <span className=\"text-accent-900\">\n                  {this.props.auth.school !== null\n                    ? this.props.auth.school.school_name\n                    : \"No school selected\"}\n                </span>{\" \"}\n                available trainings that can be assigned to trainees\n              </div>\n            </div>\n            <div>\n              <MdClose className=\"text-xl\" />\n            </div>\n          </div>\n          {this.state.error !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: \"\" })}\n              className=\"rounded px-3 py-2 bg-red-50 text-red-700 border border-white my-3 animate__animated animate__shakeX shadow flex flex-row items-center justify-between gap-2 cursor-pointer\"\n            >\n              <span>{this.state.error}</span>\n              <div>\n                <MdClose className=\"text-xl\" />\n              </div>\n            </div>\n          )}\n          {/* Body */}\n          {this.state.trainings_list === null || this.state.loading === true ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6\">\n              <Loading />\n              <div className=\"text-center text-lg font-light\">\n                Loading, please wait\n              </div>\n            </div>\n          ) : this.state.trainings_list.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6\">\n              <div className=\"mb-2\">\n                <BsCalendar2Range className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n              </div>\n              <div className=\"text-xl font-bold\">No trainings available</div>\n              <div className=\"text-sm\">\n                No training offers available for this school's teachers\n              </div>\n            </div>\n          ) : (\n              search(\n                this.state.trainings_list,\n                this.state.search_value\n              ) as GetTrainingsListByStatusInterface[]\n            ).length === 0 ? (\n            <div className=\"bg-white rounded-md p-3 py-5 text-center text-xl font-light animate__animated animate__fadeIn\">\n              <span>No result found!</span>\n            </div>\n          ) : (\n            RemoveDuplicateTrainingRequests(\n              search(\n                this.state.trainings_list,\n                this.state.search_value\n              ) as GetTrainingsListByStatusInterface[]\n            ).map((item, i) => (\n              <TrainingItem\n                i={i + 1}\n                key={i + 1}\n                item={item}\n                onClick={(cohort: TrainingCohortItemInterface) =>\n                  this.setState({\n                    selected_training: {\n                      training: item.training,\n                      cohort: cohort,\n                      cohort_list: item.trainingCohorts,\n                    },\n                  })\n                }\n              />\n            ))\n          )}\n          {/* Details page */}\n          {this.state.selected_training !== null && (\n            <PopUpContainer className=\"p-3 px-4\">\n              <TrainingDetails\n                training_details={this.state.selected_training.training}\n                onClose={() => this.setState({ selected_training: null })}\n                school_code={this.state.school_code}\n                selected_cohort={this.state.selected_training.cohort}\n                cohortList={this.state.selected_training.cohort_list}\n              />\n            </PopUpContainer>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const TrainingOffers = connect(mapStateToProps, {})(_TrainingOffers);\n"],"sourceRoot":""}