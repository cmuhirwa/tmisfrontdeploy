{"version":3,"sources":["components/SchoolPositions/AddSchoolPositions.tsx","containers/Head-Teacher/Request/AddActionInput.tsx","containers/Head-Teacher/Request/HeadTeacherRequestToDee.tsx"],"names":["AddSchoolPositions","props","addPositionToSchool","position","setState","schoolPositionsTemp","state","filter","itm","position_id","addSchoolPositions","a","window","confirm","length","undefined","school","auth","setAxiosToken","newPositions","loading","newP","push","school_code","position_code","console","log","axios","post","APP_URL","appendPositionsToSchool","success","error","alert","errorToText","RemoveSchoolPosition","school_has_position_id","res","status","removePositionsToSchool","searchPositionValue","edit","className","this","onClick","theme","close","onChange","e","target","value","placeholder","type","name","label","search","positions","find","test","map","item","i","position_name","qualification_name","school_name","schoolPositions","Component","AddActionInput","useState","reason","setReason","currentRequests","toString","inputValue","setInputValue","setError","htmlFor","postRequestReasons","element","reason_id","reason_name","getPostRequestItem","postsNumber","parseInt","submitRequest","totalItemPosts","totalExistingPostsStatic","testItem","existing_post","dde_post_distribution","vacantPosts","normalSchoolPositions","total","testPosition","total_on_position","_HdRequestToDee","setLoading","getPostRequestReasons","get","data","existingTeachersCount","n","existingTeachersCount1","newAddedTeachersCount","addedNewTeachers","nn","new_position","head_teacher_post_request","TotalAllowedTeachersCount","countRequestedPosts","allRequest","sumWithInitial","reduce","previousValue","currentValue","totalRequested","cleanAlert","setTimeout","msg","getSchoolPositions","academic_year_id","getNotInitializedPosts","school_positions","school_post_requests","initializePosts","TotalVacantPosts","elements","sendFinalPostRequest","addedRequests","current","post_request_id","academic_calendar_id","qualification_id","head_teacher_id","head_teacher_reason_id","dde_id_request","dde_post_request","dde_id_distribution","dde_distribution_comment","district_code","created_by","school_level_name","getUpdatedValue","number","updatedPosts","requestPosts","getValue","currentPostsData","district_code_split","user","user_id","newRequestdPosts","basic","academic_calender","NewUpdatedRequest","filterData","allData","seleQualification","seacrhValue","componentDidMount","FC_GetAllPositions","addPostRequestItem","district","request","substring","selected","qualification","allFliteredData","sendPostRequest","Container","title","subTitle","Alert","Loading","TextInput","size","qualifications","style","width","colSpan","index","HdRequestToDee","connect"],"mappings":"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","file":"static/js/29.c93bfd0a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { MdCheckBoxOutlineBlank, MdClose, MdSearch } from \"react-icons/md\";\nimport { Auth, SchoolData } from \"../../actions\";\nimport { SchoolPositionApiResponse } from \"../../types/HeadTeacherRequesTypes\";\nimport TextInput from \"../Inputs/TextInput\";\nimport { BsFillCheckSquareFill } from \"react-icons/bs\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { ImCheckboxUnchecked } from \"react-icons/im\";\nimport { APP_URL } from \"../../config/app.config\";\nimport axios from \"axios\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { PositionsOnSchool } from \"../../containers/Head-Teacher/Request/HeadTeacherRequestToDee\";\nimport { search } from \"../../utils/functions\";\nimport Button from \"../Buttons/Button\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AddSchoolPositionsProps {\n  auth: Auth;\n  positions: SchoolPositionApiResponse[];\n  schoolPositions: PositionsOnSchool[];\n  appendPositionsToSchool: (\n    schoolPositions: SchoolPositionApiResponse[]\n  ) => void;\n  removePositionsToSchool: (school_has_position_id: string) => void;\n  close?: () => void;\n  school?: SchoolData;\n}\n\ninterface AddSchoolPositionsState {\n  searchPositionValue: string;\n  schoolPositionsTemp: SchoolPositionApiResponse[];\n  edit: boolean;\n  loading: boolean;\n  success: string;\n  error: string;\n}\n\nexport class AddSchoolPositions extends Component<\n  AddSchoolPositionsProps,\n  AddSchoolPositionsState\n> {\n  constructor(props: AddSchoolPositionsProps) {\n    super(props);\n\n    this.state = {\n      searchPositionValue: \"\",\n      schoolPositionsTemp: [],\n      edit: false,\n      loading: false,\n      success: \"\",\n      error: \"\",\n    };\n  }\n  addPositionToSchool = (position: SchoolPositionApiResponse) => {\n    this.setState({\n      schoolPositionsTemp: [\n        position,\n        ...this.state.schoolPositionsTemp.filter(\n          (itm) => itm.position_id !== position.position_id\n        ),\n      ],\n    });\n  };\n  addSchoolPositions = async () => {\n    if (\n      window.confirm(\"Are you sure do you want to add these positions?\") ===\n      true\n    ) {\n      if (\n        this.state.schoolPositionsTemp.length > 0 &&\n        this.props.school === undefined\n          ? this.props.auth.school\n          : this.props.school\n      ) {\n        setAxiosToken();\n        let newPositions = [];\n        this.setState({ loading: true });\n        for (let newP of this.state.schoolPositionsTemp) {\n          newPositions.push({\n            school_code:\n              this.props.school === undefined\n                ? this.props.auth.school!.school_code\n                : this.props.school.school_code,\n            position_code: newP.position_code,\n          });\n        }\n        console.log(\"Positions codes: \", newPositions);\n        try {\n          await axios.post(`${APP_URL}/schoolposition/assign`, newPositions);\n          this.props.appendPositionsToSchool(this.state.schoolPositionsTemp);\n          this.setState({ schoolPositionsTemp: [] });\n          this.setState({ loading: false });\n          this.setState({\n            success: \"Positions added successfully!\",\n            error: \"\",\n          });\n          alert(\"Positions added successfully!\");\n        } catch (error: any) {\n          this.setState({ loading: false });\n          this.setState({ success: \"\", error: errorToText(error) });\n          console.log(\"Err: \", { ...error });\n        }\n      }\n    }\n  };\n  RemoveSchoolPosition = async (\n    school_has_position_id: string,\n    school_code: string\n  ) => {\n    if (\n      school_code !== \"\" &&\n      window.confirm(\"Are you sure do you want to remove this position\") ===\n        true\n    ) {\n      this.setState({ loading: true });\n      try {\n        const res = await axios.post(\n          `${APP_URL}/schoolposition/delete/${school_has_position_id}`,\n          {\n            school_code: school_code,\n          }\n        );\n        console.log(\"Delete status: \", res.status);\n        if (res.status === 200) {\n          this.setState({\n            success: \"Positions added successfully!\",\n            error: \"\",\n          });\n          this.props.removePositionsToSchool(school_has_position_id);\n        } else {\n          this.setState({\n            success: \"\",\n            error: \"Something went wrong! try again\",\n          });\n        }\n      } catch (error: any) {\n        this.setState({\n          success: \"\",\n          error: errorToText(error),\n        });\n        this.setState({ loading: false });\n        console.log(\"Err: \", { ...error });\n      }\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"bg-white dark:bg-dark-800 p-3 rounded\">\n          <div className=\"flex flex-row items-center justify-between\">\n            <div className=\"flex flex-col\">\n              <span className=\"text-2xl font-bold text-gray-600\">\n                {this.state.edit === true\n                  ? \"Assign positions to school\"\n                  : \"School positions list\"}\n              </span>\n              <div>\n                <Button\n                  onClick={() => this.setState({ edit: !this.state.edit })}\n                  theme={this.state.edit === true ? \"default\" : \"accent\"}\n                >\n                  {this.state.edit === true\n                    ? \"Back to list\"\n                    : \"Add new positions\"}\n                </Button>\n              </div>\n            </div>\n            <div>\n              <div\n                onClick={() => this.props.close && this.props.close()}\n                className=\"bg-gray-100 hover:bg-yellow-100 flex items-center justify-center p-1 cursor-pointer rounded-full\"\n              >\n                <MdClose className=\"text-3xl\" />\n              </div>\n            </div>\n          </div>\n          {this.state.success !== \"\" && (\n            <div\n              onClick={() => this.setState({ success: \"\" })}\n              className=\"bg-green-600 text-white font-bold pl-4 pr-2 py-2 text-lg rounded-md my-2 fixed right-10 cursor-pointer shadow-xl animate__animated animate__bounceInRight\"\n            >\n              <div className=\"flex flex-row justify-between items-center gap-8\">\n                <div>Success: {this.state.success}</div>\n                <div>\n                  <MdClose className=\"text-2xl text-red-600 bg-red-100 rounded-full\" />\n                </div>\n              </div>\n            </div>\n          )}\n          {this.state.error !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: \"\" })}\n              className=\"bg-red-600 text-white font-bold pl-4 pr-2 py-2 text-lg rounded-md my-2 fixed right-10 cursor-pointer shadow-xl animate__animated animate__bounceInRight\"\n            >\n              <div className=\"flex flex-row justify-between items-center gap-8\">\n                <div>Error: {this.state.error}</div>\n                <div>\n                  <MdClose className=\"text-2xl text-red-600 bg-red-100 rounded-full\" />\n                </div>\n              </div>\n            </div>\n          )}\n          <div\n            className={`grid md:grid-cols-${\n              this.state.edit === true ? \"2\" : \"1\"\n            }`}\n          >\n            <div\n              className={`col-span-1 border-r pr-2 ${\n                this.state.edit === true ? \"\" : \"hidden\"\n              }`}\n            >\n              {/* <div>\n                <span className=\"text-sm\">\n                  Positions list, Select a position\n                </span>\n              </div> */}\n              <div className=\"\">\n                <TextInput\n                  onChange={(e) =>\n                    this.setState({ searchPositionValue: e.target.value })\n                  }\n                  error={\"\"}\n                  placeholder=\"Search position...\"\n                  value={this.state.searchPositionValue}\n                  type=\"search\"\n                  name=\"post\"\n                  label=\"Search\"\n                />\n              </div>\n              <div className=\"h-screen overflow-y-auto\">\n                {search(this.props.positions, this.state.searchPositionValue)\n                  .length === 0 ? (\n                  <div>No positions found!</div>\n                ) : (\n                  (\n                    search(\n                      this.props.positions,\n                      this.state.searchPositionValue\n                    ) as SchoolPositionApiResponse[]\n                  )\n                    .filter(\n                      (itm) =>\n                        itm.position_id !==\n                        this.state.schoolPositionsTemp.find(\n                          (test) => test.position_id === itm.position_id\n                        )?.position_id\n                    )\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        className=\"border border-gray-300 px-3 py-2 flex flex- justify-between group bg-white hover:bg-blue-50 hover:border-blue-300 gap-3  items-center cursor-pointer my-1 rounded\"\n                        onClick={() => {\n                          this.addPositionToSchool(item);\n                        }}\n                      >\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-base font-bold text-gray-700 group-hover:text-primary-800\">\n                            {item.position_name}({item.qualification_name})\n                          </span>\n                          {/* <div className=\"text-sm text-gray-400\">\n                            School level:{\" \"}\n                            <span className={`text-black`}>\n                              {item.school_level_name}\n                            </span>\n                          </div> */}\n                        </div>\n                        <div className=\"\">\n                          <div className=\"bg-blue-100 text-primary px-3 py-1 rounded cursor-pointer text-base text-primary-800 group-hover:text-white group-hover:bg-primary-800\">\n                            Select\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                )}\n              </div>\n            </div>\n            {/* Right col */}\n            <div className=\"col-span-1 px-3\">\n              {\" \"}\n              {/* RiHome6Fill : School home icon later */}\n              <div className=\"flex flex-col border-b pb-3 border-accent-900\">\n                <span>School</span>\n                <div className=\"flex flex-row items-center justify-between\">\n                  <span className=\"text-accent-900 text-xl font-bold\">\n                    {this.props.school === undefined\n                      ? this.props.auth.school?.school_name\n                      : this.props.school.school_name}{\" \"}\n                    (\n                    {this.props.school === undefined\n                      ? this.props.auth.school?.school_code\n                      : this.props.school.school_code}\n                    )\n                  </span>\n                  <div className=\"font-bold text-2xl\">\n                    {\n                      [\n                        ...this.state.schoolPositionsTemp,\n                        ...this.props.schoolPositions,\n                      ].length\n                    }\n                  </div>\n                </div>\n              </div>\n              {/* <div>\n                <span className=\"text-primary-800 font-bold text-lg\">\n                  School positions\n                </span>\n              </div> */}\n              {/* School positions */}\n              <div className=\"mt-3\">\n                {[\n                  ...this.state.schoolPositionsTemp,\n                  ...this.props.schoolPositions,\n                ].length === 0 ? (\n                  <div className=\"flex flex-col bg-gray-100 w-full justify-center items-center rounded-md p-4\">\n                    <div className=\"text-7xl text-gray-400\">\n                      <FiSearch />\n                    </div>\n                    <span className=\"text-3xl text-black\">\n                      School positions not found\n                    </span>\n                    <span className=\"text-sm text-gray-600\">\n                      This school has no positions assigned to it. Please select\n                      positions\n                    </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.schoolPositionsTemp.length !== 0 && (\n                      <div className=\"text-xl text-primary-800 my-3 font-bold\">\n                        New pending\n                      </div>\n                    )}\n                    {this.state.schoolPositionsTemp.map((item, i) => (\n                      <div\n                        key={i + 1}\n                        className={`border rounded-md px-3 py-2 mb-2 group cursor-pointer ${\n                          this.state.schoolPositionsTemp.find(\n                            (itm) => itm.position_id === item.position_id\n                          ) !== undefined\n                            ? \"bg-yellow-50 border-yellow-400\"\n                            : \"bg-blue-50 border-blue-400 hover:bg-blue-100\"\n                        } `}\n                      >\n                        <div className=\"flex flex-row items-center justify-between\">\n                          <span className=\"text-lg font-bold\">\n                            {item.position_name} ({item.qualification_name})\n                          </span>\n                          <div className=\"\">\n                            <div\n                              onClick={() => {\n                                this.setState({\n                                  schoolPositionsTemp:\n                                    this.state.schoolPositionsTemp.filter(\n                                      (itm) =>\n                                        itm.position_id !== item.position_id\n                                    ),\n                                });\n                              }}\n                              className=\"bg-white text-accent-900 px-3 py-1 rounded cursor-pointer text-base border border-yellow-400\"\n                            >\n                              Remove\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* <div className=\"text-sm\">\n                          School level:{\" \"}\n                          <span\n                            className={`font-bold ${\n                              this.state.schoolPositionsTemp.find(\n                                (itm) => itm.position_id === item.position_id\n                              ) !== undefined\n                                ? \"text-accent-900\"\n                                : \"text-primary-800\"\n                            }`}\n                          >\n                            {item.school_level_name}\n                          </span>\n                        </div> */}\n                      </div>\n                    ))}\n                    {this.state.schoolPositionsTemp.length !== 0 && (\n                      <div>\n                        <div\n                          onClick={() => {\n                            this.addSchoolPositions();\n                          }}\n                          className=\"bg-primary-800 text-white hover:bg-blue-900 px-4 py-2 rounded w-max cursor-pointer\"\n                        >\n                          Submit positions\n                        </div>\n                      </div>\n                    )}\n                    {this.props.schoolPositions.length !== 0 && (\n                      <div className=\"font-bold text-lg text-gray-500 my-3\">\n                        List of school position\n                      </div>\n                    )}\n                    {this.props.schoolPositions.map((item, i) => (\n                      <div\n                        key={i + 1}\n                        className={`border rounded-md px-3 py-2 mb-2 group cursor-pointer ${\n                          this.state.schoolPositionsTemp.find(\n                            (itm) => itm.position_code === item.position_code\n                          ) !== undefined\n                            ? \"bg-yellow-50 border-yellow-400\"\n                            : \"bg-blue-50 border-blue-400 hover:bg-blue-100\"\n                        } flex flex-row items-center justify-between gap-4`}\n                      >\n                        <div className=\"\">\n                          <div className=\"flex flex-row items-center justify-between\">\n                            <span className=\"text-lg font-bold\">\n                              {item.position_name} ({item.qualification_name})\n                            </span>\n                          </div>\n\n                          {/* <div className=\"text-sm\">\n                            School level:{\" \"}\n                            <span\n                              className={`font-bold ${\n                                this.state.schoolPositionsTemp.find(\n                                  (itm) =>\n                                    itm.position_code === item.position_code\n                                ) !== undefined\n                                  ? \"text-accent-900\"\n                                  : \"text-primary-800\"\n                              }`}\n                            >\n                              {item.school_level_name}\n                            </span>\n                          </div> */}\n                        </div>\n                        <div>\n                          <div\n                            onClick={() =>\n                              this.RemoveSchoolPosition(\n                                item.school_has_position_id,\n                                item.school_code\n                              )\n                            }\n                            className=\"bg-white border border-white text-red-800 group-hover:border-red-500 px-3 py-2 font-bold text-center rounded\"\n                          >\n                            Remove\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddSchoolPositions;\n","import React, { FC, ReactElement, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { PostRequestReasons } from \"../../../types/HeadTeacherRequesTypes\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { APP_URL } from \"../../../config/app.config\";\nimport { InputSizeType } from \"../../../components/Inputs/InputTypes\";\nimport { PositionsOnSchool, PostRequestItem } from \"./HeadTeacherRequestToDee\";\n\ntype AddActionInputProps = {\n  postRequestReasons: PostRequestReasons[];\n  getPostRequestItem: (data: {\n    position: PositionsOnSchool;\n    reason: string;\n    postsNumber: number;\n  }) => PostRequestItem[];\n  close: () => void;\n  currentRequests: number;\n  submitRequest: (addedRequests: PostRequestItem[]) => void;\n  position: PositionsOnSchool;\n};\n\nconst AddActionInput: FC<AddActionInputProps> = (\n  props: AddActionInputProps\n): ReactElement => {\n  const [reason, setReason] = useState<string>(\"\");\n  const [inputValue, setInputValue] = useState<string>(\n    props.currentRequests.toString()\n  );\n  const [error, setError] = useState<string | null>(null);\n  return (\n    <>\n      <input\n        type=\"number\"\n        className=\"w-20 p-1 border-4 rounded-t border-primary-800 font-bold px-3 text-center text-black\"\n        value={inputValue}\n        name=\"POSTSS\"\n        onChange={(e) => {\n          setError(null);\n          setInputValue(e.target.value);\n        }}\n      />\n      <div className=\"animate__animated animate__zoomIn animate__faster absolute p-1 bg-primary-800 rounded-b -mt-0.5 rounded-tl  z-40 w-80 right-0 \">\n        <label\n          className=\"px-2 text-sm text-gray-300\"\n          htmlFor=\"selected_comment\"\n        >\n          Request reason\n        </label>\n        <div className=\"px-2\">\n          <select\n            value={reason}\n            placeholder=\"Select reason\"\n            className=\"block appearance-none w-full bg-white border-2 border-primary-800 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline md:w-full text-black\"\n            onChange={(e) => {\n              setError(null);\n              setReason(e.target.value);\n            }}\n          >\n            <option value={\"Select reason\"}>Select reason</option>\n            {props.postRequestReasons.map((element) => {\n              return (\n                <option key={element.reason_id} value={element.reason_id}>\n                  {element.reason_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        {error !== null && (\n          <div\n            onClick={() => setError(null)}\n            className=\"bg-red-100 rounded-md text-red-600 px-2 py-2 mx-3 my-2 animate__animated animate__animated animate__bounceIn\"\n          >\n            {error}\n          </div>\n        )}\n        <div className=\"flex\">\n          <button\n            onClick={() => {\n              if (\n                inputValue.length < 0 ||\n                inputValue === \"0\" ||\n                inputValue === \"\"\n              ) {\n                setError(\"Please number of requests should be greater than 0\");\n              } else if (reason.length < 0 || reason === \"\") {\n                setError(\"Please select reason for number of requested posts\");\n              } else {\n                setError(null);\n                const res = props.getPostRequestItem({\n                  position: props.position,\n                  reason: reason,\n                  postsNumber: parseInt(inputValue),\n                });\n                console.log(\"Send: \", res);\n                props.submitRequest(res);\n                props.close();\n              }\n            }}\n            className=\"p-1 px-4 rounded text-white bg-green-400 hover:bg-green-500 mx-2 my-1\"\n          >\n            Send request\n          </button>\n          <button\n            onClick={() => props.close()}\n            className=\"p-1 px-2 rounded text-white bg-red-600 hover:bg-red-600  my-1\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddActionInput;\n","import React, { Fragment, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, FC_GetAllPositions } from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport axios from \"axios\";\nimport { FaAngleDown } from \"react-icons/fa\";\n\nimport Container from \"../../../components/ContainerComponents/Container\";\nimport AddActionInput from \"./AddActionInput\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Alert from \"../../../components/Alert/Alert\";\n\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport {\n  SchoolPositionApiResponse,\n  headTeacherRequestSubmit,\n  Qualifications,\n  PostRequestReasons,\n} from \"../../../types/HeadTeacherRequesTypes\";\nimport { APP_URL } from \"../../../config/app.config\";\nimport AddSchoolPositions from \"../../../components/SchoolPositions/AddSchoolPositions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { search } from \"../../../utils/functions\";\n\nexport interface PositionsOnSchool {\n  // archive: string;\n  // archived_at: string | null;\n  // archived_by: string | null;\n  // position_code: string;\n  // position_name: string;\n  // qualification_id: string;\n  // qualification_name: string;\n  // school_code: string;\n  // school_has_position_id: string;\n  // school_level_id: string;\n  // school_level_name: string;\n  // school_name: string;\n  // total_on_position: number;\n  qualification_name: string;\n  position_name: string;\n  post_request_id: string;\n  academic_calendar_id: string;\n  school_code: string;\n  position_code: string;\n  qualification_id: string;\n  head_teacher_id: string;\n  head_teacher_post_request: string | undefined;\n  head_teacher_reason_id: string;\n  dde_id_request: string;\n  dde_post_request: string;\n  dde_id_distribution: string | null;\n  dde_post_distribution: string | null | undefined;\n  dde_distribution_comment: string | null;\n  district_code: string;\n  created_by: string;\n  existing_post: string | undefined;\n  school_level_name: string;\n  total_on_position: string;\n  school_has_position_id: string;\n}\n\nexport interface PostRequestItem {\n  academic_year_id: string;\n  school_code: string;\n  position_code: string;\n  qualification_id: string;\n  head_teacher_id: string;\n  head_teacher_post_request: string;\n  existing_post: string;\n  head_teacher_reason_id: string;\n  district_code: string;\n}\n\nexport interface SchoolPositionsCombination {\n  school_post_requests: PositionsOnSchool[];\n  school_positions: PositionsOnSchool[];\n}\n\ntype AlertMessage = {\n  target: \"main-error\" | \"main-success\" | null;\n  msg: string;\n};\n\ninterface HeadTeacherRequestToDeeState {\n  selected: string | null; // 0\n  seleQualification: string; //'All'\n  qualification: Qualifications[]; //[]\n  // postsRequests: TeacherRequestedPostsInterface[]; //[]\n  totalRequested: number; //0\n  seacrhValue: string; //''\n  alert: AlertMessage;\n  currentPostsData: SchoolPositionApiResponse[]; //[]\n  allFliteredData: SchoolPositionApiResponse[]; //[]\n  // requested post\n  requestPosts: headTeacherRequestSubmit; //[]\n  addSchoolPositions: boolean;\n  schoolPositions: PositionsOnSchool[];\n  normalSchoolPositions: PositionsOnSchool[];\n  sendPostRequest: boolean;\n  addedRequests: PostRequestItem[];\n  postRequestReasons: PostRequestReasons[];\n  loading: boolean;\n}\n\ninterface HeadTeacherRequestToDeeProps {\n  auth: Auth;\n  basic: Basic;\n  FC_GetAllPositions: (\n    callBack: (status: boolean, msg: string) => void\n  ) => void;\n}\n\nexport const totalItemPosts = (\n  schoolPositions: PositionsOnSchool[],\n  element: PositionsOnSchool\n): number => {\n  let totalExistingPostsStatic: number = 0;\n  let testItem = schoolPositions.find(\n    (test) => test.position_code === element.position_code\n  );\n  if (testItem !== undefined) {\n    totalExistingPostsStatic =\n      testItem.existing_post === undefined\n        ? 0\n        : parseInt(testItem.existing_post);\n  }\n\n  const totalDistributed: number =\n    element.dde_post_distribution === null ||\n    element.dde_post_distribution === undefined\n      ? 0\n      : parseInt(element.dde_post_distribution);\n\n  return totalExistingPostsStatic + totalDistributed;\n};\n\nexport const vacantPosts = (\n  normalSchoolPositions: PositionsOnSchool[],\n  schoolPositions: PositionsOnSchool[],\n  element: PositionsOnSchool\n): number => {\n  let total = 0;\n\n  let testPosition = normalSchoolPositions.find(\n    (test) => test.position_code === element.position_code\n  );\n  if (testPosition !== undefined) {\n    total =\n      totalItemPosts(schoolPositions, element) -\n      parseInt(testPosition.total_on_position);\n  }\n  return total;\n};\n\nexport class _HdRequestToDee extends Component<\n  HeadTeacherRequestToDeeProps,\n  HeadTeacherRequestToDeeState\n> {\n  constructor(props: HeadTeacherRequestToDeeProps) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      seleQualification: \"All\",\n      qualification: [],\n      totalRequested: 0,\n      seacrhValue: \"\",\n      alert: {\n        target: null,\n        msg: \"\",\n      },\n      currentPostsData: [],\n      allFliteredData: [],\n      requestPosts: [],\n      addSchoolPositions: false,\n      schoolPositions: [],\n      normalSchoolPositions: [],\n      sendPostRequest: true,\n      addedRequests: [],\n      postRequestReasons: [],\n      loading: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  getPostRequestReasons = async () => {\n    setAxiosToken();\n    this.setLoading(true);\n    try {\n      const res = await axios.get<PostRequestReasons[]>(\n        `${APP_URL}/postRequestReasons`\n      );\n      this.setState({ postRequestReasons: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n    this.setLoading(false);\n  };\n\n  // Find Existing teachers\n  existingTeachersCount = (schoolPositions: PositionsOnSchool[]) => {\n    let n = 0;\n    for (let position of this.state.normalSchoolPositions) {\n      if (\n        this.state.normalSchoolPositions.find(\n          (test) => test.position_code === position.position_code\n        ) !== undefined\n      ) {\n        n += parseInt(\n          this.state.normalSchoolPositions.find(\n            (test) => test.position_code === position.position_code\n          )!.total_on_position\n        );\n      }\n    }\n    return n;\n  };\n\n  // Find Existing teachers\n  existingTeachersCount1 = (schoolPositions: PositionsOnSchool[]) => {\n    let n = 0;\n    for (let position of schoolPositions) {\n      if (\n        this.state.normalSchoolPositions.find(\n          (test) => test.position_code === position.position_code\n        ) !== undefined\n      ) {\n        n += parseInt(\n          this.state.normalSchoolPositions.find(\n            (test) => test.position_code === position.position_code\n          )!.total_on_position\n        );\n      }\n    }\n    return n;\n  };\n\n  newAddedTeachersCount = (addedNewTeachers: PositionsOnSchool[]) => {\n    let nn = 0;\n    for (let new_position of addedNewTeachers) {\n      if (new_position.head_teacher_post_request !== undefined) {\n        nn += parseInt(new_position.head_teacher_post_request);\n      }\n    }\n    return nn;\n  };\n\n  TotalAllowedTeachersCount = (addedNewTeachers: PositionsOnSchool[]) => {\n    let nn = 0;\n    for (let new_position of addedNewTeachers) {\n      if (\n        new_position.dde_post_distribution !== null &&\n        new_position.dde_post_distribution !== undefined\n      ) {\n        nn += parseInt(new_position.dde_post_distribution);\n      }\n    }\n    return nn;\n  };\n\n  // count requested posts\n  countRequestedPosts = (allRequest: headTeacherRequestSubmit) => {\n    const sumWithInitial = allRequest.reduce(\n      (previousValue, currentValue) =>\n        previousValue + parseInt(currentValue.head_teacher_post_request),\n      0\n    );\n    this.setState({ totalRequested: sumWithInitial });\n  };\n\n  // clear alert\n  cleanAlert = () => {\n    setTimeout(() => {\n      this.setState({\n        alert: {\n          target: null,\n          msg: \"\",\n        },\n      });\n    }, 2000);\n  };\n  // Get school positions requests\n  getSchoolPositions = async (\n    school_code: string,\n    academic_year_id: string\n  ) => {\n    setAxiosToken();\n    this.setLoading(true);\n    try {\n      const data = await axios.get<SchoolPositionsCombination>(\n        `${APP_URL}/schoolpostrequest/request/${school_code}/${academic_year_id}`\n      );\n      console.log(\"RES DATA: \", data.data);\n      if (\n        this.getNotInitializedPosts(\n          data.data.school_positions,\n          data.data.school_post_requests\n        ).length > 0\n      ) {\n        this.initializePosts(\n          data.data.school_positions,\n          data.data.school_post_requests\n        );\n      } else {\n        this.setState({ normalSchoolPositions: data.data.school_positions });\n        this.setState({\n          schoolPositions: data.data.school_post_requests,\n        });\n      }\n    } catch (error: any) {\n      console.log(\"Err: \", { ...error });\n      this.cleanAlert();\n    }\n    this.setLoading(false);\n  };\n  TotalVacantPosts = (elements: PositionsOnSchool[]): number => {\n    let total = 0;\n    for (let item of elements) {\n      total += vacantPosts(\n        this.state.normalSchoolPositions,\n        this.state.schoolPositions,\n        item\n      );\n    }\n    return total;\n  };\n\n  sendFinalPostRequest = async (addedRequests: PostRequestItem[]) => {\n    if (addedRequests.length === 0) {\n      return this.setState({\n        alert: {\n          target: \"main-error\",\n          msg: \"No request found!\",\n        },\n      });\n    } else if (\n      addedRequests[0].head_teacher_post_request === \"\" ||\n      parseInt(addedRequests[0].head_teacher_post_request) < 0\n    ) {\n      return this.setState({\n        alert: {\n          target: \"main-error\",\n          msg: \"Please type number of requests greater than 0\",\n        },\n      });\n    }\n\n    this.setLoading(true);\n    try {\n      setAxiosToken();\n      // await this.getSchoolPostsRequests();\n      await axios.post<PostRequestItem[]>(\n        `${APP_URL}/schoolpostrequest/htrequest`,\n        addedRequests\n      );\n      console.log(\"Sent data: \", addedRequests);\n      let test = this.state.schoolPositions.find(\n        (itm) => itm.position_code === addedRequests[0].position_code\n      );\n      if (test === undefined) {\n        // reload school positions\n        this.getSchoolPositions(\n          addedRequests[0].school_code,\n          addedRequests[0].academic_year_id\n        );\n      } else {\n        let current: PositionsOnSchool[] = [];\n        for (let item of this.state.schoolPositions) {\n          if (item.position_code === addedRequests[0].position_code) {\n            current.push({\n              qualification_name: item.qualification_name,\n              position_name: item.position_name,\n              post_request_id: item.post_request_id,\n              academic_calendar_id: item.academic_calendar_id,\n              school_code: item.school_code,\n              position_code: item.position_code,\n              qualification_id: item.qualification_id,\n              head_teacher_id: item.head_teacher_id,\n              head_teacher_post_request:\n                addedRequests[0].head_teacher_post_request.toString(),\n              head_teacher_reason_id: addedRequests[0].head_teacher_reason_id,\n              dde_id_request: item.dde_id_request,\n              dde_post_request: item.dde_post_request,\n              dde_id_distribution: item.dde_id_distribution,\n              dde_post_distribution: item.dde_post_distribution,\n              dde_distribution_comment: item.dde_distribution_comment,\n              district_code: item.district_code,\n              created_by: item.created_by,\n              existing_post: item.existing_post,\n              school_level_name: item.school_level_name,\n              total_on_position: item.total_on_position,\n              school_has_position_id: item.school_has_position_id,\n            });\n          } else {\n            current.push(item);\n          }\n        }\n        this.getNotInitializedPosts(\n          this.state.normalSchoolPositions,\n          this.state.schoolPositions\n        ).length === 0 &&\n          this.setState({\n            alert: {\n              target: \"main-success\",\n              msg: \"Posts Request Submitted Successfully!\",\n            },\n          });\n        this.setState({ schoolPositions: current });\n      }\n      this.cleanAlert();\n      this.countRequestedPosts([]);\n    } catch (error: any) {\n      console.log(\"Erro post: \", { ...error });\n      this.cleanAlert();\n      this.setState({\n        alert: {\n          target: \"main-error\",\n          msg: \"Something went Wrong, Sending Request, Please try Again Later\",\n        },\n      });\n    }\n    this.setLoading(false);\n  };\n  // get updated value\n  getUpdatedValue = (number: string, position_code: string) => {\n    const updatedPosts = this.state.requestPosts.map((element) => {\n      if (element.position_code === position_code) {\n        element.head_teacher_post_request = number;\n      }\n      return element;\n    });\n    this.setState({ requestPosts: updatedPosts });\n    this.countRequestedPosts(this.state.requestPosts);\n  };\n\n  // get new value\n  getValue = (number: string, position_id: string) => {\n    const updatedPosts = this.state.currentPostsData.filter(\n      (element) => element.position_id === position_id\n    )[0];\n    const district_code_split = `${this.props.auth.school?.school_code[0]}${this.props.auth.school?.school_code[1]}`;\n    if (\n      updatedPosts &&\n      district_code_split &&\n      this.props.auth.school?.school_code &&\n      this.props.auth.user?.user_id\n    ) {\n      const newRequestdPosts = {\n        academic_calendar_id:\n          this.props.basic.academic_calender?.academic_year_id || \"1\",\n        school_code: this.props.auth.school.school_code,\n        position_name: updatedPosts.position_name,\n        qualification_name: updatedPosts.qualification_name,\n        position_code: updatedPosts.position_code,\n        qualification_id: updatedPosts.qualification_id,\n        head_teacher_id: this.props.auth.user.user_id,\n        head_teacher_post_request: number,\n        head_teacher_reason_id: \"7\",\n        district_code: district_code_split,\n      };\n      const NewUpdatedRequest = [...this.state.requestPosts, newRequestdPosts];\n      this.setState({ requestPosts: NewUpdatedRequest });\n      this.countRequestedPosts(NewUpdatedRequest);\n      this.setState({ requestPosts: NewUpdatedRequest });\n    }\n  };\n\n  filterData = (): PositionsOnSchool[] => {\n    const allData = [\n      ...this.state.normalSchoolPositions.filter(\n        (itm) =>\n          itm.position_code !==\n          this.state.schoolPositions.find(\n            (test) => test.position_code === itm.position_code\n          )?.position_code\n      ),\n      ...this.state.schoolPositions,\n    ];\n    const res =\n      this.state.seleQualification === \"All\"\n        ? allData\n        : allData.filter(\n            (element) =>\n              element.qualification_id === this.state.seleQualification\n          );\n    return search(res, this.state.seacrhValue);\n  };\n\n  componentDidMount = () => {\n    // this.getQualification();\n    if (this.props.basic.positions === null) {\n      this.props.FC_GetAllPositions((status: boolean, msg: string) => {\n        this.setLoading(true);\n        if (status === false) {\n          this.setState({\n            alert: {\n              target: \"main-error\",\n              msg: msg,\n            },\n          });\n        }\n        this.setLoading(false);\n      });\n    }\n\n    if (this.props.auth.school && this.props.basic.academic_calender) {\n      this.getSchoolPositions(\n        this.props.auth.school.school_code,\n        this.props.basic.academic_calender.academic_year_id\n      );\n    }\n    // if (this.state.postsRequests.length === 0) {\n    //   this.getSchoolPostsRequests();\n    // }\n    if (this.state.postRequestReasons.length === 0) {\n      this.getPostRequestReasons();\n    }\n  };\n\n  addPostRequestItem = (data: {\n    position: PositionsOnSchool;\n    reason: string;\n    postsNumber: number;\n  }) => {\n    this.props.basic.academic_calender &&\n      this.props.auth.user &&\n      this.props.auth.district &&\n      this.setState({\n        addedRequests: [\n          ...this.state.addedRequests.filter(\n            (itm) => itm.position_code !== data.position.position_code\n          ),\n          {\n            academic_year_id:\n              this.props.basic.academic_calender.academic_year_id,\n            school_code: data.position.school_code,\n            position_code: data.position.position_code,\n            qualification_id: data.position.qualification_id,\n            head_teacher_id: this.props.auth.user.user_id,\n            head_teacher_post_request: data.postsNumber.toString(),\n            existing_post:\n              data.position.existing_post === undefined\n                ? \"0\"\n                : data.position.existing_post,\n            head_teacher_reason_id: data.reason,\n            district_code: this.props.auth.district.district_code,\n          },\n        ],\n      });\n  };\n\n  getNotInitializedPosts = (\n    normalSchoolPositions: PositionsOnSchool[],\n    schoolPositions: PositionsOnSchool[]\n  ): PositionsOnSchool[] => {\n    let res: PositionsOnSchool[] = [];\n    for (let item of normalSchoolPositions) {\n      let check = schoolPositions.find(\n        (itm) => itm.position_code === item.position_code\n      );\n      if (check === undefined) {\n        res.push(item);\n      }\n    }\n    return res;\n  };\n\n  initializePosts = (\n    normalSchoolPositions: PositionsOnSchool[],\n    schoolPositions: PositionsOnSchool[]\n  ) => {\n    let request: PostRequestItem[] = [];\n    for (let item of normalSchoolPositions) {\n      request = [\n        ...request,\n        ...this.getPostRequestItem({\n          position: item,\n          reason: \"7\",\n          postsNumber: 0,\n        }),\n      ];\n    }\n    console.log(\"Requests: \", request);\n    this.sendFinalPostRequest(request);\n    console.log(\"Testing reset data: \", {\n      schoolPositions: schoolPositions,\n      normalSchoolPositions: normalSchoolPositions,\n    });\n    // this.setState({ schoolPositions: schoolPositions });\n    // this.setState({ normalSchoolPositions: normalSchoolPositions });\n  };\n\n  getPostRequestItem = (data: {\n    position: PositionsOnSchool;\n    reason: string;\n    postsNumber: number;\n  }): PostRequestItem[] => {\n    let res: PostRequestItem[] = [];\n    if (this.props.basic.academic_calender && this.props.auth.user) {\n      res = [\n        ...this.state.addedRequests.filter(\n          (itm) => itm.position_code !== data.position.position_code\n        ),\n        {\n          academic_year_id: this.props.basic.academic_calender.academic_year_id,\n          school_code: data.position.school_code,\n          position_code: data.position.position_code,\n          qualification_id: data.position.qualification_id,\n          head_teacher_id: this.props.auth.user.user_id,\n          head_teacher_post_request: data.postsNumber.toString(),\n          existing_post: data.position.total_on_position,\n          head_teacher_reason_id: data.reason,\n          district_code: data.position.school_code.substring(0, 2),\n        },\n      ];\n    }\n    return res;\n  };\n  render() {\n    return (\n      <>\n        <Container\n          title=\"Posts requests\"\n          subTitle=\"School posts requests management\"\n          className=\"h-screen\"\n        >\n          {/* Check not initialized posts */}\n          {this.getNotInitializedPosts(\n            this.state.normalSchoolPositions,\n            this.state.schoolPositions\n          ).length !== 0 && (\n            <div className=\"fixed bg-black bg-opacity-50 h-full w-full top-0 left-0 z-50 flex flex-row items-center justify-center\">\n              <div className=\"bg-white rounded-md p-10 text-center flex flex-col bg-opacity-80\">\n                <span className=\"text-2xl\">Initializing new positions</span>\n                <span className=\"text-base text-gray-500\">Please wait...</span>\n              </div>\n            </div>\n          )}\n          {this.state.alert.target === \"main-success\" && (\n            <div className=\"mb-20\">\n              <Alert theme=\"success\">{this.state.alert.msg}</Alert>\n            </div>\n          )}\n          {this.state.alert.target === \"main-error\" && (\n            <div className=\"mb-20\">\n              <Alert theme=\"danger\">{this.state.alert.msg}</Alert>\n            </div>\n          )}\n          {this.props.basic.positions === null ? (\n            <div className=\"flex flex-col justify-center items-center bg-gray-100 rounded-md p-5 w-full mt-4\">\n              <Loading />\n              <div className=\"text-xl text-gray-800 animate-pulse\">\n                <span>Loading positions...</span>\n              </div>\n            </div>\n          ) : this.state.addSchoolPositions === true &&\n            this.props.basic.positions !== null ? (\n            <div className=\"mt-4 border rounded\">\n              <AddSchoolPositions\n                auth={this.props.auth}\n                positions={this.props.basic.positions}\n                schoolPositions={this.state.schoolPositions}\n                appendPositionsToSchool={(\n                  data: SchoolPositionApiResponse[]\n                ) => {\n                  if (\n                    this.props.auth.school &&\n                    this.props.basic.academic_calender\n                  ) {\n                    this.getSchoolPositions(\n                      this.props.auth.school.school_code,\n                      this.props.basic.academic_calender.academic_year_id\n                    );\n                  }\n                }}\n                removePositionsToSchool={(school_has_position_id: string) => {\n                  if (\n                    this.props.auth.school &&\n                    this.props.basic.academic_calender\n                  ) {\n                    this.getSchoolPositions(\n                      this.props.auth.school.school_code,\n                      this.props.basic.academic_calender.academic_year_id\n                    );\n                  }\n                }}\n                close={() => {\n                  this.setState({ addSchoolPositions: false });\n                }}\n              />\n            </div>\n          ) : this.state.sendPostRequest === false ? (\n            <div></div>\n          ) : (\n            <div className=\"\">\n              {/* table */}\n              <div className=\"flex flex-row w-full justify-between mt-3 -mb-3\">\n                <div className=\"text-xl uppercase mb-2\">\n                  LIST OF SCHOOL POSITIONS\n                </div>\n                {/* Total Post */}\n                <div className=\"\">\n                  <div className=\"flex flex-row gap-5 md:-mt-12\">\n                    <div>\n                      <div className=\"flex flex-row gap-5 bg-blue-50 -mt-3 mb-3 rounded-md pt-2 px-4\">\n                        <div className=\"mb-3 text-center\">\n                          <div className=\"text-sm text-gray-900 -mt-1\">\n                            Existing teachers\n                          </div>\n                          <div className=\"text-4xl font-bold text-gray-900\">\n                            {this.existingTeachersCount(\n                              this.state.schoolPositions\n                            ) < 10\n                              ? 0\n                              : \"\"}\n                            {this.existingTeachersCount(\n                              this.state.schoolPositions\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-sm text-accent-900 -mt-1\">\n                            Total vacants\n                          </div>\n                          <div className=\"text-4xl font-bold text-accent-900\">\n                            {this.TotalVacantPosts(this.state.schoolPositions) <\n                            10\n                              ? 0\n                              : \"\"}\n                            {this.newAddedTeachersCount(\n                              this.state.schoolPositions\n                            )}\n                          </div>\n                        </div>\n                        {/* <div className=\"border-green-600 text-center\">\n                          <div className=\"text-sm text-green-600 -mt-1\">\n                            <span>Total allowed posts</span>\n                          </div>\n                          <div className=\"text-4xl font-bold text-green-600\">\n                            {this.TotalAllowedTeachersCount(\n                              this.state.schoolPositions\n                            ) < 10\n                              ? 0\n                              : \"\"}\n                            {this.TotalAllowedTeachersCount(\n                              this.state.schoolPositions\n                            )}\n                          </div>\n                        </div> */}\n                        {/* <div>\n                          {this.state.selected === null && (\n                            <div\n                              onClick={() => this.sendFinalPostRequest()}\n                              title=\"Click to submit all added requests\"\n                              className=\"bg-primary-800 hover:bg-primary-900 cursor-pointer text-white font-bold px-4 py-2 rounded text-center w-max animate__animated animate__zoomIn\"\n                            >\n                              Send requests\n                            </div>\n                          )}\n                        </div> */}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loading === true ? (\n                <div className=\"flex flex-col items-center justify-center bg-gray-100 rounded-lg p-5 mt-5\">\n                  <Loading />\n                  <div className=\"text-2xl\">Loading, please wait...</div>\n                </div>\n              ) : (\n                <div className=\"flex flex-row gap-2\">\n                  <div className=\"flex-1 bg-white dark:bg-dark-800 shadow-lg rounded-md p-2 pt-0 mb-10\">\n                    <div className=\"flex flex-row items-center w-full\">\n                      <div className=\"flex-1\">\n                        <TextInput\n                          onChange={(e) =>\n                            this.setState({ seacrhValue: e.target.value })\n                          }\n                          error={\"\"}\n                          placeholder=\"Search Post Here...\"\n                          value={this.state.seacrhValue}\n                          type=\"search\"\n                          name=\"post\"\n                          label=\"Search\"\n                          size={\"sm\"}\n                        />\n                      </div>\n                      <div className=\"flex-2 relative inline-block mt-6 ml-2\">\n                        <select\n                          value={this.state.seleQualification}\n                          placeholder=\"All\"\n                          className=\"block appearance-none w-full bg-white border-2 border-primary-800 hover:border-black px-4 py-2 pr-8 rounded  leading-tight focus:outline-none md:w-full dark:text-white dark:bg-primary-900 \"\n                          onChange={(e) => {\n                            this.setState({\n                              seleQualification: e.target.value,\n                            });\n                          }}\n                        >\n                          <option value={\"All\"}>All</option>\n                          {this.props.basic.qualifications.map((element) => {\n                            return (\n                              <option\n                                key={element.qualification_id}\n                                value={element.qualification_id}\n                              >\n                                {element.qualification_name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                          <FaAngleDown className=\"fill-current h-4 w-4\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"w-full h-full\">\n                      <div className=\"w-full h-full overflow-x-scroll\">\n                        <table className=\"h-auto\">\n                          <thead>\n                            <tr>\n                              <th className=\"border text-center px-2\">#</th>\n                              <th\n                                className=\"text-left border px-2\"\n                                style={{ width: \"2000px\" }}\n                              >\n                                Position\n                              </th>\n                              <th className=\"text-center border px-2\">\n                                Qualification\n                              </th>\n                              <th className=\"text-center border w-40\">\n                                Existing teachers\n                              </th>\n                              <th className=\"text-center text-blue-800 bg-blue-50 border border-blue-100 w-48\">\n                                HT new posts requests\n                              </th>\n                              <th className=\"text-center border text-green-800 w-48\">\n                                Approved posts by DDE\n                              </th>\n                              <th className=\"text-center border text-accent-900 w-48\">\n                                Total posts\n                              </th>\n\n                              <th className=\"text-center border  w-48\">\n                                Vacant posts\n                              </th>\n                              <th className=\"text-center border w-52\">\n                                Comment\n                              </th>\n                              {/* <th className=\"text-left\">Action</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.normalSchoolPositions.length <= 0 && (\n                              <tr>\n                                <td className=\"text-center p-2\" colSpan={9}>\n                                  <div className=\"bg-gray-100 rounded-md p-6\">\n                                    <div className=\"text-2xl font-extrabold text-center\">\n                                      No positions Found\n                                    </div>\n                                    <div className=\"text-base text-center\">\n                                      There are no positions assigned to the\n                                      school{\" \"}\n                                      {this.props.auth.school?.school_name}\n                                    </div>\n                                    <div className=\"flex justify-center w-full mt-3\">\n                                      <div\n                                        onClick={() => {\n                                          this.setState({\n                                            addSchoolPositions: true,\n                                          });\n                                        }}\n                                        className=\"btn bg-yellow-50 border-2 border-yellow-500 hover:bg-accent-900 w-max rounded-md px-4 py-2 text-base font-bold hover:text-white cursor-pointer\"\n                                      >\n                                        Add positions\n                                      </div>\n                                    </div>\n                                  </div>\n                                </td>\n                              </tr>\n                            )}\n                            {this.filterData().map((element, i) => {\n                              let index = i + 1;\n                              return (\n                                <Fragment key={index}>\n                                  <tr\n                                    className={`rounded ${\n                                      element.position_code ===\n                                      this.state.selected\n                                        ? \"bg-yellow-50 font-bold\"\n                                        : \"\"\n                                    } ${\n                                      this.state.addedRequests.find(\n                                        (itm) =>\n                                          itm.position_code ===\n                                          element.position_code\n                                      ) !== undefined\n                                        ? \"hover:bg-blue-50 hover:text-primary-800\"\n                                        : \"hover:bg-gray-50 hover:text-accent-900\"\n                                    }  hover:text-dark-900 group`}\n                                  >\n                                    <td className=\"p-2 border text-center\">\n                                      {index}\n                                    </td>\n                                    <td className=\"p-2 border\">\n                                      <div className=\"flex flex-col\">\n                                        <span className=\"text-base\">\n                                          {element.position_name}\n                                        </span>\n                                        <span className=\"text-gray-500 text-sm group-hover:text-black\">\n                                          School level:{\" \"}\n                                          <span className=\"font-bold\">\n                                            {element.school_level_name}\n                                          </span>\n                                        </span>\n                                      </div>\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {element.qualification_name}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {\n                                        this.state.normalSchoolPositions.find(\n                                          (test) =>\n                                            test.position_code ===\n                                            element.position_code\n                                        )?.total_on_position\n                                      }\n                                    </td>\n\n                                    {element.position_code ===\n                                    this.state.selected ? (\n                                      <td className=\" border  w-12 relative\">\n                                        {this.state.normalSchoolPositions.find(\n                                          (itm) =>\n                                            itm.position_code ===\n                                            element.position_code\n                                        ) && (\n                                          <AddActionInput\n                                            postRequestReasons={\n                                              this.state.postRequestReasons\n                                            }\n                                            getPostRequestItem={\n                                              this.getPostRequestItem\n                                            }\n                                            close={() => {\n                                              this.setState({ selected: null });\n                                            }}\n                                            currentRequests={\n                                              element.head_teacher_post_request ===\n                                              undefined\n                                                ? 0\n                                                : element.head_teacher_post_request ===\n                                                  null\n                                                ? 0\n                                                : parseInt(\n                                                    element.head_teacher_post_request\n                                                  )\n                                            }\n                                            submitRequest={\n                                              this.sendFinalPostRequest\n                                            }\n                                            position={\n                                              this.state.normalSchoolPositions.find(\n                                                (itm) =>\n                                                  itm.position_code ===\n                                                  element.position_code\n                                              )!\n                                            }\n                                          />\n                                        )}\n                                      </td>\n                                    ) : (\n                                      <td\n                                        className={`p-2 border-2 rounded ${\n                                          element.head_teacher_post_request ===\n                                          null\n                                            ? \"group-hover:bg-primary-800 border-primary-800\"\n                                            : \"group-hover:bg-blue-300 border-blue-300\"\n                                        } group-hover:text-black w-12 font-bold  bg-blue-100 hover:bg-blue-300 cursor-pointer text-center`}\n                                        onClick={(e) => {\n                                          this.setState({\n                                            selected: element.position_code,\n                                          });\n                                        }}\n                                      >\n                                        {element.head_teacher_post_request ===\n                                        undefined ? (\n                                          <span className=\"text-gray-400 group-hover:text-yellow-800\">\n                                            0\n                                          </span>\n                                        ) : element.head_teacher_post_request !==\n                                          null ? (\n                                          element.head_teacher_post_request\n                                        ) : (\n                                          <div\n                                            className={`w-full h-full rounded text-center text-blue-800 group-hover:text-white`}\n                                          >\n                                            Request\n                                          </div>\n                                        )}\n                                      </td>\n                                    )}\n\n                                    <td className=\"p-2 text-green-600 border font-bold text-center\">\n                                      {element.dde_post_distribution ===\n                                      undefined ? (\n                                        <span className=\"text-gray-400 group-hover:text-yellow-800\">\n                                          0\n                                        </span>\n                                      ) : element.dde_post_distribution ===\n                                        null ? (\n                                        0\n                                      ) : (\n                                        element.dde_post_distribution\n                                      )}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {totalItemPosts(\n                                        this.state.schoolPositions,\n                                        element\n                                      )}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {vacantPosts(\n                                        this.state.normalSchoolPositions,\n                                        this.state.schoolPositions,\n                                        element\n                                      ) < 0 ? (\n                                        <span className=\"text-sm\"></span>\n                                      ) : (\n                                        vacantPosts(\n                                          this.state.normalSchoolPositions,\n                                          this.state.schoolPositions,\n                                          element\n                                        )\n                                      )}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {element.dde_distribution_comment}\n                                    </td>\n                                  </tr>\n                                </Fragment>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const HdRequestToDee = connect(mapStateToProps, {\n  FC_GetAllPositions,\n})(_HdRequestToDee);\n"],"sourceRoot":""}