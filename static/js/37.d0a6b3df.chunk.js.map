{"version":3,"sources":["types/PlacementReportTypes.ts","components/TableLoading/TableLoading.tsx","containers/Reports/PlacementReport/PlacementReport.tsx"],"names":["SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","full_name","title","status","isChangeAllowed","nid","sex","dob","marital_status","phone_numbers","email","qualification","position","subjects","grades","specialization","role","date_of_hire","date_in_school","school_name","school_code","school_category","school_status","district_name","forReportRoles","system","country","district","school","FC_GetStringValue","value","FC_isDateValid","DATE","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","periods","element","includes","push","isEmptyOrSpaces","course_name","grade_code","findIndex","item","index","JSON","parse","grade_group","length","grade_name","FC_ConvertArrayToString","Number","teaching_period","toString","dateWrapper","Date","isNaN","getDate","TableLoading","props","displayCols","colsArray","cols","map","className","TodayDate","_PlacementReport","setDownloading","setState","downloading","setSortProperty","sortProperty","setSortOrder","sortOrder","setSearchInput","searchInput","setReportTitle","reportTitle","setSelectAll","selectAll","setFormError","formError","setSort","thisProperty","state","setGenerateReport","generateReport","setReportContent","reportContent","setCurrentPage","currentPage","loadDataFormAPI","month","academic_id","auth","FC_GetReportByDistrict","district_code","msg","data","loading","reportAPIData","console","log","report","error","FC_GetReportBySchoolMonthly","selectedMonth","filter","selected_district","loadCountryDataAPI","componentDidMount","districtList","FC_GetDistrictList","basic","academic_calender","academic_year_id","placement","academics","FC_GetAcademics","loadingAcademics","updateDataToPrint","academic_year_name","thisDistrict","FC_GetDistrictByCode","arrayNew","n","allData","getUserList","dataArray","no","undefined","hired_date","start_date_in_the_school","location","Object","prototype","hasOwnProperty","call","reportToPrint","resetReportContent","currentState","newArray","updateReportContent","find","result","list","updatedElement","changeSchoolData","name","code","thisData","teacher","thisSchool","generatePages","total_users","totalPages","Math","ceil","tablePageLength","_pages","Array","from","keys","i","slice","jumpToFirst","jumpToLast","moveBack","moveNext","onClick","disabled","random","countTeacherByGender","teachers","gender","toLocaleLowerCase","MONTHS_LIST","getMonth","selectedAcademic","export_type","DT_GetUserList","this","size","theme","el","onChange","e","target","label","placeholder","displayNumbers","type","id","colSpan","search","sortThisArray","staff_code","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","fileData","fileName","btnName","Component","PlacementReport","connect","FC_GetPlacementByDistrict"],"mappings":"+FAAA,gNAQYA,EAMAC,EA4FAC,EA1GZ,QAMaC,EAAyB,K,SAE1BH,K,oCAAAA,E,2BAAAA,E,iBAAAA,M,cAMAC,K,cAAAA,E,WAAAA,M,cA4FAC,K,YAAAA,E,8BAAAA,E,sBAAAA,E,8BAAAA,E,cAAAA,E,UAAAA,E,UAAAA,E,gCAAAA,E,UAAAA,E,oBAAAA,E,gCAAAA,E,8BAAAA,E,gBAAAA,E,0BAAAA,E,0BAAAA,E,kCAAAA,E,8BAAAA,E,oBAAAA,E,gBAAAA,E,gCAAAA,E,6BAAAA,M,KA0DL,IAAME,EACX,CACE,CACEC,IAAKH,EAAyCI,UAC9CC,MAAO,mBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCQ,IAC9CH,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCS,IAC9CJ,MAAO,MACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCU,IAC9CL,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCW,eAC9CN,MAAO,iBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCY,cAC9CP,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCa,MAC9CR,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCc,cAC9CT,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCe,SAC9CV,MAAO,WACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCgB,SAC9CX,MAAO,WACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCiB,OAC9CZ,MAAO,sBACPC,QAAQ,EACRC,iBAAiB,GAInB,CACEJ,IAAKH,EAAyCkB,eAC9Cb,MAAO,iBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCmB,KAC9Cd,MAAO,aACPC,QAAQ,EACRC,iBAAiB,GAInB,CACEJ,IAAKH,EAAyCM,OAC9CD,MAAO,SACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCoB,aAC9Cf,MAAO,eACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCqB,eAC9ChB,MAAO,iBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCsB,YAC9CjB,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCuB,YAC9ClB,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCwB,gBAC9CnB,MAAO,kBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCyB,cAC9CpB,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,GAGnB,CACEJ,IAAKH,EAAyC0B,cAC9CrB,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,IAsHVoB,EAKT,CACFC,OAAQ,CAAC,KAAM,SACfC,QAAS,CAAC,MAAO,IAAK,MAAO,MAAO,YAAa,KAAM,KAAM,SAC7DC,SAAU,CAAC,MAAO,IAAK,iBAAkB,MACzCC,OAAQ,CAAC,eAAgB,UAAW,MA6BzBC,EAAoB,SAACC,GAChC,OAAc,OAAVA,EAAuB,GACvBC,EAAeD,GAAeE,YAAKF,GAChCA,CACR,EAEYG,EAAwB,SACnCC,GAiBA,IAAIC,EAAkB,GACpBC,EAAwB,GACxBtB,EAAiB,GACjBuB,EAKI,CACFC,YAAa,GACbC,YAAa,GACbJ,QAAS,GACTK,MAAO,IAETC,EAAkB,EAEpB,GAAIP,EAAkB,CAAC,IAAD,WACTlC,GACT,IAAM0C,EAAUR,EAAiBlC,GAUjC,GARKoC,EAAYO,SAASD,EAAQN,eAChCA,EAAYQ,KAAKF,EAAQN,aACzBD,GAAWU,YAAgBV,GACvBO,EAAQI,YACR,KAAOJ,EAAQI,aAIhBT,EAAUE,YAAYI,SAASD,EAAQK,aAUrC,GACLV,EAAUF,QAAQa,WAAU,SAACC,GAAD,OAAUA,IAASP,EAAQN,WAA3B,KAA2C,EACvE,CACA,IAAIc,EAAQb,EAAUF,QAAQa,WAC5B,SAACC,GAAD,OAAUA,IAASP,EAAQN,WAA3B,IAEFC,EAAUG,MAAMU,IAAUC,KAAKC,MAAMV,EAAQW,aAAaC,MAC3D,OAhBCjB,EAAUE,YAAYK,KAAKF,EAAQK,YACnCV,EAAUC,YAAYM,KAAKF,EAAQa,YACnClB,EAAUF,QAAQS,KAAKF,EAAQN,aAC/BC,EAAUG,MAAMI,KACdY,YAAwBL,KAAKC,MAAMV,EAAQW,eAe/CZ,GAEEgB,OAAOf,EAAQgB,iBACbP,KAAKC,MAAMV,EAAQW,aAAaC,MAnClB,EACpB,IAAK,IAAMtD,KAAOkC,EAAmB,EAA1BlC,GAsCX,IAAK,IAAMA,KAAOqC,EAAUF,QAC1BrB,GAAU+B,YAAgB/B,GAAhB,UACHuB,EAAUC,YAAYtC,GADnB,aAC4BqC,EAAUG,MAAMxC,GAD5C,iBAEDqC,EAAUC,YAAYtC,GAFrB,aAE8BqC,EAAUG,MAAMxC,GAF9C,IAIb,CAED,MAAO,CAAEmC,UAASrB,SAAQ2B,QAASA,EAAQkB,WAC5C,EAEY5B,EAAiB,SAACD,GAC7B,GAAc,OAAVA,EAAgB,OAAO,EAC3B,IAAI8B,EAAc,IAAIC,KAAK/B,GAC3B,OAAQgC,MAAMF,EAAYG,UAC3B,C,mCChiBD,gBAoCeC,IA/BmC,SAACC,GACjD,IAAMC,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjBjB,EAAQ,EAAGA,EAAQe,EAAMG,KAAMlB,IACtCiB,EAAUvB,KAAKM,GAUjB,OARaiB,EAAUE,KAAI,SAAC3B,GAC1B,OACE,oBAAI4B,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsC5B,EAI1D,GAGF,EACD,OACE,qCACE,oBAAI4B,UAAU,2BAAd,SACGJ,KAD2C,KAG9C,oBAAII,UAAU,2BAAd,SACGJ,KAD2C,OAG9C,oBAAII,UAAU,2BAAd,SACGJ,KAD2C,UAKnD,C,yWCwBKK,EAAY,IAAIV,KAqCTW,EAAb,kDAIE,WAAYP,GAA8B,IAAD,8BACvC,cAAMA,IA4BRQ,eAAiB,SAAC3C,GAChB,EAAK4C,SAAS,CAAEC,YAAa7C,GAC9B,EA/BwC,EAiCzC8C,gBAAkB,SAAC9C,GACjB,EAAK4C,SAAS,CAAEG,aAAc/C,GAC/B,EAnCwC,EAqCzCgD,aAAe,SAAChD,GACd,EAAK4C,SAAS,CAAEK,UAAWjD,GAC5B,EAvCwC,EAyCzCkD,eAAiB,SAAClD,GAChB,EAAK4C,SAAS,CAAEO,YAAanD,GAC9B,EA3CwC,EA6CzCoD,eAAiB,SAACpD,GAChB,EAAK4C,SAAS,CAAES,YAAarD,GAC9B,EA/CwC,EAiDzCsD,aAAe,SAACtD,GACd,EAAK4C,SAAS,CAAEW,UAAWvD,GAC5B,EAnDwC,EAqDzCwD,aAAe,SACbxD,GAKA,EAAK4C,SAAS,CAAEa,UAAWzD,GAC5B,EA5DwC,EA8DzC0D,QAAU,SAACC,GAEP,EAAKC,MAAMb,eAAiBY,GACH,QAAzB,EAAKC,MAAMX,UAEX,EAAKD,aAAa,QAElB,EAAKA,aAAa,OAEpB,EAAKF,gBAAgBa,EACtB,EAxEwC,EA0EzCE,kBAAoB,SAAC7D,GACnB,EAAK4C,SAAS,CAAEkB,eAAgB9D,GACjC,EA5EwC,EA8EzC+D,iBAAmB,SAAC/D,GAClB,EAAK4C,SAAS,CAAEoB,cAAehE,GAChC,EAhFwC,EAkFzCiE,eAAiB,SAACjE,GAChB,EAAK4C,SAAS,CAAEsB,YAAalE,GAC9B,EApFwC,EAsFzCmE,gBAAkB,SAACC,EAAeC,GAE9B,EAAKlC,MAAMmC,KAAKzE,UAChB,EAAKsC,MAAMmC,KAAKpF,MAChBQ,IAAeG,SAASgB,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,MAEtDqF,aACE,EAAKpC,MAAMmC,KAAKzE,SAAS2E,cACzBH,EACAD,GACA,SAAC/F,EAAQoG,EAAKC,GACZ,EAAK9B,SAAS,CACZ+B,QAAStG,EACTuG,cAAe,OAEjBC,QAAQC,IACN,iEAEFD,QAAQC,IAAI,CAAEC,OAAQL,IACtBG,QAAQC,IACN,kEAEa,IAAXzG,GAA6B,OAATqG,EACtB,EAAK9B,SAAS,CACZgC,cAAeF,IAEPrG,GAAW0C,YAAgB0D,IACrCI,QAAQG,MAAM,CAAE3G,SAAQoG,OAS3B,IAGH,EAAKtC,MAAMmC,KAAKxE,QAChB,EAAKqC,MAAMmC,KAAKpF,MAChBQ,IAAeI,OAAOe,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,MAEpD+F,aACE,EAAK9C,MAAMmC,KAAKxE,OAAOR,YACvB+E,EACA,EAAKT,MAAMsB,eACX,SAAC7G,EAAQoG,EAAKC,GACZ,EAAK9B,SAAS,CACZ+B,QAAStG,EACTuG,cAAe,QAEF,IAAXvG,GAA6B,OAATqG,GACtBG,QAAQC,IACN,+DAEFD,QAAQC,IAAI,CAAEC,OAAQL,IACtBG,QAAQC,IACN,+DAEF,EAAKlC,SAAS,CACZgC,cAAeF,EAAKS,QAAO,SAAChE,GAAD,OAAUA,EAAKiD,QAAUA,CAAzB,OAEnB/F,GAAW0C,YAAgB0D,IACrCI,QAAQG,MAAM,CAAE3G,SAAQoG,OAS3B,IAGH,EAAKtC,MAAMmC,KAAKpF,MAChBQ,IAAeE,QAAQiB,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,QACpD6B,YAAgB,EAAK6C,MAAMwB,oBAE5Bb,aACE,EAAKX,MAAMwB,kBACXf,EACAD,GACA,SAAC/F,EAAQoG,EAAKC,GACZ,EAAK9B,SAAS,CACZ+B,QAAStG,EACTuG,cAAe,OAEjBC,QAAQC,IACN,iEAEFD,QAAQC,IAAI,CAAEC,OAAQL,IACtBG,QAAQC,IACN,kEAEa,IAAXzG,GAA6B,OAATqG,EACtB,EAAK9B,SAAS,CACZgC,cAAeF,IAEPrG,GAAW0C,YAAgB0D,IACrCI,QAAQG,MAAM,CAAE3G,SAAQoG,OAS3B,GAiCN,EArOwC,EAuOzCY,mBAAqB,SACnBjB,EACAC,EACAG,GAGE,EAAKrC,MAAMmC,KAAKpF,MAChBQ,IAAeE,QAAQiB,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,QACpD6B,YAAgByD,IAEjBD,aACEC,EACAH,EACAD,GACA,SAAC/F,EAAQoG,EAAKC,GACZ,EAAK9B,SAAS,CACZ+B,QAAStG,EACTuG,cAAe,OAEjBC,QAAQC,IACN,iEAEFD,QAAQC,IAAI,CAAEC,OAAQL,IACtBG,QAAQC,IACN,kEAEa,IAAXzG,GAA6B,OAATqG,EACtB,EAAK9B,SAAS,CACZgC,cAAeF,IAEPrG,GAAW0C,YAAgB0D,IACrCI,QAAQG,MAAM,CAAE3G,SAAQoG,OAS3B,GAiCN,EAhTwC,EAkTzCa,kBAAoB,YAEa,OAA5B,EAAK1B,MAAM2B,cACyB,KAAnC,EAAK3B,MAAM2B,aAAa/D,SAC1B,EAAKW,MAAMmC,KAAKpF,MAChBQ,IAAeE,QAAQiB,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,OAErDsG,aAAmB,SAACnH,EAAQqG,EAAMD,GAChC,EAAK7B,SAAS,CACZ+B,SAAS,EACTY,aAAc,QAED,IAAXlH,GACFwG,QAAQC,IACN,iEAEFD,QAAQC,IAAI,CAAEC,OAAQL,IACtBG,QAAQC,IACN,iEAEF,EAAKlC,SAAS,CACZ+B,SAAS,EACTY,aAAcb,KAGN3D,YAAgB0D,IAC1B,EAAK7B,SAAS,CACZa,UAAW,CACT7C,QAAS,aACT6D,IAAKA,GAEPE,SAAS,GAGd,IAEC,EAAKxC,MAAMsD,MAAMC,mBACnB,EAAKvB,gBACH,EAAKP,MAAMsB,cACX,EAAK/C,MAAMsD,MAAMC,kBAAkBC,kBAGF,OAAnC,EAAKxD,MAAMyD,UAAUC,WACqB,IAA1C,EAAK1D,MAAMyD,UAAUC,UAAUrE,OAE/B,EAAKW,MAAM2D,iBACT,SAACzH,EAAiBqG,EAAgCD,GAChD,EAAK7B,SAAS,CAAEmD,iBAAkB1H,GAEnC,IAEA,EAAKuE,SAAS,CAAEmD,kBAAkB,GACxC,EAtWwC,EAwWzCC,kBAAoB,WAElB,GACE,EAAK7D,MAAMmC,KAAKzE,UAChB,EAAKsC,MAAMmC,KAAKpF,MAChBQ,IAAeG,SAASgB,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,MACtD,CACA,IAAId,EACF,sBACA,EAAK+D,MAAMmC,KAAKzE,SAASJ,cACzB,YACE,EAAK0C,MAAMsD,MAAMC,oBACnBtH,EACEA,EACA,MACA,EAAK+D,MAAMsD,MAAMC,kBAAkBO,mBACnC,eACA,EAAKrC,MAAMsB,eAEf,EAAK9B,eAAehF,EACrB,MAAM,GACL,EAAK+D,MAAMmC,KAAKxE,QAChB,EAAKqC,MAAMmC,KAAKpF,MAChBQ,IAAeI,OAAOe,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,MACpD,CACA,IAAId,EACF,sBAAwB,EAAK+D,MAAMmC,KAAKxE,OAAOT,YAAc,UAC3D,EAAK8C,MAAMsD,MAAMC,oBACnBtH,EACEA,EACA,MACA,EAAK+D,MAAMsD,MAAMC,kBAAkBO,mBACnC,eACA,EAAKrC,MAAMsB,eAEf,EAAK9B,eAAehF,EACrB,MAAM,GACL,EAAK+D,MAAMmC,KAAKpF,MAChBQ,IAAeE,QAAQiB,SAAS,EAAKsB,MAAMmC,KAAKpF,KAAKA,OACrD,EAAK0E,MAAM2B,aACX,CACA,IAAMW,EAAeC,YACnB,EAAKvC,MAAM2B,aACX,EAAK3B,MAAMwB,mBAEThH,EAAQ,sBAAwB,EAAK+D,MAAMmC,KAAKpF,KAAKA,KACzDd,EAAQ8H,EACJ9H,EAAQ,MAAQ8H,EAAazG,cAAgB,YAC7CrB,EACA,EAAK+D,MAAMsD,MAAMC,oBACnBtH,EACEA,EACA,MACA,EAAK+D,MAAMsD,MAAMC,kBAAkBO,mBACnC,eACA,EAAKrC,MAAMsB,eAEf,EAAK9B,eAAehF,EACrB,CAED,IAAIgI,EAAoC,GACpCC,EAAY,EACVC,EAAU,EAAKC,cAErB,GAAID,EAAS,CACX,IAAK,IAAMpI,KAAOoI,EAAS,CAEzB,IAAIE,EAAmC,CACrCC,GAAIJ,EACJlI,UAAWmI,EAAQpI,GAAKC,UAAYmI,EAAQpI,GAAKC,UAAa,GAC9DI,IAAK+H,EAAQpI,GAAKK,IAAM+H,EAAQpI,GAAKK,IAAO,GAC5CC,IAAK8H,EAAQpI,GAAKM,IAAM8H,EAAQpI,GAAKM,IAAO,GAC5CC,IAAKwB,YAAeqG,EAAQpI,GAAKO,KAAO6H,EAAQpI,GAAKO,IAAO,GAC5DC,eAAgB4H,EAAQpI,GAAKQ,eACzB4H,EAAQpI,GAAKQ,eACb,GACJC,cAAe2H,EAAQpI,GAAKS,cACxB2H,EAAQpI,GAAKS,cACb,GACJC,MAAO0H,EAAQpI,GAAKU,MAAQ0H,EAAQpI,GAAKU,MAAS,GAClDC,cAAeyH,EAAQpI,GAAKW,cACxByH,EAAQpI,GAAKW,cACb,GACJC,SAAUwH,EAAQpI,GAAKY,SAAWwH,EAAQpI,GAAKY,SAAY,GAC3DC,SAAUoB,YAAsBmG,EAAQpI,GAAKkC,kBAC1CC,QACHrB,OAAQmB,YAAsBmG,EAAQpI,GAAKkC,kBAAkBpB,OAE7DC,eAAgBqH,EAAQpI,GAAKe,eACzBqH,EAAQpI,GAAKe,eACb,GACJC,KAAMoH,EAAQpI,GAAKgB,KAAOoH,EAAQpI,GAAKgB,KAAQ,GAE/Cb,OAAQiI,EAAQpI,GAAKG,OAASiI,EAAQpI,GAAKG,OAAU,GACrDc,kBAC8BuH,IAA5BJ,EAAQpI,GAAKyI,WACT5G,YAAkBuG,EAAQpI,GAAKyI,YAC/B,GACNvH,eAAgBa,YAAeqG,EAAQpI,GAAK0I,0BACxCN,EAAQpI,GAAK0I,yBACb,GACJvH,YAAaiH,EAAQpI,GAAK4B,OACtBC,YAAkBuG,EAAQpI,GAAK4B,OAAQT,aACvC,GACJC,YAAagH,EAAQpI,GAAK4B,OACtBC,YAAkBuG,EAAQpI,GAAK4B,OAAQR,aACvC,GACJC,gBAAiB+G,EAAQpI,GAAK4B,OAC1BC,YAAkBuG,EAAQpI,GAAK4B,OAAQP,iBACvC,GACJC,cAAe8G,EAAQpI,GAAK4B,OACxBC,YAAkBuG,EAAQpI,GAAK4B,OAAQN,eACvC,GAWJC,cAAe6G,EAAQpI,GAAK2I,SACxB9G,YAAkBuG,EAAQpI,GAAK2I,SAAUpH,eACzC,IA+CN,IAAK,IAAMvB,KAAO,EAAK0F,MAAMI,cAEzB8C,OAAOC,UAAUC,eAAeC,KAAK,EAAKrD,MAAMI,cAAe9F,KAE1D,EAAK0F,MAAMI,cAAc9F,GAAKG,eAC1BmI,EAAU,EAAK5C,MAAMI,cAAc9F,GAAKA,MAIrDkI,EAAStF,KAAK0F,GACdH,GAED,CACD,EAAKzD,SAAS,CAAEsE,cAAed,IAC/BA,EAAW,GACXC,EAAI,CACL,CACF,EAriBwC,EAuiBzCc,mBAAqB,SAACC,GACpB,IAAIC,EACF,EAAKzD,MAAMI,cACb,IAAK,IAAM9F,KAAOmJ,EACZA,EAASnJ,GAAKI,kBAAiB+I,EAASnJ,GAAKG,QAAU+I,GAG7D,EAAKrD,iBAAiBsD,GACtB,EAAK/D,cAAc8D,GACnB,EAAKpB,mBACN,EAjjBwC,EAmjBzCsB,oBAAsB,SAACpJ,GACrB,IAAIkD,EAAgB,EAAKwC,MAAMI,cAAc9C,WAC3C,SAACC,GAAD,OAAUA,EAAKjD,MAAQA,CAAvB,IAEEmJ,EACF,EAAKzD,MAAMI,cACbqD,EAASjG,GAAO/C,QAAUgJ,EAASjG,GAAO/C,OAC1C,EAAK0F,iBAAiBsD,GACEA,EAASE,MAAK,SAACpG,GAAD,OAA0B,IAAhBA,EAAK9C,MAAf,IAEpC,EAAKiF,cAAa,GAElB,EAAKA,cAAa,GAIpB,EAAK0C,mBACN,EApkBwC,EAskBzCO,YAAc,WACZ,IAAIiB,EAAwB,GAE5B,GAAiC,OAA7B,EAAK5D,MAAMgB,cAAwB,OAAO,KAC9C,IAAMA,EAAgB,EAAKhB,MAAMgB,cAAcO,QAC7C,SAAChE,GAAD,OAAWA,EAAKiD,MAAQ,EAAKR,MAAMsB,aAAnC,IAEF,IAAK,IAAMhH,KAAO0G,EAAe,CAC/B,IAAMhE,EAAyBS,KAAKC,MAAMsD,EAAc1G,GAAKuJ,MAEvDC,EAAgC,EAAKC,iBAAiB/G,EAAS,CACnEgH,KAAMhD,EAAc1G,GAAKmB,YACzBwI,KAAMjD,EAAc1G,GAAKoB,cAG3BkI,EAAM,sBAAOA,GAAP,YAAkBE,GACzB,CAMD,OAJA7C,QAAQC,IAAI,mDACZD,QAAQC,IAAI,CAAEyB,YAAaiB,IAC3B3C,QAAQC,IAAI,mDAEL0C,CACR,EA7lBwC,EA+lBzCG,iBAAmB,SACjBG,EACAhI,GAEA,IADkB,EACduH,EAA0B,GADZ,cAEIS,GAFJ,IAElB,2BAAgC,CAAC,IAAtBC,EAAqB,QAC1BC,EAAaD,EAAQjI,OACrBkI,IACFA,EAAW1I,YAAcQ,EAAO+H,KAChCG,EAAW3I,YAAcS,EAAO8H,MAElCP,EAASvG,KAAT,2BAAmBiH,GAAnB,IAA4BjI,OAAQkI,IACrC,CATiB,+BAWlB,OAAOX,CACR,EA9mBwC,EAgnBzCY,cAAgB,SAACC,GACf,IAAMC,EAAaC,KAAKC,KAAKH,EAAc,EAAKtE,MAAM0E,iBAElDC,EAASC,MAAMC,KAAKD,MAAML,EAAa,EADjB,GACgCO,QACvDnG,KAAI,SAACoG,GAAD,OAFmB,EAEAA,CAAnB,IACJC,MAAM,EAAG,GAERT,EAAa,GAAK,EAAKvE,MAAMM,YAAc,IAE3CqE,EADEJ,EAAa,EAAKvE,MAAMM,YAAc,EAC/B,CACP,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YACX,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,GAElBiE,EAAa,EAAKvE,MAAMM,cAAgB,EACxC,CACP,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YACX,EAAKN,MAAMM,YAAc,GAGlB,CACP,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,cAKjB,IAAI2E,GAAuB,EACzBC,GAAsB,EACtBC,GAAoB,EACpBC,GAAoB,EAgBtB,OAdIb,EAAa,GAAgC,IAA3B,EAAKvE,MAAMM,cAAmB6E,GAAW,GAE3DZ,EAAa,GAAK,EAAKvE,MAAMM,cAAgBiE,IAC/Ca,GAAW,GAETb,EAAa,GAAK,EAAKvE,MAAMM,YAAc,IAAG2E,GAAc,GAG9DV,EAAa,GACb,EAAKvE,MAAMM,cAAgBiE,GAC3BA,EAAa,EAAKvE,MAAMM,YAAc,IAEtC4E,GAAa,GAGb,sBAAKtG,UAAU,qBAAf,UACGqG,GACC,wBACErG,UAAU,4GACVyG,QAAS,kBAAM,EAAKhF,eAAe,EAA1B,EAFX,SAIE,cAAC,IAAD,CAAqBzB,UAAU,cAGlCuG,GACC,wBACEvG,UAAU,6FACVyG,QAAS,kBAAM,EAAKhF,eAAe,EAAKL,MAAMM,YAAc,EAAnD,EAFX,SAIE,cAAC,IAAD,CAAe1B,UAAU,cAG7B,qBAAKA,UAAU,sDAAf,SACG+F,EAAOhG,KAAI,SAACpB,EAAMC,GAAP,OACV,wBACEoB,UAAS,sEACP,EAAKoB,MAAMM,cAAgB/C,EACvB,uDACA,qBAGN+H,SAAU,EAAKtF,MAAMM,cAAgB/C,EACrC8H,QAAS,WACP,EAAKhF,eAAe9C,EAErB,EAXH,SAaGA,GAPIiH,KAAKe,SAPF,MAkBbH,GACC,wBACExG,UAAU,4GACVyG,QAAS,WACP,EAAKhF,eAAe,EAAKL,MAAMM,YAAc,EAE9C,EALH,SAOE,cAAC,IAAD,CAAgB1B,UAAU,cAG7BsG,GACC,wBACEtG,UAAU,4GACVyG,QAAS,WACP,EAAKhF,eAAekE,EAErB,EALH,SAOE,cAAC,IAAD,CAAsB3F,UAAU,gBAKzC,EAnuBwC,EAquBzC4G,qBAAuB,SACrBC,EACAC,GAEA,OAAOD,EAASlE,QACd,SAAChE,GAAD,OAAUA,EAAK3C,KAAO2C,EAAK3C,IAAI+K,sBAAwBD,CAAvD,IACA9H,MACH,EAzuBC,EAAKoC,MAAQ,CACXe,SAAS,EACToB,kBAAkB,EAClBlD,aAAa,EACbI,UAAW,MACXF,aAAc,GACdI,YAAa,GACbE,YAAa,GACbE,WAAW,EACXO,gBAAgB,EAChBL,UAAW,KACXO,cAAe/F,IACfiJ,cAAe,KACfhC,cAAesE,IAAY/G,EAAUgH,YACrC7E,cAAe,KACfV,YAAa,EACboE,gBAAiBtK,IACjB0L,iBAAkB,EAAKvH,MAAMsD,MAAMC,kBAC/B,EAAKvD,MAAMsD,MAAMC,kBAAkBC,iBACnC,GACJJ,aAAc,KACdH,kBAAmB,GACnBuE,YAAa,SAzBwB,CA2BxC,CA/BH,0CAkvBE,WAAU,IAAD,OACDC,EAAuCC,KAAKtD,cAElD,OACE,qCAEE,eAAC,IAAD,WACE,0BAAS/D,UAAU,4CAAnB,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAASsH,KAAK,KAAKtH,UAAU,GAA7B,8CAIA,sBAAKA,UAAU,2DAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,4BAAItC,YAAK6B,gBAGb,qBAAKS,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,sBAAMA,UAAU,GAAhB,uBACA,cAAC,IAAD,CACEuH,MAAM,UACNb,SACEW,KAAKjG,MAAMe,SACkB,OAA7BkF,KAAKjG,MAAMgB,eACyB,IAApCiF,KAAKjG,MAAMgB,cAAcpD,OAE3BgB,UAAS,UACPqH,KAAKjG,MAAMe,SACkB,OAA7BkF,KAAKjG,MAAMgB,eACyB,IAApCiF,KAAKjG,MAAMgB,cAAcpD,OACrB,qBACA,GALG,uCAOTyH,QAAS,WACP,EAAKrG,SAAS,CAAE+G,YAAa,UAC7B,EAAK3D,oBACL,EAAKnC,mBAAkB,EACxB,EAlBH,SAoBE,qBAAKrB,UAAU,0CAAf,SACE,oDAGJ,cAAC,IAAD,CACEuH,MAAM,gBACNb,SACEW,KAAKjG,MAAMe,SACkB,OAA7BkF,KAAKjG,MAAMgB,eACyB,IAApCiF,KAAKjG,MAAMgB,cAAcpD,OAE3BgB,UAAS,UACPqH,KAAKjG,MAAMe,SACkB,OAA7BkF,KAAKjG,MAAMgB,eACyB,IAApCiF,KAAKjG,MAAMgB,cAAcpD,OACrB,qBACA,IAENyH,QAAS,WACP,EAAKjD,oBACL,EAAKnC,mBAAkB,GACvB,EAAKjB,SAAS,CAAE+G,YAAa,OAC9B,EAlBH,SAoBE,qBAAKnH,UAAU,0CAAf,SACE,4DAQZ,yBAASA,UAAU,gFAAnB,SACE,qBAAKA,UAAU,OAAf,SACGqH,KAAK1H,MAAMmC,KAAKpF,MACjBQ,IAAeI,OAAOe,SAASgJ,KAAK1H,MAAMmC,KAAKpF,KAAKA,MAClD,qCACE,cAAC,IAAD,CAAS4K,KAAK,KAAd,SACGD,KAAK1H,MAAMmC,KAAKxE,OACb+J,KAAK1H,MAAMmC,KAAKxE,OAAOT,YACvB,KAEN,mBAAGmD,UAAU,aAAb,SACGqH,KAAK1H,MAAMmC,KAAKzE,SACbgK,KAAK1H,MAAMmC,KAAKzE,SAASJ,cAAgB,YACzC,QAGNoK,KAAK1H,MAAMmC,KAAKpF,MAClBQ,IAAeG,SAASgB,SAASgJ,KAAK1H,MAAMmC,KAAKpF,KAAKA,MACtD,cAAC,IAAD,CAAS4K,KAAK,KAAd,SACGD,KAAK1H,MAAMmC,KAAKzE,SACbgK,KAAK1H,MAAMmC,KAAKzE,SAASJ,cAAgB,YACzC,KAGNoK,KAAK1H,MAAMmC,KAAKpF,MAChBQ,IAAeE,QAAQiB,SAASgJ,KAAK1H,MAAMmC,KAAKpF,KAAKA,OACnD,cAAC,IAAD,CAAS4K,KAAK,KAAd,SACGD,KAAK1H,MAAMmC,KAAKpF,KAAO2K,KAAK1H,MAAMmC,KAAKpF,KAAKA,KAAO,SAa9D,sBAAKsD,UAAU,uGAAf,UACE,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CACEkC,KACEmF,KAAK1H,MAAMyD,UAAUC,UAArB,YAESgE,KAAK1H,MAAMyD,UAAUC,UAAUtD,KAAI,SAACyH,GAAD,MAAS,CAC7C5L,MAAO4L,EAAG/D,mBACVjG,MAAOgK,EAAGrE,iBAF0B,KAKxC,GAENX,MAAM,GACN4C,KAAK,kBACLqC,SAAU,SAACC,GACT,EAAKtH,SAAS,CAAE8G,iBAAkBQ,EAAEC,OAAOnK,QAC3C,EAAKmE,gBACH,EAAKP,MAAMsB,cACXgF,EAAEC,OAAOnK,MAEZ,EACDoK,MAAM,kBACNC,YAAY,kBACZrK,MAAO6J,KAAKjG,MAAM8F,iBAClBI,KAAK,KACLZ,SACEW,KAAKjG,MAAMmC,kBACX8D,KAAKjG,MAAMe,SACwB,OAAnCkF,KAAK1H,MAAMyD,UAAUC,cAI1BgE,KAAK1H,MAAMmC,KAAKpF,MACfQ,IAAeE,QAAQiB,SAASgJ,KAAK1H,MAAMmC,KAAKpF,KAAKA,OACnD,qBAAKsD,UAAU,GAAf,SACE,cAAC,IAAD,CACEkC,KACEmF,KAAKjG,MAAM2B,aAAX,CAEM,CACEnH,MAAO,kBACP4B,MAAO,KAJf,mBAMS6J,KAAKjG,MAAM2B,aAAahD,KAAI,SAACyH,GAAD,MAAS,CACtC5L,MAAO4L,EAAGvK,cACVO,MAAOgK,EAAGxF,cAFmB,MAKjC,GAENQ,MAAM,GACN4C,KAAK,kBACLqC,SAAU,SAACC,GACT,EAAKtH,SAAS,CAAEwC,kBAAmB8E,EAAEC,OAAOnK,QAC5C,EAAKqF,mBACH,EAAKzB,MAAMsB,cACX,EAAKtB,MAAM8F,iBACXQ,EAAEC,OAAOnK,MAEZ,EACDoK,MAAM,kBACNC,YAAY,kBACZrK,MAAO6J,KAAKjG,MAAMwB,kBAClB0E,KAAK,KACLZ,SACEW,KAAKjG,MAAMmC,kBACX8D,KAAKjG,MAAMe,SACiB,OAA5BkF,KAAKjG,MAAM2B,iBAKrB,qBAAK/C,UAAU,GAAf,SACE,cAAC,IAAD,CACEkC,KAAI,YACC8E,IAAYjH,KAAI,SAACyH,GAAD,MAAS,CAC1B5L,MAAO4L,EACPhK,MAAOgK,EAFU,KAKrBhF,MAAM,GACN4C,KAAK,eACLqC,SAAU,SAACC,GACT,EAAKtH,SAAS,CAAEsC,cAAegF,EAAEC,OAAOnK,QACxC,EAAKmE,gBACH+F,EAAEC,OAAOnK,MACT,EAAK4D,MAAM8F,iBAEd,EACDU,MAAM,eACNC,YAAY,eACZrK,MAAO6J,KAAKjG,MAAMsB,cAClB4E,KAAK,KACLZ,SACEW,KAAKjG,MAAMmC,kBACX8D,KAAKjG,MAAMe,SACwB,OAAnCkF,KAAK1H,MAAMyD,UAAUC,iBAK5B+D,GACC,qBAAKpH,UAAU,OAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,sBAAMA,UAAU,wBAAhB,oBACA,oBAAIA,UAAU,mCAAd,SACG8H,YACCT,KAAKT,qBAAqBQ,EAAgB,gBAIhD,sBAAKpH,UAAU,8BAAf,UACE,sBAAMA,UAAU,wBAAhB,kBACA,oBAAIA,UAAU,mCAAd,SACG8H,YACCT,KAAKT,qBAAqBQ,EAAgB,cAIhD,sBAAKpH,UAAU,8BAAf,UACE,sBAAMA,UAAU,wBAAhB,mBACA,oBAAIA,UAAU,mCAAd,SACG8H,YAAeV,EAAepI,wBAuB7C,eAAC,IAAD,WACE,sBAAKgB,UAAU,gFAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CACE4H,MAAM,SACNxC,KAAK,SACL2C,KAAK,SACLN,SAAU,SAACC,GAAD,OAAY,EAAKhH,eAAegH,EAAEC,OAAOnK,MAAzC,EACVqK,YAAY,6BACZrK,MAAO6J,KAAKjG,MAAMT,YAClB+F,UACGU,GAIY,IAHbA,EAAgBhB,MACdiB,KAAKjG,MAAMM,YAAc,EACzB2F,KAAKjG,MAAMM,YAAc,EAAI2F,KAAKjG,MAAM0E,iBACxC9G,OAEJsI,KAAK,KACL9E,MAAM,OAGV,qBAAKxC,UAAU,GAAf,SACE,cAAC,IAAD,CACEkC,KAAM,CACJ,CAAEtG,MAAOJ,IAAe6D,WAAY7B,MAAOhC,KAC3C,CACEI,OAAyB,EAAjBJ,KAAoB6D,WAC5B7B,MAAwB,EAAjBhC,KAET,CACEI,OAAyB,EAAjBJ,KAAoB6D,WAC5B7B,MAAwB,EAAjBhC,KAET,CACEI,OAAyB,EAAjBJ,KAAoB6D,WAC5B7B,MAAwB,EAAjBhC,KAET,CACEI,OAAyB,EAAjBJ,KAAoB6D,WAC5B7B,MAAwB,EAAjBhC,MAGXgH,MAAM,GACN4C,KAAK,aACLqC,SAAU,SAACC,GAAD,OACR,EAAKtH,SAAS,CACZ0F,gBAAiB3G,OAAOuI,EAAEC,OAAOnK,OACjCkE,YAAa,GAHP,EAMVkG,MAAM,OACNC,YAAY,aACZrK,MAAO6J,KAAKjG,MAAM0E,gBAClBwB,KAAK,YAKX,qBAAKtH,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBgI,GAAG,iBAApC,UACE,uBAAOhI,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,aAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,wBACa,cAAC,IAAD,SAGf,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,YAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,uBACY,cAAC,IAAD,SAGd,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,YAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,mBACQ,cAAC,IAAD,SAGV,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,MAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,iBACM,cAAC,IAAD,SAGR,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,MAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,iBACM,cAAC,IAAD,SAGR,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,gBAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,2BACgB,cAAC,IAAD,SAGlB,oBAAIA,UAAU,2BAAd,oBACA,oBACEA,UAAU,2BACVyG,QAAS,kBAAM,EAAKvF,QAAQ,WAAnB,EAFX,SAIE,sBAAKlB,UAAU,0BAAf,sBACW,cAAC,IAAD,cAKjB,gCACGqH,KAAKjG,MAAMe,QACV,cAAC,IAAD,CAAcrC,KAAM,KAClBvB,YAAgB8I,KAAKjG,MAAMwB,oBAC7ByE,KAAK1H,MAAMmC,KAAKpF,MAChBQ,IAAeE,QAAQiB,SAASgJ,KAAK1H,MAAMmC,KAAKpF,KAAKA,MACrD,6BACE,oBAAIuL,QAAS,GAAIjI,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,sBAAhB,wDAMe,OAAnBoH,EACF,6BACE,oBAAIa,QAAS,GAAIjI,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,qDAYO,IANXkI,YACAd,EAAgBhB,MACdiB,KAAKjG,MAAMM,YAAc,EACzB2F,KAAKjG,MAAMM,YAAc,EAAI2F,KAAKjG,MAAM0E,iBAE1CuB,KAAKjG,MAAMT,aACX3B,OACF,6BACE,oBAAIiJ,QAAS,GAAIjI,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,gEAONmI,aACG5J,YAAgB8I,KAAKjG,MAAMb,cAC5B2H,YACEd,EAAgBhB,MACdiB,KAAKjG,MAAMM,YAAc,EACzB2F,KAAKjG,MAAMM,YAAc,EAAI2F,KAAKjG,MAAM0E,iBAE1CuB,KAAKjG,MAAMT,aAEb0G,KAAKjG,MAAMb,aACX8G,KAAKjG,MAAMX,WACXV,KAAI,SAACpB,EAAmBwH,GAApB,OACJ,qBAEEnG,UAAS,UACPmG,EAAI,IAAM,EAAI,cAAgB,WADvB,qHAFX,UAME,oBAAInG,UAAU,YAAd,UACI,EAAKoB,MAAMM,YAAc,GACzB,EAAKN,MAAM0E,gBACXK,EACA,IAEJ,oBAAInG,UAAU,YAAd,SACGrB,EAAKyJ,WAAazJ,EAAKyJ,WAAa,KAEvC,oBAAIpI,UAAU,YAAd,SAA2BrB,EAAK5C,IAAM4C,EAAK5C,IAAM,KACjD,oBAAIiE,UAAU,YAAd,SACGrB,EAAKhD,UAAYgD,EAAKhD,UAAY,KAErC,oBAAIqE,UAAU,YAAd,SAA2BrB,EAAK1C,IAAM0C,EAAK1C,IAAM,KACjD,oBAAI+D,UAAU,YAAd,SAA2BrB,EAAK3C,IAAM2C,EAAK3C,IAAM,KACjD,oBAAIgE,UAAU,YAAd,SACGrB,EAAKtC,cAAgBsC,EAAKtC,cAAgB,KAE7C,oBAAI2D,UAAU,YAAd,SACGrB,EAAKrB,OAASqB,EAAKrB,OAAOT,YAAc,KAE3C,oBAAImD,UAAU,YAAd,SACGrB,EAAKrC,SAAWqC,EAAKrC,SAAW,OA3B9B6J,EAAI,EAFP,YAsCZkB,KAAKjG,MAAMe,SACX,qBAAKnC,UAAU,uDAAf,SACGoH,GAAkBC,KAAK5B,cAAc2B,EAAgBpI,aAQ3DqI,KAAKjG,MAAME,gBACV,cAAC,IAAD,CACE1F,MACE,sBAAKoE,UAAU,mCAAf,UAC8B,UAA3BqH,KAAKjG,MAAM+F,YACV,cAAC,IAAD,CAAkBnH,UAAU,2BAE5B,cAAC,IAAD,CAAkBA,UAAU,2BAE9B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,sBAAMA,UAAU,oCAAhB,SAC8B,UAA3BqH,KAAKjG,MAAM+F,YACR,0BACA,gCAKZkB,UAAU,EACVd,MAAOe,IAAOC,QACdC,MAAO,kBAAM,EAAKnH,mBAAkB,EAA7B,EACPoH,eAAe,EACfC,eAAgBC,IAAUC,OAC1BC,cAAc,EACdC,QAAS,CAAElN,OAAO,GA1BpB,SA4BE,sBAAKoE,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,cAAC,IAAD,CACE0G,SAAUW,KAAKjG,MAAMe,QACrByF,MAAM,eACNxC,KAAK,eACL2C,KAAK,OACLvK,MAAO6J,KAAKjG,MAAMP,YAClBgH,YAAa,eACb7H,UAAU,MACVyH,SAAU,SAACC,GACT,EAAK1G,aAAa,MAClB,EAAKJ,eAAe8G,EAAEC,OAAOnK,MAC9B,EACDgF,MACE6E,KAAKjG,MAAMH,WACsB,iBAAjCoG,KAAKjG,MAAMH,UAAU7C,QACjBiJ,KAAKjG,MAAMH,UAAUgB,IACrB,KAGR,sBAAKjC,UAAU,qBAAf,UACE,mDACA,qBAAKA,UAAU,0DAAf,SACGqH,KAAKjG,MAAMI,cAAczB,KAAI,SAACpB,EAAMC,GAAP,OAC5B,sBAEEoB,UAAS,kCACPrB,EAAK7C,gBACD,iBACA,sBAEN2K,QAAS,kBACP9H,EAAK7C,iBACL,EAAKgJ,oBAAoBnG,EAAKjD,IAFvB,EAITE,MACG+C,EAAK7C,gBAEF,GADA,6BAbR,UAiBG6C,EAAK9C,OACJ,cAAC,IAAD,CAAYmE,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAOrB,EAAK/C,UArBPgD,EAFqB,MA2B/ByI,KAAKjG,MAAMH,WACuB,mBAAjCoG,KAAKjG,MAAMH,UAAU7C,SACnB,sBAAM4B,UAAU,eAAhB,SACGqH,KAAKjG,MAAMH,UAAUgB,YAKhC,sBAAKjC,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTyG,QAAS,kBAAM,EAAK9B,mBAAmB,EAAKvD,MAAML,UAAzC,EAFX,UAIGsG,KAAKjG,MAAML,UACV,cAAC,IAAD,CAAYf,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,kDAGAqH,KAAKjG,MAAMe,SACXkF,KAAKjG,MAAMsD,eACgB,UAA3B2C,KAAKjG,MAAM+F,aACT,cAAC,IAAD,CACE4B,SAAU1B,KAAKjG,MAAMsD,cACrBsE,SAAU3B,KAAKjG,MAAMP,YACrBoI,QAAQ,cAGZ5B,KAAKjG,MAAMe,SACXkF,KAAKjG,MAAMsD,eACgB,QAA3B2C,KAAKjG,MAAM+F,aAAyB,0DAQnD,KAn1CH,GAAsC+B,aA81CzBC,EAAkBC,aARP,SAAC,GAKvB,MAAO,CAAEtH,KAD2D,EAHpEA,KAIqBmB,MAD+C,EAFpEA,MAGmCG,UADiC,EADpEA,UAGD,GAEuD,CACtDiG,8BACA/F,qBAF6B8F,CAG5BlJ,E","file":"static/js/37.d0a6b3df.chunk.js","sourcesContent":["import {\n  DATE,\n  FC_ConvertArrayToString,\n  isEmptyOrSpaces,\n} from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  // staff_code: string;\n  full_name: string;\n  // first_name: string;\n  // last_name: string;\n  nid: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  // nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  // staff_category: string;\n  // rssb_number: string;\n  // bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  // region_code: string;\n  // LOCATION INFO ##############\n  // village_name: string;\n  // cell_name: string;\n  // cell_code: string;\n  // sector_name: string;\n  // sector_code: string;\n  district_name: string;\n  // district_code: string;\n  // province_name: string;\n  // province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  // periods: string;\n  // NEW FIELD =====================\n  date_in_school: string;\n  date_of_hire: string;\n  // nationality: string;\n  // middle_name: string;\n  // bank_name: string;\n  // END NEW FIELD =================\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  // first_name = \"first_name\",\n  // last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  nid = \"nid\",\n  // rssb_number = \"rssb_number\",\n  // nationality_id = \"nationality_id\",\n  // bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  // staff_category = \"staff_category\",\n  // staff_code = \"staff_code\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  // region_code = \"region_code\",\n  // village_name = \"village_name\",\n  // cell_name = \"cell_name\",\n  // cell_code = \"cell_code\",\n  // sector_name = \"sector_name\",\n  // sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  // district_code = \"district_code\",\n  // province_name = \"province_name\",\n  // province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  // periods = \"periods\",\n\n  // NEW FIELDS ================\n  date_in_school = \"date_in_school\",\n  date_of_hire = \"date_of_hire\",\n  // nationality = \"nationality\",\n  // middle_name = \"middle_name\",\n  // bank_name = \"bank_name\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    //* ADD TEACHING LEVEL\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    //* CERTIFIED / NON-CERTIFIED\n    {\n      key: PlacementReportActiveContentKeyInterface.status,\n      title: \"Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_in_school,\n      title: \"Date in school\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.staff_code,\n    //   title: \"Staff code\",\n    //   status: true,\n    //   isChangeAllowed: false,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.first_name,\n    //   title: \"Staff First Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.middle_name,\n    //   title: \"Staff Middle Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.last_name,\n    //   title: \"Staff Last Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.rssb_number,\n    //   title: \"RSSB\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.bank_name,\n    //   title: \"Bank name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.bank_account,\n    //   title: \"Bank account\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.district_code,\n    //   title: \"District Code\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.nationality,\n    //   title: \"Nationality\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.periods,\n    //   title: \"Periods\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  system: string[];\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  system: [\"26\", \"Admin\"],\n  country: [\"REB\", \"4\", \"RTB\", \"300\", \"MINECOFIN\", \"27\", \"26\", \"Admin\"],\n  district: [\"DDE\", \"3\", \"Human Resource\", \"25\"],\n  school: [\"Head Teacher\", \"Teacher\", \"2\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | Date | null): string => {\n  if (value === null) return \"\";\n  if (FC_isDateValid(value)) return DATE(value);\n  return value as string;\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: string[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(\n          FC_ConvertArrayToString(JSON.parse(element.grade_group))\n        );\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | Date | null): boolean => {\n  if (value === null) return false;\n  var dateWrapper = new Date(value);\n  return !isNaN(dateWrapper.getDate());\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { connect } from \"react-redux\";\nimport {\n  API_GetPlacementBySchoolUpdated,\n  Auth,\n  Basic,\n  DistrictList,\n  FC_GetAcademics,\n  FC_GetDistrictByCode,\n  FC_GetDistrictList,\n  FC_GetPlacementByDistrict,\n  FC_GetReportByDistrict,\n  FC_GetReportBySchoolMonthly,\n  FT_GetPlacementByDistrict,\n  Placement,\n  TeacherData,\n} from \"../../../actions\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  DATE,\n  displayNumbers,\n  isEmptyOrSpaces,\n  MONTHS_LIST,\n  search,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport {\n  defaultPlacementReportActiveContent,\n  FC_GetHierarchStrings,\n  FC_GetStringValue,\n  FC_isDateValid,\n  forReportRoles,\n  PlacementReportActiveContentInterface,\n  PlacementReportActiveContentKeyInterface,\n  ReportAcademicYearType,\n  reportToPrintListType,\n  tablePageLimit,\n} from \"../../../types/PlacementReportTypes\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport InputSelect from \"../../../components/Inputs/InputSelect\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\nimport Button from \"../../../components/Buttons/Button\";\nimport { BsFileEarmarkPdf } from \"react-icons/bs\";\nimport { SiMicrosoftexcel } from \"react-icons/si\";\n\nconst TodayDate = new Date();\n\ninterface PlacementReportProps {\n  // REDUX PROPS ======\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  FC_GetPlacementByDistrict: FT_GetPlacementByDistrict;\n  FC_GetAcademics: Function;\n}\n\ninterface PlacementReportState {\n  loading: boolean;\n  loadingAcademics: boolean;\n  downloading: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  sortProperty: string;\n  searchInput: string;\n  reportTitle: string;\n  selectAll: boolean;\n  generateReport: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  reportContent: PlacementReportActiveContentInterface[];\n  reportToPrint: reportToPrintListType[] | null;\n  selectedMonth: string;\n  reportAPIData: API_GetPlacementBySchoolUpdated[] | null;\n  currentPage: number;\n  tablePageLength: number;\n  selectedAcademic: string;\n  districtList: DistrictList[] | null;\n  selected_district: string;\n  export_type: \"Excel\" | \"PDF\";\n}\n\nexport class _PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingAcademics: false,\n      downloading: false,\n      sortOrder: \"ASC\",\n      sortProperty: \"\",\n      searchInput: \"\",\n      reportTitle: \"\",\n      selectAll: true,\n      generateReport: false,\n      formError: null,\n      reportContent: defaultPlacementReportActiveContent,\n      reportToPrint: null,\n      selectedMonth: MONTHS_LIST[TodayDate.getMonth()],\n      reportAPIData: null,\n      currentPage: 1,\n      tablePageLength: tablePageLimit,\n      selectedAcademic: this.props.basic.academic_calender\n        ? this.props.basic.academic_calender.academic_year_id\n        : \"\",\n      districtList: null,\n      selected_district: \"\",\n      export_type: \"Excel\",\n    };\n  }\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setSortProperty = (value: string) => {\n    this.setState({ sortProperty: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n  };\n\n  setGenerateReport = (value: boolean) => {\n    this.setState({ generateReport: value });\n  };\n\n  setReportContent = (value: PlacementReportActiveContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  loadDataFormAPI = (month: string, academic_id: string) => {\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      forReportRoles.district.includes(this.props.auth.role.role)\n    )\n      FC_GetReportByDistrict(\n        this.props.auth.district.district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.school &&\n      this.props.auth.role &&\n      forReportRoles.school.includes(this.props.auth.role.role)\n    )\n      FC_GetReportBySchoolMonthly(\n        this.props.auth.school.school_code,\n        academic_id,\n        this.state.selectedMonth,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          if (status === false && data !== null) {\n            console.log(\n              \"=================reportsss SCHOOL LEVEL ===================\"\n            );\n            console.log({ report: data });\n            console.log(\n              \"=================reportsss SCHOOL LEVEL ===================\"\n            );\n            this.setState({\n              reportAPIData: data.filter((item) => item.month === month),\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role) &&\n      !isEmptyOrSpaces(this.state.selected_district)\n    )\n      FC_GetReportByDistrict(\n        this.state.selected_district,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    // else if (\n    //   this.props.auth.role &&\n    //   forReportRoles.country.includes(this.props.auth.role.role)\n    // )\n    //   FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n    //     this.setState({\n    //       loading: status,\n    //       reportAPIData: null,\n    //     });\n    //     if (status === false && data !== null) {\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       console.log({ report: data });\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       this.setState({\n    //         reportAPIData: data.filter((item) => item.month === month),\n    //       });\n    //     } else if (!status && !isEmptyOrSpaces(msg)) {\n    //       console.error({ status, msg });\n    //       // this.setState({\n    //       //   loading: false,\n    //       //   error: {\n    //       //     msg: msg,\n    //       //     target: \"main-error\",\n    //       //   },\n    //       // });\n    //     }\n    //   });\n  };\n\n  loadCountryDataAPI = (\n    month: string,\n    academic_id: string,\n    district_code: string\n  ) => {\n    if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role) &&\n      !isEmptyOrSpaces(district_code)\n    )\n      FC_GetReportByDistrict(\n        district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    // else if (\n    //   this.props.auth.role &&\n    //   forReportRoles.country.includes(this.props.auth.role.role)\n    // )\n    //   FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n    //     this.setState({\n    //       loading: status,\n    //       reportAPIData: null,\n    //     });\n    //     if (status === false && data !== null) {\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       console.log({ report: data });\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       this.setState({\n    //         reportAPIData: data.filter((item) => item.month === month),\n    //       });\n    //     } else if (!status && !isEmptyOrSpaces(msg)) {\n    //       console.error({ status, msg });\n    //       // this.setState({\n    //       //   loading: false,\n    //       //   error: {\n    //       //     msg: msg,\n    //       //     target: \"main-error\",\n    //       //   },\n    //       // });\n    //     }\n    //   });\n  };\n\n  componentDidMount = () => {\n    if (\n      (this.state.districtList === null ||\n        this.state.districtList.length !== 30) &&\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role)\n    ) {\n      FC_GetDistrictList((status, data, msg) => {\n        this.setState({\n          loading: true,\n          districtList: null,\n        });\n        if (status === true) {\n          console.log(\n            \"================= districts COUNTRY LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"================= districts COUNTRY LEVEL ===================\"\n          );\n          this.setState({\n            loading: false,\n            districtList: data,\n            // selected_district: data[0].district_code,\n          });\n        } else if (!isEmptyOrSpaces(msg)) {\n          this.setState({\n            formError: {\n              element: \"main-error\",\n              msg: msg,\n            },\n            loading: false,\n          });\n        }\n      });\n    }\n    if (this.props.basic.academic_calender)\n      this.loadDataFormAPI(\n        this.state.selectedMonth,\n        this.props.basic.academic_calender.academic_year_id\n      );\n    if (\n      this.props.placement.academics === null ||\n      this.props.placement.academics.length === 0\n    )\n      this.props.FC_GetAcademics(\n        (status: boolean, data: ReportAcademicYearType[], msg: string) => {\n          this.setState({ loadingAcademics: status });\n          // if (!status && !isEmptyOrSpaces(msg)) this.setState({});\n        }\n      );\n    else this.setState({ loadingAcademics: false });\n  };\n\n  updateDataToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      forReportRoles.district.includes(this.props.auth.role.role)\n    ) {\n      let title =\n        \"Placement Report / \" +\n        this.props.auth.district.district_name +\n        \" district\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.school &&\n      this.props.auth.role &&\n      forReportRoles.school.includes(this.props.auth.role.role)\n    ) {\n      let title =\n        \"Placement Report / \" + this.props.auth.school.school_name + \" school\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.role &&\n      forReportRoles.country.includes(this.props.auth.role.role) &&\n      this.state.districtList\n    ) {\n      const thisDistrict = FC_GetDistrictByCode(\n        this.state.districtList,\n        this.state.selected_district\n      );\n      let title = \"Placement Report / \" + this.props.auth.role.role;\n      title = thisDistrict\n        ? title + \" / \" + thisDistrict.district_name + \" district\"\n        : title;\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    let arrayNew: reportToPrintListType[] = [];\n    let n: number = 1;\n    const allData = this.getUserList();\n\n    if (allData) {\n      for (const key in allData) {\n        // if (Object.prototype.hasOwnProperty.call(allData, key)) {\n        let dataArray: reportToPrintListType = {\n          no: n,\n          full_name: allData[key].full_name ? allData[key].full_name! : \"\",\n          nid: allData[key].nid ? allData[key].nid! : \"\",\n          sex: allData[key].sex ? allData[key].sex! : \"\",\n          dob: FC_isDateValid(allData[key].dob) ? allData[key].dob! : \"\",\n          marital_status: allData[key].marital_status\n            ? allData[key].marital_status!\n            : \"\",\n          phone_numbers: allData[key].phone_numbers\n            ? allData[key].phone_numbers!\n            : \"\",\n          email: allData[key].email ? allData[key].email! : \"\",\n          qualification: allData[key].qualification\n            ? allData[key].qualification!\n            : \"\",\n          position: allData[key].position ? allData[key].position! : \"\",\n          subjects: FC_GetHierarchStrings(allData[key].teacher_hierarch)\n            .courses,\n          grades: FC_GetHierarchStrings(allData[key].teacher_hierarch).grades,\n          //* teaching_level: \"Teaching level\",\n          specialization: allData[key].specialization\n            ? allData[key].specialization!\n            : \"\",\n          role: allData[key].role ? allData[key].role! : \"\",\n          //* Certified/uncertified\n          status: allData[key].status ? allData[key].status! : \"\",\n          date_of_hire:\n            allData[key].hired_date !== undefined\n              ? FC_GetStringValue(allData[key].hired_date!)\n              : \"\",\n          date_in_school: FC_isDateValid(allData[key].start_date_in_the_school)\n            ? allData[key].start_date_in_the_school!\n            : \"\",\n          school_name: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_name)\n            : \"\",\n          school_code: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_code)\n            : \"\",\n          school_category: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_category)\n            : \"\",\n          school_status: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_status)\n            : \"\",\n          // district_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.district_code)\n          //   : \"\",\n\n          // first_name: allData[key].first_name ? allData[key].first_name! : \"\",\n          // middle_name: allData[key].middle_name\n          //   ? allData[key].middle_name!\n          //   : \"\",\n          // last_name: allData[key].last_name ? allData[key].last_name! : \"\",\n\n          district_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.district_name)\n            : \"\",\n\n          // rssb_number: allData[key].rssb_number\n          //   ? allData[key].rssb_number!\n          //   : \"\",\n          // nationality:\n          //   allData[key].nationality !== undefined &&\n          //   allData[key].nationality !== null\n          //     ? allData[key].nationality!\n          //     : \"\",\n          // bank_name: allData[key].bank_name ? allData[key].bank_name! : \"\",\n          // bank_account: allData[key].bank_account\n          //   ? allData[key].bank_account!\n          //   : \"\",\n\n          // staff_category: allData[key].staff_category\n          //   ? allData[key].staff_category!\n          //   : \"\",\n          // staff_code: allData[key].staff_code ? allData[key].staff_code! : \"\",\n\n          // region_code: allData[key].school\n          //   ? FC_GetStringValue(allData[key].school!.region_code)\n          //   : \"\",\n          // village_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.village_name)\n          //   : \"\",\n          // cell_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.cell_name)\n          //   : \"\",\n          // cell_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.cell_code)\n          //   : \"\",\n          // sector_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.sector_name)\n          //   : \"\",\n          // sector_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.sector_code)\n          //   : \"\",\n          // province_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.province_name)\n          //   : \"\",\n          // province_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.province_code)\n          //   : \"\",\n\n          // periods: FC_GetHierarchStrings(allData[key].teacher_hierarch).periods,\n        };\n        for (const key in this.state.reportContent) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.state.reportContent, key)\n          ) {\n            if (!this.state.reportContent[key].status) {\n              delete dataArray[this.state.reportContent[key].key];\n            }\n          }\n        }\n        arrayNew.push(dataArray);\n        n++;\n        // }\n      }\n      this.setState({ reportToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (newArray[key].isChangeAllowed) newArray[key].status = !currentState;\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateDataToPrint();\n  };\n\n  updateReportContent = (key: PlacementReportActiveContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateDataToPrint();\n  };\n\n  getUserList = (): TeacherData[] | null => {\n    let result: TeacherData[] = [];\n\n    if (this.state.reportAPIData === null) return null;\n    const reportAPIData = this.state.reportAPIData.filter(\n      (item) => (item.month = this.state.selectedMonth)\n    );\n    for (const key in reportAPIData) {\n      const element: TeacherData[] = JSON.parse(reportAPIData[key].list);\n\n      const updatedElement: TeacherData[] = this.changeSchoolData(element, {\n        name: reportAPIData[key].school_name,\n        code: reportAPIData[key].school_code,\n      });\n\n      result = [...result, ...updatedElement];\n    }\n\n    console.log(\"=================getUserList===================\");\n    console.log({ getUserList: result });\n    console.log(\"=================getUserList===================\");\n\n    return result;\n  };\n\n  changeSchoolData = (\n    thisData: TeacherData[],\n    school: { code: string; name: string }\n  ): TeacherData[] => {\n    let newArray: TeacherData[] = [];\n    for (const teacher of thisData) {\n      let thisSchool = teacher.school;\n      if (thisSchool) {\n        thisSchool.school_code = school.code;\n        thisSchool.school_name = school.name;\n      }\n      newArray.push({ ...teacher, school: thisSchool });\n    }\n\n    return newArray;\n  };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / this.state.tablePageLength);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) moveBack = true;\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages)\n      moveNext = true;\n\n    if (totalPages > 3 && this.state.currentPage > 3) jumpToFirst = true;\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    )\n      jumpToLast = true;\n\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                // this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              // this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              // this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  countTeacherByGender = (\n    teachers: TeacherData[],\n    gender: \"female\" | \"male\"\n  ): number => {\n    return teachers.filter(\n      (item) => item.sex && item.sex.toLocaleLowerCase() === gender\n    ).length;\n  };\n\n  render() {\n    const DT_GetUserList: TeacherData[] | null = this.getUserList();\n\n    return (\n      <>\n        {/* REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n        <DashboardContainer>\n          <section className=\"flex flex-col sm:flex-row justify-between\">\n            <div className=\"px-3\">\n              <Heading size=\"lg\" className=\"\">\n                Monthly Teacher Placement Report\n              </Heading>\n              {/* <p className=\"opacity-50\">Placement report</p> */}\n              <div className=\"flex flex-row items-center justify-start gap-1 text-base\">\n                <span className=\"text-gray-500\">Done on</span>\n                <p>{DATE(Date())}</p>\n              </div>\n            </div>\n            <div className=\"px-3 float-right\">\n              <div className=\"float-right -mr-2 mt-2\">\n                <div className=\"flex flex-row items-center justify-end font-bold\">\n                  <span className=\"\">Download:</span>\n                  <Button\n                    theme=\"default\"\n                    disabled={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                    }\n                    className={`${\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"cursor-not-allowed\"\n                        : \"\"\n                    } mx-3 bg-gray-200 hover:bg-gray-300`}\n                    onClick={() => {\n                      this.setState({ export_type: \"Excel\" });\n                      this.updateDataToPrint();\n                      this.setGenerateReport(true);\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center w-full gap-2\">\n                      <span>Excel format</span>\n                    </div>\n                  </Button>\n                  <Button\n                    theme=\"primary-light\"\n                    disabled={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                    }\n                    className={`${\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"cursor-not-allowed\"\n                        : \"\"\n                    }`}\n                    onClick={() => {\n                      this.updateDataToPrint();\n                      this.setGenerateReport(true);\n                      this.setState({ export_type: \"PDF\" });\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center w-full gap-2\">\n                      <span>PDF format</span>\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"flex flex-col sm:flex-row justify-between bg-accent-400 w-max rounded-md mx-2\">\n            <div className=\"px-3\">\n              {this.props.auth.role &&\n              forReportRoles.school.includes(this.props.auth.role.role) ? (\n                <>\n                  <Heading size=\"sm\">\n                    {this.props.auth.school\n                      ? this.props.auth.school.school_name\n                      : \"\"}\n                  </Heading>\n                  <p className=\"opacity-50\">\n                    {this.props.auth.district\n                      ? this.props.auth.district.district_name + \" district\"\n                      : \"\"}\n                  </p>\n                </>\n              ) : this.props.auth.role &&\n                forReportRoles.district.includes(this.props.auth.role.role) ? (\n                <Heading size=\"sm\">\n                  {this.props.auth.district\n                    ? this.props.auth.district.district_name + \" district\"\n                    : \"\"}\n                </Heading>\n              ) : (\n                this.props.auth.role &&\n                forReportRoles.country.includes(this.props.auth.role.role) && (\n                  <Heading size=\"sm\">\n                    {this.props.auth.role ? this.props.auth.role.role : \"\"}\n                  </Heading>\n                )\n              )}\n            </div>\n          </section>\n\n          {/* END REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n\n          {/* *********************************************************************** */}\n\n          {/* FILTER BY ACADEMIC & MONTH ================ */}\n\n          <div className=\"border-t border-gray-400 mt-4 mb-1 flex flex-col md:flex-row items-center justify-between px-3 gap-2\">\n            <div className=\"flex flex-col md:flex-row items-center gap-2\">\n              <div className=\"\">\n                <InputSelect\n                  data={\n                    this.props.placement.academics\n                      ? [\n                          ...this.props.placement.academics.map((el) => ({\n                            title: el.academic_year_name,\n                            value: el.academic_year_id,\n                          })),\n                        ]\n                      : []\n                  }\n                  error=\"\"\n                  name=\"select_academic\"\n                  onChange={(e) => {\n                    this.setState({ selectedAcademic: e.target.value });\n                    this.loadDataFormAPI(\n                      this.state.selectedMonth,\n                      e.target.value\n                    );\n                  }}\n                  label=\"Select academic\"\n                  placeholder=\"Select academic\"\n                  value={this.state.selectedAcademic}\n                  size=\"sm\"\n                  disabled={\n                    this.state.loadingAcademics ||\n                    this.state.loading ||\n                    this.props.placement.academics === null\n                  }\n                />\n              </div>\n              {this.props.auth.role &&\n                forReportRoles.country.includes(this.props.auth.role.role) && (\n                  <div className=\"\">\n                    <InputSelect\n                      data={\n                        this.state.districtList\n                          ? [\n                              {\n                                title: \"Select district\",\n                                value: \"\",\n                              },\n                              ...this.state.districtList.map((el) => ({\n                                title: el.district_name,\n                                value: el.district_code,\n                              })),\n                            ]\n                          : []\n                      }\n                      error=\"\"\n                      name=\"select_district\"\n                      onChange={(e) => {\n                        this.setState({ selected_district: e.target.value });\n                        this.loadCountryDataAPI(\n                          this.state.selectedMonth,\n                          this.state.selectedAcademic,\n                          e.target.value\n                        );\n                      }}\n                      label=\"Select district\"\n                      placeholder=\"Select district\"\n                      value={this.state.selected_district}\n                      size=\"sm\"\n                      disabled={\n                        this.state.loadingAcademics ||\n                        this.state.loading ||\n                        this.state.districtList === null\n                      }\n                    />\n                  </div>\n                )}\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    ...MONTHS_LIST.map((el) => ({\n                      title: el,\n                      value: el,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_month\"\n                  onChange={(e) => {\n                    this.setState({ selectedMonth: e.target.value });\n                    this.loadDataFormAPI(\n                      e.target.value,\n                      this.state.selectedAcademic\n                    );\n                  }}\n                  label=\"Select month\"\n                  placeholder=\"Select month\"\n                  value={this.state.selectedMonth}\n                  size=\"sm\"\n                  disabled={\n                    this.state.loadingAcademics ||\n                    this.state.loading ||\n                    this.props.placement.academics === null\n                  }\n                />\n              </div>\n            </div>\n            {DT_GetUserList && (\n              <div className=\"py-1\">\n                <div className=\"flex justify-between space-x-4 text-right\">\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Female</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(\n                        this.countTeacherByGender(DT_GetUserList, \"female\")\n                      )}\n                    </h2>\n                  </div>\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Male</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(\n                        this.countTeacherByGender(DT_GetUserList, \"male\")\n                      )}\n                    </h2>\n                  </div>\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Total</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(DT_GetUserList.length)}\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </DashboardContainer>\n        {/* END FILTER BY ACADEMIC & MONTH ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT SUMMARY ================ */}\n        {/* <DashboardContainer>\n          <ReportSummary />\n        </DashboardContainer> */}\n        {/* END REPORT SUMMARY ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT CONTENT ================ */}\n        <DashboardContainer>\n          <div className=\"border border-t mt-2 mb-1 flex flex-col md:flex-row items-center px-3 rounded\">\n            <div className=\"flex-1 pr-2\">\n              <TextInput\n                label=\"Search\"\n                name=\"search\"\n                type=\"search\"\n                onChange={(e: any) => this.setSearchInput(e.target.value)}\n                placeholder=\"Search by names, codes,...\"\n                value={this.state.searchInput}\n                disabled={\n                  !DT_GetUserList ||\n                  DT_GetUserList!.slice(\n                    this.state.currentPage - 1,\n                    this.state.currentPage - 1 + this.state.tablePageLength\n                  ).length === 0\n                }\n                size=\"sm\"\n                error=\"\"\n              />\n            </div>\n            <div className=\"\">\n              <InputSelect\n                data={[\n                  { title: tablePageLimit.toString(), value: tablePageLimit },\n                  {\n                    title: (tablePageLimit * 2).toString(),\n                    value: tablePageLimit * 2,\n                  },\n                  {\n                    title: (tablePageLimit * 3).toString(),\n                    value: tablePageLimit * 3,\n                  },\n                  {\n                    title: (tablePageLimit * 4).toString(),\n                    value: tablePageLimit * 4,\n                  },\n                  {\n                    title: (tablePageLimit * 5).toString(),\n                    value: tablePageLimit * 5,\n                  },\n                ]}\n                error=\"\"\n                name=\"page_limit\"\n                onChange={(e) =>\n                  this.setState({\n                    tablePageLength: Number(e.target.value),\n                    currentPage: 1,\n                  })\n                }\n                label=\"Show\"\n                placeholder=\"page limit\"\n                value={this.state.tablePageLength}\n                size=\"sm\"\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_code\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff Code <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_nid\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff NID <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"full_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"dob\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      DOB <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"sex\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Sex <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"qualification\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Qualification <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2 cursor-pointer\">School</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={11} />\n                ) : isEmptyOrSpaces(this.state.selected_district) &&\n                  this.props.auth.role &&\n                  forReportRoles.country.includes(this.props.auth.role.role) ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-base font-bold\">\n                          Please select district to get data!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : DT_GetUserList === null ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          Something went wrong, try again!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : search(\n                    DT_GetUserList!.slice(\n                      this.state.currentPage - 1,\n                      this.state.currentPage - 1 + this.state.tablePageLength\n                    ),\n                    this.state.searchInput\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    !isEmptyOrSpaces(this.state.sortProperty),\n                    search(\n                      DT_GetUserList!.slice(\n                        this.state.currentPage - 1,\n                        this.state.currentPage - 1 + this.state.tablePageLength\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item: TeacherData, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-accent-100 hover:text-accent-700 border-b border-gray-300 hover:border-accent-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">\n                        {(this.state.currentPage - 1) *\n                          this.state.tablePageLength +\n                          i +\n                          1}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.staff_code ? item.staff_code : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.nid ? item.nid : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.full_name ? item.full_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.dob ? item.dob : \"\"}</td>\n                      <td className=\"px-2 py-2\">{item.sex ? item.sex : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.qualification ? item.qualification : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.school ? item.school.school_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.position ? item.position : \"\"}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n          {/* pagination ========= */}\n          {!this.state.loading && (\n            <div className=\"flex flex-col items-center mt-3 mb-2 overflow-x-auto\">\n              {DT_GetUserList && this.generatePages(DT_GetUserList!.length)}\n            </div>\n          )}\n        </DashboardContainer>\n        {/* END REPORT CONTENT ================ */}\n\n        {/* ********************************************************************************** */}\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReport && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.export_type === \"Excel\" ? (\n                  <SiMicrosoftexcel className=\"text-5xl text-gray-900\" />\n                ) : (\n                  <BsFileEarmarkPdf className=\"text-5xl text-gray-900\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-900\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    {this.state.export_type === \"Excel\"\n                      ? \"Generating Excel Report\"\n                      : \"Generating PDF Report\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setGenerateReport(false)}\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <TextInput\n                  disabled={this.state.loading}\n                  label=\"Report title\"\n                  name=\"report_title\"\n                  type=\"text\"\n                  value={this.state.reportTitle}\n                  placeholder={\"Report title\"}\n                  className=\"p-2\"\n                  onChange={(e) => {\n                    this.setFormError(null);\n                    this.setReportTitle(e.target.value);\n                  }}\n                  error={\n                    this.state.formError &&\n                    this.state.formError.element === \"report_title\"\n                      ? this.state.formError.msg\n                      : \"\"\n                  }\n                />\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                    {this.state.reportContent.map((item, index) => (\n                      <div\n                        key={index}\n                        className={`flex items-center gap-1 ${\n                          item.isChangeAllowed\n                            ? \"cursor-pointer\"\n                            : \"cursor-not-allowed\"\n                        }`}\n                        onClick={() =>\n                          item.isChangeAllowed &&\n                          this.updateReportContent(item.key)\n                        }\n                        title={\n                          !item.isChangeAllowed\n                            ? \"Required for every report!\"\n                            : \"\"\n                        }\n                      >\n                        {item.status ? (\n                          <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                        ) : (\n                          <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                        )}\n                        <span>{item.title}</span>\n                      </div>\n                    ))}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"report_content\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => this.resetReportContent(this.state.selectAll)}\n                >\n                  {this.state.selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {!this.state.loading &&\n                  this.state.reportToPrint &&\n                  this.state.export_type === \"Excel\" && (\n                    <ExportToExcel\n                      fileData={this.state.reportToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Download\"\n                    />\n                  )}\n                {!this.state.loading &&\n                  this.state.reportToPrint &&\n                  this.state.export_type === \"PDF\" && <div>Export to PDF</div>}\n              </div>\n            </div>\n          </Modal>\n        )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): { auth: Auth; basic: Basic; placement: Placement } => {\n  return { auth: auth, basic: basic, placement: placement };\n};\n\nexport const PlacementReport = connect(mapStateToProps, {\n  FC_GetPlacementByDistrict,\n  FC_GetAcademics,\n})(_PlacementReport);\n"],"sourceRoot":""}