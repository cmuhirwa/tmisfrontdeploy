{"version":3,"sources":["components/SchoolPositions/AddSchoolPositions.tsx","containers/Head-Teacher/Request/AddActionInput.tsx","containers/Head-Teacher/Request/HeadTeacherRequestToDee.tsx"],"names":["AddSchoolPositions","props","addPositionToSchool","position","setState","schoolPositionsTemp","state","filter","itm","position_id","FilterByPositionsHavingTeacher","sort","a","b","count","testPosition","schoolPositions","find","position_code","undefined","parseInt","total_on_position","addSchoolPositions","window","confirm","length","school","auth","setAxiosToken","newPositions","loading","newP","push","school_code","console","log","axios","post","APP_URL","appendPositionsToSchool","success","error","alert","errorToText","RemoveSchoolPosition","school_has_position_id","removePositionsToSchool","response","data","users","positionTemp","positions","selected_position_users_on_delete","PositionsSortByHavingTeacher","positionsTemp","countOnA","countOnB","test","search","searchPositionValue","edit","className","style","this","maxHeight","onClick","theme","close","onChange","e","target","value","placeholder","type","name","label","map","item","i","position_name","qualification_name","school_level_name","school_name","backDrop","Themes","default","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","staff_code","full_name","nid","phone_numbers","Component","AddActionInput","useState","reason","setReason","currentRequests","toString","inputValue","setInputValue","setError","htmlFor","postRequestReasons","element","reason_id","reason_name","res","getPostRequestItem","postsNumber","submitRequest","totalItemPosts","totalExistingPostsStatic","testItem","existing_post","dde_post_distribution","vacantPosts","normalSchoolPositions","total","_HdRequestToDee","setLoading","status","getPostRequestReasons","get","existingTeachersCount","n","existingTeachersCount1","newAddedTeachersCount","addedNewTeachers","nn","new_position","head_teacher_post_request","TotalAllowedTeachersCount","countRequestedPosts","allRequest","sumWithInitial","reduce","previousValue","currentValue","totalRequested","cleanAlert","setTimeout","msg","getSchoolPositions","academic_year_id","getNotInitializedPosts","school_positions","school_post_requests","initializePosts","TotalVacantPosts","elements","sendFinalPostRequest","addedRequests","current","post_request_id","academic_calendar_id","qualification_id","head_teacher_id","head_teacher_reason_id","dde_id_request","dde_post_request","dde_id_distribution","dde_distribution_comment","district_code","created_by","getUpdatedValue","number","updatedPosts","requestPosts","getValue","currentPostsData","district_code_split","user","user_id","newRequestdPosts","basic","academic_calender","NewUpdatedRequest","filterData","allData","seleQualification","seacrhValue","componentDidMount","FC_GetAllPositions","addPostRequestItem","district","request","substring","selected","qualification","allFliteredData","sendPostRequest","Container","title","subTitle","Alert","Loading","TextInput","size","qualifications","width","colSpan","index","HdRequestToDee","connect"],"mappings":"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","file":"static/js/49.5d93d5e3.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { MdAdd, MdArrowBack, MdClose, MdInfoOutline } from \"react-icons/md\";\nimport { Auth, SchoolData } from \"../../actions\";\nimport { SchoolPositionApiResponse } from \"../../types/HeadTeacherRequesTypes\";\nimport TextInput from \"../Inputs/TextInput\";\n// import { BsFillCheckSquareFill } from \"react-icons/bs\";\nimport { FiSearch } from \"react-icons/fi\";\n// import { ImCheckboxUnchecked } from \"react-icons/im\";\nimport { APP_URL } from \"../../config/app.config\";\nimport axios from \"axios\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { PositionsOnSchool } from \"../../containers/Head-Teacher/Request/HeadTeacherRequestToDee\";\nimport { search } from \"../../utils/functions\";\nimport Button from \"../Buttons/Button\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../Modal/Modal\";\nimport Loading from \"../Loading/Loading\";\n\ninterface PositionStaffOnDelete {\n  first_name: string;\n  full_name: string;\n  last_name: string;\n  middle_name: string;\n  nid: string;\n  phone_numbers: string;\n  staff_code: string;\n  user_id: string;\n}\n\ninterface AddSchoolPositionsProps {\n  auth: Auth;\n  positions: SchoolPositionApiResponse[];\n  schoolPositions: PositionsOnSchool[];\n  appendPositionsToSchool: (\n    schoolPositions: SchoolPositionApiResponse[]\n  ) => void;\n  removePositionsToSchool: (school_has_position_id: string) => void;\n  close?: () => void;\n  school?: SchoolData;\n}\n\ninterface AddSchoolPositionsState {\n  searchPositionValue: string;\n  schoolPositionsTemp: SchoolPositionApiResponse[];\n  edit: boolean;\n  loading: boolean;\n  success: string;\n  error: string;\n  selected_position_users_on_delete: {\n    position: SchoolPositionApiResponse;\n    data: PositionStaffOnDelete[];\n  } | null;\n}\n\nexport class AddSchoolPositions extends Component<\n  AddSchoolPositionsProps,\n  AddSchoolPositionsState\n> {\n  constructor(props: AddSchoolPositionsProps) {\n    super(props);\n\n    this.state = {\n      searchPositionValue: \"\",\n      schoolPositionsTemp: [],\n      edit: false,\n      loading: false,\n      success: \"\",\n      error: \"\",\n      selected_position_users_on_delete: null,\n    };\n  }\n  addPositionToSchool = (position: SchoolPositionApiResponse) => {\n    this.setState({\n      schoolPositionsTemp: [\n        position,\n        ...this.state.schoolPositionsTemp.filter(\n          (itm) => itm.position_id !== position.position_id\n        ),\n      ],\n    });\n  };\n  // Filter by positions having teachers\n  FilterByPositionsHavingTeacher = (): SchoolPositionApiResponse[] => {\n    const Positions = this.state.schoolPositionsTemp;\n    let temp = [];\n    temp = Positions.sort((a, b) => {\n      let count: number = 0;\n      const testPosition = this.props.schoolPositions.find(\n        (itm) => itm.position_code === a.position_code\n      );\n      if (testPosition !== undefined) {\n        count = parseInt(testPosition.total_on_position);\n      }\n      if (count > 0) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    return temp;\n  };\n  addSchoolPositions = async () => {\n    if (\n      window.confirm(\"Are you sure do you want to add these positions?\") ===\n      true\n    ) {\n      if (\n        this.state.schoolPositionsTemp.length > 0 &&\n        this.props.school === undefined\n          ? this.props.auth.school\n          : this.props.school\n      ) {\n        setAxiosToken();\n        let newPositions = [];\n        this.setState({ loading: true });\n        for (let newP of this.state.schoolPositionsTemp) {\n          newPositions.push({\n            school_code:\n              this.props.school === undefined\n                ? this.props.auth.school!.school_code\n                : this.props.school.school_code,\n            position_code: newP.position_code,\n          });\n        }\n        console.log(\"Positions codes: \", newPositions);\n        try {\n          await axios.post(`${APP_URL}/schoolposition/assign`, newPositions);\n          this.props.appendPositionsToSchool(this.state.schoolPositionsTemp);\n          this.setState({ schoolPositionsTemp: [] });\n          this.setState({ loading: false });\n          this.setState({\n            success: \"Positions added successfully!\",\n            error: \"\",\n          });\n          alert(\"Positions added successfully!\");\n        } catch (error: any) {\n          this.setState({ loading: false });\n          this.setState({ error: errorToText(error) });\n          console.log(\"Err: \", { ...error });\n        }\n      }\n    }\n  };\n  RemoveSchoolPosition = async (\n    school_has_position_id: string,\n    school_code: string\n  ) => {\n    this.setState({ loading: true });\n    try {\n      const res = await axios.post(\n        `${APP_URL}/schoolposition/delete/${school_has_position_id}`,\n        {\n          school_code: school_code,\n        }\n      );\n      if (res) {\n        this.setState({\n          success: \"Positions added successfully!\",\n          error: \"\",\n        });\n        this.props.removePositionsToSchool(school_has_position_id);\n      }\n    } catch (error: any) {\n      console.log(\"error res: \", error.response?.data?.users);\n      if (\n        error.response?.data?.users !== undefined &&\n        error.response.data.users.length > 0\n      ) {\n        const positionTemp = this.props.schoolPositions.find(\n          (itm) => itm.school_has_position_id === school_has_position_id\n        );\n        const position = this.props.positions.find(\n          (itm) => itm.position_code === positionTemp?.position_code\n        );\n        if (position !== undefined) {\n          this.setState({\n            selected_position_users_on_delete: {\n              position: position,\n              data: error.response?.data?.users as PositionStaffOnDelete[],\n            },\n          });\n        } else {\n          this.setState({\n            error: \"Invalid Position selected!\",\n          });\n        }\n      } else {\n        this.setState({\n          error: errorToText(error),\n        });\n      }\n      this.setState({ loading: false });\n      console.log(\"Err: \", { ...error });\n    }\n  };\n\n  // Sort positions first by positions with available teacher and search\n  PositionsSortByHavingTeacher = () => {\n    let positionsTemp: SchoolPositionApiResponse[] = [];\n    positionsTemp = this.props.positions.sort((a, b) => {\n      const countOnA = this.props.schoolPositions.find(\n        (itm) => itm.position_code === a.position_code\n      );\n      const countOnB = this.props.schoolPositions.find(\n        (itm) => itm.position_code === b.position_code\n      );\n      if (countOnA !== undefined && countOnB !== undefined) {\n        if (\n          parseInt(countOnA.total_on_position) >\n          parseInt(countOnB.total_on_position)\n        ) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n      return 0;\n    });\n    positionsTemp = positionsTemp.filter(\n      (itm) =>\n        this.props.schoolPositions.find(\n          (test) => test.position_code === itm.position_code\n        ) === undefined\n    );\n    return search(\n      positionsTemp,\n      this.state.searchPositionValue\n    ) as SchoolPositionApiResponse[];\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div>\n          <div\n            className=\"bg-white dark:bg-dark-800 p-3 rounded overflow-y-auto\"\n            style={\n              this.state.selected_position_users_on_delete === null\n                ? {}\n                : { maxHeight: \"80vh\" }\n            }\n          >\n            <div className=\"flex flex-row items-center justify-between\">\n              <div className=\"flex flex-row items-center gap-2 justify-between w-full\">\n                <span className=\"text-2xl font-bold text-primary-800\">\n                  {this.state.edit === true\n                    ? \"Assign positions to school\"\n                    : \"School positions list\"}\n                </span>\n                <div>\n                  <Button\n                    onClick={() => this.setState({ edit: !this.state.edit })}\n                    theme={this.state.edit === true ? \"default\" : \"accent\"}\n                    className={`flex flex-row items-center gap-3 animate__animated ${\n                      this.state.edit === false\n                        ? \"animate__zoomIn\"\n                        : \"animate__fadeInLeft\"\n                    }`}\n                  >\n                    <div>\n                      {this.state.edit === true ? (\n                        <MdArrowBack className=\"text-2xl\" />\n                      ) : (\n                        <MdAdd className=\"text-2xl\" />\n                      )}\n                    </div>\n                    <span>\n                      {this.state.edit === true\n                        ? \"Back to list\"\n                        : \"Add new positions\"}\n                    </span>\n                  </Button>\n                </div>\n              </div>\n              {this.props.close !== undefined && (\n                <div>\n                  <div\n                    onClick={() => this.props.close && this.props.close()}\n                    className=\"bg-gray-100 hover:bg-yellow-100 flex items-center justify-center p-1 cursor-pointer rounded-full\"\n                  >\n                    <MdClose className=\"text-3xl\" />\n                  </div>\n                </div>\n              )}\n            </div>\n            {this.state.success !== \"\" && (\n              <div\n                onClick={() => this.setState({ success: \"\" })}\n                className=\"bg-green-600 text-white font-bold pl-4 pr-2 py-2 text-lg rounded-md my-2 fixed right-10 cursor-pointer shadow-xl animate__animated animate__bounceInRight\"\n              >\n                <div className=\"flex flex-row justify-between items-center gap-8\">\n                  <div>Success: {this.state.success}</div>\n                  <div>\n                    <MdClose className=\"text-2xl text-red-600 bg-red-100 rounded-full\" />\n                  </div>\n                </div>\n              </div>\n            )}\n            {this.state.error !== \"\" && (\n              <div\n                onClick={() => this.setState({ error: \"\" })}\n                className=\"bg-red-600 text-white font-bold pl-4 pr-2 py-2 text-lg rounded-md my-2 fixed right-10 cursor-pointer shadow-xl animate__animated animate__bounceInRight\"\n              >\n                <div className=\"flex flex-row justify-between items-center gap-8\">\n                  <div>Error: {this.state.error}</div>\n                  <div>\n                    <MdClose className=\"text-2xl text-red-600 bg-red-100 rounded-full\" />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div\n              className={`grid md:grid-cols-${\n                this.state.edit === true ? \"2\" : \"1\"\n              }`}\n            >\n              <div\n                className={`col-span-1 border-r pr-2 ${\n                  this.state.edit === true ? \"\" : \"hidden\"\n                }`}\n              >\n                {/* <div>\n                <span className=\"text-sm\">\n                  Positions list, Select a position\n                </span>\n              </div> */}\n                <div className=\"\">\n                  <TextInput\n                    onChange={(e) =>\n                      this.setState({ searchPositionValue: e.target.value })\n                    }\n                    error={\"\"}\n                    placeholder=\"Search position...\"\n                    value={this.state.searchPositionValue}\n                    type=\"search\"\n                    name=\"post\"\n                    label=\"Search\"\n                  />\n                </div>\n                <div className=\"h-screen overflow-y-auto\">\n                  {this.PositionsSortByHavingTeacher().length === 0 ? (\n                    <div>No positions found!</div>\n                  ) : (\n                    this.PositionsSortByHavingTeacher().map((item, i) => (\n                      <div\n                        key={i + 1}\n                        className=\"border border-gray-300 px-3 py-2 flex flex- justify-between group bg-white hover:bg-blue-50 hover:border-blue-300 gap-3  items-center cursor-pointer my-1 rounded\"\n                        onClick={() => {\n                          this.addPositionToSchool(item);\n                        }}\n                      >\n                        <div className=\"\">\n                          <div className=\"flex flex-row items-center justify-between\">\n                            <div className=\"flex flex-row gap-3 items-center text-base font-bold\">\n                              <div>\n                                <div className=\"flex items-center justify-center font-normal rounded-full h-8 -ml-1 w-8 border border-blue-400 bg-blue-100 text-sm\">\n                                  {i + 1}\n                                </div>\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <div className=\"flex flex-row items-center gap-2\">\n                                  <span className=\"font-light\">\n                                    {item.position_code}-\n                                  </span>\n                                  <span className=\"\">\n                                    {item.position_name} (\n                                    {item.qualification_name})\n                                  </span>\n                                </div>\n                                <div className=\"text-sm font-light text-gray-500 group-hover:text-accent-900 -mt-1\">\n                                  Level name: {item.school_level_name}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"flex flex-row items-center gap-2\">\n                          {this.props.schoolPositions.find(\n                            (itm) => itm.position_code === item.position_code\n                          ) !== undefined && (\n                            <div className=\"bg-yellow-100 rounded-full text-sm font-bold px-2 border border-yellow-400 truncate\">\n                              Total:{\" \"}\n                              {\n                                this.props.schoolPositions.find(\n                                  (itm) =>\n                                    itm.position_code === item.position_code\n                                )?.total_on_position\n                              }\n                            </div>\n                          )}\n                          <div className=\"bg-blue-100 text-primary px-3 py-1 rounded cursor-pointer text-base text-primary-800 group-hover:text-white group-hover:bg-primary-800\">\n                            Select\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n              {/* Right col */}\n              <div className=\"col-span-1 px-3\">\n                {\" \"}\n                {/* RiHome6Fill : School home icon later */}\n                <div className=\"flex flex-col border-b pb-3 border-accent-900 mt-2\">\n                  {/* <span>School</span> */}\n                  <div className=\"flex flex-row items-center justify-between\">\n                    <span className=\"text-accent-900 text-xl font-bold\">\n                      {this.props.school === undefined\n                        ? this.props.auth.school?.school_name\n                        : this.props.school.school_name}{\" \"}\n                      (\n                      {this.props.school === undefined\n                        ? this.props.auth.school?.school_code\n                        : this.props.school.school_code}\n                      )\n                    </span>\n                    <div className=\"font-bold text-2xl\">\n                      {\n                        [\n                          ...this.state.schoolPositionsTemp,\n                          ...this.props.schoolPositions,\n                        ].length\n                      }\n                    </div>\n                  </div>\n                </div>\n                {/* <div>\n                <span className=\"text-primary-800 font-bold text-lg\">\n                  School positions\n                </span>\n              </div> */}\n                {/* School positions */}\n                <div className=\"mt-3\">\n                  {[\n                    ...this.state.schoolPositionsTemp,\n                    ...this.props.schoolPositions,\n                  ].length === 0 ? (\n                    <div className=\"flex flex-col bg-gray-100 w-full justify-center items-center rounded-md p-4\">\n                      <div className=\"text-7xl text-gray-400\">\n                        <FiSearch />\n                      </div>\n                      <span className=\"text-3xl text-black\">\n                        School positions not found\n                      </span>\n                      <span className=\"text-sm text-gray-600\">\n                        This school has no positions assigned to it. Please\n                        select positions\n                      </span>\n                    </div>\n                  ) : (\n                    <div>\n                      {this.state.schoolPositionsTemp.length !== 0 && (\n                        <div className=\"text-xl text-primary-800 my-3 font-bold\">\n                          New pending\n                        </div>\n                      )}\n                      {this.state.schoolPositionsTemp.map((item, i) => (\n                        <div\n                          key={i + 1}\n                          className={`border rounded-md px-3 py-2 mb-2 group cursor-pointer ${\n                            this.state.schoolPositionsTemp.find(\n                              (itm) => itm.position_id === item.position_id\n                            ) !== undefined\n                              ? \"bg-yellow-50 border-yellow-400\"\n                              : \"bg-blue-50 border-blue-400 hover:bg-blue-100\"\n                          } animate__animated animate__zoomIn`}\n                        >\n                          <div className=\"flex flex-row items-center justify-between\">\n                            <div className=\"\">\n                              <div className=\"flex flex-row items-center justify-between\">\n                                <div className=\"flex flex-row gap-3 items-center text-base font-bold\">\n                                  <div>\n                                    <div className=\"flex items-center justify-center font-normal rounded-full h-8 -ml-1 w-8 border border-blue-400 bg-blue-100 text-sm\">\n                                      {i + 1}\n                                    </div>\n                                  </div>\n                                  <div className=\"flex flex-col\">\n                                    <div className=\"flex flex-row items-center gap-2\">\n                                      <span className=\"font-light\">\n                                        {item.position_code}-\n                                      </span>\n                                      <span className=\"\">\n                                        {item.position_name} (\n                                        {item.qualification_name})\n                                      </span>\n                                    </div>\n                                    <div className=\"text-sm font-light text-gray-500 group-hover:text-accent-900 -mt-1\">\n                                      Level name: {item.school_level_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className=\"\">\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    schoolPositionsTemp:\n                                      this.state.schoolPositionsTemp.filter(\n                                        (itm) =>\n                                          itm.position_id !== item.position_id\n                                      ),\n                                  });\n                                }}\n                                className=\"bg-white text-accent-900 px-3 py-1 rounded cursor-pointer text-base border border-yellow-400\"\n                              >\n                                Remove\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* <div className=\"text-sm\">\n                          School level:{\" \"}\n                          <span\n                            className={`font-bold ${\n                              this.state.schoolPositionsTemp.find(\n                                (itm) => itm.position_id === item.position_id\n                              ) !== undefined\n                                ? \"text-accent-900\"\n                                : \"text-primary-800\"\n                            }`}\n                          >\n                            {item.school_level_name}\n                          </span>\n                        </div> */}\n                        </div>\n                      ))}\n                      {this.state.schoolPositionsTemp.length !== 0 && (\n                        <div>\n                          <Button\n                            onClick={() => {\n                              this.addSchoolPositions();\n                            }}\n                            theme=\"accent\"\n                          >\n                            Submit positions\n                          </Button>\n                        </div>\n                      )}\n                      {this.props.schoolPositions.length !== 0 && (\n                        <div className=\"font-bold text-lg text-gray-500 my-3\">\n                          List of school position\n                        </div>\n                      )}\n                      {this.props.schoolPositions.map((item, i) => (\n                        <div\n                          key={i + 1}\n                          className={`border rounded-md px-3 py-2 mb-2 group cursor-pointer ${\n                            this.state.schoolPositionsTemp.find(\n                              (itm) => itm.position_code === item.position_code\n                            ) !== undefined\n                              ? \"bg-yellow-50 border-yellow-400\"\n                              : \"bg-gray-100 hover:bg-blue-100\"\n                          } flex flex-row items-center justify-between gap-4`}\n                        >\n                          <div className=\"\">\n                            <div className=\"flex flex-row items-center justify-between\">\n                              <div className=\"flex flex-row gap-3 items-center text-base font-bold\">\n                                <div>\n                                  <div className=\"flex items-center justify-center font-normal rounded-full h-8 -ml-1 w-8 border border-blue-400 bg-blue-100 text-sm\">\n                                    {i + 1}\n                                  </div>\n                                </div>\n                                <div className=\"flex flex-col\">\n                                  <div className=\"flex flex-row items-center gap-2\">\n                                    <span className=\"font-light\">\n                                      {item.position_code}-\n                                    </span>\n                                    <span className=\"\">\n                                      {item.position_name} (\n                                      {item.qualification_name})\n                                    </span>\n                                  </div>\n                                  <div className=\"text-sm font-light text-gray-500 group-hover:text-accent-900 -mt-1\">\n                                    Level name: {item.school_level_name}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <div className=\"bg-yellow-100 rounded-full text-sm font-bold px-2 border border-yellow-400 truncate\">\n                              Total:{\" \"}\n                              {\n                                this.props.schoolPositions.find(\n                                  (itm) =>\n                                    itm.position_code === item.position_code\n                                )?.total_on_position\n                              }\n                            </div>\n                            {this.props.schoolPositions.find(\n                              (itm) => itm.position_code === item.position_code\n                            ) !== undefined &&\n                              parseInt(\n                                this.props.schoolPositions.find(\n                                  (itm) =>\n                                    itm.position_code === item.position_code\n                                )!.total_on_position\n                              ) <= 0 && (\n                                <div\n                                  onClick={() => {\n                                    if (\n                                      item.school_code !== \"\" &&\n                                      window.confirm(\n                                        \"Are you sure do you want to remove this position\"\n                                      ) === true\n                                    ) {\n                                      this.RemoveSchoolPosition(\n                                        item.school_has_position_id,\n                                        item.school_code\n                                      );\n                                    }\n                                  }}\n                                  className=\"bg-white text-red-800 group-hover:text-white group-hover:bg-red-600 px-3 py-1 font-bold text-center rounded -mr-1\"\n                                >\n                                  Delete\n                                </div>\n                              )}\n                            {this.props.schoolPositions.find(\n                              (itm) => itm.position_code === item.position_code\n                            ) !== undefined &&\n                              parseInt(\n                                this.props.schoolPositions.find(\n                                  (itm) =>\n                                    itm.position_code === item.position_code\n                                )!.total_on_position\n                              ) > 0 && (\n                                <div\n                                  onClick={() =>\n                                    this.RemoveSchoolPosition(\n                                      item.school_has_position_id,\n                                      item.school_code\n                                    )\n                                  }\n                                  className=\"bg-blue-100 border border-white text-primary-800 group-hover:border-primary-800 hover:border-primary-800 group-hover:bg-primary-800 group-hover:text-white px-3 py-1 font-bold text-center rounded -mr-1\"\n                                >\n                                  Staffs\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.selected_position_users_on_delete !== null && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({ selected_position_users_on_delete: null })\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={false}\n            padding={{\n              body: true,\n            }}\n          >\n            {this.state.loading === true ? (\n              <div className=\"bg-white rounded p-4\">\n                <Loading />\n                <div className=\"text-xl font-light ml-4 -mt-10\">\n                  Loading, please wait...\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-white\">\n                <div className=\"flex flex-row gap-3 justify-between\">\n                  <div>\n                    <div className=\"font-extrabold text-2xl\">\n                      {\n                        this.state.selected_position_users_on_delete.position\n                          .position_name\n                      }\n                    </div>\n                    <div>List of staffs for the selected position</div>\n                  </div>\n                  <div\n                    onClick={() =>\n                      this.setState({ selected_position_users_on_delete: null })\n                    }\n                    className=\"bg-accent-800 font-bold cursor-pointer px-3 py-2 rounded truncate w-max h-10 flex items-center justify-center\"\n                  >\n                    Close window\n                  </div>\n                </div>\n                <div className=\"mt-3\">\n                  <table className=\"w-full text-left text-base font-light\">\n                    <thead className=\"bg-primary-100\">\n                      <tr>\n                        <th className=\"px-3 py-1\">#</th>\n                        <th className=\"px-3 py-1\">Staff code</th>\n                        <th className=\"px-3 py-1\">Full name</th>\n                        <th className=\"px-3 py-1\">NID</th>\n                        <th className=\"px-3 py-1\">Phone number</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.selected_position_users_on_delete.data.map(\n                        (item, i) => (\n                          <tr\n                            key={i + 1}\n                            className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"\"}`}\n                          >\n                            <td className=\"px-3 py-1\">{i + 1}</td>\n                            <td className=\"px-3 py-1\">{item.staff_code}</td>\n                            <td className=\"px-3 py-1\">{item.full_name}</td>\n                            <td className=\"px-3 py-1\">{item.nid}</td>\n                            <td className=\"px-3 py-1\">{item.phone_numbers}</td>\n                          </tr>\n                        )\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"mt-3 w-full\">\n                  <div className=\"flex flex-row gap-2 w-full bg-accent-400 rounded-md p-4 border border-yellow-400\">\n                    <div>\n                      <MdInfoOutline className=\"text-5xl\" />\n                    </div>\n                    <div className=\"text-xl font-light text-black flex flex-col\">\n                      <span className=\"font-extrabold\">\n                        You can not remove this position!\n                      </span>\n                      <span className=\"text-base\">\n                        If you want to remove this position, you need to check\n                        these staffs before. Thus, if you decided to remove it,\n                        please remove these staffs before removing this\n                        position!\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default AddSchoolPositions;\n","import React, { FC, ReactElement, useState } from \"react\";\n// import axios from \"axios\";\n// import TextInput from \"../../../components/Inputs/TextInput\";\n// import { FaAngleDown } from \"react-icons/fa\";\nimport { PostRequestReasons } from \"../../../types/HeadTeacherRequesTypes\";\n// import { setAxiosToken } from \"../../../utils/AxiosToken\";\n// import { APP_URL } from \"../../../config/app.config\";\n// import { InputSizeType } from \"../../../components/Inputs/InputTypes\";\nimport { PositionsOnSchool, PostRequestItem } from \"./HeadTeacherRequestToDee\";\n\ntype AddActionInputProps = {\n  postRequestReasons: PostRequestReasons[];\n  getPostRequestItem: (data: {\n    position: PositionsOnSchool;\n    reason: string;\n    postsNumber: number;\n  }) => PostRequestItem[];\n  close: () => void;\n  currentRequests: number;\n  submitRequest: (addedRequests: PostRequestItem[]) => void;\n  position: PositionsOnSchool;\n};\n\nconst AddActionInput: FC<AddActionInputProps> = (\n  props: AddActionInputProps\n): ReactElement => {\n  const [reason, setReason] = useState<string>(\"\");\n  const [inputValue, setInputValue] = useState<string>(\n    props.currentRequests.toString()\n  );\n  const [error, setError] = useState<string | null>(null);\n  return (\n    <>\n      <input\n        type=\"number\"\n        className=\"w-20 p-1 border-4 rounded-t border-primary-800 font-bold px-3 text-center text-black\"\n        value={inputValue}\n        name=\"POSTSS\"\n        onChange={(e) => {\n          setError(null);\n          setInputValue(e.target.value);\n        }}\n      />\n      <div className=\"animate__animated animate__zoomIn animate__faster absolute p-1 bg-primary-800 rounded-b -mt-0.5 rounded-tl  z-40 w-80 right-0 \">\n        <label\n          className=\"px-2 text-sm text-gray-300\"\n          htmlFor=\"selected_comment\"\n        >\n          Request reason\n        </label>\n        <div className=\"px-2\">\n          <select\n            value={reason}\n            placeholder=\"Select reason\"\n            className=\"block appearance-none w-full bg-white border-2 border-primary-800 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline md:w-full text-black\"\n            onChange={(e) => {\n              setError(null);\n              setReason(e.target.value);\n            }}\n          >\n            <option value={\"Select reason\"}>Select reason</option>\n            {props.postRequestReasons.map((element) => {\n              return (\n                <option key={element.reason_id} value={element.reason_id}>\n                  {element.reason_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        {error !== null && (\n          <div\n            onClick={() => setError(null)}\n            className=\"bg-red-100 rounded-md text-red-600 px-2 py-2 mx-3 my-2 animate__animated animate__animated animate__bounceIn\"\n          >\n            {error}\n          </div>\n        )}\n        <div className=\"flex\">\n          <button\n            onClick={() => {\n              if (inputValue.length < 0) {\n                setError(\"Please number of requests should be greater than 0\");\n              } else if (reason.length < 0) {\n                setError(\"Please select reason for number of requested posts\");\n              } else {\n                setError(null);\n                if (reason === \"\") {\n                  setReason(props.postRequestReasons[0].reason_id);\n                }\n                const res = props.getPostRequestItem({\n                  position: props.position,\n                  reason: reason,\n                  postsNumber: parseInt(inputValue),\n                });\n                console.log(\"Send: \", res);\n                props.submitRequest(res);\n                props.close();\n              }\n            }}\n            className=\"p-1 px-4 rounded text-white bg-green-400 hover:bg-green-500 mx-2 my-1\"\n          >\n            Send request\n          </button>\n          <button\n            onClick={() => props.close()}\n            className=\"p-1 px-2 rounded text-white bg-red-600 hover:bg-red-600  my-1\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddActionInput;\n","import React, { Fragment, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, FC_GetAllPositions } from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport axios from \"axios\";\nimport { FaAngleDown } from \"react-icons/fa\";\n\nimport Container from \"../../../components/ContainerComponents/Container\";\nimport AddActionInput from \"./AddActionInput\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Alert from \"../../../components/Alert/Alert\";\n\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport {\n  SchoolPositionApiResponse,\n  headTeacherRequestSubmit,\n  Qualifications,\n  PostRequestReasons,\n} from \"../../../types/HeadTeacherRequesTypes\";\nimport { APP_URL } from \"../../../config/app.config\";\nimport AddSchoolPositions from \"../../../components/SchoolPositions/AddSchoolPositions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { search } from \"../../../utils/functions\";\nimport { errorToText } from \"../../../utils/errors\";\n\nexport interface PositionsOnSchool {\n  // archive: string;\n  // archived_at: string | null;\n  // archived_by: string | null;\n  // position_code: string;\n  // position_name: string;\n  // qualification_id: string;\n  // qualification_name: string;\n  // school_code: string;\n  // school_has_position_id: string;\n  // school_level_id: string;\n  // school_level_name: string;\n  // school_name: string;\n  // total_on_position: number;\n  qualification_name: string;\n  position_name: string;\n  post_request_id: string;\n  academic_calendar_id: string;\n  school_code: string;\n  position_code: string;\n  qualification_id: string;\n  head_teacher_id: string;\n  head_teacher_post_request: string | undefined;\n  head_teacher_reason_id: string;\n  dde_id_request: string;\n  dde_post_request: string;\n  dde_id_distribution: string | null;\n  dde_post_distribution: string | null | undefined;\n  dde_distribution_comment: string | null;\n  district_code: string;\n  created_by: string;\n  existing_post: string | undefined;\n  school_level_name: string;\n  total_on_position: string;\n  school_has_position_id: string;\n}\n\nexport interface PostRequestItem {\n  academic_year_id: string;\n  school_code: string;\n  position_code: string;\n  qualification_id: string;\n  head_teacher_id: string;\n  head_teacher_post_request: string;\n  existing_post: string;\n  head_teacher_reason_id: string;\n  district_code: string;\n}\n\nexport interface SchoolPositionsCombination {\n  school_post_requests: PositionsOnSchool[];\n  school_positions: PositionsOnSchool[];\n}\n\ntype AlertMessage = {\n  target: \"main-error\" | \"main-success\" | null;\n  msg: string;\n};\n\ninterface HeadTeacherRequestToDeeState {\n  selected: string | null; // 0\n  seleQualification: string; //'All'\n  qualification: Qualifications[]; //[]\n  // postsRequests: TeacherRequestedPostsInterface[]; //[]\n  totalRequested: number; //0\n  seacrhValue: string; //''\n  alert: AlertMessage;\n  currentPostsData: SchoolPositionApiResponse[]; //[]\n  allFliteredData: SchoolPositionApiResponse[]; //[]\n  // requested post\n  requestPosts: headTeacherRequestSubmit; //[]\n  addSchoolPositions: boolean;\n  schoolPositions: PositionsOnSchool[];\n  normalSchoolPositions: PositionsOnSchool[] | null;\n  sendPostRequest: boolean;\n  addedRequests: PostRequestItem[];\n  postRequestReasons: PostRequestReasons[];\n  loading: boolean;\n}\n\ninterface HeadTeacherRequestToDeeProps {\n  auth: Auth;\n  basic: Basic;\n  FC_GetAllPositions: (\n    callBack: (status: boolean, msg: string) => void\n  ) => void;\n}\n\nexport const totalItemPosts = (\n  schoolPositions: PositionsOnSchool[],\n  element: PositionsOnSchool\n): number => {\n  let totalExistingPostsStatic: number = 0;\n  let testItem = schoolPositions.find(\n    (test) => test.position_code === element.position_code\n  );\n  if (testItem !== undefined) {\n    totalExistingPostsStatic =\n      testItem.existing_post === undefined\n        ? 0\n        : parseInt(testItem.existing_post);\n  }\n\n  const totalDistributed: number =\n    element.dde_post_distribution === null ||\n    element.dde_post_distribution === undefined\n      ? 0\n      : parseInt(element.dde_post_distribution);\n\n  return totalExistingPostsStatic + totalDistributed;\n};\n\nexport const vacantPosts = (\n  normalSchoolPositions: PositionsOnSchool[],\n  schoolPositions: PositionsOnSchool[],\n  element: PositionsOnSchool\n): number => {\n  let total = 0;\n\n  let testPosition = normalSchoolPositions.find(\n    (test) => test.position_code === element.position_code\n  );\n  if (testPosition !== undefined) {\n    total =\n      totalItemPosts(schoolPositions, element) -\n      parseInt(testPosition.total_on_position);\n  }\n  return total;\n};\n\nexport class _HdRequestToDee extends Component<\n  HeadTeacherRequestToDeeProps,\n  HeadTeacherRequestToDeeState\n> {\n  constructor(props: HeadTeacherRequestToDeeProps) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      seleQualification: \"All\",\n      qualification: [],\n      totalRequested: 0,\n      seacrhValue: \"\",\n      alert: {\n        target: null,\n        msg: \"\",\n      },\n      currentPostsData: [],\n      allFliteredData: [],\n      requestPosts: [],\n      addSchoolPositions: false,\n      schoolPositions: [],\n      normalSchoolPositions: null,\n      sendPostRequest: true,\n      addedRequests: [],\n      postRequestReasons: [],\n      loading: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  getPostRequestReasons = async () => {\n    setAxiosToken();\n    this.setLoading(true);\n    try {\n      const res = await axios.get<PostRequestReasons[]>(\n        `${APP_URL}/postRequestReasons`\n      );\n      this.setState({ postRequestReasons: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n    this.setLoading(false);\n  };\n\n  // Find Existing teachers\n  existingTeachersCount = (schoolPositions: PositionsOnSchool[]) => {\n    let n = 0;\n    if (this.state.normalSchoolPositions !== null) {\n      for (let position of this.state.normalSchoolPositions) {\n        if (\n          this.state.normalSchoolPositions.find(\n            (test) => test.position_code === position.position_code\n          ) !== undefined\n        ) {\n          n += parseInt(\n            this.state.normalSchoolPositions.find(\n              (test) => test.position_code === position.position_code\n            )!.total_on_position\n          );\n        }\n      }\n    }\n    return n;\n  };\n\n  // Find Existing teachers\n  existingTeachersCount1 = (schoolPositions: PositionsOnSchool[]) => {\n    let n = 0;\n    if (this.state.normalSchoolPositions !== null) {\n      for (let position of schoolPositions) {\n        if (\n          this.state.normalSchoolPositions.find(\n            (test) => test.position_code === position.position_code\n          ) !== undefined\n        ) {\n          n += parseInt(\n            this.state.normalSchoolPositions.find(\n              (test) => test.position_code === position.position_code\n            )!.total_on_position\n          );\n        }\n      }\n    }\n    return n;\n  };\n\n  newAddedTeachersCount = (addedNewTeachers: PositionsOnSchool[]) => {\n    let nn = 0;\n    for (let new_position of addedNewTeachers) {\n      if (new_position.head_teacher_post_request !== undefined) {\n        nn += parseInt(new_position.head_teacher_post_request);\n      }\n    }\n    return nn;\n  };\n\n  TotalAllowedTeachersCount = (addedNewTeachers: PositionsOnSchool[]) => {\n    let nn = 0;\n    for (let new_position of addedNewTeachers) {\n      if (\n        new_position.dde_post_distribution !== null &&\n        new_position.dde_post_distribution !== undefined\n      ) {\n        nn += parseInt(new_position.dde_post_distribution);\n      }\n    }\n    return nn;\n  };\n\n  // count requested posts\n  countRequestedPosts = (allRequest: headTeacherRequestSubmit) => {\n    const sumWithInitial = allRequest.reduce(\n      (previousValue, currentValue) =>\n        previousValue + parseInt(currentValue.head_teacher_post_request),\n      0\n    );\n    this.setState({ totalRequested: sumWithInitial });\n  };\n\n  // clear alert\n  cleanAlert = () => {\n    setTimeout(() => {\n      this.setState({\n        alert: {\n          target: null,\n          msg: \"\",\n        },\n      });\n    }, 4000);\n  };\n  // Get school positions requests\n  getSchoolPositions = async (\n    school_code: string,\n    academic_year_id: string\n  ) => {\n    setAxiosToken();\n    this.setLoading(true);\n    try {\n      const data = await axios.get<SchoolPositionsCombination>(\n        `${APP_URL}/schoolpostrequest/request/${school_code}/${academic_year_id}`\n      );\n      console.log(\"RES DATA: \", data.data);\n      if (\n        this.getNotInitializedPosts(\n          data.data.school_positions,\n          data.data.school_post_requests\n        ).length > 0\n      ) {\n        this.initializePosts(\n          data.data.school_positions,\n          data.data.school_post_requests\n        );\n      } else {\n        this.setState({ normalSchoolPositions: data.data.school_positions });\n        this.setState({\n          schoolPositions: data.data.school_post_requests,\n        });\n      }\n    } catch (error: any) {\n      console.log(\"Err: \", { ...error });\n      this.cleanAlert();\n    }\n    this.setLoading(false);\n  };\n  TotalVacantPosts = (elements: PositionsOnSchool[]): number => {\n    let total = 0;\n    if (this.state.normalSchoolPositions !== null) {\n      for (let item of elements) {\n        total += vacantPosts(\n          this.state.normalSchoolPositions,\n          this.state.schoolPositions,\n          item\n        );\n      }\n    }\n    return total;\n  };\n\n  sendFinalPostRequest = async (addedRequests: PostRequestItem[]) => {\n    if (addedRequests.length === 0) {\n      return this.setState({\n        alert: {\n          target: \"main-error\",\n          msg: \"No request found!\",\n        },\n      });\n    } else if (\n      addedRequests[0].head_teacher_post_request === \"\" ||\n      parseInt(addedRequests[0].head_teacher_post_request) < 0\n    ) {\n      return this.setState({\n        alert: {\n          target: \"main-error\",\n          msg: \"Please type number of requests greater than 0\",\n        },\n      });\n    }\n\n    this.setLoading(true);\n    try {\n      setAxiosToken();\n      // await this.getSchoolPostsRequests();\n      await axios.post<PostRequestItem[]>(\n        `${APP_URL}/schoolpostrequest/htrequest`,\n        addedRequests\n      );\n      console.log(\"Sent data: \", addedRequests);\n      let test = this.state.schoolPositions.find(\n        (itm) => itm.position_code === addedRequests[0].position_code\n      );\n      if (test === undefined) {\n        // reload school positions\n        this.getSchoolPositions(\n          addedRequests[0].school_code,\n          addedRequests[0].academic_year_id\n        );\n      } else {\n        let current: PositionsOnSchool[] = [];\n        for (let item of this.state.schoolPositions) {\n          if (item.position_code === addedRequests[0].position_code) {\n            current.push({\n              qualification_name: item.qualification_name,\n              position_name: item.position_name,\n              post_request_id: item.post_request_id,\n              academic_calendar_id: item.academic_calendar_id,\n              school_code: item.school_code,\n              position_code: item.position_code,\n              qualification_id: item.qualification_id,\n              head_teacher_id: item.head_teacher_id,\n              head_teacher_post_request:\n                addedRequests[0].head_teacher_post_request.toString(),\n              head_teacher_reason_id: addedRequests[0].head_teacher_reason_id,\n              dde_id_request: item.dde_id_request,\n              dde_post_request: item.dde_post_request,\n              dde_id_distribution: item.dde_id_distribution,\n              dde_post_distribution: item.dde_post_distribution,\n              dde_distribution_comment: item.dde_distribution_comment,\n              district_code: item.district_code,\n              created_by: item.created_by,\n              existing_post: item.existing_post,\n              school_level_name: item.school_level_name,\n              total_on_position: item.total_on_position,\n              school_has_position_id: item.school_has_position_id,\n            });\n          } else {\n            current.push(item);\n          }\n        }\n        this.state.normalSchoolPositions !== null &&\n          this.getNotInitializedPosts(\n            this.state.normalSchoolPositions,\n            this.state.schoolPositions\n          ).length === 0 &&\n          this.setState({\n            alert: {\n              target: \"main-success\",\n              msg: \"Posts Request Submitted Successfully!\",\n            },\n          });\n        this.setState({ schoolPositions: current });\n      }\n      this.cleanAlert();\n      this.countRequestedPosts([]);\n    } catch (error: any) {\n      console.log(\"Erro post: \", { ...error });\n      this.cleanAlert();\n      this.setState({\n        alert: {\n          target: \"main-error\",\n          msg: errorToText(error),\n        },\n      });\n    }\n    this.setLoading(false);\n  };\n  // get updated value\n  getUpdatedValue = (number: string, position_code: string) => {\n    const updatedPosts = this.state.requestPosts.map((element) => {\n      if (element.position_code === position_code) {\n        element.head_teacher_post_request = number;\n      }\n      return element;\n    });\n    this.setState({ requestPosts: updatedPosts });\n    this.countRequestedPosts(this.state.requestPosts);\n  };\n\n  // get new value\n  getValue = (number: string, position_id: string) => {\n    const updatedPosts = this.state.currentPostsData.filter(\n      (element) => element.position_id === position_id\n    )[0];\n    const district_code_split = `${this.props.auth.school?.school_code[0]}${this.props.auth.school?.school_code[1]}`;\n    if (\n      updatedPosts &&\n      district_code_split &&\n      this.props.auth.school?.school_code &&\n      this.props.auth.user?.user_id\n    ) {\n      const newRequestdPosts = {\n        academic_calendar_id:\n          this.props.basic.academic_calender?.academic_year_id || \"1\",\n        school_code: this.props.auth.school.school_code,\n        position_name: updatedPosts.position_name,\n        qualification_name: updatedPosts.qualification_name,\n        position_code: updatedPosts.position_code,\n        qualification_id: updatedPosts.qualification_id,\n        head_teacher_id: this.props.auth.user.user_id,\n        head_teacher_post_request: number,\n        head_teacher_reason_id: \"7\",\n        district_code: district_code_split,\n      };\n      const NewUpdatedRequest = [...this.state.requestPosts, newRequestdPosts];\n      this.setState({ requestPosts: NewUpdatedRequest });\n      this.countRequestedPosts(NewUpdatedRequest);\n      this.setState({ requestPosts: NewUpdatedRequest });\n    }\n  };\n\n  filterData = (): PositionsOnSchool[] => {\n    const allData = [\n      ...(this.state.normalSchoolPositions === null\n        ? []\n        : this.state.normalSchoolPositions.filter(\n            (itm) =>\n              itm.position_code !==\n              this.state.schoolPositions.find(\n                (test) => test.position_code === itm.position_code\n              )?.position_code\n          )),\n      ...this.state.schoolPositions,\n    ];\n    const res =\n      this.state.seleQualification === \"All\"\n        ? allData\n        : allData.filter(\n            (element) =>\n              element.qualification_id === this.state.seleQualification\n          );\n    return search(res, this.state.seacrhValue);\n  };\n\n  componentDidMount = () => {\n    // this.getQualification();\n    if (this.props.basic.positions === null) {\n      this.props.FC_GetAllPositions((status: boolean, msg: string) => {\n        this.setLoading(true);\n        if (status === false) {\n          this.setState({\n            alert: {\n              target: \"main-error\",\n              msg: msg,\n            },\n          });\n        }\n        this.setLoading(false);\n      });\n    }\n\n    if (this.props.auth.school && this.props.basic.academic_calender) {\n      this.getSchoolPositions(\n        this.props.auth.school.school_code,\n        this.props.basic.academic_calender.academic_year_id\n      );\n    }\n    // if (this.state.postsRequests.length === 0) {\n    //   this.getSchoolPostsRequests();\n    // }\n    if (this.state.postRequestReasons.length === 0) {\n      this.getPostRequestReasons();\n    }\n  };\n\n  addPostRequestItem = (data: {\n    position: PositionsOnSchool;\n    reason: string;\n    postsNumber: number;\n  }) => {\n    this.props.basic.academic_calender &&\n      this.props.auth.user &&\n      this.props.auth.district &&\n      this.setState({\n        addedRequests: [\n          ...this.state.addedRequests.filter(\n            (itm) => itm.position_code !== data.position.position_code\n          ),\n          {\n            academic_year_id:\n              this.props.basic.academic_calender.academic_year_id,\n            school_code: data.position.school_code,\n            position_code: data.position.position_code,\n            qualification_id: data.position.qualification_id,\n            head_teacher_id: this.props.auth.user.user_id,\n            head_teacher_post_request: data.postsNumber.toString(),\n            existing_post:\n              data.position.existing_post === undefined\n                ? \"0\"\n                : data.position.existing_post,\n            head_teacher_reason_id: data.reason,\n            district_code: this.props.auth.district.district_code,\n          },\n        ],\n      });\n  };\n\n  getNotInitializedPosts = (\n    normalSchoolPositions: PositionsOnSchool[],\n    schoolPositions: PositionsOnSchool[]\n  ): PositionsOnSchool[] => {\n    let res: PositionsOnSchool[] = [];\n    for (let item of normalSchoolPositions) {\n      let check = schoolPositions.find(\n        (itm) => itm.position_code === item.position_code\n      );\n      if (check === undefined) {\n        res.push(item);\n      }\n    }\n    return res;\n  };\n\n  initializePosts = (\n    normalSchoolPositions: PositionsOnSchool[],\n    schoolPositions: PositionsOnSchool[]\n  ) => {\n    let request: PostRequestItem[] = [];\n    for (let item of normalSchoolPositions) {\n      request = [\n        ...request,\n        ...this.getPostRequestItem({\n          position: item,\n          reason: \"7\",\n          postsNumber: 0,\n        }),\n      ];\n    }\n    console.log(\"Requests: \", request);\n    this.sendFinalPostRequest(request);\n    console.log(\"Testing reset data: \", {\n      schoolPositions: schoolPositions,\n      normalSchoolPositions: normalSchoolPositions,\n    });\n    // this.setState({ schoolPositions: schoolPositions });\n    // this.setState({ normalSchoolPositions: normalSchoolPositions });\n  };\n\n  getPostRequestItem = (data: {\n    position: PositionsOnSchool;\n    reason: string;\n    postsNumber: number;\n  }): PostRequestItem[] => {\n    let res: PostRequestItem[] = [];\n    if (this.props.basic.academic_calender && this.props.auth.user) {\n      res = [\n        ...this.state.addedRequests.filter(\n          (itm) => itm.position_code !== data.position.position_code\n        ),\n        {\n          academic_year_id: this.props.basic.academic_calender.academic_year_id,\n          school_code: data.position.school_code,\n          position_code: data.position.position_code,\n          qualification_id: data.position.qualification_id,\n          head_teacher_id: this.props.auth.user.user_id,\n          head_teacher_post_request: data.postsNumber.toString(),\n          existing_post: data.position.total_on_position,\n          head_teacher_reason_id: data.reason,\n          district_code: data.position.school_code.substring(0, 2),\n        },\n      ];\n    }\n    return res;\n  };\n  render() {\n    return (\n      <>\n        <Container\n          title=\"Posts requests\"\n          subTitle=\"School posts requests management\"\n          className=\"h-screen\"\n        >\n          {/* Check not initialized posts */}\n          {this.state.normalSchoolPositions !== null &&\n            this.getNotInitializedPosts(\n              this.state.normalSchoolPositions,\n              this.state.schoolPositions\n            ).length !== 0 && (\n              <div className=\"fixed bg-black bg-opacity-50 h-full w-full top-0 left-0 z-50 flex flex-row items-center justify-center\">\n                <div className=\"bg-white rounded-md p-10 text-center flex flex-col bg-opacity-80\">\n                  <span className=\"text-2xl\">Initializing new positions</span>\n                  <span className=\"text-base text-gray-500\">\n                    Please wait...\n                  </span>\n                </div>\n              </div>\n            )}\n          {this.state.alert.target === \"main-success\" && (\n            <div className=\"mb-20\">\n              <Alert theme=\"success\">{this.state.alert.msg}</Alert>\n            </div>\n          )}\n          {this.state.alert.target === \"main-error\" && (\n            <div className=\"mb-20\">\n              <Alert theme=\"danger\">{this.state.alert.msg}</Alert>\n            </div>\n          )}\n          {this.props.basic.positions === null ? (\n            <div className=\"flex flex-col justify-center items-center bg-gray-100 rounded-md p-5 w-full mt-4\">\n              <Loading />\n              <div className=\"text-xl text-gray-800 animate-pulse\">\n                <span>Loading positions...</span>\n              </div>\n            </div>\n          ) : this.state.addSchoolPositions === true &&\n            this.props.basic.positions !== null ? (\n            <div className=\"mt-4 border rounded\">\n              <AddSchoolPositions\n                auth={this.props.auth}\n                positions={this.props.basic.positions}\n                schoolPositions={this.state.schoolPositions}\n                appendPositionsToSchool={(\n                  data: SchoolPositionApiResponse[]\n                ) => {\n                  if (\n                    this.props.auth.school &&\n                    this.props.basic.academic_calender\n                  ) {\n                    this.getSchoolPositions(\n                      this.props.auth.school.school_code,\n                      this.props.basic.academic_calender.academic_year_id\n                    );\n                  }\n                }}\n                removePositionsToSchool={(school_has_position_id: string) => {\n                  if (\n                    this.props.auth.school &&\n                    this.props.basic.academic_calender\n                  ) {\n                    this.getSchoolPositions(\n                      this.props.auth.school.school_code,\n                      this.props.basic.academic_calender.academic_year_id\n                    );\n                  }\n                }}\n                close={() => {\n                  this.setState({ addSchoolPositions: false });\n                }}\n              />\n            </div>\n          ) : this.state.sendPostRequest === false ? (\n            <div></div>\n          ) : (\n            <div className=\"\">\n              {/* table */}\n              <div className=\"flex flex-row w-full justify-between mt-3 -mb-3\">\n                <div className=\"text-xl uppercase mb-2\">\n                  LIST OF SCHOOL POSITIONS\n                </div>\n                {/* Total Post */}\n                <div className=\"\">\n                  <div className=\"flex flex-row gap-5 md:-mt-12\">\n                    <div>\n                      <div className=\"flex flex-row gap-5 bg-blue-50 -mt-3 mb-3 rounded-md pt-2 px-4\">\n                        <div className=\"mb-3 text-center\">\n                          <div className=\"text-sm text-gray-900 -mt-1\">\n                            Existing teachers\n                          </div>\n                          <div className=\"text-4xl font-bold text-gray-900\">\n                            {this.existingTeachersCount(\n                              this.state.schoolPositions\n                            ) < 10\n                              ? 0\n                              : \"\"}\n                            {this.existingTeachersCount(\n                              this.state.schoolPositions\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-sm text-accent-900 -mt-1\">\n                            Total vacants\n                          </div>\n                          <div className=\"text-4xl font-bold text-accent-900\">\n                            {this.newAddedTeachersCount(\n                              this.state.schoolPositions\n                            ) < 10\n                              ? 0\n                              : \"\"}\n                            {this.newAddedTeachersCount(\n                              this.state.schoolPositions\n                            )}\n                          </div>\n                        </div>\n                        {/* <div className=\"border-green-600 text-center\">\n                          <div className=\"text-sm text-green-600 -mt-1\">\n                            <span>Total allowed posts</span>\n                          </div>\n                          <div className=\"text-4xl font-bold text-green-600\">\n                            {this.TotalAllowedTeachersCount(\n                              this.state.schoolPositions\n                            ) < 10\n                              ? 0\n                              : \"\"}\n                            {this.TotalAllowedTeachersCount(\n                              this.state.schoolPositions\n                            )}\n                          </div>\n                        </div> */}\n                        {/* <div>\n                          {this.state.selected === null && (\n                            <div\n                              onClick={() => this.sendFinalPostRequest()}\n                              title=\"Click to submit all added requests\"\n                              className=\"bg-primary-800 hover:bg-primary-900 cursor-pointer text-white font-bold px-4 py-2 rounded text-center w-max animate__animated animate__zoomIn\"\n                            >\n                              Send requests\n                            </div>\n                          )}\n                        </div> */}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loading === true ||\n              this.state.normalSchoolPositions === null ? (\n                <div className=\"flex flex-col items-center justify-center bg-gray-100 rounded-lg p-5 mt-5\">\n                  <Loading />\n                  <div className=\"text-2xl\">Loading, please wait...</div>\n                </div>\n              ) : (\n                <div className=\"flex flex-row gap-2\">\n                  <div className=\"flex-1 bg-white dark:bg-dark-800 shadow-lg rounded-md p-2 pt-0 mb-10\">\n                    <div className=\"flex flex-row items-center w-full\">\n                      <div className=\"flex-1\">\n                        <TextInput\n                          onChange={(e) =>\n                            this.setState({ seacrhValue: e.target.value })\n                          }\n                          error={\"\"}\n                          placeholder=\"Search Post Here...\"\n                          value={this.state.seacrhValue}\n                          type=\"search\"\n                          name=\"post\"\n                          label=\"Search\"\n                          size={\"sm\"}\n                        />\n                      </div>\n                      <div className=\"flex-2 relative inline-block mt-6 ml-2\">\n                        <select\n                          value={this.state.seleQualification}\n                          placeholder=\"All\"\n                          className=\"block appearance-none w-full bg-white border-2 border-primary-800 hover:border-black px-4 py-2 pr-8 rounded  leading-tight focus:outline-none md:w-full dark:text-white dark:bg-primary-900 \"\n                          onChange={(e) => {\n                            this.setState({\n                              seleQualification: e.target.value,\n                            });\n                          }}\n                        >\n                          <option value={\"All\"}>All</option>\n                          {this.props.basic.qualifications.map((element) => {\n                            return (\n                              <option\n                                key={element.qualification_id}\n                                value={element.qualification_id}\n                              >\n                                {element.qualification_name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                          <FaAngleDown className=\"fill-current h-4 w-4\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"w-full h-full\">\n                      <div className=\"w-full h-full overflow-x-scroll\">\n                        <table className=\"h-auto\">\n                          <thead>\n                            <tr>\n                              <th className=\"border text-center px-2\">#</th>\n                              <th\n                                className=\"text-left border px-2\"\n                                style={{ width: \"2000px\" }}\n                              >\n                                Position\n                              </th>\n                              <th className=\"text-center border px-2\">\n                                Qualification\n                              </th>\n                              <th className=\"text-center border w-40\">\n                                Existing teachers\n                              </th>\n                              <th className=\"text-center text-blue-800 bg-blue-50 border border-blue-100 w-48\">\n                                HT new posts requests\n                              </th>\n                              <th className=\"text-center border text-green-800 w-48\">\n                                Approved posts by DDE\n                              </th>\n                              <th className=\"text-center border text-accent-900 w-48\">\n                                Total posts\n                              </th>\n\n                              <th className=\"text-center border  w-48\">\n                                Vacant posts\n                              </th>\n                              <th className=\"text-center border w-52\">\n                                Comment\n                              </th>\n                              {/* <th className=\"text-left\">Action</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.loading === false &&\n                              this.state.normalSchoolPositions !== null &&\n                              this.state.normalSchoolPositions.length === 0 && (\n                                <tr>\n                                  <td className=\"text-center p-2\" colSpan={9}>\n                                    <div className=\"bg-gray-100 rounded-md p-6\">\n                                      <div className=\"text-2xl font-extrabold text-center\">\n                                        No positions Found\n                                      </div>\n                                      <div className=\"text-base text-center\">\n                                        There are no positions assigned to the\n                                        school{\" \"}\n                                        {this.props.auth.school?.school_name}\n                                      </div>\n                                      <div className=\"flex justify-center w-full mt-3\">\n                                        <div\n                                          onClick={() => {\n                                            this.setState({\n                                              addSchoolPositions: true,\n                                            });\n                                          }}\n                                          className=\"btn bg-yellow-50 border-2 border-yellow-500 hover:bg-accent-900 w-max rounded-md px-4 py-2 text-base font-bold hover:text-white cursor-pointer\"\n                                        >\n                                          Add positions\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              )}\n                            {this.filterData().map((element, i) => {\n                              let index = i + 1;\n                              return (\n                                <Fragment key={index}>\n                                  <tr\n                                    className={`rounded ${\n                                      element.position_code ===\n                                      this.state.selected\n                                        ? \"bg-yellow-50 font-bold\"\n                                        : \"\"\n                                    } ${\n                                      this.state.addedRequests.find(\n                                        (itm) =>\n                                          itm.position_code ===\n                                          element.position_code\n                                      ) !== undefined\n                                        ? \"hover:bg-blue-50 hover:text-primary-800\"\n                                        : \"hover:bg-gray-50 hover:text-accent-900\"\n                                    }  hover:text-dark-900 group`}\n                                  >\n                                    <td className=\"p-2 border text-center\">\n                                      {index}\n                                    </td>\n                                    <td className=\"p-2 border\">\n                                      <div className=\"flex flex-col\">\n                                        <span className=\"text-base\">\n                                          {element.position_name}\n                                        </span>\n                                        {/* <span className=\"text-gray-500 text-sm group-hover:text-black\">\n                                          School level:{\" \"}\n                                          <span className=\"font-bold\">\n                                            {element.school_level_name}\n                                          </span>\n                                        </span> */}\n                                      </div>\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {element.qualification_name}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {this.state.normalSchoolPositions &&\n                                        this.state.normalSchoolPositions.find(\n                                          (test) =>\n                                            test.position_code ===\n                                            element.position_code\n                                        )?.total_on_position}\n                                    </td>\n\n                                    {element.position_code ===\n                                    this.state.selected ? (\n                                      <td className=\" border  w-12 relative\">\n                                        {this.state.normalSchoolPositions &&\n                                          this.state.normalSchoolPositions.find(\n                                            (itm) =>\n                                              itm.position_code ===\n                                              element.position_code\n                                          ) && (\n                                            <AddActionInput\n                                              postRequestReasons={\n                                                this.state.postRequestReasons\n                                              }\n                                              getPostRequestItem={\n                                                this.getPostRequestItem\n                                              }\n                                              close={() => {\n                                                this.setState({\n                                                  selected: null,\n                                                });\n                                              }}\n                                              currentRequests={\n                                                element.head_teacher_post_request ===\n                                                undefined\n                                                  ? 0\n                                                  : element.head_teacher_post_request ===\n                                                    null\n                                                  ? 0\n                                                  : parseInt(\n                                                      element.head_teacher_post_request\n                                                    )\n                                              }\n                                              submitRequest={\n                                                this.sendFinalPostRequest\n                                              }\n                                              position={\n                                                this.state.normalSchoolPositions.find(\n                                                  (itm) =>\n                                                    itm.position_code ===\n                                                    element.position_code\n                                                )!\n                                              }\n                                            />\n                                          )}\n                                      </td>\n                                    ) : (\n                                      <td\n                                        className={`p-2 border-2 rounded ${\n                                          element.head_teacher_post_request ===\n                                          null\n                                            ? \"group-hover:bg-primary-800 border-primary-800\"\n                                            : \"group-hover:bg-blue-300 border-blue-300\"\n                                        } group-hover:text-black w-12 font-bold  bg-blue-100 hover:bg-blue-300 cursor-pointer text-center`}\n                                        onClick={(e) => {\n                                          this.setState({\n                                            selected: element.position_code,\n                                          });\n                                        }}\n                                      >\n                                        {element.head_teacher_post_request ===\n                                        undefined ? (\n                                          <span className=\"text-gray-400 group-hover:text-yellow-800\">\n                                            0\n                                          </span>\n                                        ) : element.head_teacher_post_request !==\n                                          null ? (\n                                          element.head_teacher_post_request\n                                        ) : (\n                                          <div\n                                            className={`w-full h-full rounded text-center text-blue-800 group-hover:text-white`}\n                                          >\n                                            Request\n                                          </div>\n                                        )}\n                                      </td>\n                                    )}\n\n                                    <td className=\"p-2 text-green-600 border font-bold text-center\">\n                                      {element.dde_post_distribution ===\n                                      undefined ? (\n                                        <span className=\"text-gray-400 group-hover:text-yellow-800\">\n                                          0\n                                        </span>\n                                      ) : element.dde_post_distribution ===\n                                        null ? (\n                                        0\n                                      ) : (\n                                        element.dde_post_distribution\n                                      )}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {totalItemPosts(\n                                        this.state.schoolPositions,\n                                        element\n                                      )}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {vacantPosts(\n                                        this.state.normalSchoolPositions ===\n                                          null\n                                          ? []\n                                          : this.state.normalSchoolPositions,\n                                        this.state.schoolPositions,\n                                        element\n                                      ) < 0 ? (\n                                        <span className=\"text-sm\"></span>\n                                      ) : (\n                                        vacantPosts(\n                                          this.state.normalSchoolPositions ===\n                                            null\n                                            ? []\n                                            : this.state.normalSchoolPositions,\n                                          this.state.schoolPositions,\n                                          element\n                                        )\n                                      )}\n                                    </td>\n                                    <td className=\"p-2 border text-center\">\n                                      {element.dde_distribution_comment}\n                                    </td>\n                                  </tr>\n                                </Fragment>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const HdRequestToDee = connect(mapStateToProps, {\n  FC_GetAllPositions,\n})(_HdRequestToDee);\n"],"sourceRoot":""}