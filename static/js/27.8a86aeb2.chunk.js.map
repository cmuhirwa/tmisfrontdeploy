{"version":3,"sources":["actions/transfer.action.ts","components/Inputs/TextArea.tsx","containers/RequestTransferUI/CardTransferRequest.tsx","containers/RequestTransferUI/RequestTransferUI.tsx"],"names":["FC_GetAllTransfers","callBack","dispatch","a","setAxiosToken","axios","get","APP_URL","res","console","log","getAllTransfers","type","ActionTypes","GET_ALL_TRANSFER","payload","data","errorToText","FC_GetMyTransfers","GET_MY_TRANSFER","FC_GetTransferReasons","GET_TRANSFER_REASON","FC_GetDistricts","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","error","FC_GetSchoolByDistrict_2","district_code","user_id","FC_RespondLeave","selectedUserId","comment","selectedFile","decision","doc_title","status","uploadingPercentage","msg","isEmptyOrSpaces","teacher_transfer_id","outgoing_status","outgoing_dde_comment","mayor_letter","RESPOND_TO_LEAVE","FC_RespondTransfer","approved_school","requested_status","approved_school_id","school_code","requested_comment","RESPOND_TO_TRANSFER","FC_GetAllLeaves","GET_ALL_LEAVES","TextArea","onChange","value","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","labelColor","size","className","htmlFor","InputSize","CardTransferRequest","number","title","description","theme","active","priority","onClick","_RequestTransferUI","props","componentDidMount","setState","loading_district","districts","target","selectDistrict","district","auth","user","selected_district","step","loading_schools","FC_GetFreeVacanciesByDistrictAndUser","schools","selectSchool","school","add","state","selected_schools","length","filter","sc","loadReasons","reasons","loading_reasons","FC_GetTransfersReasons","submitTransferRequest","basic","academic_calender","academic_year_id","distrct_from_id","district_to_id","requested_school_id","map","itm","school_from_id","teacher_comment","candidate_comment","teacher_reason_id","teacher_supporting_document","transfer_type","loading_submit_transfer","FC_SendTransferRequest","staff_code","transfer_success","selected_qualification","search","search_district","search_school","selected_reasons","this","Loading","Alert","fixed","DistrictResults","district_name","SchoolsResults","school_name","sector_name","DashboardContainer","full_name","Button","Heading","TextInput","e","dist","bind","selectedSchool","find","undefined","vacant_posts","loading","React","Component","RequestTransferUI","connect","placement"],"mappings":"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","file":"static/js/27.8a86aeb2.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface RespondToLeaveAction {\n  type: ActionTypes.RESPOND_TO_LEAVE;\n  payload: {\n    teacher_transfer_id: string;\n    outgoing_status: \"REJECTED\" | \"APPROVED\";\n    outgoing_dde_comment: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      console.log(\"=================FC_GetTransferReasons===================\");\n      console.log({ FC_GetTransferReasons: res });\n      console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n    console.log(\"=================FC_GetDistricts===================\");\n    console.log({ FC_GetDistricts: res });\n    console.log(\"=================FC_GetDistricts===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n    //   callBack(\n    //     false,\n    //     errorToText(error, () => {})\n    //   );\n  }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_RespondLeave = (\n  selectedUserId: string,\n  comment: string,\n  selectedFile: File,\n  decision: \"REJECTED\" | \"APPROVED\",\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    await FC_UploadFile(\n      selectedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        callBack(status, \"\");\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        console.log({ data });\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n        return;\n      }\n    );\n    if (!isEmptyOrSpaces(doc_title)) {\n      callBack(true, \"\");\n      const data = {\n        teacher_transfer_id: selectedUserId,\n        outgoing_status: decision,\n        outgoing_dde_comment: comment,\n        mayor_letter: doc_title,\n      };\n\n      console.log(\"==================*********************==================\");\n      console.log({ doc_title });\n      console.log(\"==================*********************==================\");\n\n      try {\n        setAxiosToken();\n        const res = await axios.post<string>(\n          `${APP_URL}/teachertransfers/outgoing`,\n          data\n        );\n        console.log(\"Uploaded document: \", res.data);\n        dispatch<RespondToLeaveAction>({\n          type: ActionTypes.RESPOND_TO_LEAVE,\n          payload: data,\n        });\n        callBack(false, \"\");\n        // console.log(\"Questions: \", res);\n      } catch (error: any) {\n        console.error(error);\n        callBack(false, errorToText(error));\n      }\n    }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype TextAreaProps = {\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst TextArea: FC<TextAreaProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n  size = \"md\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <textarea\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TextArea;\n","import React, { FC, ReactElement } from \"react\";\n\ntype CardTransferRequestProps = {\n  number: number;\n  title: string;\n  description: string;\n  theme: \"blue\" | \"green\" | \"gray\" | \"yellow\";\n  active: boolean;\n  priority: boolean;\n  onClick: () => void;\n};\n\nconst CardTransferRequest: FC<CardTransferRequestProps> = ({\n  number,\n  title,\n  description,\n  theme,\n  active,\n  priority,\n  onClick,\n}): ReactElement => {\n  /* function body */\n  return (\n    <div\n      onClick={onClick}\n      className={`p-2 rounded-t-md cursor-pointer border-b-4 flex flex-col text-center lg:text-left lg:flex-row items-center border-${theme}-500 ${\n        active === true ? `bg-${theme}-100` : \"\"\n      } ${priority === false ? \"opacity-60\" : \"\"}`}\n    >\n      <section\n        className={`p-2 lg:p-3 rounded-full border-4 ${\n          theme === \"yellow\" ? `bg-${theme}-500` : `bg-${theme}-500`\n        } 0 ${\n          theme === \"yellow\" ? `border-${theme}-600` : `border-${theme}-200`\n        }  ${\n          theme === \"yellow\" ? \"text-black\" : \"text-white\"\n        } w-9 h-9 lg:w-14 lg:h-14 flex items-center text-center`}\n      >\n        <h3 className=\"text-center w-full text-xl lg:text-3xl font-bold \">\n          {number}\n        </h3>\n      </section>\n      <section className=\"pl-2\">\n        <h3 className=\"lg:text-xl text-lg font-bold\">{title}</h3>\n        <p className=\"text-gray-400\">{description}</p>\n      </section>\n    </div>\n  );\n};\n\nexport default CardTransferRequest;\n","import React, { Fragment } from \"react\";\nimport { ImSad } from \"react-icons/im\";\nimport {\n  //   MdCancel,\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdCheckCircle,\n  MdOutlineArrowForward,\n  MdOutlineFilePresent,\n  MdSearch,\n} from \"react-icons/md\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetFreeVacanciesByDistrictAndUser,\n  FC_GetTransfersReasons,\n  FC_SendTransferRequest,\n  GetFreeVacanciesByDistrictAndUser_Interface,\n  Placement,\n  ReasonsTransfers,\n  SendTransferRequestInterface,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TextArea from \"../../components/Inputs/TextArea\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { search } from \"../../utils/functions\";\nimport CardTransferRequest from \"./CardTransferRequest\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n}\n\ninterface AppState {\n  loading_district: boolean;\n  error: {\n    target:\n      | \"main-success\"\n      | \"main-error\"\n      | \"error\"\n      | \"transfer-error\"\n      | \"transfer-success\"\n      | null;\n    msg: string;\n  };\n  districts: DistrictTypes[];\n  schools: GetFreeVacanciesByDistrictAndUser_Interface[];\n  selected_district: DistrictTypes | null;\n  loading_schools: boolean;\n  selected_qualification: string;\n  search: string;\n  step: number;\n  search_district: string;\n  search_school: string;\n  selected_schools: GetFreeVacanciesByDistrictAndUser_Interface[];\n  reasons: ReasonsTransfers[];\n  selected_reasons: ReasonsTransfers[];\n  loading_reasons: boolean;\n  candidate_comment: string;\n  transfer_success: boolean;\n  loading_submit_transfer: boolean;\n}\n\nclass _RequestTransferUI extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_schools: false,\n      loading_district: true,\n      districts: [],\n      schools: [],\n      selected_district: null,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      selected_qualification: \"\",\n      search: \"\",\n      step: 1,\n      search_district: \"\",\n      search_school: \"\",\n      selected_schools: [],\n      reasons: [],\n      selected_reasons: [],\n      loading_reasons: false,\n      candidate_comment: \"\",\n      transfer_success: false,\n      loading_submit_transfer: false,\n    };\n  }\n\n  componentDidMount = () => {\n    FC_GetDistricts((status, data, msg) => {\n      this.setState({\n        loading_district: false,\n        districts: data === null ? [] : data,\n        error:\n          data === null\n            ? {\n                target: \"main-error\",\n                msg: \"msg\",\n              }\n            : {\n                target: null,\n                msg: \"\",\n              },\n      });\n    });\n  };\n\n  selectDistrict = (district: DistrictTypes | null) => {\n    if (district !== null && this.props.auth.user) {\n      this.setState({\n        selected_district: district,\n        step: 2,\n        loading_schools: true,\n      });\n\n      FC_GetFreeVacanciesByDistrictAndUser(\n        district.district_code,\n        this.props.auth.user.user_id,\n        (status, data, error) => {\n          this.setState({\n            loading_schools: false,\n            schools: data,\n          });\n        }\n      );\n    }\n  };\n\n  selectSchool = (\n    school: GetFreeVacanciesByDistrictAndUser_Interface,\n    add: boolean = true\n  ) => {\n    if (this.state.selected_schools.length >= 3 && add) return;\n\n    if (add) {\n      this.setState({\n        selected_schools: [...this.state.selected_schools, school],\n      });\n    } else {\n      this.setState({\n        selected_schools: this.state.selected_schools.filter(\n          (sc) => sc.school_code !== school.school_code\n        ),\n      });\n    }\n  };\n\n  loadReasons = () => {\n    if (this.state.reasons.length <= 0) {\n      this.setState({\n        loading_reasons: true,\n      });\n      FC_GetTransfersReasons((status, data, error) => {\n        this.setState({\n          loading_reasons: false,\n          reasons: data,\n          error:\n            status === false\n              ? { msg: \"\", target: null }\n              : { target: \"error\", msg: error },\n        });\n      });\n    }\n  };\n\n  submitTransferRequest = () => {\n    if (\n      !this.props.basic.academic_calender ||\n      !this.props.auth ||\n      !this.props.auth.school ||\n      !this.state.selected_district ||\n      !this.props.auth.user\n    ) {\n      return this.setState({\n        error: {\n          target: \"transfer-error\",\n          msg: \"Incomplete profile info\",\n        },\n      });\n    }\n\n    let district = this.props.auth.school.school_code;\n\n    let data: SendTransferRequestInterface = {\n      academic_year_id: this.props.basic.academic_calender.academic_year_id,\n      distrct_from_id: district,\n      district_to_id: this.state.selected_district.district_code,\n      requested_school_id: this.state.selected_schools.map(\n        (itm) => itm.school_code\n      ),\n      school_from_id: this.props.auth.school.school_code,\n      teacher_comment: this.state.candidate_comment,\n      teacher_reason_id: [],\n      teacher_supporting_document: [],\n      transfer_type:\n        district !== this.state.selected_district.district_code\n          ? \"External\"\n          : \"Internal\",\n    };\n\n    this.setState({\n      loading_submit_transfer: true,\n    });\n    FC_SendTransferRequest(\n      data,\n      this.props.auth.user?.staff_code,\n      (status, data, msg) => {\n        console.log({ res: data });\n        if (status === true) {\n          this.setState({\n            loading_submit_transfer: false,\n            transfer_success: true,\n          });\n        } else {\n          this.setState({\n            loading_submit_transfer: false,\n            error: {\n              target: \"transfer-error\",\n              msg: msg,\n            },\n            // transfer_success: true,\n          });\n        }\n      }\n    );\n    // setTimeout(() => {\n\n    // }, 2000);\n  };\n\n  render() {\n    if (this.state.loading_district === true)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.error.target === \"main-error\") {\n      return (\n        <Alert theme=\"danger\" fixed>\n          {this.state.error.msg}\n        </Alert>\n      );\n    }\n\n    let DistrictResults: DistrictTypes[] = search(\n      this.state.districts,\n      this.state.search_district,\n      { district_code: true, district_name: true }\n    );\n\n    let SchoolsResults: GetFreeVacanciesByDistrictAndUser_Interface[] = search(\n      this.state.schools,\n      this.state.search_school,\n      { school_code: true, school_name: true, sector_name: true }\n    );\n\n    if (this.state.transfer_success === true)\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          <div className=\"py-4 text-center\">\n            <MdCheckCircle size={90} className=\"mx-auto text-green-500\" />\n\n            <h2 className=\"text-3xl pt-2 pb-1 text-green-600\">\n              Congratulation!\n            </h2>\n            <h3 className=\"font-bold text-lg\">\n              {this.props.auth.user?.full_name}\n            </h3>\n\n            <p className=\"text-gray-500 pb-4\">\n              Your transfer request has been submitted successfully{\" \"}\n            </p>\n\n            <Button theme=\"accent-light\" size=\"md\">\n              View transfer request\n            </Button>\n          </div>\n        </DashboardContainer>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <>\n          <div className=\"sticky top-14 z-50\">\n            <DashboardContainer>\n              <Heading className=\" py-2 lg:pb-3 lg:pt-2 font-light text-center text-gray-500\">\n                Apply for transfer\n              </Heading>\n\n              <div className=\"pt-2 grid  grid-cols-3 border p-2 rounded-md\">\n                {[\n                  {\n                    step: 1,\n                    title: \"Choose a district\",\n                    description:\n                      \"Select a district where you want to be transferred\",\n                  },\n                  {\n                    step: 2,\n                    title: \"Choose school\",\n                    description: \"Please choose at least 3 schools\",\n                  },\n                  {\n                    step: 3,\n                    title: \"Complete transfer\",\n                    description: \"Complete the information\",\n                  },\n                ].map((itm) => (\n                  <CardTransferRequest\n                    onClick={() => {\n                      if (this.state.loading_submit_transfer === true) return;\n\n                      if (itm.step === 1) {\n                        this.setState({\n                          step: 1,\n                          schools: [],\n                          loading_schools: false,\n                          selected_schools: [],\n                        });\n                      }\n\n                      // go back to step 2\n                      if (itm.step === 2) {\n                        if (this.state.step === 3)\n                          this.setState({\n                            step: 2,\n                          });\n                      }\n                    }}\n                    key={itm.step}\n                    active={itm.step === this.state.step}\n                    description={itm.description}\n                    number={itm.step}\n                    theme={\n                      itm.step === this.state.step\n                        ? \"yellow\"\n                        : this.state.step > itm.step\n                        ? \"green\"\n                        : \"gray\"\n                    }\n                    title={itm.title}\n                    priority={itm.step <= this.state.step}\n                  />\n                ))}\n              </div>\n            </DashboardContainer>\n          </div>\n\n          {this.state.step === 1 && (\n            <DashboardContainer>\n              <div>\n                <div className=\"p-2\">\n                  <TextInput\n                    error=\"\"\n                    label=\"\"\n                    name=\"\"\n                    onChange={(e) =>\n                      this.setState({ search_district: e.target.value })\n                    }\n                    placeholder=\"Search district by name\"\n                    value={this.state.search_district}\n                  />\n                </div>\n\n                {this.state.districts.length >= 1 ? (\n                  <>\n                    {DistrictResults.length <= 0 ? (\n                      <div className=\"py-4 \">\n                        <h2 className=\"text-lg\">No results found</h2>\n                        <p className=\"text-gray-500\">\n                          Please use a correct district name\n                        </p>\n                      </div>\n                    ) : (\n                      <div className=\"grid lg:grid-cols-2 gap-2 \">\n                        {DistrictResults.map((dist) => (\n                          <div\n                            onClick={this.selectDistrict.bind(this, dist)}\n                            key={dist.district_code}\n                            className=\"p-2 flex cursor-pointer rounded border  px-3 hover:text-yellow-600 hover:border-yellow-600 hover:bg-yellow-50 bg-white text-lg\"\n                          >\n                            <h4 className=\"flex-1 text-lg\">\n                              {\" \"}\n                              <b>{dist.district_name}</b> district\n                            </h4>\n                            <button className=\"\">\n                              <MdOutlineArrowForward />\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  <div>\n                    <h2 className=\"text-center p-4 text-gray-400  text-2xl\">\n                      Something went wrong, <br /> please try again later\n                    </h2>\n                  </div>\n                )}\n              </div>\n            </DashboardContainer>\n          )}\n\n          {this.state.step === 2 && (\n            <>\n              {this.state.loading_schools === true ? (\n                <div className=\"py-4 text-center\">\n                  <MdSearch\n                    size={\"160px\"}\n                    className=\"text-gray-600 mx-auto animate__animated animate__swing animate__slow animate__infinite\"\n                  />\n                  <h2 className=\"text-3xl text-gray-600 pb-2 pt-4\">\n                    Looking for the vacancies\n                  </h2>\n                  <p className=\"text-gray-500\">Please wait</p>\n                </div>\n              ) : (\n                <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n                  <div>\n                    <div className=\"p-2\">\n                      <TextInput\n                        error=\"\"\n                        label=\"\"\n                        name=\"\"\n                        onChange={(e) =>\n                          this.setState({ search_school: e.target.value })\n                        }\n                        placeholder=\"Search schools by name\"\n                        value={this.state.search_school}\n                      />\n                    </div>\n\n                    {this.state.schools.length >= 1 ? (\n                      <>\n                        {DistrictResults.length <= 0 ? (\n                          <div className=\"py-4 \">\n                            <h2 className=\"text-lg\">No results found</h2>\n                            <p className=\"text-gray-500\">\n                              Please use a correct school name\n                            </p>\n                          </div>\n                        ) : (\n                          <div className=\"grid lg:grid-cols-2 gap-2 pb-20\">\n                            {SchoolsResults.map((dist) => {\n                              let selectedSchool =\n                                this.state.selected_schools.find(\n                                  (itm) => itm.school_code === dist.school_code\n                                );\n\n                              return (\n                                <div\n                                  onClick={this.selectSchool.bind(\n                                    this,\n                                    dist,\n                                    selectedSchool === undefined ? true : false\n                                  )}\n                                  key={dist.school_code}\n                                  className={`pr-2 pl-1 py-1 flex cursor-pointer rounded border  px-3 ${\n                                    selectedSchool === undefined\n                                      ? \"hover:text-yellow-600 hover:border-yellow-600 hover:bg-yellow-50\"\n                                      : \"hover:text-green-600 border-green-600 bg-green-100\"\n                                  }  bg-white text-lg`}\n                                >\n                                  <button className=\"pr-2 text-3xl\">\n                                    {selectedSchool === undefined ? (\n                                      <MdCheckBoxOutlineBlank\n                                        className={`${\n                                          this.state.selected_schools.length >=\n                                          3\n                                            ? \"text-gray-400\"\n                                            : \"text-gray-800\"\n                                        }`}\n                                      />\n                                    ) : (\n                                      <MdCheckBox className=\"text-green-500\" />\n                                    )}\n                                  </button>\n\n                                  <section className=\"flex-1\">\n                                    <h4 className=\"\">\n                                      <span>{dist.school_code}</span>{\" \"}\n                                      <b>{dist.school_name}</b>\n                                    </h4>\n                                    <p className=\"text-sm text-gray-600\">\n                                      Sector: <b>{dist.sector_name}</b>\n                                    </p>\n                                  </section>\n                                  <section>\n                                    <p className=\"text-xs text-gray-400\">\n                                      Vacant{`(s)`}\n                                    </p>\n                                    <h4 className={` font-bold text-right   `}>\n                                      {dist.vacant_posts}\n                                    </h4>\n                                  </section>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        )}\n                      </>\n                    ) : (\n                      <div className=\"py-4 text-center\">\n                        <ImSad\n                          size={\"160px\"}\n                          className=\"text-gray-600 mx-auto animate__animated animate__zoomIn animate__slow \"\n                        />\n                        <h2 className=\"text-3xl text-gray-600 pb-2 pt-4\">\n                          Sorry, there is no vacancies for you in{\" \"}\n                          <b>{this.state.selected_district?.district_name}</b>\n                        </h2>\n                        <p className=\"text-gray-500\">\n                          Please look for another district, <br /> or try again\n                          next time\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </DashboardContainer>\n              )}\n\n              {this.state.selected_schools.length >= 1 && (\n                <div\n                  className={`p-2 bottom-0 items-center right-0 left-0 lg:pl-72 fixed bg-white border-t flex`}\n                >\n                  <section className=\"flex-1\">\n                    <label className=\"block px-0.5 m-0 text-sm\">\n                      Selected schools:{\" \"}\n                      <b>{this.state.selected_schools.length}</b>\n                    </label>\n                    <section className=\"pt-0.5\">\n                      {this.state.selected_schools.map((itm) => (\n                        <section\n                          key={itm.school_code}\n                          className=\"inline-block m-0.5 p-0.5 px-1 rounded-md bg-yellow-100 font-bold text-yellow-600 text-sm\"\n                        >\n                          {itm.school_name}\n                        </section>\n                      ))}\n                    </section>\n                  </section>\n                  <div className=\"\">\n                    <Button\n                      size=\"lg\"\n                      onClick={() => {\n                        this.setState({\n                          step: 3,\n                        });\n                        this.loadReasons();\n                      }}\n                    >\n                      Continue\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          {this.state.step === 3 && (\n            <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n              <div className=\"p-1\">\n                <h5 className=\"pt-2 pb-1 text-gray-500\">Required documents</h5>\n                <div className=\"border-b flex gap-2 pb-4\">\n                  {[\"Residence document\", \"Disability\"].map((itm) => (\n                    <div className=\"p-2 rounded border flex flex-1 items-center\">\n                      <section className=\"\">\n                        <MdOutlineFilePresent\n                          className=\"text-2xl text-accent-900 opacity-60\"\n                          size={50}\n                        />\n                      </section>\n                      <section className=\"flex-1 pl-1\">\n                        <h2 className=\"text-xl font-bold\">{itm}</h2>\n                        <h4 className=\"text-gray-400 text-sm\">\n                          Can be found on <b>Irembo</b>\n                        </h4>\n                      </section>\n                      <section>\n                        <MdCheckCircle className=\"text-green-500\" size={30} />\n                      </section>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"pt-3\">\n                  <h4>Add reason</h4>\n                  <TextArea\n                    onChange={(e) =>\n                      this.setState({ candidate_comment: e.target.value })\n                    }\n                    value={this.state.candidate_comment}\n                    error={\"\"}\n                    label={\"\"}\n                    placeholder={\"Explain your reasons\"}\n                    name={\"\"}\n                    disabled={this.state.loading_submit_transfer}\n                  />\n                </div>\n\n                <div className=\"text-right\">\n                  <Button\n                    size=\"lg\"\n                    onClick={this.submitTransferRequest}\n                    loading={this.state.loading_submit_transfer}\n                  >\n                    Submit transfer request\n                  </Button>\n                </div>\n              </div>\n            </DashboardContainer>\n          )}\n        </>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n} => {\n  return {\n    auth: auth,\n    basic: basic,\n    placement: placement,\n  };\n};\n\nexport const RequestTransferUI = connect(\n  mapStateToProps,\n  {}\n)(_RequestTransferUI);\n"],"sourceRoot":""}