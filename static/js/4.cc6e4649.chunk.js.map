{"version":3,"sources":["components/TableLoading/TableLoading.tsx","types/StaffTermination.ts","components/DownloadLink/DownloadLink.tsx","containers/HRTermination/HRTermination.tsx","containers/HRTermination/HRViewTermination.tsx","containers/HRTermination/SuspensionItems.tsx","containers/HRTermination/TerminationItems.tsx"],"names":["TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","TerminationStatusEnum","DownloadLink","this_URL","linkFor","APP_URL_FILE","first_id","APP_URL","last_id","href","target","rel","theme","size","title","HRTabsType","connect","FC_UpdateThisTermination","FC_GetAllTermination","useState","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","thisViewIsFor","thiTermination","requested_to_suspend_from","startDate","setStartDate","requested_to_suspend_to","endDate","setEndDate","uploadedFile","setUploadedFile","upload_percentage","setUpload_percentage","handleResponse","msg","SUSPENDED","isEmptyOrSpaces","doc_title","FC_UploadFile","status","uploadingPercentage","data","api_body","change_staff_status_id","decision","decided_to_suspend_from","decided_to_suspend_to","decided_by_comment","mayor_letter","setTimeout","console","log","fff","Alert","DashboardContainer","Heading","Button","onClick","setThiTermination","techer_name","school_name","school_code","reason_name","requested_by_comment","DATE","requested_by_date","PENDING","PENDING_SUSPENSION","REJECTED","decided_by_date","teacher_id","type","TERMINATED","style","width","TextInput","disabled","label","name","value","placeholder","onChange","e","error","InputFile","files","thisFile","onFileChange","accept","acceptAllEnum","PDF","TextArea","window","confirm","SuspensionItems","setThisStatus","setState","thisStatus","filterTerminations","allData","search","result","filter","item","state","this","suspensionItems","length","InputSelect","loading","colSpan","req","i","setThisTermination","Component","TerminationItems","terminations","HRTermination","setLoading","setError","thisTermination","getTerminationById","allTermination","terminationId","find","componentDidMount","Loading","thisPage","terminationTab","auth","basic"],"mappings":"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","file":"static/js/4.cc6e4649.chunk.js","sourcesContent":["import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export type APITerminationType = {\n  change_staff_status_id: string;\n  teacher_id: string;\n  techer_name: string;\n  school_code: string;\n  school_name: string;\n  reason_name: string;\n  requested_by_comment: string;\n  requested_to_suspend_from: string | null;\n  requested_to_suspend_to: string | null;\n  requested_by_date: string;\n  decided_by_comment: string | null;\n  decided_to_suspend_from: string | null;\n  decided_to_suspend_to: string | null;\n  decided_by_date: string | null;\n  mayor_letter: string | null;\n  status: TerminationStatusEnum;\n};\n\nexport type TerminationReasonType = {\n  termination_reason_id: string;\n  reason_name: string;\n};\n\nexport type SuspensionReasonType = {\n  suspension_reason_id: string;\n  reason_name: string;\n};\n\nexport enum TerminationStatusEnum {\n  PENDING = \"PENDING TERMINATION\",\n  TERMINATED = \"TERMINATED\",\n  PENDING_SUSPENSION = \"PENDING SUSPENTION\",\n  SUSPENDED = \"SUSPENDED\",\n  REJECTED = \"REJECTED\",\n}\n","import React from \"react\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport Button from \"../Buttons/Button\";\n\ntype DownloadLinkProps = {\n  linkFor: \"uploaded\" | \"termination\" | \"suspension\" | \"transfer\";\n  first_id: string | number;\n  last_id: string | number;\n  title: string;\n};\n\nconst DownloadLink: React.FC<DownloadLinkProps> = (props) => {\n  const this_URL: string =\n    props.linkFor === \"uploaded\"\n      ? `${APP_URL_FILE}/${props.first_id}`\n      : `${APP_URL}/generateletter/${props.linkFor}/${props.first_id}/${props.last_id}`;\n  return (\n    <a\n      href={this_URL}\n      // className=\"py-2 px-4 text-md w-max font-bold rounded bg-primary-800 hover:bg-opacity-90 text-white flex items-center gap-2\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button\n        theme=\"primary-light\"\n        size=\"sm\"\n        className=\"flex items-center gap-1\"\n      >\n        <ImAttachment />\n        <span>{props.title}</span>\n      </Button>\n    </a>\n  );\n};\n\nexport default DownloadLink;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, FC_GetAllTermination } from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { TerminationReducerType } from \"../../reducers/termination.reducer\";\nimport { APITerminationType } from \"../../types/StaffTermination\";\nimport { isEmptyOrSpaces } from \"../../utils/functions\";\nimport HRViewTermination from \"./HRViewTermination\";\nimport SuspensionItems from \"./SuspensionItems\";\nimport TerminationItems from \"./TerminationItems\";\n\nexport enum HRTabsType {\n  terminationTab = \"Staff Termination\",\n  suspensionTab = \"Staff Suspension\",\n}\n\ntype HRTerminationProps = {\n  auth: Auth;\n  basic: Basic;\n  terminations: TerminationReducerType;\n  FC_GetAllTermination: Function;\n  thisPage: HRTabsType;\n};\n\ntype HRTerminationState = {\n  loading: boolean;\n  error: {\n    target: \"requests-error\" | \"main-success\" | \"main-error\" | null;\n    msg: string;\n  };\n  thisTermination: APITerminationType | null;\n};\n\nclass HRTermination extends Component<HRTerminationProps, HRTerminationState> {\n  constructor(props: HRTerminationProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      thisTermination: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setError = (value: {\n    target: \"requests-error\" | \"main-success\" | \"main-error\" | null;\n    msg: string;\n  }) => {\n    this.setState({ error: value });\n  };\n\n  setThisTermination = (value: APITerminationType | null) => {\n    this.setState({ thisTermination: value });\n  };\n\n  getTerminationById = (\n    allTermination: APITerminationType[],\n    terminationId: string\n  ) => {\n    return allTermination.find(\n      (item) => item.change_staff_status_id === terminationId\n    );\n  };\n\n  componentDidMount = () => {\n    this.props.FC_GetAllTermination(\n      \"hr\",\n      (status: boolean, data: APITerminationType[] | null, msg: string) => {\n        this.setLoading(status);\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setError({\n            target: \"main-error\",\n            msg: msg,\n          });\n      }\n    );\n  };\n\n  render() {\n    if (this.state.loading)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.thisTermination === null ? (\n          <DashboardContainer>\n            <Heading>{this.props.thisPage}</Heading>\n            {/* <div className=\"flex flex-row items-center mt-2\">\n              {Object.values(HRTabsType).map((item, i) => (\n                <div\n                  key={i}\n                  onClick={() =>\n                    !this.state.loading && this.setSelectedTab(item)\n                  }\n                  className={`animate__animated ${\n                    this.state.selectedTab === item\n                      ? \"bg-accent-400 border-accent-900 text-accent-900 animate__zoomIn animate__faster\"\n                      : \"bg-white border-white text-gray-600\"\n                  } hover:bg-accent-100 px-4 py-2 ${\n                    this.state.loading ? \"cursor-wait\" : \"cursor-pointer\"\n                  } font-bold border-b-4 hover:border-accent-900 hover:text-accent-900 rounded-t mt-1 mx-1`}\n                >\n                  {item}\n                </div>\n              ))}\n            </div> */}\n            {this.props.thisPage === HRTabsType.terminationTab ? (\n              <TerminationItems\n                terminations={this.props.terminations.allTermination}\n                loading={this.state.loading}\n                setThisTermination={this.setThisTermination}\n              />\n            ) : (\n              <SuspensionItems\n                suspensionItems={this.props.terminations.allTermination}\n                loading={this.state.loading}\n                setThisTermination={this.setThisTermination}\n              />\n            )}\n          </DashboardContainer>\n        ) : (\n          <HRViewTermination\n            setThiTermination={this.setThisTermination}\n            thiTermination={\n              this.getTerminationById(\n                this.props.terminations.allTermination!,\n                this.state.thisTermination.change_staff_status_id\n              )!\n            }\n            thisViewIsFor={\n              this.props.thisPage === HRTabsType.terminationTab\n                ? \"termination\"\n                : \"suspension\"\n            }\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  terminations,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  terminations: TerminationReducerType;\n} => {\n  return { auth: auth, basic: basic, terminations };\n};\nexport default connect(mapStateToProps, { FC_GetAllTermination })(\n  HRTermination\n);\n","import React, { useState } from \"react\";\n// import { FaFileDownload } from \"react-icons/fa\";\n// import { ImAttachment } from \"react-icons/im\";\nimport { MdOutlineInfo, MdPersonOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_GetAllTermination,\n  FC_UpdateThisTermination,\n  TerminationResponseType,\n} from \"../../actions\";\nimport { FC_UploadFile } from \"../../actions/transfer.action\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport DownloadLink from \"../../components/DownloadLink/DownloadLink\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputFile, { acceptAllEnum } from \"../../components/Inputs/InputFile\";\nimport TextArea from \"../../components/Inputs/TextArea\";\nimport TextInput from \"../../components/Inputs/TextInput\";\n// import { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, isEmptyOrSpaces } from \"../../utils/functions\";\n\ntype HRViewTerminationProps = {\n  setThiTermination: (value: APITerminationType | null) => void;\n  thiTermination: APITerminationType;\n  FC_UpdateThisTermination: Function;\n  FC_GetAllTermination: Function;\n  thisViewIsFor: \"termination\" | \"suspension\";\n};\n\nconst HRViewTermination: React.FC<HRViewTerminationProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<TerminationStatusEnum | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element:\n      | \"main-success\"\n      | \"main-error\"\n      | \"action\"\n      | \"comment\"\n      | \"start_date\"\n      | \"end_date\"\n      | \"approved_doc\";\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const [startDate, setStartDate] = useState<string>(\n    props.thisViewIsFor === \"suspension\" &&\n      props.thiTermination.requested_to_suspend_from\n      ? props.thiTermination.requested_to_suspend_from\n      : \"\"\n  );\n  const [endDate, setEndDate] = useState<string>(\n    props.thisViewIsFor === \"suspension\" &&\n      props.thiTermination.requested_to_suspend_to\n      ? props.thiTermination.requested_to_suspend_to\n      : \"\"\n  );\n\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [upload_percentage, setUpload_percentage] = useState<number>(0);\n\n  // const doUpload = async (uploadedFile: File):string|undefined => {\n  //   let result= await FC_UploadFile(\n  //     uploadedFile,\n  //     (\n  //       status: boolean,\n  //       uploadingPercentage: number,\n  //       data: string | null,\n  //       msg: string\n  //     ) => {\n  //       setLoadingRequest(status);\n  //       if (status) setUpload_percentage(uploadingPercentage);\n  //       if (!status && isEmptyOrSpaces(msg) && data !== null) return data;\n  //       else if (!status && !isEmptyOrSpaces(msg))\n  //         setFormError({\n  //           element: \"main-error\",\n  //           msg: msg,\n  //         });\n  //     }\n  //   );\n  //   return result\n  // };\n\n  const handleResponse = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Suspension start-date validation\n    if (\n      props.thisViewIsFor === \"suspension\" &&\n      actionTaken === TerminationStatusEnum.SUSPENDED &&\n      isEmptyOrSpaces(startDate)\n    ) {\n      setFormError({\n        element: \"start_date\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Suspension end-date validation\n    if (\n      props.thisViewIsFor === \"suspension\" &&\n      actionTaken === TerminationStatusEnum.SUSPENDED &&\n      isEmptyOrSpaces(endDate)\n    ) {\n      setFormError({\n        element: \"end_date\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Document validation\n    if (uploadedFile === null) {\n      setFormError({\n        element: \"approved_doc\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Comment validation\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let doc_title: string = \"\";\n    await FC_UploadFile(\n      uploadedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        setLoadingRequest(status);\n        if (status) setUpload_percentage(uploadingPercentage);\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg))\n          setFormError({\n            element: \"main-error\",\n            msg: msg,\n          });\n      }\n    );\n\n    if (!isEmptyOrSpaces(doc_title)) {\n      const api_body: TerminationResponseType = {\n        change_staff_status_id: props.thiTermination.change_staff_status_id,\n        decision: actionTaken,\n        decided_to_suspend_from:\n          props.thisViewIsFor === \"suspension\" &&\n          actionTaken === TerminationStatusEnum.SUSPENDED\n            ? startDate\n            : \"\",\n        decided_to_suspend_to:\n          props.thisViewIsFor === \"suspension\" &&\n          actionTaken === TerminationStatusEnum.SUSPENDED\n            ? endDate\n            : \"\",\n        decided_by_comment: responseMsg,\n        mayor_letter: doc_title,\n      };\n      setLoadingRequest(true);\n      props.FC_UpdateThisTermination(\n        api_body,\n        (status: boolean, msg: string) => {\n          if (status)\n            setFormError({\n              element: \"main-success\",\n              msg: \"Response has been successful sent!\",\n            });\n          // props.FC_GetAllTermination(\n          //   \"hr\",\n          //   (status: boolean, data: APITerminationType[] | null, msg: string) => {\n          //     if (status)\n          //     else\n          //       setFormError({\n          //         element: \"main-error\",\n          //         msg: msg,\n          //       });\n          //   }\n          // );\n          else\n            setFormError({\n              element: \"main-error\",\n              msg: msg,\n            });\n        }\n      );\n\n      setActionTaken(null);\n      setTimeout(() => {\n        setFormError(null);\n        setResponseMsg(\"\");\n        // props.setThiTermination(null);\n      }, 2000);\n      setLoadingRequest(false);\n    }\n  };\n\n  const onFileChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setFormError(null);\n\n    // check if the file is available\n    if (e.target.files === null) {\n      setUploadedFile(null);\n      return setFormError({\n        msg: \"Please select a valid file\",\n        element: \"approved_doc\",\n      });\n    }\n\n    const thisFile = e.target.files[0];\n\n    // check the file type\n    if (thisFile.type !== \"application/pdf\") {\n      setUploadedFile(null);\n      return setFormError({\n        msg: \"The system accept pdf only\",\n        element: \"approved_doc\",\n      });\n    }\n\n    // check if the size is valued\n    if (thisFile.size <= 0) {\n      setUploadedFile(null);\n      return setFormError({\n        msg: `Invalid file, Please choose a real file`,\n        element: \"approved_doc\",\n      });\n    }\n\n    // Add image\n    setUploadedFile(thisFile);\n    setFormError(null);\n  };\n\n  console.log(\"==================props.thiTermination==================\");\n  console.log({ fff: props.thiTermination });\n  console.log(\"==================props.thiTermination==================\");\n\n  return (\n    <>\n      {formError && formError.element === \"main-success\" && (\n        <Alert theme=\"success\">{formError.msg}</Alert>\n      )}\n      {formError && formError.element === \"main-error\" && (\n        <Alert theme=\"danger\">{formError.msg}</Alert>\n      )}\n      <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>View {props.thisViewIsFor} progress</Heading>\n          </div>\n          <div className=\"\">\n            <Button\n              onClick={() => props.setThiTermination(null)}\n              theme=\"default\"\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n        {/* User info ============ */}\n        <div className=\"bg-white p-3 shadow-sm rounded-sm\">\n          <div className=\"flex items-center space-x-2 font-semibold text-gray-900 leading-8\">\n            <span className=\"text-primary-800\">\n              <MdPersonOutline size={25} />\n            </span>\n            <span className=\"tracking-wide\">Staff info</span>\n          </div>\n          <div className=\"text-gray-700\">\n            <div className=\"grid md:grid-cols-2 text-sm\">\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">Full Name</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.techer_name}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">School</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.school_name}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">School code</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.school_code}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* User comment ============ */}\n        <div className=\"bg-white p-3 border rounded\">\n          <div className=\"flex items-center px-2 py-1 bg-gray-200 rounded\">\n            <MdOutlineInfo className=\"w-8\" />\n            <p>{props.thiTermination.reason_name}</p>\n          </div>\n          <div className=\"flex flex-col mt-3\">\n            <span className=\"text-sm text-gray-500\">Comment:</span>\n            <p className=\"text-base\">\n              {props.thiTermination.requested_by_comment}\n            </p>\n          </div>\n          {props.thisViewIsFor === \"suspension\" && (\n            <div className=\"flex flex-row items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">Start date:</span>\n              <p className=\"text-base\">\n                {props.thiTermination.requested_to_suspend_from &&\n                !isEmptyOrSpaces(props.thiTermination.requested_to_suspend_from)\n                  ? DATE(props.thiTermination.requested_to_suspend_from)\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n          {props.thisViewIsFor === \"suspension\" && (\n            <div className=\"flex flex-row items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">End date:</span>\n              <p className=\"text-base\">\n                {props.thiTermination.requested_to_suspend_to &&\n                !isEmptyOrSpaces(props.thiTermination.requested_to_suspend_to)\n                  ? DATE(props.thiTermination.requested_to_suspend_to)\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center gap-2\">\n            <span className=\"text-sm text-gray-500\">Request date:</span>\n            <p className=\"text-base\">\n              {DATE(props.thiTermination.requested_by_date)}\n            </p>\n          </div>\n        </div>\n\n        {/* Feedback ============ */}\n        {props.thiTermination.status !== TerminationStatusEnum.PENDING &&\n          props.thiTermination.status !==\n            TerminationStatusEnum.PENDING_SUSPENSION && (\n            <section>\n              <span className=\"text-sm text-gray-500\">Feedback:</span>\n              <div className=\"bg-white p-3 border rounded\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm text-gray-500\">Decision:</span>\n                  <p className=\"text-base\">{props.thiTermination.status}</p>\n                </div>\n                {props.thisViewIsFor === \"suspension\" && (\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-gray-500\">Start date:</span>\n                    <p className=\"text-base\">\n                      {props.thiTermination.decided_to_suspend_from &&\n                      !isEmptyOrSpaces(\n                        props.thiTermination.decided_to_suspend_from\n                      )\n                        ? DATE(props.thiTermination.decided_to_suspend_from)\n                        : \"-\"}\n                    </p>\n                  </div>\n                )}\n                {props.thisViewIsFor === \"suspension\" && (\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-gray-500\">End date:</span>\n                    <p className=\"text-base\">\n                      {props.thiTermination.decided_to_suspend_to &&\n                      !isEmptyOrSpaces(\n                        props.thiTermination.decided_to_suspend_to\n                      )\n                        ? DATE(props.thiTermination.decided_to_suspend_to)\n                        : \"-\"}\n                    </p>\n                  </div>\n                )}\n                {props.thiTermination.status !==\n                  TerminationStatusEnum.REJECTED &&\n                  props.thiTermination.mayor_letter && (\n                    <DownloadLink\n                      linkFor=\"uploaded\"\n                      first_id={props.thiTermination.mayor_letter}\n                      last_id={\"\"}\n                      title={\"Confirmation letter\"}\n                    />\n                  )}\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm text-gray-500\">Comment:</span>\n                  <p className=\"text-base\">\n                    {props.thiTermination.decided_by_comment}\n                  </p>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <span className=\"text-sm text-gray-500\">Done on:</span>\n                  <p className=\"text-base\">\n                    {props.thiTermination.decided_by_date\n                      ? DATE(props.thiTermination.decided_by_date)\n                      : \"-\"}\n                  </p>\n                </div>\n              </div>\n            </section>\n          )}\n\n        {/* FOOTER INITIAL ========================================== */}\n        {!actionTaken && (\n          <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n            {/* SHOWING STATUS ===================================== */}\n            <div className=\"mx-4 my-4\">\n              <span\n                className={`${\n                  props.thiTermination.status ===\n                    TerminationStatusEnum.PENDING ||\n                  props.thiTermination.status ===\n                    TerminationStatusEnum.PENDING_SUSPENSION\n                    ? \"text-yellow-700\"\n                    : props.thiTermination.status ===\n                      TerminationStatusEnum.REJECTED\n                    ? \"text-red-700\"\n                    : \"text-green-700\"\n                } italic font-semibold`}\n              >\n                {props.thiTermination.status ===\n                  TerminationStatusEnum.PENDING ||\n                props.thiTermination.status ===\n                  TerminationStatusEnum.PENDING_SUSPENSION\n                  ? \"Pending\"\n                  : props.thiTermination.status ===\n                    TerminationStatusEnum.REJECTED\n                  ? \"Canceled\"\n                  : \"Confirmed\"}\n              </span>\n            </div>\n\n            {(props.thiTermination.status === TerminationStatusEnum.PENDING ||\n              props.thiTermination.status ===\n                TerminationStatusEnum.PENDING_SUSPENSION) && (\n              <div className=\"flex items-center gap-2 px-2\">\n                <DownloadLink\n                  first_id={props.thiTermination.change_staff_status_id}\n                  last_id={props.thiTermination.teacher_id}\n                  title={\n                    props.thisViewIsFor === \"suspension\"\n                      ? \"Suspension letter\"\n                      : \"Termination letter\"\n                  }\n                  linkFor={props.thisViewIsFor}\n                />\n                <Button\n                  theme=\"danger\"\n                  type=\"button\"\n                  onClick={() => {\n                    setActionTaken(TerminationStatusEnum.REJECTED);\n                  }}\n                >\n                  Reject\n                </Button>\n                <Button\n                  type=\"button\"\n                  theme=\"success\"\n                  onClick={() => {\n                    setActionTaken(\n                      props.thisViewIsFor === \"termination\"\n                        ? TerminationStatusEnum.TERMINATED\n                        : TerminationStatusEnum.SUSPENDED\n                    );\n                  }}\n                >\n                  Accept\n                </Button>\n              </div>\n            )}\n          </section>\n        )}\n        {/* END FOOTER INITIAL ========================================== */}\n\n        {actionTaken && (\n          <section className=\"my-3 overflow-x-auto\">\n            {upload_percentage !== 0 && (\n              <div className=\"p-2\">\n                <div className=\"bg-accent-400 appearance-none rounded w-full border-bg-accent-800 border-2 transition-all duration-500 ease-in-out\">\n                  <div\n                    className=\"bg-accent-800 rounded-sm text-white text-center py-2 transition-all duration-500 ease-in-out\"\n                    style={{\n                      width: upload_percentage + \"%\",\n                    }}\n                  >\n                    <span className=\"text-gray-700 mx-1\">Uploading...</span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"italic text-gray-700 text-base mx-5\">\n              Selected decision:{\" \"}\n              <span\n                className={`font-semibold text-lg ${\n                  actionTaken === TerminationStatusEnum.TERMINATED ||\n                  actionTaken === TerminationStatusEnum.SUSPENDED\n                    ? \"text-blue-700\"\n                    : \"text-yellow-800\"\n                }`}\n              >\n                {actionTaken === TerminationStatusEnum.TERMINATED ||\n                actionTaken === TerminationStatusEnum.SUSPENDED\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {/* right part */}\n            <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n              <div className=\"w-full px-2\">\n                {props.thisViewIsFor === \"suspension\" &&\n                  actionTaken === TerminationStatusEnum.SUSPENDED && (\n                    <div className=\"flex flex-wrap\">\n                      <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                        <TextInput\n                          disabled={loadingRequest}\n                          label=\"Start date\"\n                          name=\"start_date\"\n                          type=\"date\"\n                          value={startDate}\n                          placeholder={\"Suspension starting date\"}\n                          className=\"p-2\"\n                          onChange={(e) => {\n                            setStartDate(e.target.value);\n                            setFormError(null);\n                          }}\n                          error={\n                            formError && formError.element === \"start_date\"\n                              ? formError.msg\n                              : \"\"\n                          }\n                        />\n                      </div>\n\n                      <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                        <TextInput\n                          disabled={loadingRequest}\n                          label=\"End date\"\n                          name=\"end_date\"\n                          type=\"date\"\n                          value={endDate}\n                          placeholder={\"Suspension ending date\"}\n                          className=\"p-2\"\n                          onChange={(e) => {\n                            setEndDate(e.target.value);\n                            setFormError(null);\n                          }}\n                          error={\n                            formError && formError.element === \"end_date\"\n                              ? formError.msg\n                              : \"\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n                <div className=\"w-full py-1 px-2\">\n                  <InputFile\n                    disabled={loadingRequest}\n                    label=\"Suspension document\"\n                    name=\"approved_doc\"\n                    className=\"p-2\"\n                    onChange={(e) => onFileChange(e)}\n                    error={\n                      formError && formError.element === \"approved_doc\"\n                        ? formError.msg\n                        : \"\"\n                    }\n                    type={\"file\"}\n                    accept={acceptAllEnum.PDF}\n                  />\n                </div>\n                <div className=\"w-full py-1 px-2\">\n                  <TextArea\n                    disabled={loadingRequest}\n                    label=\"Comment\"\n                    name=\"comment\"\n                    value={responseMsg}\n                    placeholder={\"Reason of your decision...\"}\n                    className=\"p-2\"\n                    onChange={(e) => {\n                      setResponseMsg(e.target.value);\n                      setFormError(null);\n                    }}\n                    error={\n                      formError && formError.element === \"comment\"\n                        ? formError.msg\n                        : \"\"\n                    }\n                  />\n                </div>\n                <div className=\"flex items-center gap-1 max-w-full px-2 float-right\">\n                  <Button\n                    theme=\"default\"\n                    onClick={() => {\n                      setResponseMsg(\"\");\n                      setActionTaken(null);\n                      setFormError(null);\n                    }}\n                    disabled={loadingRequest}\n                  >\n                    <span>Back</span>\n                  </Button>\n                  <Button\n                    disabled={loadingRequest}\n                    theme=\"primary\"\n                    onClick={() =>\n                      window.confirm(\n                        `Are you sure you want to ${\n                          actionTaken === TerminationStatusEnum.TERMINATED\n                            ? \"terminate this staff?\"\n                            : actionTaken === TerminationStatusEnum.SUSPENDED\n                            ? \"suspend this staff?\"\n                            : \"rejected this request?\"\n                        }`\n                      ) && handleResponse()\n                    }\n                  >\n                    {loadingRequest ? (\n                      <div className=\"\">Loading...</div>\n                    ) : (\n                      <span>Confirm</span>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </div>\n            {/* end right part */}\n          </section>\n        )}\n      </DashboardContainer>\n    </>\n  );\n};\n\nexport default connect(null, {\n  FC_UpdateThisTermination,\n  FC_GetAllTermination,\n})(HRViewTermination);\n","import React, { Component } from \"react\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, search } from \"../../utils/functions\";\n\ntype SuspensionItemsProps = {\n  suspensionItems: APITerminationType[] | null;\n  loading: boolean;\n  setThisTermination: (value: APITerminationType | null) => void;\n};\ntype SuspensionItemsState = {\n  search: string;\n  thisStatus: TerminationStatusEnum | \"all\";\n};\n\nclass SuspensionItems extends Component<\n  SuspensionItemsProps,\n  SuspensionItemsState\n> {\n  constructor(props: SuspensionItemsProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      thisStatus: \"all\",\n    };\n  }\n\n  setThisStatus = (value: TerminationStatusEnum | \"all\") => {\n    this.setState({ thisStatus: value });\n  };\n\n  filterTerminations = (\n    allData: APITerminationType[],\n    search: TerminationStatusEnum | \"all\"\n  ): APITerminationType[] => {\n    let result: APITerminationType[] = allData;\n    result = allData.filter(\n      (item) =>\n        item.status !== TerminationStatusEnum.PENDING &&\n        item.status !== TerminationStatusEnum.TERMINATED &&\n        item.requested_to_suspend_from !== null\n    );\n    if (search !== \"all\") {\n      result = result.filter((item) => item.status === search);\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n          <div className=\"w-full sm:flex-1 pr-2\">\n            <TextInput\n              error=\"\"\n              label=\"Search\"\n              name=\"\"\n              type=\"search\"\n              onChange={(e) => this.setState({ search: e.target.value })}\n              placeholder=\"Search by name, reason, date, status\"\n              value={this.state.search}\n              size=\"sm\"\n              disabled={\n                this.props.suspensionItems === null ||\n                this.filterTerminations(\n                  this.props.suspensionItems,\n                  this.state.thisStatus\n                ).length === 0\n              }\n            />\n          </div>\n          <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                {\n                  title: \"Pending\",\n                  value: TerminationStatusEnum.PENDING_SUSPENSION,\n                },\n                {\n                  title: \"Suspended\",\n                  value: TerminationStatusEnum.SUSPENDED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div>\n          {/* {this.props.suspensionItems && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.suspensionItems,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n        </div>\n        <div className=\"my-3 w-full overflow-x-auto\">\n          <table className=\"w-full text-left table-auto\">\n            <thead>\n              <tr>\n                <th className=\"p-2\">#</th>\n                <th className=\"p-2\">Names</th>\n                <th className=\"p-2\">School</th>\n                <th className=\"p-2\">Reason</th>\n                <th className=\"p-2\">Date</th>\n                <th className=\"p-2\">Status</th>\n                <th className=\"p-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.loading ? (\n                <TableLoading cols={6} />\n              ) : this.props.suspensionItems === null ||\n                this.filterTerminations(\n                  this.props.suspensionItems,\n                  this.state.thisStatus\n                ).length <= 0 ? (\n                <tr>\n                  <td\n                    colSpan={8}\n                    className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                  >\n                    <Heading size=\"md\" className=\"opacity-60 font-light\">\n                      No results found\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                search(\n                  this.filterTerminations(\n                    this.props.suspensionItems,\n                    this.state.thisStatus\n                  ),\n                  this.state.search\n                ).map((req: APITerminationType, i: number) => {\n                  return (\n                    <tr\n                      className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                      onClick={() => this.props.setThisTermination(req)}\n                      key={i + req.change_staff_status_id}\n                    >\n                      <td className=\"p-2\">{i + 1}</td>\n                      <td className=\"p-2\">{req.techer_name}</td>\n                      <td className=\"p-2\">{req.school_name}</td>\n                      <td className=\"p-2\">{req.reason_name}</td>\n                      <td className=\"p-2\">\n                        {req.status === TerminationStatusEnum.PENDING_SUSPENSION\n                          ? DATE(req.requested_by_date)\n                          : req.decided_by_date && DATE(req.decided_by_date)}\n                      </td>\n                      <td className=\"p-2\">{req.status}</td>\n                      <td className=\"p-1 text-center\">\n                        <Button\n                          // className=\"border border-accent-900 bg-white text-accent-900 group-hover:text-white group-hover:bg-accent-900\"\n                          onClick={() => this.props.setThisTermination(req)}\n                        >\n                          View\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuspensionItems;\n","import React, { Component } from \"react\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, isEmptyOrSpaces, search } from \"../../utils/functions\";\n\ntype TerminationItemsProps = {\n  terminations: APITerminationType[] | null;\n  loading: boolean;\n  setThisTermination: (value: APITerminationType | null) => void;\n};\ntype TerminationItemsState = {\n  search: string;\n  thisStatus: TerminationStatusEnum | \"all\";\n};\n\nclass TerminationItems extends Component<\n  TerminationItemsProps,\n  TerminationItemsState\n> {\n  constructor(props: TerminationItemsProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      thisStatus: \"all\",\n    };\n  }\n\n  setThisStatus = (value: TerminationStatusEnum | \"all\") => {\n    this.setState({ thisStatus: value });\n  };\n\n  filterTerminations = (\n    allData: APITerminationType[],\n    search: TerminationStatusEnum | \"all\"\n  ): APITerminationType[] => {\n    console.log(\"====================================\");\n    console.log({ allData });\n    console.log(\"====================================\");\n\n    let result: APITerminationType[] = allData;\n    result = allData.filter(\n      (item) =>\n        item.status !== TerminationStatusEnum.PENDING_SUSPENSION &&\n        item.status !== TerminationStatusEnum.SUSPENDED &&\n        (item.requested_to_suspend_from === null ||\n          isEmptyOrSpaces(item.requested_to_suspend_from))\n    );\n    if (search !== \"all\") {\n      result = result.filter((item) => item.status === search);\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n          <div className=\"w-full sm:flex-1 pr-2\">\n            <TextInput\n              error=\"\"\n              label=\"Search\"\n              name=\"\"\n              type=\"search\"\n              onChange={(e) => this.setState({ search: e.target.value })}\n              placeholder=\"Search by name, reason, date, status\"\n              value={this.state.search}\n              size=\"sm\"\n              disabled={\n                this.props.terminations === null ||\n                this.filterTerminations(\n                  this.props.terminations,\n                  this.state.thisStatus\n                ).length === 0\n              }\n            />\n          </div>\n          <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                { title: \"Pending\", value: TerminationStatusEnum.PENDING },\n                {\n                  title: \"Terminated\",\n                  value: TerminationStatusEnum.TERMINATED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div>\n          {/* {this.props.terminations && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n        </div>\n        <div className=\"my-3 w-full overflow-x-auto\">\n          <table className=\"w-full text-left table-auto\">\n            <thead>\n              <tr>\n                <th className=\"p-2\">#</th>\n                <th className=\"p-2\">Names</th>\n                <th className=\"p-2\">School</th>\n                <th className=\"p-2\">Reason</th>\n                <th className=\"p-2\">Date</th>\n                <th className=\"p-2\">Status</th>\n                <th className=\"p-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.loading ? (\n                <TableLoading cols={6} />\n              ) : this.props.terminations === null ||\n                this.filterTerminations(\n                  this.props.terminations,\n                  this.state.thisStatus\n                ).length <= 0 ? (\n                <tr>\n                  <td\n                    colSpan={8}\n                    className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                  >\n                    <Heading size=\"md\" className=\"opacity-60 font-light\">\n                      No results found\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                search(\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ),\n                  this.state.search\n                ).map((req: APITerminationType, i: number) => {\n                  return (\n                    <tr\n                      className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                      onClick={() => this.props.setThisTermination(req)}\n                      key={i + req.change_staff_status_id}\n                    >\n                      <td className=\"p-2\">{i + 1}</td>\n                      <td className=\"p-2\">{req.techer_name}</td>\n                      <td className=\"p-2\">{req.school_name}</td>\n                      <td className=\"p-2\">{req.reason_name}</td>\n                      <td className=\"p-2\">\n                        {req.status === TerminationStatusEnum.PENDING\n                          ? DATE(req.requested_by_date)\n                          : req.decided_by_date && DATE(req.decided_by_date)}\n                      </td>\n                      <td className=\"p-2\">{req.status}</td>\n                      <td className=\"p-1 text-center\">\n                        <Button\n                          // className=\"border border-accent-900 bg-white text-accent-900 group-hover:text-white group-hover:bg-accent-900\"\n                          onClick={() => this.props.setThisTermination(req)}\n                        >\n                          View\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TerminationItems;\n"],"sourceRoot":""}