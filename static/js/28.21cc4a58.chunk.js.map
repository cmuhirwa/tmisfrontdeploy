{"version":3,"sources":["components/TableLoading/TableLoading.tsx","components/ActionConfirm/ActionConfirm.tsx","types/AcademicTypes.ts","actions/academic.action.ts","containers/AcademicCalender/SessionDetails.tsx","containers/AcademicCalender/CardStepper.tsx","containers/AcademicCalender/AcademicCalender.tsx"],"names":["TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","ActionConfirmEnum","ActionConfirm","id","modalType","DELETE","RESTORE_DELETE","INFO","description","onClick","setModalAction","confirmFun","AcademicEventTypeKeys","FC_UpdateAcademicCalendar","data","type","ActionTypes","UPDATE_ACADEMIC_CALENDER","payload","allEventTypes","event_id","event_name","event_start","event_end","event_key","POST_REQUEST","event_status","TRANSFER_REQUEST","TEACHER_RECRUITMENT","isActivationAllowed","thisPlans","today","Date","getTime","getPlanTypeByKey","find","item","isPlanActive","viewThisSession","thisPlan","academic_year_status","planEndDate","planStartDate","SessionDetails","handlePlanActivation","session","newState","window","confirm","key","setState","formError","msg","newData","academic_year_name","academic_year_description","academic_year_start","academic_year_end","events","academic_year_id","Object","prototype","hasOwnProperty","call","console","log","loadingRequest","axios","post","APP_URL","res","setViewThisSession","error","errorToText","state","this","colSpan","capitalizeFirstLetter","DATE","length","title","Component","React","memo","connect","auth","CardStepper","number","theme","active","priority","_AcademicCalender","setLoading","loading","setCreateSession","createSession","setSessionTitle","sessionTitle","setActivateSession","activateSession","setSessionPeriod","sessionPeriod","setFormError","componentDidMount","academicCalender","allAcademicPlans","FC_GetAllAcademicCalender","status","handleSessionActivation","isDateRangeValid","planType","level","thisDate","currentDate","dd","getDate","mm","getMonth","yyyy","getFullYear","date","toString","month","setPlansForUpdate","post_request_start","post_request_end","transfer_request_start","transfer_request_end","teacher_recruitment_start","teacher_recruitment_end","handleSubmit","e","preventDefault","isEmptyOrSpaces","step","createFormData","thisSession","setTimeout","FC_CreateAcademicCalendar","handleNext","doAction","Alert","fixed","Heading","Button","disabled","DashboardContainer","itm","Fragment","onSubmit","TextInput","onChange","target","value","label","placeholder","name","OTHER","AcademicCalender","callback","dispatch","setAxiosToken","get","GET_ALL_ACADEMIC_CALENDERS","session_data","GET_ALL_ACADEMIC_CALENDER","CREATE_ACADEMIC_CALENDER","FC_DeleteAcademicCalendar","DELETE_ACADEMIC_CALENDER","FC_AcademicCalenderActivation","ACADEMIC_CALENDER_ACTIVATION"],"mappings":"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","file":"static/js/28.21cc4a58.chunk.js","sourcesContent":["import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { FiAlertCircle } from \"react-icons/fi\";\nimport { GoAlert } from \"react-icons/go\";\nimport { MdDeleteForever, MdRestoreFromTrash } from \"react-icons/md\";\n\nexport enum ActionConfirmEnum {\n  RESTORE_DELETE = \"restore_delete\",\n  DELETE = \"delete\",\n  INFO = \"info\",\n  OTHER = \"other\",\n}\n\ninterface ActionConfirmProps {\n  confirmFun: Function;\n  setModalAction: (value: boolean) => void;\n  description: string;\n  modalType: ActionConfirmEnum;\n}\n\nconst ActionConfirm: React.FC<ActionConfirmProps> = (props) => {\n  return (\n    <div\n      className=\"min-w-screen h-screen animated fadeIn faster  fixed  left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-no-repeat bg-center bg-cover\"\n      id=\"modal-id\"\n    >\n      <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n      <div className=\"w-full  max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white animate__animated animate__zoomIn animate__faster\">\n        {/* <!--content--> */}\n        <div className=\"\">\n          {/* <!--body--> */}\n          <div className=\"text-center p-5 flex-auto justify-center\">\n            {props.modalType === ActionConfirmEnum.DELETE ||\n              (props.modalType === ActionConfirmEnum.RESTORE_DELETE && (\n                <FiAlertCircle className=\"w-4 h-4 -m-1 flex items-center text-red-500 mx-auto\" />\n              ))}\n            {props.modalType === ActionConfirmEnum.DELETE ? (\n              <MdDeleteForever className=\"w-16 h-16 flex items-center text-red-500 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.RESTORE_DELETE ? (\n              <MdRestoreFromTrash className=\"w-16 h-16 flex items-center text-yellow-800 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.INFO ? (\n              <GoAlert className=\"w-16 h-16 flex items-center text-blue-500 mx-auto\" />\n            ) : (\n              <GoAlert className=\"w-16 h-16 flex items-center text-yellow-500 mx-auto\" />\n            )}\n            <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n            <p className=\"text-sm text-gray-500 px-8\">{props.description}</p>\n          </div>\n          {/* <!--footer--> */}\n          <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n            <button\n              className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\"\n              onClick={() => props.setModalAction(false)}\n            >\n              Cancel\n            </button>\n            <button\n              className={`mb-2 md:mb-0 border px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg ${\n                props.modalType === ActionConfirmEnum.DELETE\n                  ? \"border-red-500 hover:bg-red-600 bg-red-500\"\n                  : props.modalType === ActionConfirmEnum.RESTORE_DELETE\n                  ? \"border-yellow-700 hover:bg-yellow-800 bg-yellow-700\"\n                  : props.modalType === ActionConfirmEnum.INFO\n                  ? \"border-blue-500 hover:bg-blue-600 bg-blue-500\"\n                  : \"border-yellow-500 hover:bg-yellow-600 bg-yellow-500\"\n              }`}\n              onClick={() => {\n                props.confirmFun();\n                props.setModalAction(false);\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionConfirm;\n","// GABIN'S TYPES ======================\n\nexport type AcademicYearDetailsInterface = {\n  academic_calendar_id: string;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  status: string;\n};\n\nexport type AcademicYearDetailsInterfaceForm = {\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  status: string;\n};\n\n// PATRICK'S TYPES ======================\n\n// export enum AcademicPlanTypeStatus {\n//   OPEN = \"OPEN\",\n//   CLOSED = \"CLOSED\",\n// }\n\n// export enum AcademicPlansTypeKeys {\n//   ACADEMIC_YEAR = \"ACADEMIC_YEAR\",\n//   POST_REQUEST = \"POST_REQUEST\",\n//   TRANSFER_REQUEST = \"TRANSFER_REQUEST\",\n//   TEACHER_RECRUITMENT = \"TEACHER_RECRUITMENT\",\n// }\n\n// export interface PlansTypeInterface {\n//   type_id: number;\n//   type_title: string;\n//   type_key: AcademicPlansTypeKeys;\n// }\n\n// export interface PlansInterface {\n//   type_id: number;\n//   type_title: string;\n//   type_key: AcademicPlansTypeKeys;\n//   type_status: AcademicPlanTypeStatus;\n//   start_date: string;\n//   end_date: string;\n//   _id: string;\n//   history: {\n//     type_id: number;\n//     type_title: string;\n//     type_key: AcademicPlansTypeKeys;\n//     type_status: AcademicPlanTypeStatus;\n//     start_date: string;\n//     end_date: string;\n//     _id: string;\n//   }[];\n// }\n\n// export interface AcademicPlanInterface {\n//   session_plan_name: string;\n//   period: string;\n//   is_active: boolean;\n//   plans: PlansInterface[];\n//   createdAt: string;\n//   updatedAt: string;\n//   _id: string;\n// }\n\n// export type FormAcademicPlansType = {\n//   type_key: AcademicPlansTypeKeys;\n//   type_status: AcademicPlanTypeStatus;\n//   start_date: string;\n//   end_date: string;\n// };\n\n// export type CreateAcademicPlanInterface = {\n//   session_plan_name: string;\n//   period: string;\n//   plans: FormAcademicPlansType[];\n// };\n\n// export const allPlanTypes: PlansTypeInterface[] = [\n//   {\n//     type_id: 1,\n//     type_title: \"Academic Year\",\n//     type_key: AcademicPlansTypeKeys.ACADEMIC_YEAR,\n//   },\n//   {\n//     type_id: 2,\n//     type_title: \"Post Request\",\n//     type_key: AcademicPlansTypeKeys.POST_REQUEST,\n//   },\n//   {\n//     type_id: 3,\n//     type_title: \"Transfer Request\",\n//     type_key: AcademicPlansTypeKeys.TRANSFER_REQUEST,\n//   },\n//   {\n//     type_id: 4,\n//     type_title: \"Teacher Recruitment\",\n//     type_key: AcademicPlansTypeKeys.TEACHER_RECRUITMENT,\n//   },\n// ];\n\n// export type AcademicSessionInterface = {\n//   _id: string;\n//   title: string;\n//   is_active: boolean;\n// };\n\n// NEW INTERFACES TO REMAIN =========\n\nexport type AcademicCalenderInterface = {\n  academic_year_id: string;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  academic_year_status: \"true\" | \"false\";\n  events: AcademicEventsInterface[];\n};\n\nexport type AcademicEventsInterface = {\n  event_id: string;\n  event_name: string;\n  event_key: AcademicEventTypeKeys;\n  event_start: string;\n  event_end: string;\n  event_status: \"true\" | \"false\";\n};\n\nexport enum AcademicEventTypeKeys {\n  POST_REQUEST = \"POST_REQUEST\",\n  TRANSFER_REQUEST = \"TRANSFER_REQUEST\",\n  TEACHER_RECRUITMENT = \"TEACHER_RECRUITMENT\",\n}\n\nexport type CreateAcademicAcademicInterface = {\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  academic_year_status: \"true\" | \"false\";\n  events: FormAcademicCalenderType[];\n};\n\nexport type FormAcademicCalenderType = {\n  event_name: string;\n  event_key: AcademicEventTypeKeys;\n  event_status: \"true\" | \"false\";\n  event_start: string;\n  event_end: string;\n};\n\nexport const allEventTypes: AcademicEventsInterface[] = [\n  {\n    event_id: \"5\",\n    event_name: \"Post Requests\",\n    event_start: \"2022-07-14\",\n    event_end: \"2022-07-27\",\n    event_key: AcademicEventTypeKeys.POST_REQUEST,\n    event_status: \"false\",\n  },\n  {\n    event_id: \"6\",\n    event_name: \"Transfer Requests\",\n    event_start: \"2022-07-13\",\n    event_end: \"2022-07-27\",\n    event_key: AcademicEventTypeKeys.TRANSFER_REQUEST,\n    event_status: \"false\",\n  },\n  {\n    event_id: \"6\",\n    event_name: \"Teacher Recruitment\",\n    event_start: \"2022-07-13\",\n    event_end: \"2022-07-27\",\n    event_key: AcademicEventTypeKeys.TEACHER_RECRUITMENT,\n    event_status: \"false\",\n  },\n];\n\n// const new_data = [\n//   {\n//     academic_year_id: \"1\",\n//     academic_year_name: \"2021-2023\",\n//     academic_year_description: \"Academic year\",\n//     academic_year_start: \"2022-03-22 11:19:40\",\n//     academic_year_end: \"2022-03-31 11:19:40\",\n//     academic_year_status: \"false\",\n//     events: [\n//       {\n//         event_id: \"5\",\n//         event_name: \"Post Requests\",\n//         event_start: \"2022-07-14\",\n//         event_end: \"2022-07-27\",\n//         event_key: AcademicEventTypeKeys.POST_REQUEST,\n//         event_status: \"false\",\n//       },\n//       {\n//         event_id: \"6\",\n//         event_name: \"Transfer Requests\",\n//         event_start: \"2022-07-13\",\n//         event_end: \"2022-07-27\",\n//         event_key: AcademicEventTypeKeys.TRANSFER_REQUEST,\n//         event_status: \"false\",\n//       },\n//       {\n//         event_id: \"6\",\n//         event_name: \"Teacher Recruitment\",\n//         event_start: \"2022-07-13\",\n//         event_end: \"2022-07-27\",\n//         event_key: AcademicEventTypeKeys.TEACHER_RECRUITMENT,\n//         event_status: \"false\",\n//       },\n//     ],\n//   },\n// ];\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { APP_URL } from \"../config/app.config\";\nimport { AcademicCalenderInterface } from \"../types/AcademicTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { ActionTypes } from \"./types\";\n\n// GET ALL SESSION PLAN\nexport interface GetAllAcademicCalendersAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_CALENDER;\n  payload: AcademicCalenderInterface[];\n}\n\n// CREATE SESSION PLAN\nexport interface CreateAcademicCalendarsAction {\n  type: ActionTypes.CREATE_ACADEMIC_CALENDER;\n  payload: AcademicCalenderInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateAcademicCalendarsAction {\n  type: ActionTypes.UPDATE_ACADEMIC_CALENDER;\n  payload: AcademicCalenderInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateAcademicCalendarsAction {\n  type: ActionTypes.ACADEMIC_CALENDER_ACTIVATION;\n  payload: AcademicCalenderInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteAcademicCalendarAction {\n  type: ActionTypes.DELETE_ACADEMIC_CALENDER;\n  payload: string;\n}\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ALL PLAN TYPES ==========================\nexport type FT_GetAllAcademicCalender = (\n  callback: (\n    status: boolean,\n    msg: string,\n    data: AcademicCalenderInterface[] | null\n  ) => void\n) => void;\nexport const FC_GetAllAcademicCalender = (\n  callback: (\n    status: boolean,\n    msg: string,\n    data: AcademicCalenderInterface[] | null\n  ) => void\n) => {\n  callback(true, \"\", null);\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicCalenderInterface[]>(\n        `${APP_URL}/academiccalendars/`\n      );\n      console.log(\n        \"================FC_GetAllAcademicCalender====================\"\n      );\n      console.log({ GET_ALL_ACADEMIC_CALENDERS: res.data });\n      console.log(\n        \"================FC_GetAllAcademicCalender====================\"\n      );\n      let session_data: AcademicCalenderInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllAcademicCalendersAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_CALENDER,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport type FT_CreateAcademicCalendar = (\n  data: AcademicCalenderInterface\n) => void;\nexport const FC_CreateAcademicCalendar = (\n  data: AcademicCalenderInterface\n): CreateAcademicCalendarsAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_CALENDER,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const FC_UpdateAcademicCalendar = (\n  data: AcademicCalenderInterface\n): UpdateAcademicCalendarsAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_CALENDER,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport type FT_DeleteAcademicCalendar = (\n  data: string\n) => DeleteAcademicCalendarAction;\nexport const FC_DeleteAcademicCalendar = (\n  data: string\n): DeleteAcademicCalendarAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_CALENDER,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport type FT_AcademicCalenderActivation = (\n  data: AcademicCalenderInterface\n) => ActivateAcademicCalendarsAction;\nexport const FC_AcademicCalenderActivation = (\n  data: AcademicCalenderInterface\n): ActivateAcademicCalendarsAction => {\n  return {\n    type: ActionTypes.ACADEMIC_CALENDER_ACTIVATION,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport {\n  FC_UpdateAcademicCalendar,\n  FT_CreateAcademicCalendar,\n} from \"../../actions/academic.action\";\nimport { APP_URL } from \"../../config/app.config\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  AcademicCalenderInterface,\n  AcademicEventsInterface,\n  AcademicEventTypeKeys,\n  allEventTypes,\n} from \"../../types/AcademicTypes\";\nimport { errorToText } from \"../../utils/errors\";\nimport { capitalizeFirstLetter, DATE } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (\n  thisPlans: AcademicEventsInterface\n): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.event_end);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  event_key: AcademicEventTypeKeys\n): AcademicEventsInterface | undefined => {\n  return allEventTypes.find((item) => item.event_key === event_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: AcademicCalenderInterface,\n  thisPlan: AcademicEventsInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.academic_year_status === \"true\") {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.event_end),\n      planStartDate = new Date(thisPlan.event_start);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.event_status === \"true\"\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.event_status === \"true\"\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: AcademicCalenderInterface;\n  setViewThisSession: (data: AcademicCalenderInterface) => void;\n\n  // REDUX ----------------\n  auth: Auth;\n  FC_UpdateAcademicCalendar: FT_CreateAcademicCalendar;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n  formError: {\n    element: string | \"main-success\" | \"main-error\";\n    msg: string;\n  } | null;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n      formError: null,\n    };\n  }\n\n  handlePlanActivation = async (\n    session: AcademicCalenderInterface,\n    thisPlan: AcademicEventsInterface\n  ) => {\n    const newState: \"open\" | \"close\" =\n      session.academic_year_status === \"true\" ? \"close\" : \"open\";\n\n    if (\n      !window.confirm(\n        `Are you sure you want to ${newState} this academic event?`\n      )\n    ) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.setState({\n        formError: {\n          element: \"main-error\",\n          msg: \"Opening/Closing event which has been expired is not allowed!\",\n        },\n      });\n    }\n\n    let newData: AcademicCalenderInterface = {\n      academic_year_name: session.academic_year_name,\n      academic_year_description: session.academic_year_description,\n      academic_year_start: session.academic_year_start,\n      academic_year_end: session.academic_year_end,\n      academic_year_status: session.academic_year_status,\n      events: [],\n      academic_year_id: session.academic_year_id,\n    };\n    for (const key in session.events) {\n      if (Object.prototype.hasOwnProperty.call(session.events, key)) {\n        const element = session.events[key];\n        if (thisPlan.event_key === element.event_key) {\n          if (thisPlan.event_status === \"true\") {\n            newData.events.push({\n              event_id: thisPlan.event_id,\n              event_name: thisPlan.event_name,\n              event_key: thisPlan.event_key,\n              event_start: thisPlan.event_start,\n              event_end: thisPlan.event_end,\n              event_status: \"false\",\n            });\n          } else {\n            newData.events.push({\n              event_id: thisPlan.event_id,\n              event_name: thisPlan.event_name,\n              event_key: thisPlan.event_key,\n              event_start: thisPlan.event_start,\n              event_end: thisPlan.event_end,\n              event_status: \"true\",\n            });\n          }\n        } else {\n          newData.events.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({\n      newData: {\n        event_status: thisPlan.event_status === \"true\" ? \"false\" : \"true\",\n        event_id: thisPlan.event_id,\n      },\n    });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.event_key });\n    try {\n      const res = await axios.post<AcademicCalenderInterface>(\n        `${APP_URL}/academiccalendars/changeeventstatus`,\n        {\n          event_status: thisPlan.event_status === \"true\" ? \"false\" : \"true\",\n          event_id: thisPlan.event_id,\n        }\n      );\n      this.props.FC_UpdateAcademicCalendar(newData);\n      this.props.setViewThisSession(newData);\n      this.setState({\n        formError: {\n          element: \"main-success\",\n          msg: `Event ${newState}d successfully`,\n        },\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.setState({\n        formError: {\n          element: \"main-error\",\n          msg: errorToText(error),\n        },\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.academic_year_status === \"true\" && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.events.map((item, index) => (\n            <tr\n              key={index + item.event_id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.event_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.event_key)!.event_name\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.event_start)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.event_end)}</td>\n              {this.props.viewThisSession.academic_year_status === \"true\" && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.academic_year_status === \"true\" && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.event_status === \"true\"\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.event_status === \"false\"\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.event_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_UpdateAcademicCalendar,\n  })(SessionDetails)\n);\n","import React, { FC, ReactElement } from \"react\";\n\ntype CardStepperProps = {\n  number: number;\n  title: string;\n  description: string;\n  theme: \"blue\" | \"green\" | \"gray\" | \"yellow\";\n  active: boolean;\n  priority: boolean;\n  onClick: () => void;\n};\n\nconst CardStepper: FC<CardStepperProps> = ({\n  number,\n  title,\n  description,\n  theme,\n  active,\n  priority,\n  onClick,\n}): ReactElement => {\n  /* function body */\n  return (\n    <div\n      onClick={onClick}\n      className={`p-2 rounded-t-md cursor-pointer border-b-4 flex flex-col text-center lg:text-left lg:flex-row items-center border-${theme}-500 ${\n        active === true ? `bg-${theme}-100` : \"\"\n      } ${priority === false ? \"opacity-60\" : \"\"}`}\n    >\n      <section\n        className={`p-2 lg:p-3 rounded-full border-4 ${\n          theme === \"yellow\" ? `bg-${theme}-500` : `bg-${theme}-500`\n        } 0 ${\n          theme === \"yellow\" ? `border-${theme}-600` : `border-${theme}-200`\n        }  ${\n          theme === \"yellow\" ? \"text-black\" : \"text-white\"\n        } w-9 h-9 lg:w-14 lg:h-14 flex items-center text-center`}\n      >\n        <h3 className=\"text-center w-full text-xl lg:text-3xl font-bold \">\n          {number}\n        </h3>\n      </section>\n      <section className=\"pl-2\">\n        <h3 className=\"lg:text-xl text-lg font-bold\">{title}</h3>\n        <p className=\"text-gray-400\">{description}</p>\n      </section>\n    </div>\n  );\n};\n\nexport default CardStepper;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { HiViewGridAdd } from \"react-icons/hi\";\nimport { MdEdit, MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport {\n  FC_AcademicCalenderActivation,\n  FC_CreateAcademicCalendar,\n  FC_DeleteAcademicCalendar,\n  FC_GetAllAcademicCalender,\n  FC_UpdateAcademicCalendar,\n  FT_AcademicCalenderActivation,\n  FT_CreateAcademicCalendar,\n  FT_DeleteAcademicCalendar,\n  FT_GetAllAcademicCalender,\n} from \"../../actions/academic.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport { APP_URL } from \"../../config/app.config\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  AcademicCalenderInterface,\n  AcademicEventsInterface,\n  AcademicEventTypeKeys,\n  CreateAcademicAcademicInterface,\n} from \"../../types/AcademicTypes\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE, isEmptyOrSpaces } from \"../../utils/functions\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport SessionDetails from \"./SessionDetails\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport { AcademicCalenderReducerInterface } from \"../../reducers/academic.reducer\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport CardStepper from \"./CardStepper\";\nimport Alert from \"../../components/Alert/Alert\";\n\ninterface AcademicSessionProps {\n  auth: Auth;\n  academicCalender: AcademicCalenderReducerInterface;\n  FC_GetAllAcademicCalender: FT_GetAllAcademicCalender;\n  FC_CreateAcademicCalendar: FT_CreateAcademicCalendar;\n  FC_UpdateAcademicCalendar: FT_CreateAcademicCalendar;\n  FC_DeleteAcademicCalendar: FT_DeleteAcademicCalendar;\n  FC_AcademicCalenderActivation: FT_AcademicCalenderActivation;\n}\n\ninterface AcademicSessionState {\n  loading: boolean;\n  createSession: boolean;\n  loadingRequest: string;\n  activateSession: AcademicCalenderInterface | null;\n  thisSession: AcademicCalenderInterface | null;\n  viewThisSession: AcademicCalenderInterface | null;\n  doAction: \"ACTIVATED\" | \"EDIT\" | \"DELETE\" | null;\n  sessionTitle: string;\n  sessionPeriod: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  step: number;\n}\n\nclass _AcademicCalender extends Component<\n  AcademicSessionProps,\n  AcademicSessionState\n> {\n  constructor(props: AcademicSessionProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingRequest: \"\",\n      createSession: false,\n      activateSession: null,\n      thisSession: null,\n      viewThisSession: null,\n      doAction: null,\n      sessionTitle: \"\",\n      sessionPeriod: \"\",\n      academic_year_start: \"\",\n      academic_year_end: \"\",\n      post_request_start: \"\",\n      post_request_end: \"\",\n      transfer_request_start: \"\",\n      transfer_request_end: \"\",\n      teacher_recruitment_start: \"\",\n      teacher_recruitment_end: \"\",\n      formError: null,\n      step: 1,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setCreateSession = (state: boolean) => {\n    this.setState({ createSession: state });\n  };\n\n  setSessionTitle = (data: string) => {\n    this.setState({ sessionTitle: data });\n  };\n\n  setViewThisSession = (data: AcademicCalenderInterface) => {\n    if (this.state.viewThisSession === null) {\n      this.setState({ viewThisSession: data });\n    } else if (\n      this.state.viewThisSession.academic_year_id === data.academic_year_id\n    ) {\n      this.setState({ viewThisSession: null });\n    } else {\n      this.setState({ viewThisSession: data });\n    }\n  };\n\n  setActivateSession = (data: AcademicCalenderInterface | null) => {\n    this.setState({ activateSession: data });\n  };\n\n  setSessionPeriod = (data: string) => {\n    this.setState({ sessionPeriod: data });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.academicCalender.allAcademicPlans === null ||\n      this.props.academicCalender.allAcademicPlans.length <= 0\n    ) {\n      this.props.FC_GetAllAcademicCalender((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.setFormError({ element: \"main-error\", msg });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  handleSessionActivation = async (session: AcademicCalenderInterface) => {\n    const newState: \"activate\" | \"deactivate\" =\n      session.academic_year_status === \"true\" ? \"deactivate\" : \"activate\";\n\n    this.setState({ loadingRequest: session.academic_year_id });\n\n    try {\n      const res = await axios.post<AcademicCalenderInterface>(\n        `${APP_URL}/academiccalendars/changeacademiccalendarstatus`,\n        {\n          academic_year_status:\n            session.academic_year_status === \"true\" ? \"false\" : \"true\",\n          academic_year_id: session.academic_year_id,\n        }\n      );\n      // this.props.sessionActivation(res.data);\n      this.props.FC_GetAllAcademicCalender((status: boolean, msg: string) => {\n        // this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.setFormError({ element: \"main-error\", msg });\n        }\n      });\n      this.setFormError({\n        element: \"main-success\",\n        msg: `Session ${newState}d successfully`,\n      });\n\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.setFormError({\n        element: \"main-error\",\n        msg: errorToText(error),\n      });\n    }\n\n    this.setState({ loadingRequest: \"\" });\n  };\n\n  isDateRangeValid = (\n    planType:\n      | \"ACADEMIC_YEAR\"\n      | \"POST_REQUEST\"\n      | \"TRANSFER_REQUEST\"\n      | \"TEACHER_RECRUITMENT\",\n    level: \"START\" | \"END\",\n    thisDate: string\n  ): boolean => {\n    // let currentDate: Date = new Date(thisDate),\n    //   compareDate: Date;\n    // APPLICATION VALIDATION ============================\n    // if (planType === \"APPLICATION\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.academic_year_end);\n    //     let today = new Date(this.currentDate());\n    //     if (\n    //       this.state.thisSession !== null &&\n    //       currentDate.getTime() < today.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"academic_year_start\",\n    //           msg: `Invalid date, application start period must be at least today ${this.currentDate()}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.academic_year_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"academic_year_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"academic_year_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return false;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.academic_year_start);\n    //     if (\n    //       this.state.academic_year_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"academic_year_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.academic_year_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.academic_year_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"academic_year_start\",\n    //           msg: `Application period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"academic_year_end\" ||\n    //         this.state.formError.element === \"academic_year_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // DOCUMENT VALIDATION ============================\n    // if (planType === \"DOCUMENT\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.post_request_end);\n    //     let academic_year_end = new Date(this.state.academic_year_end);\n    //     if (currentDate.getTime() <= academic_year_end.getTime()) {\n    //       console.log({\n    //         currentDate: currentDate.getTime(),\n    //         academic_year_end: academic_year_end.getTime(),\n    //       });\n    //       this.setState({\n    //         formError: {\n    //           element: \"post_request_start\",\n    //           msg: `Invalid date, document validation must start after application period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.post_request_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"post_request_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"post_request_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.post_request_start);\n    //     if (\n    //       this.state.post_request_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"post_request_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.post_request_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.post_request_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"post_request_start\",\n    //           msg: `Document validation period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"post_request_end\" ||\n    //         this.state.formError.element === \"post_request_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // EXAMINATION VALIDATION ============================\n    // if (planType === \"EXAMINATION\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.transfer_request_end);\n    //     let post_request_end = new Date(this.state.post_request_end);\n    //     if (currentDate.getTime() <= post_request_end.getTime()) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"transfer_request_period_start\",\n    //           msg: `Invalid date, examination must start after document validation period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.transfer_request_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"transfer_request_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"transfer_request_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.post_request_start);\n    //     if (\n    //       this.state.post_request_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"transfer_request_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.post_request_start}`,\n    //         },\n    //       });\n    //     } else if (isEmptyOrSpaces(this.state.post_request_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"transfer_request_start\",\n    //           msg: `Examination period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"transfer_request_end\" ||\n    //         this.state.formError.element === \"transfer_request_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // PUBLICATION VALIDATION ============================\n    // if (planType === \"PUBLICATION\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.teacher_recruitment_end);\n    //     let transfer_request_end = new Date(this.state.transfer_request_end);\n    //     if (currentDate.getTime() <= transfer_request_end.getTime()) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"teacher_recruitment_start\",\n    //           msg: `Invalid date, marks publication must start after examination period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.teacher_recruitment_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"publication_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"publication_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.post_request_start);\n    //     if (\n    //       this.state.post_request_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"publication_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.post_request_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.post_request_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"teacher_recruitment_start\",\n    //           msg: `Marks publication period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"publication_period_end\" ||\n    //         this.state.formError.element === \"teacher_recruitment_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // PLACEMENT VALIDATION ============================\n    // if (planType === \"PLACEMENT\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.placement_end);\n    //     let teacher_recruitment_end = new Date(this.state.teacher_recruitment_end);\n    //     if (currentDate.getTime() <= teacher_recruitment_end.getTime()) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_start\",\n    //           msg: `Invalid date, Placement must start after marks publication period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.placement_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"placement_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.post_request_start);\n    //     if (\n    //       this.state.post_request_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.post_request_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.post_request_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_start\",\n    //           msg: `Placement period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"placement_period_end\" ||\n    //         this.state.formError.element === \"placement_period_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    return true;\n  };\n\n  currentDate = (): string => {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1; //January is 0!\n    let yyyy = today.getFullYear(),\n      date: string = dd.toString(),\n      month: string = mm.toString();\n\n    if (dd < 10) {\n      date = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      month = \"0\" + mm;\n    }\n\n    return yyyy + \"-\" + month + \"-\" + date;\n  };\n\n  setPlansForUpdate = (data: AcademicEventsInterface[]) => {\n    this.setState({\n      post_request_start: data.find(\n        (item) => item.event_key === AcademicEventTypeKeys.POST_REQUEST\n      )\n        ? data.find(\n            (item) => item.event_key === AcademicEventTypeKeys.POST_REQUEST\n          )!.event_start\n        : \"\",\n      post_request_end: data.find(\n        (item) => item.event_key === AcademicEventTypeKeys.POST_REQUEST\n      )\n        ? data.find(\n            (item) => item.event_key === AcademicEventTypeKeys.POST_REQUEST\n          )!.event_end\n        : \"\",\n      transfer_request_start: data.find(\n        (item) => item.event_key === AcademicEventTypeKeys.TRANSFER_REQUEST\n      )\n        ? data.find(\n            (item) => item.event_key === AcademicEventTypeKeys.TRANSFER_REQUEST\n          )!.event_start\n        : \"\",\n      transfer_request_end: data.find(\n        (item) => item.event_key === AcademicEventTypeKeys.TRANSFER_REQUEST\n      )\n        ? data.find(\n            (item) => item.event_key === AcademicEventTypeKeys.TRANSFER_REQUEST\n          )!.event_end\n        : \"\",\n      teacher_recruitment_start: data.find(\n        (item) => item.event_key === AcademicEventTypeKeys.TEACHER_RECRUITMENT\n      )\n        ? data.find(\n            (item) =>\n              item.event_key === AcademicEventTypeKeys.TEACHER_RECRUITMENT\n          )!.event_start\n        : \"\",\n      teacher_recruitment_end: data.find(\n        (item) => item.event_key === AcademicEventTypeKeys.TEACHER_RECRUITMENT\n      )\n        ? data.find(\n            (item) =>\n              item.event_key === AcademicEventTypeKeys.TEACHER_RECRUITMENT\n          )!.event_end\n        : \"\",\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.sessionTitle)) {\n      this.setFormError({\n        element: \"title\",\n        msg: \"Please fill the academic calender title\",\n      });\n      return this.setState({ step: 1 });\n    }\n    if (isEmptyOrSpaces(this.state.sessionPeriod)) {\n      this.setFormError({\n        element: \"period\",\n        msg: \"Please fill the academic calender period\",\n      });\n      return this.setState({ step: 1 });\n    }\n\n    if (isEmptyOrSpaces(this.state.academic_year_start)) {\n      this.setFormError({\n        element: \"academic_year_start\",\n        msg: \"Academic year start date is required\",\n      });\n      return this.setState({ step: 1 });\n    } else if (\n      !this.isDateRangeValid(\n        \"ACADEMIC_YEAR\",\n        \"START\",\n        this.state.academic_year_start\n      )\n    ) {\n      return this.setState({ step: 1 });\n    }\n\n    if (isEmptyOrSpaces(this.state.academic_year_end)) {\n      this.setFormError({\n        element: \"academic_year_end\",\n        msg: \"Academic year period end date is required\",\n      });\n      return this.setState({ step: 1 });\n    } else if (\n      !this.isDateRangeValid(\n        \"ACADEMIC_YEAR\",\n        \"END\",\n        this.state.academic_year_end\n      )\n    ) {\n      return this.setState({ step: 1 });\n    }\n\n    if (isEmptyOrSpaces(this.state.post_request_start)) {\n      this.setFormError({\n        element: \"post_request_period_start\",\n        msg: \"Post request period start date is required\",\n      });\n      return this.setState({ step: 2 });\n    } else if (\n      !this.isDateRangeValid(\n        \"POST_REQUEST\",\n        \"START\",\n        this.state.post_request_start\n      )\n    ) {\n      return this.setState({ step: 2 });\n    }\n\n    if (isEmptyOrSpaces(this.state.post_request_end)) {\n      this.setFormError({\n        element: \"post_request_period_end\",\n        msg: \"Post request period end date is required\",\n      });\n      return this.setState({ step: 2 });\n    } else if (\n      !this.isDateRangeValid(\"POST_REQUEST\", \"END\", this.state.post_request_end)\n    ) {\n      return this.setState({ step: 2 });\n    }\n\n    if (isEmptyOrSpaces(this.state.transfer_request_start)) {\n      this.setFormError({\n        element: \"transfer_request_period_start\",\n        msg: \"Examination period start date is required\",\n      });\n      return this.setState({ step: 2 });\n    } else if (\n      !this.isDateRangeValid(\n        \"TRANSFER_REQUEST\",\n        \"START\",\n        this.state.transfer_request_start\n      )\n    ) {\n      return this.setState({ step: 2 });\n    }\n\n    if (isEmptyOrSpaces(this.state.transfer_request_end)) {\n      this.setFormError({\n        element: \"transfer_request_period_end\",\n        msg: \"Transfer request period end date is required\",\n      });\n      return this.setState({ step: 2 });\n    } else if (\n      !this.isDateRangeValid(\n        \"TRANSFER_REQUEST\",\n        \"END\",\n        this.state.transfer_request_end\n      )\n    ) {\n      return this.setState({ step: 2 });\n    }\n\n    if (isEmptyOrSpaces(this.state.teacher_recruitment_start)) {\n      this.setFormError({\n        element: \"teacher_recruitment_period_start\",\n        msg: \"Teacher recruitment period start date is required\",\n      });\n      return this.setState({ step: 2 });\n    } else if (\n      !this.isDateRangeValid(\n        \"TEACHER_RECRUITMENT\",\n        \"START\",\n        this.state.teacher_recruitment_start\n      )\n    ) {\n      return this.setState({ step: 2 });\n    }\n\n    if (isEmptyOrSpaces(this.state.teacher_recruitment_end)) {\n      this.setFormError({\n        element: \"teacher_recruitment_period_end\",\n        msg: \"Teacher recruitment period end date is required\",\n      });\n      return this.setState({ step: 2 });\n    } else if (\n      !this.isDateRangeValid(\n        \"TEACHER_RECRUITMENT\",\n        \"END\",\n        this.state.teacher_recruitment_end\n      )\n    ) {\n      return this.setState({ step: 2 });\n    }\n\n    let createFormData: CreateAcademicAcademicInterface = {\n      academic_year_name: this.state.sessionTitle,\n      academic_year_description: this.state.sessionPeriod,\n      academic_year_start: this.state.academic_year_start,\n      academic_year_end: this.state.academic_year_end,\n      academic_year_status: \"false\",\n      events: [\n        {\n          event_name: \"Post Requests\",\n          event_key: AcademicEventTypeKeys.POST_REQUEST,\n          event_status: \"true\",\n          event_start: this.state.post_request_start,\n          event_end: this.state.post_request_end,\n        },\n        {\n          event_name: \"Transfer Requests\",\n          event_key: AcademicEventTypeKeys.TRANSFER_REQUEST,\n          event_status: \"true\",\n          event_start: this.state.transfer_request_start,\n          event_end: this.state.transfer_request_end,\n        },\n        {\n          event_name: \"Teacher Recruitment\",\n          event_key: AcademicEventTypeKeys.TEACHER_RECRUITMENT,\n          event_status: \"true\",\n          event_start: this.state.teacher_recruitment_start,\n          event_end: this.state.teacher_recruitment_end,\n        },\n      ],\n    };\n\n    console.log(\"====================================\");\n    console.log({ createFormData });\n    console.log(\"====================================\");\n\n    this.setState({\n      loadingRequest: this.state.thisSession\n        ? this.state.thisSession.academic_year_id\n        : \"true\",\n    });\n\n    try {\n      // Update current\n      if (this.state.thisSession !== null) {\n        const res = await axios.post<AcademicCalenderInterface>(\n          `${APP_URL}/academiccalendars/editacademiccalendar`,\n          {\n            academic_year_id: this.state.thisSession.academic_year_id,\n            academic_year_name: this.state.sessionTitle,\n            academic_year_description: this.state.sessionPeriod,\n            academic_year_start: this.state.academic_year_start,\n            academic_year_end: this.state.academic_year_end,\n            academic_year_status: this.state.thisSession.academic_year_status,\n            events: [\n              {\n                event_key: AcademicEventTypeKeys.POST_REQUEST,\n                event_start: this.state.post_request_start,\n                // event_status:this.state.thisSession.\n                event_end: this.state.post_request_end,\n              },\n              {\n                event_key: AcademicEventTypeKeys.TRANSFER_REQUEST,\n                event_start: this.state.transfer_request_start,\n                // event_status:this.state.thisSession.\n                event_end: this.state.transfer_request_end,\n              },\n              {\n                event_key: AcademicEventTypeKeys.TEACHER_RECRUITMENT,\n                event_start: this.state.teacher_recruitment_start,\n                event_end: this.state.teacher_recruitment_end,\n              },\n            ],\n          }\n        );\n        this.props.FC_UpdateAcademicCalendar(res.data);\n        this.setState({\n          formError: {\n            element: \"main-form-success\",\n            msg: \"Academic session Plan updated successfully\",\n          },\n          step: 1,\n          sessionTitle: \"\",\n          sessionPeriod: \"\",\n          academic_year_start: \"\",\n          academic_year_end: \"\",\n          post_request_start: \"\",\n          post_request_end: \"\",\n          transfer_request_start: \"\",\n          transfer_request_end: \"\",\n          teacher_recruitment_start: \"\",\n          teacher_recruitment_end: \"\",\n          thisSession: null,\n          // createSession: false,\n        });\n        setTimeout(() => {\n          this.setState({\n            formError: null,\n            createSession: false,\n          });\n        }, 2000);\n        console.log(\"updateSessionPlan: \", res);\n      } else {\n        // Add new\n        const res = await axios.post<AcademicCalenderInterface>(\n          `${APP_URL}/academiccalendars/addacademiccalendar`,\n          createFormData\n        );\n        this.props.FC_CreateAcademicCalendar(res.data);\n        this.setState({\n          formError: {\n            element: \"main-form-success\",\n            msg: \"Academic calender created successfully\",\n          },\n          step: 1,\n          sessionTitle: \"\",\n          sessionPeriod: \"\",\n          academic_year_start: \"\",\n          academic_year_end: \"\",\n          post_request_start: \"\",\n          post_request_end: \"\",\n          transfer_request_start: \"\",\n          transfer_request_end: \"\",\n          teacher_recruitment_start: \"\",\n          teacher_recruitment_end: \"\",\n          thisSession: null,\n        });\n        setTimeout(() => {\n          this.setState({\n            formError: null,\n            createSession: false,\n          });\n        }, 2000);\n        console.log(\"createPlanType: \", res);\n      }\n    } catch (error) {\n      this.setState({\n        formError: {\n          element: \"main-form-error\",\n          msg: `${errorToText(error)}! Try again`,\n        },\n      });\n      setTimeout(() => {\n        this.setState({\n          formError: null,\n        });\n      }, 2000);\n      console.error(\"Err: \", { error });\n    }\n    this.setState({ loadingRequest: \"\" });\n  };\n\n  handleNext = () => {\n    if (isEmptyOrSpaces(this.state.sessionTitle)) {\n      return this.setFormError({\n        element: \"title\",\n        msg: \"Please fill the academic calender title\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sessionPeriod)) {\n      return this.setFormError({\n        element: \"period\",\n        msg: \"Please fill the academic calender period\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.academic_year_start)) {\n      return this.setFormError({\n        element: \"academic_year_start\",\n        msg: \"Academic year start date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\n        \"ACADEMIC_YEAR\",\n        \"START\",\n        this.state.academic_year_start\n      )\n    ) {\n      return false;\n    }\n\n    if (isEmptyOrSpaces(this.state.academic_year_end)) {\n      return this.setFormError({\n        element: \"academic_year_end\",\n        msg: \"Academic year period end date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\n        \"ACADEMIC_YEAR\",\n        \"END\",\n        this.state.academic_year_end\n      )\n    ) {\n      return true;\n    }\n\n    this.setState({ step: 2 });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.formError && this.state.formError.element === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.formError.msg}\n          </Alert>\n        )}\n\n        {this.state.formError &&\n          this.state.formError.element === \"main-success\" && (\n            <Alert theme=\"success\" fixed>\n              {this.state.formError.msg}\n            </Alert>\n          )}\n        {/* PAGE TITLE ##################### */}\n        {!this.state.createSession && (\n          <div className=\"flex items-center gap-1 justify-between px-3 mt-3\">\n            <Heading className=\"text-blue-800 w-max\">\n              Academic calender settings\n            </Heading>\n\n            {!this.state.createSession && (\n              <Button\n                className=\"flex items-center gap-1\"\n                onClick={() => this.setCreateSession(true)}\n                theme=\"primary-light\"\n                disabled={this.state.loading}\n              >\n                <HiViewGridAdd />\n                Add new\n              </Button>\n            )}\n          </div>\n        )}\n        {/* PAGE TITLE ##################### */}\n        {/* HEADER TITLE ===================================== */}\n        {this.state.createSession && (\n          <div className=\"sticky top-14 z-50\">\n            <DashboardContainer>\n              <div className=\"flex items-center gap-2 justify-between\">\n                <Heading className=\"w-max py-2 lg:pb-3 lg:pt-2 font-light text-center text-gray-500\">\n                  {this.state.thisSession !== null\n                    ? this.state.thisSession.academic_year_name\n                    : \"Add New Academic calender\"}\n                </Heading>\n\n                <Button\n                  disabled={this.state.loadingRequest.length > 0 ? true : false}\n                  onClick={() => {\n                    this.setState({\n                      formError: null,\n                      sessionTitle: \"\",\n                      sessionPeriod: \"\",\n                      thisSession: null,\n                      createSession: false,\n                      academic_year_start: \"\",\n                      academic_year_end: \"\",\n                      post_request_start: \"\",\n                      post_request_end: \"\",\n                      transfer_request_start: \"\",\n                      transfer_request_end: \"\",\n                      teacher_recruitment_start: \"\",\n                      teacher_recruitment_end: \"\",\n                    });\n                  }}\n                  theme=\"danger-light\"\n                >\n                  Close\n                </Button>\n              </div>\n\n              <div className=\"pt-2 grid  grid-cols-2 border p-2 rounded-md\">\n                {[\n                  {\n                    step: 1,\n                    title: \"Academic Year\",\n                    description:\n                      \"Set academic year, period, starting date, ending date\",\n                  },\n                  {\n                    step: 2,\n                    title: \"Academic events\",\n                    description:\n                      \"Set Post request, transfer request, teacher recruitment\",\n                  },\n                ].map((itm) => (\n                  <CardStepper\n                    onClick={() => {\n                      if (this.state.loadingRequest.length > 0) return;\n\n                      if (itm.step === 1) {\n                        this.setState({\n                          step: 1,\n                        });\n                      }\n\n                      // go back to step 2\n                      if (itm.step === 2) {\n                        this.handleNext();\n                      }\n                    }}\n                    key={itm.step}\n                    active={itm.step === this.state.step}\n                    description={itm.description}\n                    number={itm.step}\n                    theme={\n                      itm.step === this.state.step\n                        ? \"yellow\"\n                        : this.state.step > itm.step\n                        ? \"green\"\n                        : \"gray\"\n                    }\n                    title={itm.title}\n                    priority={itm.step <= this.state.step}\n                  />\n                ))}\n              </div>\n            </DashboardContainer>\n          </div>\n        )}\n        {/* END HEADER TITLE ===================================== */}\n        {/* ************************************************************ */}\n        {/* CONTENT ===================================== */}\n        {!this.state.createSession && (\n          <DashboardContainer>\n            <table className=\"w-full\" id=\"session_content\">\n              <thead className=\"bg-blue-50 text-blue-800 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Session title</td>\n                  <td className=\"px-2 py-2\">Period</td>\n                  <td className=\"px-2 py-2\">Start date</td>\n                  <td className=\"px-2 py-2\">End date</td>\n                  <td className=\"px-2 py-2\">Status</td>\n                  {this.state.viewThisSession && (\n                    <td className=\"px-2 py-2\"></td>\n                  )}\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {/* WHILE STILL LOADING ====================== */}\n                {this.props.academicCalender.allAcademicPlans === null && (\n                  <TableLoading cols={7} />\n                )}\n                {/* WHILE NO DATA FOUND ====================== */}\n                {this.props.academicCalender.allAcademicPlans !== null &&\n                  !this.state.loading &&\n                  this.props.academicCalender.allAcademicPlans.length <= 0 && (\n                    <tr>\n                      <td colSpan={7} className=\"px-2 py-2\">\n                        <div\n                          className={`flex flex-col py-4 justify-center items-center text-gray-500 border-2 border-white bg-gray-100 rounded`}\n                        >\n                          <RiSearchLine className=\"text-6xl text-gray-500 animate__animated animate__shakeX\" />\n                          <span className=\"text-xl mb-3\">\n                            No academic calender found!\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-base py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() => this.setCreateSession(true)}\n                                className=\"underline text-blue-600 cursor-pointer\"\n                              >\n                                Create new academic calender\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  )}\n                {/* WHILE NO DATA FOUND ====================== */}\n                {this.props.academicCalender.allAcademicPlans !== null &&\n                  !this.state.loading &&\n                  this.props.academicCalender.allAcademicPlans.length > 0 &&\n                  this.props.academicCalender.allAcademicPlans.map(\n                    (item, index) => (\n                      <React.Fragment key={index + item.academic_year_status}>\n                        <tr\n                          className={`border-b border-gray-200 hover:bg-yellow-50 group cursor-pointer ${\n                            this.state.viewThisSession &&\n                            this.state.viewThisSession.academic_year_id ===\n                              item.academic_year_id &&\n                            \"border-gray-400 bg-gray-200\"\n                          }`}\n                          onClick={() => {\n                            this.state.loadingRequest.length <= 0 &&\n                              this.setViewThisSession(item);\n                          }}\n                        >\n                          <td className=\"p-3 text-left whitespace-nowrap\">\n                            {index + 1}\n                          </td>\n                          <td className=\"p-3 text-left\">\n                            <span className=\"text-lg\">\n                              {item.academic_year_name}\n                            </span>\n                          </td>\n                          <td className=\"p-3 text-left\">\n                            {item.academic_year_description}\n                          </td>\n                          <td className=\"p-3 text-left\">\n                            {DATE(item.academic_year_start)}\n                          </td>\n                          <td className=\"p-3 text-left\">\n                            {DATE(item.academic_year_end)}\n                          </td>\n                          <td>\n                            {item.academic_year_status === \"true\" ? (\n                              <span\n                                className={`px-2 py-1 font-semibold text-green-700`}\n                              >\n                                Active\n                              </span>\n                            ) : (\n                              <span\n                                className={`px-2 py-1 font-semibold text-red-700`}\n                              >\n                                Inactive\n                              </span>\n                            )}\n                          </td>\n                          {this.state.viewThisSession &&\n                            this.state.viewThisSession.academic_year_id ===\n                              item.academic_year_id && (\n                              <td>\n                                <div className=\"flex items-center justify-center gap-1\">\n                                  <div\n                                    className={`relative ${\n                                      this.state.loadingRequest.length > 0 ||\n                                      item.academic_year_status === \"true\"\n                                        ? \"cursor-not-allowed\"\n                                        : \"cursor-pointer\"\n                                    }`}\n                                    title={\n                                      item.academic_year_status === \"true\"\n                                        ? \"Activate another session to close this one!\"\n                                        : \"Activation of a session\"\n                                    }\n                                    onClick={() =>\n                                      this.state.loadingRequest.length <= 0 &&\n                                      item.academic_year_status === \"false\" &&\n                                      this.setActivateSession(item)\n                                    }\n                                  >\n                                    <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                                    <span\n                                      className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                                        item.academic_year_status === \"false\"\n                                          ? \"bg-red-500\"\n                                          : \"bg-green-500 transform translate-x-full\"\n                                      }`}\n                                    ></span>\n                                  </div>\n                                  {this.state.loadingRequest ===\n                                    item.academic_year_id &&\n                                    this.state.doAction &&\n                                    this.state.doAction === \"ACTIVATED\" && (\n                                      <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                                    )}\n                                </div>\n                              </td>\n                            )}\n                          <td\n                            className=\"px-5 text-center\"\n                            colSpan={\n                              this.state.viewThisSession &&\n                              this.state.viewThisSession.academic_year_id !==\n                                item.academic_year_id\n                                ? 2\n                                : 0\n                            }\n                          >\n                            <div className=\"flex flex-row items-center gap-2 justify-end\">\n                              {this.state.viewThisSession &&\n                                this.state.viewThisSession.academic_year_id ===\n                                  item.academic_year_id && (\n                                  <div className=\"flex items-center gap-2\">\n                                    <div\n                                      onClick={() => {\n                                        this.state.loadingRequest.length <= 0 &&\n                                          this.setState({\n                                            thisSession: item,\n                                            createSession: true,\n                                            sessionTitle:\n                                              item.academic_year_name,\n                                            academic_year_start:\n                                              item.academic_year_start,\n                                            academic_year_end:\n                                              item.academic_year_end,\n                                            sessionPeriod:\n                                              item.academic_year_description,\n                                          });\n                                        this.setPlansForUpdate(item.events);\n                                      }}\n                                      className={`bg-gray-50 hover:bg-blue-200 rounded-full px-1 py-1 ${\n                                        this.state.loadingRequest.length > 0\n                                          ? \"cursor-not-allowed\"\n                                          : \"cursor-pointer\"\n                                      }`}\n                                    >\n                                      <MdEdit className=\"text-3xl text-blue-700\" />\n                                    </div>\n                                    {/* <div\n                                    // onClick={() => this.deletePlanType(item)}\n                                    className={`bg-gray-50 hover:bg-red-200 flex items-center rounded-full px-1 py-1 ${\n                                      this.state.loadingRequest.length > 0\n                                        ? \"cursor-not-allowed\"\n                                        : \"cursor-pointer\"\n                                    }`}\n                                  >\n                                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                                    {this.state.loadingRequest ===\n                                      item._id &&\n                                      this.state.doAction &&\n                                      this.state.doAction === \"DELETE\" && (\n                                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                                      )}\n                                  </div> */}\n                                  </div>\n                                )}\n                              <div\n                                onClick={() => {\n                                  this.state.loadingRequest.length <= 0 &&\n                                    this.setViewThisSession(item);\n                                }}\n                                className={`bg-gray-50 group-hover:bg-blue-200 rounded-full px-1 py-1 ${\n                                  this.state.loadingRequest.length > 0\n                                    ? \"cursor-not-allowed\"\n                                    : \"cursor-pointer\"\n                                }`}\n                              >\n                                {this.state.viewThisSession &&\n                                this.state.viewThisSession.academic_year_id ===\n                                  item.academic_year_id ? (\n                                  <MdExpandLess className=\"text-3xl text-gray-700\" />\n                                ) : (\n                                  <MdExpandMore className=\"text-3xl text-gray-700\" />\n                                )}\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                        {this.state.viewThisSession &&\n                          this.state.viewThisSession.academic_year_id ===\n                            item.academic_year_id && (\n                            <tr className=\"bg-gray-50\">\n                              <td colSpan={8} className=\"px-3 py-2\">\n                                <SessionDetails\n                                  viewThisSession={this.state.viewThisSession}\n                                  setViewThisSession={this.setViewThisSession}\n                                />\n                              </td>\n                            </tr>\n                          )}\n                      </React.Fragment>\n                    )\n                  )}\n              </tbody>\n            </table>\n          </DashboardContainer>\n        )}\n        {/* END CONTENT ===================================== */}\n        {/* PLAN TYPES FORM =========================================== */}\n        {this.state.createSession && (\n          <DashboardContainer className=\"grid grid-cols-1 sm:grid-cols-4 gap-4\">\n            {this.state.academic_year_start}\n            {this.state.formError &&\n              this.state.formError.element === \"main-form-error\" && (\n                <Alert theme=\"danger\" fixed>\n                  {this.state.formError.msg}\n                </Alert>\n              )}\n\n            {this.state.formError &&\n              this.state.formError.element === \"main-form-success\" && (\n                <Alert theme=\"success\" fixed>\n                  {this.state.formError.msg}\n                </Alert>\n              )}\n            <div className=\"col-span-1 sm:col-span-4 flex flex-col mx-4 my-2\">\n              <form onSubmit={this.handleSubmit} className=\"-mt-2\">\n                {/* STEP ONE FORM ============ */}\n                {this.state.step === 1 && (\n                  <>\n                    {/* INPUT ACADEMIC CALENDER TITLE ====== */}\n                    <TextInput\n                      disabled={\n                        this.state.loadingRequest.length > 0 ? true : false\n                      }\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        this.setSessionTitle(e.target.value);\n                        this.setFormError(null);\n                      }}\n                      value={this.state.sessionTitle}\n                      error={\n                        this.state.formError !== null &&\n                        this.state.formError.element === \"title\"\n                          ? this.state.formError.msg\n                          : \"\"\n                      }\n                      label={\"Academic Year\"}\n                      placeholder={\"2022 - 20223\"}\n                      name={\"academic_year_title\"}\n                      className=\"mb-2\"\n                    />\n\n                    {/* INPUT ACADEMIC CALENDER PERIOD/DESCRIPTION ====== */}\n                    <TextInput\n                      disabled={\n                        this.state.loadingRequest.length > 0 ? true : false\n                      }\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        this.setSessionPeriod(e.target.value);\n                        this.setFormError(null);\n                      }}\n                      value={this.state.sessionPeriod}\n                      error={\n                        this.state.formError !== null &&\n                        this.state.formError.element === \"period\"\n                          ? this.state.formError.msg\n                          : \"\"\n                      }\n                      label={\"Academic Period\"}\n                      placeholder={\"September/July Session\"}\n                      name={\"academic_year_period\"}\n                      className=\"mb-2\"\n                    />\n                    {/* ACADEMIC YEAR STARTING & ENDING DATE ====== */}\n                    <div className=\"w-full mb-2\">\n                      {/* <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                        Academic Year period\n                      </h6> */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              academic_year_start: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"ACADEMIC_YEAR\",\n                              \"START\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"academic_year_start\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.academic_year_start}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"Start date\"}\n                          placeholder={\"Academic year start date\"}\n                          name={\"academic_year_start_date\"}\n                          className=\"mb-1\"\n                        />\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              academic_year_end: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"ACADEMIC_YEAR\",\n                              \"END\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element === \"academic_year_end\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.academic_year_end}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"End date\"}\n                          placeholder={\"Academic year end date\"}\n                          name={\"academic_year_end_date\"}\n                          className=\"mb-1\"\n                        />\n                      </div>\n                    </div>\n                  </>\n                )}\n\n                {/* STEP TWO FORM ============ */}\n                {this.state.step === 2 && (\n                  <>\n                    {/* POST REQUEST STARTING & ENDING DATE ====== */}\n                    <div className=\"w-full mb-2\">\n                      <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                        Post Request period\n                      </h6>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              post_request_start: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"POST_REQUEST\",\n                              \"START\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"post_request_start\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.post_request_start}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"Start date\"}\n                          placeholder={\"Post request start date\"}\n                          name={\"post_request_start\"}\n                          className=\"mb-1\"\n                        />\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({ post_request_end: e.target.value });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"POST_REQUEST\",\n                              \"END\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element === \"post_request_end\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.post_request_end}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"End date\"}\n                          placeholder={\"Post request end date\"}\n                          name={\"post_request_end\"}\n                          className=\"mb-1\"\n                        />\n                      </div>\n                    </div>\n                    {/* TRANSFER REQUEST STARTING & ENDING DATE ====== */}\n                    <div className=\"w-full mb-2\">\n                      <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                        Transfer Request period\n                      </h6>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              transfer_request_start: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"TRANSFER_REQUEST\",\n                              \"START\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"transfer_request_start\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.transfer_request_start}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"Start date\"}\n                          placeholder={\"Transfer request start date\"}\n                          name={\"transfer_request_start\"}\n                          className=\"mb-1\"\n                        />\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              transfer_request_end: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"TRANSFER_REQUEST\",\n                              \"END\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"transfer_request_end\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.transfer_request_end}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"End date\"}\n                          placeholder={\"Transfer request end date\"}\n                          name={\"transfer_request_end\"}\n                          className=\"mb-1\"\n                        />\n                      </div>\n                    </div>\n                    {/* TEACHER RECRUITMENT STARTING & ENDING DATE ====== */}\n                    <div className=\"w-full mb-2\">\n                      <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                        Teacher Recruitment period\n                      </h6>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              teacher_recruitment_start: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"TEACHER_RECRUITMENT\",\n                              \"START\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"teacher_recruitment_start\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.teacher_recruitment_start}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"Start date\"}\n                          placeholder={\"Teacher recruitment start date\"}\n                          name={\"teacher_recruitment_start\"}\n                          className=\"mb-1\"\n                        />\n                        <TextInput\n                          disabled={\n                            this.state.loadingRequest.length > 0 ? true : false\n                          }\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            this.setState({\n                              teacher_recruitment_end: e.target.value,\n                            });\n                            this.setFormError(null);\n                            this.isDateRangeValid(\n                              \"TEACHER_RECRUITMENT\",\n                              \"END\",\n                              e.target.value\n                            );\n                          }}\n                          error={\n                            this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"teacher_recruitment_end\"\n                              ? this.state.formError.msg\n                              : \"\"\n                          }\n                          value={this.state.teacher_recruitment_end}\n                          // min={this.state.thisSession ? \"\" : this.currentDate()}\n                          type=\"date\"\n                          label={\"End date\"}\n                          placeholder={\"Teacher recruitment end date\"}\n                          name={\"teacher_recruitment_end\"}\n                          className=\"mb-1\"\n                        />\n                      </div>\n                    </div>\n                  </>\n                )}\n\n                <div className=\"flex justify-between items-center gap-2\">\n                  <Button\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    type=\"button\"\n                    className={`btn bg-gray-500 hover:bg-gray-700 text-white`}\n                    onClick={() => {\n                      if (this.state.step === 1) {\n                        this.setState({\n                          sessionTitle: this.state.thisSession\n                            ? this.state.thisSession.academic_year_name\n                            : \"\",\n                          sessionPeriod: this.state.thisSession\n                            ? this.state.thisSession.academic_year_description\n                            : \"\",\n                          formError: null,\n                        });\n                        this.state.thisSession &&\n                          this.setPlansForUpdate(this.state.thisSession.events);\n                        !this.state.thisSession &&\n                          this.setState({\n                            academic_year_start: \"\",\n                            post_request_start: \"\",\n                            transfer_request_start: \"\",\n                            teacher_recruitment_start: \"\",\n                            academic_year_end: \"\",\n                            post_request_end: \"\",\n                            transfer_request_end: \"\",\n                            teacher_recruitment_end: \"\",\n                          });\n                      } else {\n                        this.setState({ step: 1 });\n                      }\n                    }}\n                    theme={this.state.step === 1 ? \"danger-light\" : \"default\"}\n                  >\n                    {this.state.step === 1 ? \"Cancel\" : \"Back\"}\n                  </Button>\n\n                  {this.state.step === 1 && (\n                    <Button\n                      disabled={\n                        this.state.loadingRequest.length > 0 ? true : false\n                      }\n                      loading={\n                        this.state.loadingRequest.length > 0 ? true : false\n                      }\n                      type=\"button\"\n                      onClick={() => this.handleNext()}\n                      theme=\"accent\"\n                    >\n                      Next\n                    </Button>\n                  )}\n                  {this.state.step === 2 && (\n                    <Button\n                      disabled={\n                        this.state.loadingRequest.length > 0 ? true : false\n                      }\n                      loading={\n                        this.state.loadingRequest.length > 0 ? true : false\n                      }\n                      type=\"submit\"\n                      theme=\"accent\"\n                    >\n                      {this.state.loadingRequest.length > 0\n                        ? \"Please wait...\"\n                        : this.state.thisSession !== null\n                        ? \"Update\"\n                        : \"Create\"}\n                    </Button>\n                  )}\n                </div>\n              </form>\n            </div>\n          </DashboardContainer>\n        )}\n        {this.state.activateSession !== null && (\n          <ActionConfirm\n            modalType={ActionConfirmEnum.OTHER}\n            confirmFun={() =>\n              this.handleSessionActivation(this.state.activateSession!)\n            }\n            setModalAction={(status: boolean) =>\n              !status && this.setActivateSession(null)\n            }\n            description={\n              \"Do you really want to activate this session? This process is very sensitive!\"\n            }\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  academicCalender,\n}: StoreState): {\n  auth: Auth;\n  academicCalender: AcademicCalenderReducerInterface;\n} => {\n  return {\n    auth,\n    academicCalender,\n  };\n};\n\nexport const AcademicCalender = React.memo(\n  connect(mapStateToProps, {\n    FC_GetAllAcademicCalender,\n    FC_CreateAcademicCalendar,\n    FC_UpdateAcademicCalendar,\n    FC_DeleteAcademicCalendar,\n    FC_AcademicCalenderActivation,\n  })(_AcademicCalender)\n);\n"],"sourceRoot":""}