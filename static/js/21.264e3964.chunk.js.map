{"version":3,"sources":["components/Inputs/InputSelect.tsx","components/PlacementListPreview/PlacementListPreview.tsx","components/UpdatePlacementComponent/UpdatePlacementComponent.tsx","containers/UpdatePlacementList/UpdatePlacementList.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","PlacementListPreview","placement_list","footer","header","filter","itm","status","location","district_code","district_name","school","school_code","school_name","school_category","school_status","staff_category","staff_code","nid","full_name","first_name","last_name","phone_numbers","email","dob","sex","nationality_id","marital_status","qualification","position","specialization","start_date_in_the_school","rssb_number","bank_account","_PlacementList","props","submitLogin","e","preventDefault","componentDidMount","placement","placements","length","to","RenderPageAccess","auth","role","access","UsersAccess","HEADTEACHER_UPDATE_PLACEMENT_LIST","startApp","basic","academic_calender","setState","target","msg","FC_GetTeachersBySchool","placementExist","find","placement_list_approval_id","placement_id","selected_placement","undefined","ht_comment","loading_data","staff","roles","req","UpdatePlacement","el","submitList","state","loading_placement_submit","FC_UpdatePlacementList","academic_year_id","list","JSON","stringify","month","selected_month","setTimeout","console","log","setApprovedList","approved_list","SelectAll","DeSelectAll","loading","selected_role","selected_request_id","selected_value","selected_comment","selected_auto_level","search","selected_qualification","RequestsList","this","role_id","user_id","username","Loading","Alert","theme","fixed","head_teacher_name","Button","onClick","type","onSubmit","readOnly","DashboardContainer","Heading","TextInput","qualifications","qualification_name","colSpan","existOnPlacement","findIndex","bind","React","Component","UpdatePlacementComponent","connect","UpdatePlacementList","match","params"],"mappings":"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","file":"static/js/21.264e3964.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        <label\n          htmlFor=\"login-form-email\"\n          className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n        >\n          {label}\n        </label>\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import React, { FC, ReactElement } from \"react\";\nimport { TeacherData } from \"../../actions\";\nimport Heading from \"../Heading/Heading\";\n\ntype PlacementListPreviewProps = {\n  placement_list: TeacherData[];\n  header: React.ReactNode | undefined;\n  footer: React.ReactNode | undefined;\n};\n\nconst PlacementListPreview: FC<PlacementListPreviewProps> = ({\n  placement_list,\n  footer,\n  header,\n}): ReactElement => {\n  return (\n    <div className=\"fixed top-0 bottom-0 right-0 left-0 animate__animated animate__fadeIn  bg-black bg-opacity-95 z-60 overflow-auto\">\n      <div className=\"w-full mx-auto bg-white px-3 py-8 animate__animated animate__zoomIn animate__faster\">\n        {header && header}\n\n        <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                <th className=\"p-1 border\">Date to School</th>\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status === \"Active\")\n                .map((itm, i) => (\n                  <tr key={i}>\n                    <th className=\"p-1 border\">{i + 1}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_code}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_name}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                    <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.school?.school_category}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_status}</th>\n                    <th className=\"p-1 border\">{itm?.staff_category}</th>\n                    <th className=\"p-1 border\">{itm?.staff_code}</th>\n                    <th className=\"p-1 border\">{itm?.nid}</th>\n                    <th className=\"p-1 border\">{itm?.full_name}</th>\n                    <th className=\"p-1 border\">{itm?.first_name}</th>\n                    <th className=\"p-1 border\">{itm?.last_name}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                    <th className=\"p-1 border\">{itm?.email}</th>\n                    <th className=\"p-1 border\">{itm?.dob}</th>\n                    <th className=\"p-1 border\">{itm?.sex}</th>\n                    <th className=\"p-1 border\">{itm?.nationality_id}</th>\n                    <th className=\"p-1 border\">{itm?.marital_status}</th>\n                    <th className=\"p-1 border\">{itm?.qualification}</th>\n                    <th className=\"p-1 border\">{itm?.position}</th>\n                    <th className=\"p-1 border\">{itm?.specialization}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                    <th className=\"p-1 border\">{itm?.bank_account}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.status}</th>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        <br />\n        {/* <Heading className=\"text-center\">\n          Others candidates on placement list\n        </Heading> */}\n        {/* <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                <th className=\"p-1 border\">Date to School</th>\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status !== \"Active\")\n                .map((itm, i) => (\n                  <tr key={i}>\n                    <th className=\"p-1 border\">{i + 1}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_code}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_name}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                    <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.school?.school_category}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_status}</th>\n                    <th className=\"p-1 border\">{itm?.staff_category}</th>\n                    <th className=\"p-1 border\">{itm?.staff_code}</th>\n                    <th className=\"p-1 border\">{itm?.nid}</th>\n                    <th className=\"p-1 border\">{itm?.full_name}</th>\n                    <th className=\"p-1 border\">{itm?.first_name}</th>\n                    <th className=\"p-1 border\">{itm?.last_name}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                    <th className=\"p-1 border\">{itm?.email}</th>\n                    <th className=\"p-1 border\">{itm?.dob}</th>\n                    <th className=\"p-1 border\">{itm?.sex}</th>\n                    <th className=\"p-1 border\">{itm?.nationality_id}</th>\n                    <th className=\"p-1 border\">{itm?.marital_status}</th>\n                    <th className=\"p-1 border\">{itm?.qualification}</th>\n                    <th className=\"p-1 border\">{itm?.position}</th>\n                    <th className=\"p-1 border\">{itm?.specialization}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                    <th className=\"p-1 border\">{itm?.bank_account}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.status}</th>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div> */}\n\n        <div className=\"\">{footer && footer}</div>\n      </div>\n    </div>\n  );\n};\nexport default PlacementListPreview;\n","import React, { Fragment } from \"react\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdIndeterminateCheckBox,\n  MdWarning,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  Auth,\n  Basic,\n  TeacherData,\n  TeacherDataRole,\n  FC_GetTeachersBySchool,\n  FC_UpdatePlacementList,\n  Placement,\n  API_GetPlacementBySchool,\n  FT_UpdatePlacementList,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport PlacementListPreview from \"../../components/PlacementListPreview/PlacementListPreview\";\nimport { StoreState } from \"../../reducers\";\nimport { RenderPageAccess, UsersAccess } from \"../../utils/access\";\nimport { search } from \"../../utils/functions\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  placement_id: string;\n  FC_UpdatePlacementList: FT_UpdatePlacementList;\n}\n\ninterface AppState {\n  loading: boolean;\n  approved_list: boolean;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"update-error\"\n      | \"main-error\"\n      | \"submit-list-error\"\n      | \"submit-month-error\"\n      | \"submit-list-success\"\n      | null;\n    msg: string;\n  };\n  data: TeacherData[];\n  selected_placement: API_GetPlacementBySchool | null;\n  placement_list: TeacherData[];\n  roles: TeacherDataRole[];\n  loading_data: boolean;\n  selected_role: string;\n  selected_request_id: string;\n  selected_value: string;\n  selected_comment: string;\n  selected_auto_level: string;\n  search: string;\n  selected_qualification: string;\n  selected_month: string;\n  loading_placement_submit: boolean;\n  ht_comment: string;\n}\n\nclass _PlacementList extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      approved_list: false,\n      selected_placement: null,\n      loading: false,\n      data: [],\n      placement_list: [],\n      roles: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_data: false,\n      selected_role: \"\",\n      selected_request_id: \"\",\n      selected_value: \"0\",\n      selected_comment: \"\",\n      selected_auto_level: \"\",\n      search: \"\",\n      selected_qualification: \"\",\n      selected_month: \"\",\n      loading_placement_submit: false,\n      ht_comment: \"\",\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n  };\n\n  componentDidMount = () => {\n    if (this.props.placement.placements.length === 0)\n      return <Redirect to=\"/placement-list-ht\" />;\n\n    RenderPageAccess(\n      this.props.auth.role?.access,\n      UsersAccess.HEADTEACHER_UPDATE_PLACEMENT_LIST,\n      () => {\n        this.startApp();\n      }\n    );\n  };\n\n  startApp = () => {\n    if (this.props.basic.academic_calender === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"Failed to load data, please reload data\",\n        },\n      });\n    } else if (this.props.auth.school === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No school assigned to you\",\n        },\n      });\n    } else {\n      let school_code = this.props.auth.school.school_code;\n      this.setState({\n        error: {\n          target: null,\n          msg: \"\",\n        },\n      });\n      FC_GetTeachersBySchool(school_code, (status, data, msg) => {\n        if (status === true && data !== null) {\n          // * get the current list\n          let placementExist = this.props.placement.placements.find(\n            (itm) => itm.placement_list_approval_id === this.props.placement_id\n          );\n          this.setState({\n            selected_placement:\n              placementExist === undefined ? null : placementExist,\n            ht_comment:\n              placementExist === undefined ? \"\" : placementExist?.ht_comment,\n            loading_data: false,\n            data: data.staff,\n            roles: data.role,\n            placement_list: data.staff.filter(\n              (req) => !(req.first_name == null || req.first_name === \"\")\n            ),\n          });\n        } else {\n          this.setState({\n            loading_data: false,\n            error: {\n              msg: msg,\n              target: \"main-error\",\n            },\n          });\n        }\n      });\n    }\n  };\n\n  UpdatePlacement = (el: TeacherData, status: number) => {\n    // if (status < 0) {\n    //   this.setState({\n    //     placement_list: [...this.state.placement_list, el],\n    //   });\n    // } else {\n    //   this.setState({\n    //     placement_list: this.state.placement_list.filter(\n    //       (itm) => itm.user_id !== el.user_id\n    //     ),\n    //   });\n    // }\n  };\n\n  submitList = (e: any) => {\n    e.preventDefault();\n\n    // if (this.state.selected_month === \"\")\n    //   return this.setState({\n    //     error: {\n    //       target: \"submit-month-error\",\n    //       msg: \"Please select the month\",\n    //     },\n    //   });\n\n    if (\n      this.props.basic.academic_calender === null ||\n      this.props.auth.school === null\n    )\n      return this.setState({\n        error: {\n          target: \"submit-list-error\",\n          msg: \"You don't has a district assigned to you\",\n        },\n      });\n\n    // let district_code = this.props.auth.school.school_code.substring(0, 2);\n\n    if (this.state.selected_placement === null)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No placement list selected\",\n        },\n      });\n\n    this.setState({\n      loading_placement_submit: true,\n    });\n    this.props.FC_UpdatePlacementList(\n      this.state.selected_placement.placement_list_approval_id,\n      {\n        academic_year_id: this.state.selected_placement.academic_year_id,\n        district_code: this.state.selected_placement.district_code,\n        list: JSON.stringify(this.state.placement_list),\n        month: this.state.selected_placement.month,\n        school_code: this.state.selected_placement.school_code,\n        ht_comment: this.state.ht_comment,\n      },\n      (status, msg) => {\n        if (status === true) {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-success\",\n              msg: `Placement list for ${this.state.selected_month} has been updated successfully`,\n            },\n          });\n        } else {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-error\",\n              msg: msg,\n            },\n          });\n        }\n\n        setTimeout(() => {\n          this.setState({\n            error: {\n              msg: \"\",\n              target: null,\n            },\n          });\n        }, 3000);\n      }\n    );\n    console.log(\"janvier\");\n  };\n\n  setApprovedList = () =>\n    this.setState({ approved_list: !this.state.approved_list });\n\n  SelectAll = () => this.setState({ placement_list: this.state.data });\n  DeSelectAll = () => this.setState({ placement_list: [] });\n\n  render() {\n    let RequestsList =\n      this.state.selected_role === \"\"\n        ? this.state.data\n        : this.state.data.filter(\n            (itm) => itm.role_id === this.state.selected_role\n          );\n\n    RequestsList =\n      this.state.selected_qualification === \"\"\n        ? RequestsList\n        : RequestsList.filter(\n            (itm) => itm.qualification === this.state.selected_qualification\n          );\n\n    RequestsList = search(RequestsList, this.state.search, {\n      email: true,\n      first_name: true,\n      full_name: true,\n      last_name: true,\n      phone_numbers: true,\n      qualification: true,\n      role: true,\n      role_id: true,\n      status: true,\n      user_id: true,\n      username: true,\n    });\n\n    if (this.state.loading_data === true)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.error.target === \"main-error\") {\n      return (\n        <Alert theme=\"danger\" fixed>\n          {this.state.error.msg}\n        </Alert>\n      );\n    }\n\n    if (this.state.approved_list === true)\n      return (\n        <>\n          <PlacementListPreview\n            placement_list={this.state.placement_list}\n            header={\n              <>\n                <div className=\"flex\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-xl\">\n                      <h2>\n                        School code:{\" \"}\n                        <b>{this.state.selected_placement?.school_code}</b>\n                      </h2>\n                      <h2>\n                        School name:{\" \"}\n                        <b>{this.state.selected_placement?.school_name}</b>\n                      </h2>\n                      <h2>\n                        Done by:{\" \"}\n                        <b>\n                          {this.state.selected_placement?.head_teacher_name}\n                        </b>\n                      </h2>\n                      <h2>\n                        Month: <b>{this.state.selected_placement?.month}</b>\n                      </h2>\n                      <h2>\n                        District:{\" \"}\n                        <b>{this.state.selected_placement?.district_name}</b>\n                      </h2>\n                    </div>\n                  </div>\n                  <div className=\"\">\n                    <Button\n                      size=\"lg\"\n                      theme=\"danger\"\n                      onClick={this.setApprovedList}\n                      disabled={this.state.loading_placement_submit}\n                      type=\"button\"\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n\n                <h1 className=\"text-center text-3xl font-bold mb-4\">\n                  Placement list\n                </h1>\n              </>\n            }\n            footer={\n              <>\n                <form onSubmit={this.submitList}>\n                  <div className=\"mt-5 flex border-t pt-3\">\n                    <div className=\"flex-1\"></div>\n                    <div className=\"flex-1\">\n                      {this.state.error.target === \"submit-list-success\" && (\n                        <Alert theme=\"success\">{this.state.error.msg}</Alert>\n                      )}\n                      {this.state.error.target === \"submit-list-error\" && (\n                        <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n                      )}\n                      <div className=\"\">\n                        <span>Comment:</span>\n                        <textarea\n                          value={this.state.ht_comment}\n                          // onChange={(e) =>\n                          //   this.setState({\n                          //     ht_comment: e.target.value,\n                          //   })\n                          // }\n                          readOnly\n                          className=\"w-full h-32 border-2   rounded p-2\"\n                        ></textarea>\n                      </div>\n                      <div className=\"text-right\">\n                        <Button\n                          size=\"lg\"\n                          className=\"flex-1\"\n                          loading={this.state.loading_placement_submit}\n                        >\n                          Update placement list\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </>\n            }\n          />\n        </>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"submit-list-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"submit-list-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"fixed bottom-0 right-0 flex left-0 bg-white shadow-lg border-t-2 px-3 items-center\">\n          <div className=\"main-side-spacer\"></div>\n          <div className=\"flex-1 p-2 flex items-center\">\n            <div className=\"mr-4 bg-green-50 text-green-700 px-2\">\n              <span className=\"text-sm\">Total selected</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.placement_list.length}\n              </h3>\n            </div>\n            <div className=\"px-2 bg-gray-50 rounded\">\n              <span className=\"text-sm\">Total Teachers</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.data.length}\n              </h3>\n            </div>\n            <div className=\"flex-1\"></div>\n            <div className=\"animate__animated animate__zoomIn animate__faster flex\">\n              {this.state.placement_list.length >= 1 && (\n                <Button\n                  theme=\"accent-light\"\n                  onClick={this.setApprovedList}\n                  className=\" animate__faster\"\n                >\n                  Preview list\n                </Button>\n              )}\n\n              <form onSubmit={this.submitList}>\n                <Button\n                  theme=\"success\"\n                  className=\" animate__faster ml-1\"\n                  loading={this.state.loading_placement_submit}\n                >\n                  Update placement list\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <DashboardContainer>\n          {this.state.error.target === \"main\" && (\n            <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n          )}\n          {this.state.error.target === \"loading-update-error\" && (\n            <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n          )}\n\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <Heading>\n                Update placement list {this.state.selected_placement?.month}{\" \"}\n              </Heading>\n              <p className=\"opacity-60 text-lg -mt-1 font-bold text-accent-900 dark:text-accent-800\">\n                {this.props.auth.school?.school_name}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"border border-t mt-2 mb-1 flex items-center pl-3 pr-2 rounded\">\n              <div className=\"flex-1 pr-2\">\n                <TextInput\n                  error=\"\"\n                  label=\"Search\"\n                  name=\"\"\n                  type=\"search\"\n                  onChange={(e) => this.setState({ search: e.target.value })}\n                  placeholder=\"Search by teacher name\"\n                  value={this.state.search}\n                  size=\"sm\"\n                />\n              </div>\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    { title: \"All Roles\", value: \"\" },\n                    ...this.state.roles.map((el) => ({\n                      title: el.role,\n                      value: el.role_id,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_role\"\n                  onChange={(e) =>\n                    this.setState({ selected_role: e.target.value })\n                  }\n                  label=\"Role\"\n                  placeholder=\"Select role\"\n                  value={this.state.selected_role}\n                  size=\"sm\"\n                />\n              </div>\n              {this.props.basic.qualifications !== null && (\n                <div className=\"px-2\">\n                  <InputSelect\n                    data={[\n                      { title: \"All\", value: \"\" },\n                      ...this.props.basic.qualifications.map((el) => ({\n                        title: el.qualification_name,\n                        value: el.qualification_name,\n                      })),\n                    ]}\n                    error=\"\"\n                    name=\"select_qualification\"\n                    onChange={(e) =>\n                      this.setState({ selected_qualification: e.target.value })\n                    }\n                    label=\"Qualification\"\n                    placeholder=\"Select Qualification\"\n                    value={this.state.selected_qualification}\n                    size=\"sm\"\n                  />\n                </div>\n              )}\n              {/* <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n                <label className=\"\">Results:</label>\n                <h4 className=\"text-2xl -mt-1 font-bold\">\n                  {RequestsList.length}\n                </h4>\n              </div> */}\n            </div>\n            <div className=\"p-2 flex\">\n              {/* {this.state.placement_list.length !== this.state.data.length && (\n                <Button\n                  theme=\"default\"\n                  size=\"sm\"\n                  className=\"flex items-center\"\n                  onClick={this.SelectAll.bind(this)}\n                >\n                  <MdIndeterminateCheckBox className=\"inline-block text-lg mr-1\" />\n                  <span>Select all</span>\n                </Button>\n              )} */}\n\n              {/* {this.state.placement_list.length !== 0 && (\n                <Button\n                  theme=\"default\"\n                  size=\"sm\"\n                  className=\"flex items-center ml-2\"\n                  onClick={this.DeSelectAll.bind(this)}\n                >\n                  <MdIndeterminateCheckBox className=\"inline-block text-lg mr-1\" />\n                  <span>De-select all</span>\n                </Button>\n              )} */}\n            </div>\n            <table className=\"w-full text-left table-auto border\">\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Names</th>\n                  <th>First name</th>\n                  <th>Last name</th>\n                  <th>Phone number</th>\n                  <th>Role</th>\n                  <th>Qualification</th>\n                </tr>\n              </thead>\n              <tbody>\n                {RequestsList.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={8}\n                      className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      <Heading size=\"md\" className=\"opacity-60 font-light\">\n                        No results found\n                      </Heading>\n                    </td>\n                  </tr>\n                ) : (\n                  RequestsList.map((req, i) => {\n                    let existOnPlacement = this.state.placement_list.findIndex(\n                      (itm) => itm.user_id === req.user_id\n                    );\n\n                    return (\n                      <Fragment key={i}>\n                        <tr\n                          className={`group border rounded hover:bg-blue-500 hover:bg-opacity-20 ${\n                            existOnPlacement < 0\n                              ? \"\"\n                              : \"bg-green-100 bg-opacity-10\"\n                          } `}\n                        >\n                          <td\n                            className=\"p-1 border cursor-pointer\"\n                            key={i}\n                            onClick={this.UpdatePlacement.bind(\n                              this,\n                              req,\n                              existOnPlacement\n                            )}\n                          >\n                            {existOnPlacement < 0 ? (\n                              <MdWarning\n                                className=\"text-3xl text-yellow-500 mx-auto\"\n                                title=\"This teacher is not validated\"\n                              />\n                            ) : (\n                              <MdCheckBox className=\"text-3xl text-green-600 mx-auto\" />\n                            )}\n                          </td>\n                          <td className=\"p-2 border\">{req.full_name}</td>\n                          <td className=\"p-2 border\">{req.first_name}</td>\n                          <td className=\"p-2 border\">{req.last_name}</td>\n                          <td className=\"p-2 border\">{req.phone_numbers}</td>\n                          <td className=\"p-2 border\">{req.role}</td>\n                          <td className=\"p-2 border\">{req.qualification}</td>\n                        </tr>\n                      </Fragment>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n        <div className=\"h-24\"></div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n} => {\n  return {\n    auth: auth,\n    basic: basic,\n    placement: placement,\n  };\n};\n\nexport const UpdatePlacementComponent = connect(mapStateToProps, {\n  FC_UpdatePlacementList,\n})(_PlacementList);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { UpdatePlacementComponent } from \"../../components/UpdatePlacementComponent/UpdatePlacementComponent\";\n\nexport class UpdatePlacementList extends React.Component<\n  IDetailsProps,\n  IDetailsState\n> {\n  render() {\n    return (\n      <UpdatePlacementComponent\n        placement_id={this.props.match.params.placement_id}\n      />\n    );\n  }\n}\n\ninterface IDetailsProps extends RouteComponentProps<{ placement_id: string }> {}\n\ninterface IDetailsState {\n  name: string;\n}\n"],"sourceRoot":""}