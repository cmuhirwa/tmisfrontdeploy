{"version":3,"sources":["actions/training-offers.ts","trainingModule/CentersManagement/AddCenter.tsx","trainingModule/CentersManagement/CentersList.tsx","trainingModule/CentersManagement/TrainingCentersList.tsx","trainingModule/CentersManagement/TrainingsList.tsx","trainingModule/CentersManagement/CentersManagement.tsx"],"names":["TrainingImplementationStatus","TrainingEvaluationStatus","GetSchoolTrainingProvidersByStatus","school_code","status","setResponse","axios","get","TRAINING_APP_URL","res","console","log","data","type","msg","returnErrorToText","GetSchoolTrainingParticipants","training_id","toString","length","school_teachers","response","school_parents","item","undefined","find","itm","user_id","push","email","first_name","id","last_name","nid","phone_numbers","position_code","position_name","qualification_id","qualification_name","subjects","teaching_level","teaching_level_id","trainee_request_id","training_to_group_id","cohort_id","GetTraineesToBeTrainedOnSchool","post","AssignTraineeToTraining","RemoveTraineeToTraining","patch","GetParentsToAttendTraining","new","AddNewTraineeInfoAssignToTraining","APP_URL","GetDistrictTrainingProvidersByStatus","district_code","GetDistrictTrainingParticipants","role","role_id","staff_code","GetTraineesToBeTrainedOnDistrict","GetTrainingsListByStatus","AddCenter","props","CreateNewTraining","e","preventDefault","state","district_id","setState","error","target","center_type_id","name","loading","success","CreateNewCenter","onCreated","openSelectCenterType","openSelectDistrict","onSubmit","this","className","style","minHeight","onClick","districts","district_name","zIndex","SelectCustom","title","close","click","centerTypes","center_types","TextInput","onChange","value","label","placeholder","MainContainer_className","disabled","Button","theme","Component","CentersList","centers","colSpan","GetFilteredData","map","i","center_name","center_type_name","TrainingCentersList","GetTotalTrainees","number_of_trainees","GetTotalCenters","center_id","GetTotalRooms","group_id","GetTotalDistrict","commaFy","TrainingsList","LoadTrainings","selectedStatus","trainings","FilteredTrainings","search","searchData","INPROGRESS","trainingStatuses","key","COMPLETED","CANCELLED","READY_FOR_EVALUATION","DRAFT","stat","s","Alert","onSelected","topic","DATE","start_date","end_date","development_partner_name","dp_contact","_CentersManagement","GetAllCentersList","GetAllCenters","GetAllCentersListByTrainingSelected","GetAllCentersByTrainingID","trainingCenters","GetAllCenterTypesDetails","openSelectTraining","GetCenterTypes","center_room_type","LoadAllDistricts","FC_GetDistricts","selected_district_code","filter","search_value","GetFilteredTrainingCenters","addCenter","selectedTraining","width","Loading","ExportToExcel","fileData","No","fileName","btnName","Modal","backDrop","backDropClose","displayClose","padding","body","footer","widthSizeClass","ModalSize","large","maxWidth","marginTop","ModalMarginTop","small","CentersManagement","connect","auth","basic"],"mappings":"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","file":"static/js/40.76dbdc56.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { APP_URL, TRAINING_APP_URL } from \"../config/app.config\";\nimport { SearchParentResponseInterface } from \"../trainingModule/TrainingOffers/School/Details/FormToAddParticipant\";\nimport { returnErrorToText } from \"../utils/functions\";\nimport { SystemRole } from \"./basic.action\";\n\nexport enum TrainingImplementationStatus {\n  DRAFT = \"DRAFT\",\n  READY_FOR_EVALUATION = \"READY_FOR_EVALUATION\",\n  INPROGRESS = \"INPROGRESS\",\n  COMPLETED = \"COMPLETED\",\n  CANCELLED = \"CANCELLED\",\n}\n\nexport enum TrainingEvaluationStatus {\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n  REJECTED = \"REJECTED\",\n}\n\nexport interface GetTrainingsListByStatusInterface {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervention_area_id: number;\n  intervention_area: string;\n  sub_area_id: number;\n  sub_area_name: string;\n  topic_id: number;\n  topic: string;\n  total: number | null;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n  partner_type_name: string;\n  trainee_category: { id: string; name: string; roles: SystemRole[] | null }[];\n  trainee_criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n  centers: { id: string; name: string }[];\n  trainee_request_id: string; //new to be added\n  training_to_group_id: string; //new to be added\n  is_approved: 1 | 0 | \"\" | undefined;\n  cohort_end_date: string;\n  cohort_id: string;\n  cohort_name: string;\n  cohort_sessions: {\n    end_date: string;\n    day_total: number;\n    session_id: string;\n    start_date: string;\n  }[];\n  cohort_start_date: string;\n}\n\nexport interface TrainingByImplementationStatusDetails {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  agenda_file_name: string;\n  intervention_area_id: string;\n  intervention_area: string;\n  sub_area_id: string;\n  subarea: string;\n  topic_id: string;\n  topic: string;\n  material_links: {\n    title: string;\n  }[];\n  total: number;\n  budget: number;\n  development_partner_id: string;\n  development_partner_name: string;\n  dp_contact: string;\n  dp_email: string;\n  evaluation_status: TrainingEvaluationStatus;\n  evaluated_date: string;\n  evaluation_comment: string;\n  implementation_status: TrainingImplementationStatus;\n}\n\nexport interface TrainingParticipants {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  id: number;\n  user_id: string;\n  training_id: string;\n  training_to_group_id: string;\n  trainee_request_id: number;\n  position_code: string;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  teaching_level_id: number;\n  teaching_level: string;\n  subjects: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[];\n  role?: string;\n  role_id?: string;\n  cohort_id: string | null;\n}\nexport interface DistrictTrainingParticipants {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n  cohort_id: string | null;\n}\nexport interface TeachersToBeTrainedResponse {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  province_code: string | null;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  teaching_level_id: number;\n  teaching_level: string;\n  subjects: {\n    teacher_code: string;\n    course_code: string;\n    course_name: string;\n  }[];\n  position_code: string;\n  district_code: string | null;\n  sector_code: string | null;\n  user_id: string;\n  role: string;\n  role_id: string;\n}\n\nexport interface DistrictToBeTrainedResponse {\n  staff_code: string;\n  user_id: string;\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string | null;\n  role_id: string;\n  role: string;\n  cohort_id: string | null;\n}\n\nexport interface GetTraineesToBeTrainedOnSchoolInterface {\n  training_id: string;\n  topic: number;\n  sub_area_id: number;\n  school_code: string;\n  criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}\n\nexport interface GetTraineesToBeTrainedOnDistrictInterface {\n  training_id: string;\n  topic: number;\n  sub_area_id: number;\n  district_code: string;\n  criteria: {\n    positions: { id: string; name: string }[];\n    qualifications: { id: string; name: string }[];\n    levels: { id: string; name: string }[];\n    districts: { id: string; name: string }[];\n    sectors: { id: string; name: string }[];\n    subjects: {\n      level_code: string;\n      level_name: string;\n      course_code: string;\n      course_name: string;\n    }[];\n    strict: boolean;\n  };\n}\n\nexport interface AssignTraineeToTrainingDataInterface {\n  training_id: string;\n  user_id: string;\n  training_to_group_id: number;\n  trainee_request_id: number;\n  district_code: number | null;\n  school_code: number | null;\n  position_code: string;\n  qualification_id: string;\n  level_id: string;\n  sector_id: string | null;\n  trainee_category_id: string;\n  cohort_id: string;\n}\n\nexport interface NewTraineeInTheSystemInterface {\n  nid: string;\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  school_code: string;\n  training_id: string;\n  trainee_request_id: string;\n}\n\nexport const GetSchoolTrainingProvidersByStatus = async (\n  school_code: string,\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: GetTrainingsListByStatusInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<GetTrainingsListByStatusInterface[]>(\n      `${TRAINING_APP_URL}/training/school/${school_code}/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport interface AddedTraineesWhoAreNotInUserToRole {\n  nid: string;\n  first_name: string;\n  last_name: string;\n  phone_numbers: string;\n  email: string;\n  id: number;\n  user_id: string;\n  training_id: string;\n  training_to_group_id: string | null;\n  trainee_request_id: number;\n  cohort_id: string | null;\n}\n\nexport const GetSchoolTrainingParticipants = async (\n  training_id: string,\n  school_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TrainingParticipants[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<{\n      school_teachers: TrainingParticipants[];\n      school_parents: AddedTraineesWhoAreNotInUserToRole[];\n    }>(\n      `${TRAINING_APP_URL}/training/trainee/${\n        school_code.toString().length === 2 ? \"district\" : \"school\"\n      }/${training_id}/${school_code}`\n    );\n    console.log(\"Res participants one: \", res.data.school_teachers);\n    if (res) {\n      const response = res.data.school_teachers;\n      if (res.data.school_parents.length > 0) {\n        for (const item of res.data.school_parents) {\n          if (\n            response.find((itm) => itm.user_id === item.user_id) === undefined\n          ) {\n            response.push({\n              email: item.email,\n              first_name: item.first_name,\n              id: item.id,\n              last_name: item.last_name,\n              nid: item.nid,\n              phone_numbers: item.phone_numbers,\n              position_code: \"\",\n              position_name: \"\",\n              qualification_id: \"\",\n              qualification_name: \"\",\n              subjects: [],\n              teaching_level: \"\",\n              teaching_level_id: 1,\n              trainee_request_id: item.trainee_request_id,\n              training_id: item.training_id,\n              training_to_group_id:\n                item.training_to_group_id === null\n                  ? \"\"\n                  : item.training_to_group_id,\n              user_id: item.user_id,\n              cohort_id: item.cohort_id,\n            });\n          }\n        }\n      }\n      setResponse(false, {\n        data: response,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    console.log(\"error no: \", error);\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetTraineesToBeTrainedOnSchool = async (\n  data: GetTraineesToBeTrainedOnSchoolInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TeachersToBeTrainedResponse[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<TeachersToBeTrainedResponse[]>(\n      `${TRAINING_APP_URL}/training/search/teacher`,\n      data\n    );\n    console.log(\"Teachers to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const AssignTraineeToTraining = async (\n  data: AssignTraineeToTrainingDataInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post(`${TRAINING_APP_URL}/training/trainee`, data);\n    console.log(\"Assign trainee to training: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg: \"Trainee added successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const RemoveTraineeToTraining = async (\n  data: {\n    training_id: string;\n    user_id: string;\n    status: \"DISABLED\";\n    cohort_id: string;\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.patch(\n      `${TRAINING_APP_URL}/training/trainee/toggle`,\n      data\n    );\n    console.log(\"Removing: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg: \"Trainee added successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetParentsToAttendTraining = async (\n  data: {\n    topic_id: string;\n    sub_area_id: number;\n    nid: string;\n    start_date: string;\n    end_date: string;\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      new: boolean;\n      data: SearchParentResponseInterface | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<SearchParentResponseInterface>(\n      `${TRAINING_APP_URL}/training/search/parent`,\n      data\n    );\n    console.log(\"Parents/Other users to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        new: false,\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      new:\n        error?.response?.status !== undefined && error?.response?.status === 400\n          ? true\n          : false,\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const AddNewTraineeInfoAssignToTraining = async (\n  data: NewTraineeInTheSystemInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: SearchParentResponseInterface | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<SearchParentResponseInterface>(\n      `${APP_URL}/user/training/pregister`,\n      data\n    );\n    console.log(\"New user added: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data added successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// District training offers\nexport const GetDistrictTrainingProvidersByStatus = async (\n  district_code: string,\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: GetTrainingsListByStatusInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<GetTrainingsListByStatusInterface[]>(\n      `${TRAINING_APP_URL}/training/district/${district_code}/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get District training added participants\nexport const GetDistrictTrainingParticipants = async (\n  training_id: string,\n  district_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: {\n        school_parents: [];\n        school_teachers: DistrictTrainingParticipants[];\n      } | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<{\n      school_parents: [];\n      school_teachers: DistrictTrainingParticipants[];\n    }>(\n      `${TRAINING_APP_URL}/training/trainee/district/${training_id}/${district_code}`\n    );\n    console.log(\"Res participants: \", res.data);\n    if (res) {\n      const response: DistrictTrainingParticipants[] = [];\n      for (const item of res.data.school_teachers) {\n        if (\n          response.find((itm) => itm.user_id === item.user_id) === undefined\n        ) {\n          response.push({\n            email: item.email,\n            first_name: item.first_name,\n            last_name: item.last_name,\n            nid: item.nid,\n            phone_numbers: item.phone_numbers,\n            user_id: item.user_id,\n            role: item.role,\n            role_id: item.role_id,\n            staff_code: item.staff_code,\n            cohort_id: item.cohort_id,\n          });\n        }\n      }\n      setResponse(false, {\n        data: {\n          school_parents: [],\n          school_teachers: response,\n        },\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get to be trained on district level\nexport const GetTraineesToBeTrainedOnDistrict = async (\n  data: GetTraineesToBeTrainedOnDistrictInterface,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: DistrictToBeTrainedResponse[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post<DistrictToBeTrainedResponse[]>(\n      `${TRAINING_APP_URL}/training/search/district`,\n      data\n    );\n    console.log(\"Teachers to be trained: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\nexport const GetTrainingsListByStatus = async (\n  status: TrainingImplementationStatus,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TrainingByImplementationStatusDetails[];\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<TrainingByImplementationStatusDetails[]>(\n      `${TRAINING_APP_URL}/training/application/status/${status}`\n    );\n    console.log(\"Res: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: [],\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdClose } from \"react-icons/md\";\nimport {\n  CenterTypeDetailsInterface,\n  CreateNewCenter,\n} from \"../../actions/training_settings_create_edit\";\nimport Button from \"../../components/Buttons/Button\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport SelectCustom from \"../../components/SelectCustom/SelectCustom\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface AddCenterProps {\n  districts: DistrictTypes[];\n  centerTypes: CenterTypeDetailsInterface;\n  onCreated: () => void;\n}\ninterface AddCenterState {\n  name: string;\n  district_id: string;\n  center_type_id: string;\n  loading: boolean;\n  success: string;\n  error: {\n    target: \"main\" | \"name\" | \"district_id\" | \"center_type_id\";\n    msg: string;\n  } | null;\n  openSelectDistrict: boolean;\n  openSelectCenterType: boolean;\n}\n\nexport class AddCenter extends Component<AddCenterProps, AddCenterState> {\n  constructor(props: AddCenterProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      name: \"\",\n      district_id: \"\",\n      center_type_id: \"\",\n      error: null,\n      success: \"\",\n      openSelectCenterType: false,\n      openSelectDistrict: false,\n    };\n  }\n  CreateNewTraining = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.district_id === \"\") {\n      return this.setState({\n        error: {\n          target: \"district_id\",\n          msg: \"Please choose district\",\n        },\n      });\n    }\n    if (this.state.center_type_id === \"\") {\n      return this.setState({\n        error: {\n          target: \"center_type_id\",\n          msg: \"Please choose center type\",\n        },\n      });\n    }\n    if (this.state.name === \"\") {\n      return this.setState({\n        error: {\n          target: \"name\",\n          msg: \"Please fill center name\",\n        },\n      });\n    }\n    this.setState({ loading: true, error: null, success: \"\" });\n    CreateNewCenter(\n      {\n        name: this.state.name,\n        district_id: this.state.district_id,\n        center_type_id: this.state.center_type_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            error: null,\n            success: \"Center added successfully!\",\n            loading: false,\n            name: \"\",\n          });\n          this.props.onCreated();\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            error: {\n              target: \"main\",\n              msg: res.msg,\n            },\n            loading: false,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.CreateNewTraining} className=\"w-full my-3\">\n          <div\n            className=\"grid grid-cols-12 gap-2\"\n            style={\n              this.state.openSelectDistrict === true ||\n              this.state.openSelectCenterType === true\n                ? { minHeight: \"300px\" }\n                : {}\n            }\n          >\n            <div className=\"col-span-12 md:col-span-6\">\n              <div>Choose district</div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    openSelectDistrict: !this.state.openSelectDistrict,\n                  })\n                }\n                className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n              >\n                <div className=\"w-52 truncate\">\n                  {this.state.district_id === \"\" ? (\n                    <span className=\"italic text-gray-400\">Not selected</span>\n                  ) : (\n                    `${this.state.district_id} - ${\n                      this.props.districts.find(\n                        (itm) =>\n                          itm.district_code.toString() ===\n                          this.state.district_id.toString()\n                      )?.district_name\n                    }`\n                  )}\n                </div>\n                <div>\n                  <IoIosArrowDown />\n                </div>\n              </div>\n              {this.state.openSelectDistrict === true && (\n                <div className=\"absolute mt-2 bg-white\" style={{ zIndex: 9 }}>\n                  <SelectCustom\n                    loading={false}\n                    id={\"district_code\"}\n                    title={\"district_name\"}\n                    close={() => this.setState({ openSelectDistrict: false })}\n                    data={this.props.districts}\n                    click={(response: {\n                      district_code: string;\n                      district_name: string;\n                    }) => {\n                      this.setState({\n                        district_id: response.district_code,\n                        openSelectDistrict: false,\n                        error: null,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {this.state.error?.target === \"district_id\" && (\n                <div className=\"text-red-700\">{this.state.error.msg}</div>\n              )}\n            </div>\n            <div className=\"col-span-12 md:col-span-6\">\n              <div>Choose center type</div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    openSelectCenterType: !this.state.openSelectCenterType,\n                  })\n                }\n                className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n              >\n                <div className=\"w-52 truncate\">\n                  {this.state.center_type_id === \"\" ? (\n                    <span className=\"italic text-gray-400\">Not selected</span>\n                  ) : (\n                    `${this.state.center_type_id} - ${\n                      this.props.centerTypes.center_types.find(\n                        (itm) =>\n                          itm.id.toString() ===\n                          this.state.center_type_id.toString()\n                      )?.name\n                    }`\n                  )}\n                </div>\n                <div>\n                  <IoIosArrowDown />\n                </div>\n              </div>\n              {this.state.openSelectCenterType === true && (\n                <div className=\"absolute mt-2 bg-white\" style={{ zIndex: 9 }}>\n                  <SelectCustom\n                    loading={false}\n                    id={\"id\"}\n                    title={\"name\"}\n                    close={() => this.setState({ openSelectCenterType: false })}\n                    data={this.props.centerTypes.center_types}\n                    click={(response: { id: string; name: string }) => {\n                      this.setState({\n                        center_type_id: response.id,\n                        openSelectCenterType: false,\n                        error: null,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {this.state.error?.target === \"center_type_id\" && (\n                <div className=\"text-red-700\">{this.state.error.msg}</div>\n              )}\n            </div>\n            <TextInput\n              onChange={(e) =>\n                this.setState({\n                  name: e.target.value,\n                  error: null,\n                  success: \"\",\n                })\n              }\n              value={this.state.name}\n              error={\n                this.state.error !== null && this.state.error.target === \"name\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n              label={\"Center name\"}\n              placeholder={\"\"}\n              name={\"\"}\n              MainContainer_className=\"col-span-12\"\n              disabled={this.state.loading}\n            />\n          </div>\n          {this.state.error !== null && this.state.error.target === \"main\" && (\n            <div\n              onClick={() => this.setState({ error: null, success: \"\" })}\n              className=\"cursor-pointer px-3 py-2 font-bold bg-red-100 text-red-700 flex flex-row items-center justify-between w-full my-2\"\n            >\n              <span>{this.state.error.msg}</span>\n              <div>\n                <MdClose className=\"text-2xl\" />\n              </div>\n            </div>\n          )}\n          {this.state.success !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: null, success: \"\" })}\n              className=\"cursor-pointer px-3 py-2 font-bold bg-green-100 text-green-700 flex flex-row items-center justify-between w-full my-2\"\n            >\n              <span>{this.state.success}</span>\n              <div>\n                <MdClose className=\"text-2xl\" />\n              </div>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center justify-end gap-2 mt-3\">\n            {this.state.loading === true && (\n              <div className=\"flex flex-row items-center gap-2\">\n                <div>\n                  <AiOutlineLoading3Quarters\n                    className={`loading-animate text-5xl text-accent-900 dark:text-white`}\n                  />\n                </div>\n                <div className=\"text-lg font-bold animate__animated animate__fadeIn animate__infinite\">\n                  Saving, please wait...\n                </div>\n              </div>\n            )}\n            {this.state.loading === false && (\n              <Button\n                type=\"submit\"\n                theme=\"accent\"\n                disabled={this.state.loading}\n              >\n                {\"Create center\"}\n              </Button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { CenterItemInterface } from \"../../actions/training_settings_create_edit\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface CentersListProps {\n  centers: CenterItemInterface[];\n  GetFilteredData: () => CenterItemInterface[];\n  districts: DistrictTypes[];\n}\ninterface CentersListState {}\n\nexport class CentersList extends Component<CentersListProps, CentersListState> {\n  render() {\n    return (\n      <div className=\"w-full overflow-x-auto\">\n        <table className=\"w-full text-sm text-left\">\n          <thead className=\"bg-primary-100 text-primary-800 border-4 border-white\">\n            <tr>\n              <th className=\"px-3 py-2\">#</th>\n              <th className=\"px-3 py-2\">District</th>\n              <th className=\"px-3 py-2\">Center name</th>\n              <th className=\"px-3 py-2\">Center type</th>\n              <th className=\"px-3 py-2\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.centers === null ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-xl px-4 py-3 font-light text-center\"\n                >\n                  Loading, please wait...\n                </td>\n              </tr>\n            ) : this.props.GetFilteredData().length === 0 ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-xl px-4 py-3 font-light text-center\"\n                >\n                  No data found!\n                </td>\n              </tr>\n            ) : (\n              this.props.GetFilteredData().map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                  } hover:bg-accent-400 hover:text-accent-900 cursor-pointer`}\n                  //   onClick={() => this.setState({ preview: item })}\n                >\n                  <td className=\"px-3 py-2\">{i + 1}</td>\n                  <td className=\"px-3 py-2\">{item.district_name}</td>\n                  <td className=\"px-3 py-2\">{item.center_name}</td>\n                  <td className=\"px-3 py-2\">{item.center_type_name}</td>\n                  <td className=\"px-2 py-2\">\n                    <div\n                      className={`${\n                        item.status === \"ACTIVE\"\n                          ? \"bg-gray-100 text-gray-700\"\n                          : \"bg-red-100 text-red-700\"\n                      } px-1 py-0 w-max rounded-md text-xs`}\n                    >\n                      {item.status}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TrainingCenterItemInterface } from \"../../actions/training_settings_create_edit\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy } from \"../../utils/functions\";\n\ninterface TrainingCentersListProps {\n  centers: TrainingCenterItemInterface[];\n  GetFilteredData: () => TrainingCenterItemInterface[];\n  districts: DistrictTypes[];\n}\ninterface TrainingCentersListState {}\n\nexport class TrainingCentersList extends Component<\n  TrainingCentersListProps,\n  TrainingCentersListState\n> {\n  GetTotalTrainees = () => {\n    var response: number = 0;\n    for (const item of this.props.GetFilteredData()) {\n      response += item.number_of_trainees;\n    }\n    return response;\n  };\n  GetTotalCenters = () => {\n    const center_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (center_id.find((itm) => itm === item.center_id) === undefined) {\n        center_id.push(item.center_id);\n      }\n    }\n    return center_id.length;\n  };\n  GetTotalRooms = () => {\n    const group_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (group_id.find((itm) => itm === item.group_id) === undefined) {\n        group_id.push(item.group_id);\n      }\n    }\n    return group_id.length;\n  };\n  GetTotalDistrict = () => {\n    const district_id: string[] = [];\n    for (const item of this.props.GetFilteredData()) {\n      if (district_id.find((itm) => itm === item.district_id) === undefined) {\n        district_id.push(item.district_id);\n      }\n    }\n    return district_id.length;\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"px-2\">\n          <div className=\"bg-primary-700 text-white p-2 rounded-md flex flex-row items-center justify-between gap-2\">\n            <div className=\"pl-2\">\n              <div className=\"text-xl font-bold\">General summary</div>\n              <div className=\"font-light\">\n                Get the summary from the list below\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-between gap-2\">\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total districts</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalDistrict())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total centers</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalCenters())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total rooms</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalRooms())}\n                </div>\n              </div>\n              <div className=\"bg-primary-700 border border-primary-500 rounded-md p-2 px-4\">\n                <div className=\"text-sm\">Total trainees</div>\n                <div className=\"text-xl font-bold\">\n                  {commaFy(this.GetTotalTrainees())}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full text-sm text-left\">\n            <thead className=\"bg-primary-100 text-primary-800 border-4 border-white\">\n              <tr>\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">District</th>\n                <th className=\"px-3 py-2\">Center name</th>\n                <th className=\"px-3 py-2\">Room</th>\n                <th className=\"px-3 py-2\">Number of trainees</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.centers === null ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-xl px-4 py-3 font-light text-center\"\n                  >\n                    Loading, please wait...\n                  </td>\n                </tr>\n              ) : this.props.GetFilteredData().length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-xl px-4 py-3 font-light text-center\"\n                  >\n                    No data found!\n                  </td>\n                </tr>\n              ) : (\n                this.props.GetFilteredData().map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } hover:bg-accent-400 hover:text-accent-900 cursor-pointer`}\n                    //   onClick={() => this.setState({ preview: item })}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.district_name}</td>\n                    <td className=\"px-3 py-2\">{item.center_name}</td>\n                    <td className=\"px-3 py-2\">{item.group_id}</td>\n                    <td className=\"px-3 py-2\">{item.number_of_trainees}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport {\n  GetTrainingsListByStatus,\n  TrainingByImplementationStatusDetails,\n  TrainingImplementationStatus,\n} from \"../../actions/training-offers\";\nimport Alert from \"../../components/Alert/Alert\";\nimport { DATE, search } from \"../../utils/functions\";\n\ninterface TrainingsListProps {\n  onSelected: (data: TrainingByImplementationStatusDetails) => void;\n}\ninterface TrainingsListState {\n  loading: boolean;\n  error: string;\n  trainings: TrainingByImplementationStatusDetails[] | null;\n  selectedStatus: TrainingImplementationStatus;\n  searchData: string;\n}\n\nexport class TrainingsList extends Component<\n  TrainingsListProps,\n  TrainingsListState\n> {\n  constructor(props: TrainingsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      trainings: null,\n      selectedStatus: TrainingImplementationStatus.INPROGRESS,\n      searchData: \"\",\n    };\n  }\n  LoadTrainings = (selectedStatus: TrainingImplementationStatus) => {\n    this.setState({ loading: true, error: \"\", selectedStatus: selectedStatus });\n    GetTrainingsListByStatus(\n      selectedStatus,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: TrainingByImplementationStatusDetails[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.type === \"success\") {\n          this.setState({ trainings: res.data, error: \"\", loading: false });\n        }\n        if (res?.type === \"error\") {\n          this.setState({ trainings: [], error: res.msg, loading: false });\n        }\n      }\n    );\n  };\n  FilteredTrainings = () => {\n    if (this.state.trainings === null) {\n      return [];\n    }\n    var response = this.state.trainings;\n    return search(\n      response,\n      this.state.searchData\n    ) as TrainingByImplementationStatusDetails[];\n  };\n  componentDidMount(): void {\n    this.LoadTrainings(this.state.selectedStatus);\n  }\n  render() {\n    const trainingStatuses: {\n      title: string;\n      key: TrainingImplementationStatus;\n    }[] = [\n      {\n        title: \"In progress\",\n        key: TrainingImplementationStatus.INPROGRESS,\n      },\n      {\n        title: \"Completed\",\n        key: TrainingImplementationStatus.COMPLETED,\n      },\n      {\n        title: \"Canceled\",\n        key: TrainingImplementationStatus.CANCELLED,\n      },\n      {\n        title: \"Ready for evaluation\",\n        key: TrainingImplementationStatus.READY_FOR_EVALUATION,\n      },\n      {\n        title: \"Draft\",\n        key: TrainingImplementationStatus.DRAFT,\n      },\n    ];\n    if (this.state.loading === true || this.state.trainings === null) {\n      return (\n        <div>\n          <div className=\"bg-gray-100 rounded-md w-full flex flex-col items-center justify-center p-3 py-6\">\n            <div>\n              <AiOutlineLoading3Quarters\n                className={`loading-animate text-6xl text-accent-900 dark:text-white`}\n              />\n            </div>\n            <div className=\"text-xl font-light animate__animated animate__fadeIn animate__infinite\">\n              Loading, please wait...\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"flex flex-row items-center gap-3 w-full mb-6\">\n            <select\n              onChange={(e) =>\n                this.LoadTrainings(\n                  e.target.value as TrainingImplementationStatus\n                )\n              }\n              value={this.state.selectedStatus}\n              className=\"px-3 py-2 rounded border border-primary-500 bg-primary-100 font-bold text-primary-700 w-1/3\"\n            >\n              {trainingStatuses.map((stat, s) => (\n                <option key={s + 1} value={stat.key}>\n                  {stat.title}\n                </option>\n              ))}\n            </select>\n            <input\n              type=\"search\"\n              className=\"px-3 py-2 rounded border border-gray-400 w-2/3\"\n              placeholder=\"Search by name\"\n              value={this.state.searchData}\n              onChange={(e) =>\n                this.setState({ searchData: e.target.value, error: \"\" })\n              }\n            />\n          </div>\n          {this.state.error !== \"\" && (\n            <div className=\"my-3\">\n              <Alert\n                theme=\"danger\"\n                onClick={() => this.setState({ error: \"\" })}\n              >\n                {this.state.error}\n              </Alert>\n            </div>\n          )}\n          {this.state.trainings.length === 0 ? (\n            <div className=\"text-center p-4 rounded-md bg-gray-100 w-full\">\n              <div className=\"text-2xl font-bold\">No trainings found!</div>\n              <div className=\"text-gray-500\">\n                For selected status, there are no trainings found\n              </div>\n            </div>\n          ) : (\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"min-w-full text-left text-sm\">\n                <thead>\n                  <tr>\n                    <th className=\"px-3 py-2 border\">#</th>\n                    <th className=\"px-3 py-2 border\">Training title</th>\n                    <th className=\"px-3 py-2 border\">Topic</th>\n                    <th className=\"px-3 py-2 border\">Start date</th>\n                    <th className=\"px-3 py-2 border\">Ending date</th>\n                    <th className=\"px-3 py-2 border\">Training provider</th>\n                    <th className=\"px-3 py-2 border\">Phone number</th>\n                    <th className=\"px-3 py-2 border\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.FilteredTrainings().length === 0 ? (\n                    <tr>\n                      <td className=\"text-xl text-center font-light\">\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.FilteredTrainings().map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className=\"cursor-pointer hover:bg-accent-400 hover:text-accent-900 group\"\n                        onClick={() => this.props.onSelected(item)}\n                      >\n                        <td className=\"px-3 py-2 border\">{i + 1}</td>\n                        <td className=\"px-3 py-2 border\">{item.title}</td>\n                        <td className=\"px-3 py-2 border\">{item.topic}</td>\n                        <td className=\"px-3 py-2 border\">\n                          {DATE(item.start_date)}\n                        </td>\n                        <td className=\"px-3 py-2 border\">\n                          {DATE(item.end_date)}\n                        </td>\n                        <td className=\"px-3 py-2 border\">\n                          {item.development_partner_name}\n                        </td>\n                        <td className=\"px-3 py-2 border\">{item.dp_contact}</td>\n                        <td className=\"px-1 py-1 border w-10\">\n                          <div className=\"bg-gray-100 group-hover:bg-accent-900 group-hover:text-white font-bold px-3 py-2 rounded w-max text-current cursor-pointer\">\n                            Select\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BiReset } from \"react-icons/bi\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { MdClose, MdKeyboardArrowDown } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../actions\";\nimport { TrainingByImplementationStatusDetails } from \"../../actions/training-offers\";\nimport {\n  CenterItemInterface,\n  CenterTypeDetailsInterface,\n  GetAllCenters,\n  GetAllCentersByTrainingID,\n  GetCenterTypes,\n  TrainingCenterItemInterface,\n} from \"../../actions/training_settings_create_edit\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalMarginTop, ModalSize } from \"../../components/Modal/Modal\";\nimport SelectCustom from \"../../components/SelectCustom/SelectCustom\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { search } from \"../../utils/functions\";\nimport { AddCenter } from \"./AddCenter\";\nimport { CentersList } from \"./CentersList\";\nimport { TrainingCentersList } from \"./TrainingCentersList\";\nimport { TrainingsList } from \"./TrainingsList\";\n\ninterface CentersManagementProps {}\ninterface CentersManagementState {\n  loading: boolean;\n  centers: CenterItemInterface[] | null;\n  centerTypes: CenterTypeDetailsInterface | null;\n  success: string;\n  error: string;\n  search_value: string;\n  selected_district_code: string;\n  openSelectDistrict: boolean;\n  addCenter: boolean;\n  districts: DistrictTypes[];\n  openSelectTraining: boolean;\n  selectedTraining: TrainingByImplementationStatusDetails | null;\n  trainingCenters: TrainingCenterItemInterface[] | null;\n}\n\nclass _CentersManagement extends Component<\n  CentersManagementProps,\n  CentersManagementState\n> {\n  constructor(props: CentersManagementProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      centers: null,\n      centerTypes: null,\n      success: \"\",\n      error: \"\",\n      search_value: \"\",\n      selected_district_code: \"\",\n      openSelectDistrict: false,\n      addCenter: false,\n      districts: [],\n      openSelectTraining: false,\n      selectedTraining: null,\n      trainingCenters: null,\n    };\n  }\n  GetAllCentersList = () => {\n    this.setState({ loading: true, error: \"\", success: \"\" });\n    GetAllCenters(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: CenterItemInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            loading: false,\n            centers: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centers: [],\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  GetAllCentersListByTrainingSelected = (training_id: string) => {\n    this.setState({ loading: true, error: \"\", success: \"\" });\n    GetAllCentersByTrainingID(\n      training_id,\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: TrainingCenterItemInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            loading: false,\n            trainingCenters: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centers: [],\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  GetAllCenterTypesDetails = () => {\n    this.setState({\n      loading: true,\n      error: \"\",\n      success: \"\",\n      openSelectTraining: false,\n    });\n    GetCenterTypes(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: CenterTypeDetailsInterface;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res?.status === \"success\") {\n          this.setState({\n            error: \"\",\n            success: \"\",\n            centerTypes: res.data,\n            loading: false,\n          });\n        }\n        if (res?.status === \"error\") {\n          this.setState({\n            loading: false,\n            centerTypes: {\n              center_types: [],\n              center_room_type: [],\n            },\n            error: res.msg,\n            success: \"\",\n          });\n        }\n      }\n    );\n  };\n  LoadAllDistricts = () => {\n    this.setState({ loading: true });\n    FC_GetDistricts(\n      (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n        if (data !== null) {\n          this.setState({ districts: data, loading: false });\n        }\n      }\n    );\n  };\n  GetFilteredData = () => {\n    if (this.state.centers === null) {\n      return [];\n    }\n    var response = this.state.centers;\n    if (this.state.selected_district_code !== \"\") {\n      response = response.filter(\n        (itm) =>\n          itm.district_id.toString() ===\n          this.state.selected_district_code.toString()\n      );\n    }\n    return search(response, this.state.search_value) as CenterItemInterface[];\n  };\n  GetFilteredTrainingCenters = () => {\n    if (this.state.trainingCenters === null) {\n      return [];\n    }\n    var response = this.state.trainingCenters;\n    if (this.state.selected_district_code !== \"\") {\n      response = response.filter(\n        (itm) =>\n          itm.district_id.toString() ===\n          this.state.selected_district_code.toString()\n      );\n    }\n    return search(\n      response,\n      this.state.search_value\n    ) as TrainingCenterItemInterface[];\n  };\n  componentDidMount(): void {\n    this.GetAllCenterTypesDetails();\n    this.GetAllCentersList();\n    this.LoadAllDistricts();\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container mx-auto p-3\">\n          {/* Top menu bar */}\n          <div className=\"bg-white rounded-md p-3\">\n            <div className=\"grid grid-cols-12 gap-2\">\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col pl-2\">\n                  <div className=\"text-2xl font-extrabold\">\n                    Training centers management\n                    {/* <span className=\"text-sm font-bold px-2 rounded-md bg-primary-100 text-primary-800\">\n                  {this.state.selected_status}\n                </span> */}\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    List of centers in different locations\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-span-6 flex flex-row items-center justify-end w-full gap-2\">\n                <div\n                  onClick={() => this.setState({ openSelectTraining: true })}\n                  className={`flex flex-row items-center gap-3 p-1 hover:bg-yellow-50 rounded-md cursor-pointer border ${\n                    this.state.selectedTraining !== null\n                      ? \"border-green-400\"\n                      : \"border-yellow-300\"\n                  } group`}\n                >\n                  <div>\n                    <div\n                      className={`${\n                        this.state.selectedTraining === null\n                          ? \"bg-yellow-100 text-accent-900\"\n                          : \"bg-green-100 text-green-700\"\n                      } rounded-md h-12 w-12 flex items-center justify-center`}\n                    >\n                      <FaChalkboardTeacher className=\"text-3xl\" />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <div className=\"text-sm text-gray-500 group-hover:text-black\">\n                      Filter by training training\n                    </div>\n                    <div\n                      className=\"font-bold text-base -mt-1 truncate\"\n                      style={{ width: \"300px\" }}\n                    >\n                      {this.state.selectedTraining === null ? (\n                        <span className=\"italic text-gray-400\">\n                          Not selected\n                        </span>\n                      ) : (\n                        this.state.selectedTraining.title\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    <MdKeyboardArrowDown className=\"text-2xl text-gray-400 group-hover:text-black\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.loading === true ||\n          this.state.centerTypes === null ||\n          this.state.centers === null ? (\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-md mt-2 py-5\">\n              <Loading />\n              <div className=\"text-center text-xl font-light text-gray-500\">\n                Loading, please wait...\n              </div>\n            </div>\n          ) : (\n            <div className=\"bg-white rounded-md mt-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between mb-3 mx-2 gap-3\">\n                <div className=\"relative w-1/3\">\n                  {this.state.openSelectDistrict === false ? (\n                    <div\n                      onClick={() =>\n                        this.setState({\n                          openSelectDistrict: !this.state.openSelectDistrict,\n                        })\n                      }\n                      className=\"border border-gray-400 rounded px-3 py-2 w-full flex flex-row items-center justify-between gap-2 cursor-pointer hover:border-accent-900 hover:text-accent-900\"\n                    >\n                      <div className=\"w-52 truncate\">\n                        {this.state.selected_district_code === \"\"\n                          ? \"Filter by district\"\n                          : `${this.state.selected_district_code} - ${\n                              this.state.districts.find(\n                                (itm) =>\n                                  itm.district_code.toString() ===\n                                  this.state.selected_district_code.toString()\n                              )?.district_name\n                            }`}\n                      </div>\n                      <div>\n                        <IoIosArrowDown />\n                      </div>\n                    </div>\n                  ) : (\n                    <div\n                      onClick={() =>\n                        this.setState({ openSelectDistrict: false })\n                      }\n                      className=\"font-bold flex flex-row items-center gap-4 cursor-pointer hover:text-accent-900\"\n                    >\n                      <span>Select district</span>\n                      <div>\n                        {this.state.selected_district_code !== \"\" ? (\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selected_district_code: \"\",\n                                openSelectDistrict: false,\n                              })\n                            }\n                            className=\"font-normal text-sm cursor-pointer px-2 py-1 rounded-md bg-accent-400 text-accent-900 flex flex-row items-center justify-center gap-2\"\n                          >\n                            <div>\n                              <BiReset className=\"text-xl\" />\n                            </div>\n                            <span>Reset</span>\n                          </div>\n                        ) : (\n                          <MdClose />\n                        )}\n                      </div>\n                    </div>\n                  )}\n                  {this.state.openSelectDistrict === true && (\n                    <div className=\"w-full absolute mt-2 bg-white\">\n                      <SelectCustom\n                        loading={false}\n                        id={\"district_code\"}\n                        title={\"district_name\"}\n                        close={() =>\n                          this.setState({ openSelectDistrict: false })\n                        }\n                        data={this.state.districts}\n                        click={(response: {\n                          district_code: string;\n                          district_name: string;\n                        }) => {\n                          this.setState({\n                            selected_district_code: response.district_code,\n                            openSelectDistrict: false,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                </div>\n                {/* ------------------------------- */}\n\n                <input\n                  type=\"search\"\n                  className=\"px-3 py-2 rounded w-1/2 border border-gray-400\"\n                  placeholder=\"Search...\"\n                  value={this.state.search_value}\n                  onChange={(e) =>\n                    this.setState({ search_value: e.target.value })\n                  }\n                />\n                {this.state.selectedTraining === null && (\n                  <div className=\"\">\n                    <div className=\"text-sm text-gray-500 truncate\">\n                      Total centers\n                    </div>\n                    <div className=\"text-xl font-bold\">\n                      {this.GetFilteredData().length}\n                    </div>\n                  </div>\n                )}\n                {this.state.selectedTraining === null ? (\n                  <Button\n                    onClick={() => this.setState({ addCenter: true })}\n                    className=\"\"\n                  >\n                    <span className=\"truncate\">Add center</span>\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => {\n                      this.setState({ selectedTraining: null });\n                      this.GetAllCentersList();\n                    }}\n                    className=\"flex flex-row items-center justify-center gap-2\"\n                    theme=\"accent-light\"\n                  >\n                    <div>\n                      <BsArrowLeft className=\"text-2xl\" />\n                    </div>\n                    <span className=\"truncate\">Back to general list</span>\n                  </Button>\n                )}\n                {this.state.selectedTraining !== null ? (\n                  <ExportToExcel\n                    fileData={this.GetFilteredTrainingCenters().map(\n                      (item, i) => ({\n                        No: `${i + 1}`,\n                        \"District Code\": item.district_id,\n                        \"District Name\": item.district_name,\n                        \"Center Name\": item.center_name,\n                        \"Room Number\": item.group_id,\n                        \"Room Name\": item.name,\n                        \"Number of trainees\": item.number_of_trainees,\n                      })\n                    )}\n                    fileName={`${this.state.selectedTraining.title} - List of training centers and rooms`}\n                    className=\"py-2 rounded flex flex-row items-center justify-center gap-2 px-3 border border-green-600 hover:bg-green-600 hover:text-white text-green-600 font-bold\"\n                    btnName=\"Download\"\n                  />\n                ) : (\n                  <ExportToExcel\n                    fileData={this.GetFilteredData().map((item, i) => ({\n                      No: `${i + 1}`,\n                      \"District Code\": item.district_id,\n                      \"District Name\": item.district_name,\n                      \"Center Name\": item.center_name,\n                      \"Center Category\": item.center_type_name,\n                    }))}\n                    fileName={`List of all training centers`}\n                    className=\"py-2 rounded flex flex-row items-center justify-center gap-2 px-3 border border-green-600 hover:bg-green-600 hover:text-white text-green-600 font-bold\"\n                    btnName=\"Download\"\n                  />\n                )}\n              </div>\n              {/* Centers list */}\n              {this.state.selectedTraining === null ? (\n                <CentersList\n                  GetFilteredData={this.GetFilteredData}\n                  centers={this.state.centers}\n                  districts={this.state.districts}\n                />\n              ) : (\n                this.state.trainingCenters !== null && (\n                  <TrainingCentersList\n                    GetFilteredData={this.GetFilteredTrainingCenters}\n                    centers={this.state.trainingCenters}\n                    districts={this.state.districts}\n                  />\n                )\n              )}\n            </div>\n          )}\n        </div>\n        {this.state.addCenter === true && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ addCenter: false })}\n            backDropClose={false}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n              footer: undefined,\n            }}\n            title=\"Add training center\"\n            widthSizeClass={ModalSize.large}\n          >\n            {this.state.centerTypes !== null && (\n              <AddCenter\n                districts={this.state.districts}\n                centerTypes={this.state.centerTypes}\n                onCreated={() => this.GetAllCentersList()}\n              />\n            )}\n          </Modal>\n        )}\n        {this.state.openSelectTraining === true && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ openSelectTraining: false })}\n            backDropClose={true}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n              footer: undefined,\n            }}\n            title=\"Available trainings\"\n            widthSizeClass={ModalSize.maxWidth}\n            marginTop={ModalMarginTop.small}\n          >\n            <div className=\"-mt-5\">\n              {this.state.centerTypes !== null && (\n                <TrainingsList\n                  onSelected={(data: TrainingByImplementationStatusDetails) => {\n                    this.setState({\n                      openSelectTraining: false,\n                      selectedTraining: data,\n                    });\n                    this.GetAllCentersListByTrainingSelected(data.id);\n                  }}\n                />\n              )}\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const CentersManagement = connect(\n  mapStateToProps,\n  {}\n)(_CentersManagement);\n"],"sourceRoot":""}