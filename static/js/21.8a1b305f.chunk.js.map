{"version":3,"sources":["components/TableLoading/TableLoading.tsx","actions/transfer.action.ts","containers/Reports/PostsRequestsReport/DistrictsLabel.tsx","containers/DoPlacement/SelectPosition.tsx","containers/DoPlacement/DoPlacement.tsx"],"names":["TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","FC_GetAllTransfers","callBack","dispatch","a","setAxiosToken","axios","get","APP_URL","res","console","log","getAllTransfers","type","ActionTypes","GET_ALL_TRANSFER","payload","data","errorToText","FC_GetMyTransfers","GET_MY_TRANSFER","FC_GetTransferReasons","GET_TRANSFER_REASON","FC_GetDistricts","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","error","FC_GetSchoolByDistrict","district_code","FC_GetSchoolByDistrict_2","position_code","qualification_id","FC_RespondLeave","selectedUserId","comment","selectedFile","decision","doc_title","status","uploadingPercentage","msg","isEmptyOrSpaces","teacher_transfer_id","outgoing_status","outgoing_dde_comment","mayor_letter","RESPOND_TO_LEAVE","FC_RespondTransfer","approved_school_id","requested_status","requested_comment","RESPOND_TO_TRANSFER","DistrictsLabel","useState","searchData","setSearchData","style","width","value","onChange","e","target","placeholder","onClick","setVisibility","search","districts","length","item","i","selected_district","district_name","SelectPosition","positions","selected_position","position_name","_DoPlacement","FC_GetDistrictDistribution","district_id","basic","academic_calender","FC_GetDistributionSchools","academic_id","academic_year_id","setState","loadingDistribution","distributionList","FC_ChangeCustomVacant","default_value","new_value","custom_vacant_copy","state","customVacant","thisVacantCustom","findIndex","selected_request_id","new_value_copy","Number","toString","FC_GetDistributionValue","result","find","post_request_id","dde_post_distribution","FC_FilterByPosition","academic_distributed","filter","FC_CalculateRequests","forEach","itemDistributed","FC_GetRequestsForTRS","distributed","requestArray","school_code","sector_code","substring","province_code","gender","in_education","disability","available_places","requested_teacher","submitDataRequestTRS","requestToSend","loading_candidates_from_trs","FC_RequestTeachersInTRS_NEW","err","collected_teachers","collected_candidates_open","loading","showDistrictsList","showPositionList","waiting_list_total","this","auth","role","role_id","FC_GetAllPositions","FC_GetWaitingList","access_list","access","checkAccess","UsersAccess","DO_PLACEMENT","to","DashboardContainer","Loading","selected_district_name","itm","DATA_Result","DATA_TotalRequests","DATA_waitingList","_id","undefined","Heading","size","title","special","colSpan","cand","school","user_info","n_id","fname","lname","phone_number","email","sex","school_name","Button","theme","waiting","shortString","distributionValue","existing_post","onBlur","max","autoFocus","min","Component","DoPlacement","connect"],"mappings":"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","file":"static/js/21.8a1b305f.chunk.js","sourcesContent":["import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedToLeave,\n  RequestedTransfer,\n  SchoolsType,\n  SchoolsType_2,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: RequestedToLeave[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface RespondToLeaveAction {\n  type: ActionTypes.RESPOND_TO_LEAVE;\n  payload: {\n    teacher_transfer_id: string;\n    outgoing_status: \"REJECTED\" | \"APPROVED\";\n    outgoing_dde_comment: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school_id: string;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedToLeave[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedToLeave[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedToLeave[]>(\n        `${APP_URL}/teachertransfers/requesteddde`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      console.log(\"=================FC_GetTransferReasons===================\");\n      console.log({ FC_GetTransferReasons: res });\n      console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n    console.log(\"=================FC_GetDistricts===================\");\n    console.log({ FC_GetDistricts: res });\n    console.log(\"=================FC_GetDistricts===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n    //   callBack(\n    //     false,\n    //     errorToText(error, () => {})\n    //   );\n  }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  position_code: string,\n  qualification_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        position_code,\n        qualification_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_RespondLeave = (\n  selectedUserId: string,\n  comment: string,\n  selectedFile: File,\n  decision: \"REJECTED\" | \"APPROVED\",\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    await FC_UploadFile(\n      selectedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        callBack(status, \"\");\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        console.log({ data });\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n        return;\n      }\n    );\n    if (!isEmptyOrSpaces(doc_title)) {\n      callBack(true, \"\");\n      const data = {\n        teacher_transfer_id: selectedUserId,\n        outgoing_status: decision,\n        outgoing_dde_comment: comment,\n        mayor_letter: doc_title,\n      };\n\n      console.log(\"==================*********************==================\");\n      console.log({ doc_title });\n      console.log(\"==================*********************==================\");\n\n      try {\n        setAxiosToken();\n        const res = await axios.post<string>(\n          `${APP_URL}/teachertransfers/outgoing`,\n          data\n        );\n        console.log(\"Uploaded document: \", res.data);\n        dispatch<RespondToLeaveAction>({\n          type: ActionTypes.RESPOND_TO_LEAVE,\n          payload: data,\n        });\n        callBack(false, \"\");\n        // console.log(\"Questions: \", res);\n      } catch (error: any) {\n        console.error(error);\n        callBack(false, errorToText(error));\n      }\n    }\n  };\n};\n\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school_id: string,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school_id,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: data,\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n","import React, { useState } from \"react\";\nimport { MdCheckCircle, MdClose, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { DistrictTypes } from \"../../../types/TransferTypes\";\nimport { search } from \"../../../utils/functions\";\n\ninterface DistrictsLabelProps {\n  onChange: (value: string) => void;\n  districts: DistrictTypes[];\n  selected_district: string;\n  setVisibility: (status: boolean) => void;\n}\n\nconst DistrictsLabel = (props: DistrictsLabelProps) => {\n  const [searchData, setSearchData] = useState<string>(\"\");\n  return (\n    <div\n      className=\"absolute animate__animated animate__fadeIn animate__faster\"\n      style={{ width: \"500px\" }}\n    >\n      <div className=\"bg-white rounded shadow-xl mb-10\">\n        <div className=\"p-3 flex flex-row items-center justify-between gap-3\">\n          <input\n            type=\"search\"\n            value={searchData}\n            onChange={(e) => setSearchData(e.target.value)}\n            placeholder=\"Type district name...\"\n            className=\"bg-white rounded px-3 py-2 border border-primary-800 w-full\"\n          />\n          <div onClick={() => props.setVisibility(false)}>\n            <div className=\"h-8 w-8 rounded-full bg-red-100 hover:bg-red-200 flex items-center justify-center\">\n              <MdClose className=\"text-red-600 text-2xl cursor-pointer\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"max-h-80 overflow-y-auto pb-3\">\n          {(search(props.districts, searchData) as DistrictTypes[]).length ===\n          0 ? (\n            <div className=\"text-gray-500 font-extrabold text-xl text-center p-4\">\n              No data found!\n            </div>\n          ) : (\n            (search(props.districts, searchData) as DistrictTypes[]).map(\n              (item, i) => (\n                <div\n                  onClick={() => {\n                    props.onChange(item.district_code);\n                    props.setVisibility(false);\n                  }}\n                  className={`border-b py-2 px-3 group ${\n                    props.selected_district === item.district_code\n                      ? \"bg-blue-200 font-extrabold text-primary-800\"\n                      : \"\"\n                  } hover:bg-primary-800 hover:text-white cursor-pointer hover:border-blue-500`}\n                  key={i + 1}\n                >\n                  <div className=\"flex flex-row items-center gap-4\">\n                    <div>\n                      {props.selected_district === item.district_code ? (\n                        <MdCheckCircle className=\"text-2xl\" />\n                      ) : (\n                        <MdRadioButtonUnchecked className=\"text-2xl\" />\n                      )}\n                    </div>\n                    <div>{item.district_name}</div>\n                  </div>\n                </div>\n              )\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DistrictsLabel;\n","import React, { useState } from \"react\";\nimport { MdCheckCircle, MdClose, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { SchoolPositionApiResponse } from \"../../types/HeadTeacherRequesTypes\";\nimport { search } from \"../../utils/functions\";\n\ninterface SelectPositionProps {\n  onChange: (value: string) => void;\n  positions: SchoolPositionApiResponse[];\n  selected_position: string;\n  setVisibility: (status: boolean) => void;\n}\n\nconst SelectPosition = (props: SelectPositionProps) => {\n  const [searchData, setSearchData] = useState<string>(\"\");\n  return (\n    <div\n      className=\"absolute animate__animated animate__fadeIn animate__faster\"\n      style={{ width: \"500px\" }}\n    >\n      <div className=\"bg-white rounded shadow-xl mb-10\">\n        <div className=\"p-3 flex flex-row items-center justify-between gap-3\">\n          <input\n            type=\"search\"\n            value={searchData}\n            onChange={(e) => setSearchData(e.target.value)}\n            placeholder=\"Type district name...\"\n            className=\"bg-white rounded px-3 py-2 border border-primary-800 w-full\"\n          />\n          <div onClick={() => props.setVisibility(false)}>\n            <div className=\"h-8 w-8 rounded-full bg-red-100 hover:bg-red-200 flex items-center justify-center\">\n              <MdClose className=\"text-red-600 text-2xl cursor-pointer\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"max-h-80 overflow-y-auto pb-3\">\n          {(search(props.positions, searchData) as SchoolPositionApiResponse[])\n            .length === 0 ? (\n            <div className=\"text-gray-500 font-extrabold text-xl text-center p-4\">\n              No data found!\n            </div>\n          ) : (\n            (\n              search(props.positions, searchData) as SchoolPositionApiResponse[]\n            ).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.onChange(item.position_code);\n                  props.setVisibility(false);\n                }}\n                className={`border-b py-2 px-3 group ${\n                  props.selected_position === item.position_code\n                    ? \"bg-blue-200 font-extrabold text-primary-800\"\n                    : \"\"\n                } hover:bg-primary-800 hover:text-white cursor-pointer hover:border-blue-500`}\n                key={i + 1}\n              >\n                <div className=\"flex flex-row items-center gap-4\">\n                  <div>\n                    {props.selected_position === item.position_code ? (\n                      <MdCheckCircle className=\"text-2xl\" />\n                    ) : (\n                      <MdRadioButtonUnchecked className=\"text-2xl\" />\n                    )}\n                  </div>\n                  <div>{item.position_name}</div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectPosition;\n","import React, { Component, Fragment } from \"react\";\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  AcademicDDEDistribution,\n  API_DistributedDDE,\n  Auth,\n  Basic,\n  FC_GetAllPositions,\n  FC_GetDistributionSchools,\n  FC_GetWaitingList,\n  FC_RequestTeachersInTRS_NEW,\n  RequestInTRS,\n  ReturnedCandidates,\n  WaitingList,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { checkAccess, UsersAccess } from \"../../utils/access\";\nimport { isEmptyOrSpaces, shortString } from \"../../utils/functions\";\nimport DistrictsLabel from \"../Reports/PostsRequestsReport/DistrictsLabel\";\nimport SelectPosition from \"./SelectPosition\";\n\ninterface DoPlacementProps {\n  auth: Auth;\n  basic: Basic;\n\n  FC_GetAllPositions: Function;\n}\n\ninterface DoPlacementStates {\n  loading: boolean;\n  loadingDistribution: boolean;\n  loading_candidates_from_trs: boolean;\n  districts: DistrictTypes[] | null;\n  showDistrictsList: boolean;\n  selected_district: string;\n  showPositionList: boolean;\n  selected_position: string;\n  distributionList: API_DistributedDDE | null;\n  searchData: string;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"main-error\"\n      | \"update-error\";\n    msg: string;\n  } | null;\n  selected_request_id: string;\n  new_value: string;\n  customVacant: { selected_request_id: string; new_value: string }[];\n  waiting_list_total: WaitingList[] | null;\n  collected_teachers: ReturnedCandidates[];\n  collected_candidates_open: boolean;\n}\n\nclass _DoPlacement extends Component<DoPlacementProps, DoPlacementStates> {\n  constructor(props: DoPlacementProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingDistribution: false,\n      loading_candidates_from_trs: false,\n      districts: null,\n      showDistrictsList: false,\n      selected_district: \"\",\n      showPositionList: false,\n      selected_position: \"\",\n      distributionList: null,\n      searchData: \"\",\n      error: null,\n      selected_request_id: \"\",\n      new_value: \"0\",\n      customVacant: [],\n      waiting_list_total: null,\n      collected_teachers: [],\n      collected_candidates_open: false,\n    };\n  }\n\n  componentDidMount() {\n    // Get Districts Function\n    if (\n      this.props.auth.role &&\n      this.props.auth.role.role_id.toString() === \"4\"\n    ) {\n      FC_GetDistricts(\n        (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n          this.setState({ loading: status });\n          if (data !== null && status === false) {\n            this.setState({\n              loading: false,\n              districts: data,\n            });\n          }\n          // else if (status === false) {\n          //   this.setState({\n          //     loading: false,\n          //   });\n          // }\n        }\n      );\n\n      if (this.props.basic.positions === null)\n        this.props.FC_GetAllPositions((status: boolean, msg: string) => {\n          this.setState({ loading: status });\n        });\n\n      if (\n        this.state.waiting_list_total === null ||\n        this.state.waiting_list_total.length === 0\n      )\n        FC_GetWaitingList(\n          (status: boolean, data: WaitingList[] | null, msg: string) => {\n            this.setState({ loading: true });\n            if (status === true) {\n              this.setState({\n                loading: false,\n                waiting_list_total: data,\n              });\n            } else if (status === false) {\n              this.setState({\n                loading: false,\n              });\n            }\n          }\n        );\n    }\n  }\n\n  FC_GetDistrictDistribution = (district_id: string) => {\n    if (this.props.basic.academic_calender)\n      FC_GetDistributionSchools(\n        {\n          academic_id: this.props.basic.academic_calender.academic_year_id,\n          district_id: district_id,\n        },\n        (status: boolean, data: API_DistributedDDE | null, msg: string) => {\n          this.setState({ loadingDistribution: true, distributionList: null });\n          if (data !== null && status === true) {\n            this.setState({\n              loadingDistribution: false,\n              distributionList: data,\n            });\n          } else if (status === true) {\n            this.setState({\n              loadingDistribution: false,\n            });\n          }\n        }\n      );\n  };\n\n  FC_ChangeCustomVacant = (default_value: number, new_value: string) => {\n    let custom_vacant_copy = [...this.state.customVacant];\n    let thisVacantCustom = custom_vacant_copy.findIndex(\n      (item) => item.selected_request_id === this.state.selected_request_id\n    );\n    const new_value_copy: string =\n      isEmptyOrSpaces(new_value) || Number(new_value) < 0 ? \"0\" : new_value;\n    if (thisVacantCustom >= 0) {\n      custom_vacant_copy[thisVacantCustom] = {\n        selected_request_id: this.state.selected_request_id,\n        new_value:\n          Number(new_value_copy) > Number(default_value)\n            ? default_value.toString()\n            : new_value_copy,\n      };\n    } else {\n      custom_vacant_copy.push({\n        selected_request_id: this.state.selected_request_id,\n        new_value:\n          Number(new_value_copy) > Number(default_value)\n            ? default_value.toString()\n            : new_value_copy,\n      });\n    }\n\n    console.log(\"================new_value_copy====================\");\n    console.log({ new_value_copy });\n    console.log(\"================new_value_copy====================\");\n\n    this.setState({\n      customVacant: custom_vacant_copy,\n      selected_request_id: \"\",\n      new_value: \"\",\n    });\n  };\n\n  FC_GetDistributionValue = (data: AcademicDDEDistribution): string => {\n    let result = this.state.customVacant.find(\n      (item) => item.selected_request_id === data.post_request_id\n    );\n    if (result) return result.new_value;\n    return data.dde_post_distribution.toString();\n  };\n\n  FC_FilterByPosition = (\n    data: API_DistributedDDE | null,\n    position_code: string\n  ): AcademicDDEDistribution[] => {\n    return data\n      ? data.academic_distributed.filter(\n          (item) => item.position_code.toString() === position_code.toString()\n        )\n      : [];\n  };\n\n  FC_CalculateRequests = (data: AcademicDDEDistribution[]): number => {\n    let result: number = 0;\n\n    data.forEach((itemDistributed) => {\n      result += Number(this.FC_GetDistributionValue(itemDistributed));\n    });\n\n    return result;\n  };\n\n  FC_GetRequestsForTRS = (data: AcademicDDEDistribution[]): RequestInTRS[] => {\n    let distributed: number = 0,\n      requestArray: RequestInTRS[] = [];\n\n    data.forEach((itemDistributed) => {\n      // CALCULATING NUMBER OF POST REQUEST ==========================\n      distributed = Number(this.FC_GetDistributionValue(itemDistributed));\n      requestArray.push({\n        post_request_id: itemDistributed.post_request_id,\n        school_code: itemDistributed.school_code,\n        district_code: itemDistributed.district_code,\n        sector_code: itemDistributed.school_code.substring(0, 4),\n        province_code: itemDistributed.school_code.substring(0, 1),\n        gender: \"\",\n        in_education: false,\n        disability: false,\n        academic_year_id: this.props.basic.academic_calender\n          ? this.props.basic.academic_calender.academic_year_id\n          : \"\",\n        available_places: [\n          {\n            position_code: itemDistributed.position_code,\n            requested_teacher: distributed,\n          },\n        ],\n      });\n      distributed = 0;\n    });\n\n    return requestArray;\n  };\n\n  submitDataRequestTRS = (data: AcademicDDEDistribution[]) => {\n    const requestToSend = this.FC_GetRequestsForTRS(data);\n\n    //\n    this.setState({\n      loading_candidates_from_trs: true,\n      error: null,\n    });\n    FC_RequestTeachersInTRS_NEW(\n      this.state.selected_position,\n      requestToSend,\n      (status, data, err) => {\n        if (status === true && data !== null) {\n          this.setState({\n            loading_candidates_from_trs: false,\n            error: {\n              target: \"main-error\",\n              msg: err,\n            },\n            collected_teachers: data,\n            // loading_send_list_to_tmis: true,\n            collected_candidates_open: true,\n          });\n\n          // this.SendTeachersInTMIS(data);\n        } else {\n          this.setState({\n            loading_candidates_from_trs: false,\n            error: {\n              target: \"main-error\",\n              msg: err,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    // Check access\n    let access_list = this.props.auth.role?.access;\n    if (checkAccess(access_list, UsersAccess.DO_PLACEMENT) === false) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n\n    if (this.state.loading === true) {\n      return (\n        <DashboardContainer className=\"flex flex-col items-center justify-center\">\n          <Loading />\n          <div>Loading, please wait... {this.props.auth.role?.role_id}</div>\n        </DashboardContainer>\n      );\n    }\n\n    let selected_district_name = this.state.districts?.find(\n      (itm) => itm.district_code === this.state.selected_district\n    );\n\n    let selected_position = this.props.basic.positions?.find(\n      (itm) => itm.position_code === this.state.selected_position\n    );\n\n    const DATA_Result: AcademicDDEDistribution[] = this.FC_FilterByPosition(\n      this.state.distributionList,\n      this.state.selected_position\n    );\n\n    const DATA_TotalRequests: number = this.FC_CalculateRequests(DATA_Result);\n\n    const DATA_waitingList: WaitingList | undefined = this.state\n      .waiting_list_total\n      ? this.state.waiting_list_total.find(\n          (item) =>\n            item._id.toString() === this.state.selected_position.toString()\n        )\n      : undefined;\n\n    // Render the list\n    if (this.state.collected_candidates_open === true)\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          <div className=\"flex border-b p-2\">\n            <div className=\"flex-1 text-center\">\n              <Heading size=\"md\">\n                List of teachers form TRS waiting list\n              </Heading>\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <div className=\"grid grid-cols-2 gap-3 w-full\">\n              {[\n                {\n                  title: \"Position\",\n                  value: `(${selected_position?.position_code}) ${selected_position?.position_name}`,\n                  special: false,\n                },\n                {\n                  title: \"Total vacant post\",\n                  value: DATA_TotalRequests,\n                  special: false,\n                },\n              ].map((itm, i) => (\n                <div\n                  key={i}\n                  className={`bg-gray-50 py-1 px-2 border rounded flex-1 `}\n                >\n                  <span className=\"text-gray-500 block\">{itm.title}:</span>{\" \"}\n                  <b>{itm.value}</b>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <table className=\"w-full\">\n              <thead>\n                <tr>\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">NID</th>\n                  <th className=\"p-2 border\">Names</th>\n                  <th className=\"p-2 border\">Phone</th>\n                  <th className=\"p-2 border\">Email</th>\n                  <th className=\"p-2 border\">Gender</th>\n                  <th className=\"p-2 border\">School</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.collected_teachers.length <= 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"py-5 text-center\">\n                      <Heading>No candidates found!</Heading>\n                      <p>No results found</p>\n                    </td>\n                  </tr>\n                ) : (\n                  this.state.collected_teachers.map((cand, i) => {\n                    const school = DATA_Result.find(\n                      (item) =>\n                        item.school_code.toString() ===\n                        cand?.school_code.toString()\n                    );\n                    return (\n                      <tr key={i}>\n                        <td className=\"p-2 border\">{i + 1}</td>\n                        <td className=\"p-2 border\">{cand?.user_info?.n_id}</td>\n                        <td className=\"p-2 border\">\n                          {cand?.user_info?.user_info?.fname}{\" \"}\n                          {cand?.user_info?.user_info?.lname}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {cand?.user_info?.phone_number}\n                        </td>\n                        <td className=\"p-2 border\">{cand?.user_info?.email}</td>\n                        <td className=\"p-2 border\">\n                          {cand?.user_info?.user_info?.sex}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {school\n                            ? `${school.school_code} - ` + school.school_name\n                            : \"\"}\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n            <div className=\"p-2 text-right\">\n              <Button\n                onClick={() =>\n                  this.setState({\n                    collected_candidates_open: false,\n                    collected_teachers: [],\n                    customVacant: [],\n                    selected_position: \"\",\n                  })\n                }\n                theme=\"primary-light\"\n                className=\"mt-1\"\n              >\n                Add teacher to others position / district\n              </Button>\n            </div>\n          </div>\n        </DashboardContainer>\n      );\n\n    return (\n      <>\n        {!isEmptyOrSpaces(this.state.selected_district.toString()) &&\n          !isEmptyOrSpaces(this.state.selected_position.toString()) &&\n          DATA_waitingList && (\n            <div className=\"fixed bottom-0 right-0 flex left-0 bg-white shadow-lg border-t-2 px-3 items-center\">\n              <div className=\"main-side-spacer\"></div>\n              <div className=\"flex-1 p-2 flex justify-between items-center\">\n                <div className=\"flex items-center\">\n                  <div className=\"px-2 bg-gray-50 rounded\">\n                    <span className=\"text-sm\">Waiting list</span>\n                    <h3 className=\"font-bold text-2xl -mt-1\">\n                      {DATA_waitingList.waiting}\n                    </h3>\n                  </div>\n                  <div\n                    className={`mr-4 bg-green-50 ${\n                      DATA_waitingList.waiting >= DATA_TotalRequests &&\n                      DATA_TotalRequests > 0\n                        ? \"text-green-700\"\n                        : \"text-red-700\"\n                    } px-2`}\n                  >\n                    <span className=\"text-sm\">Total requests</span>\n                    <h3 className=\"font-bold text-2xl -mt-1\">\n                      {DATA_TotalRequests}\n                    </h3>\n                  </div>\n                </div>\n                <div className=\"\">\n                  {DATA_waitingList.waiting >= DATA_TotalRequests &&\n                  DATA_TotalRequests > 0 ? (\n                    <Button\n                      theme=\"accent\"\n                      onClick={() => this.submitDataRequestTRS(DATA_Result)}\n                      loading={this.state.loading_candidates_from_trs}\n                      className=\"animate__animated animate__zoomIn animate__faster\"\n                    >\n                      Do placement\n                    </Button>\n                  ) : (\n                    <span className=\"text-red-500\">\n                      {DATA_TotalRequests === 0\n                        ? \"Vacant post is zero!\"\n                        : \"Vacant post is greater than waiting list!\"}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n        <DashboardContainer>\n          {/* HEADER TITLE ============== */}\n\n          <div className=\"flex items-start\">\n            <div className=\"flex-1 mb-3\">\n              {/* <Heading>Do placement</Heading> */}\n              <div className=\"text-primary-800 text-2xl font-extrabold mb-2\">\n                Do placement\n              </div>\n              <Heading size=\"sm\" theme=\"accent\">\n                <b>\n                  {selected_district_name\n                    ? `${selected_district_name.district_name}`\n                    : \"\"}\n                  {selected_position\n                    ? ` / ${selected_position.position_name}`\n                    : \"\"}\n                </b>\n              </Heading>\n            </div>\n\n            {/* {waitingList && (\n              <div className=\"flex items-center\">\n                <div className=\"p-1 px-3 bg-blue-100 rounded mx-2\">\n                  <p className=\"text-sm\">Waiting list</p>\n                  <h2 className=\"text-2xl -mt-1 font-bold\">\n                    {isNaN(waitingList.waiting) ? \"\" : waitingList.waiting}\n                  </h2>\n                </div>\n              </div>\n            )} */}\n          </div>\n\n          {/* FILTER DATA ======================== */}\n\n          <div className=\"flex flex-col sm:flex-row items-start gap-3 justify-between\">\n            {/* FILTER DISTRICT DATA ======================== */}\n            <div className=\"flex flex-row items-center gap-3 w-full\">\n              {this.state.districts === null ? (\n                <div className=\"font-bold\">Loading, please wait...</div>\n              ) : (\n                <div className=\"w-full\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        showDistrictsList: !this.state.showDistrictsList,\n                      })\n                    }\n                    className={`border font-bold ${\n                      this.state.showDistrictsList === false\n                        ? \"border-gray-400 hover:border-primary-800 hover:bg-blue-100\"\n                        : \"border\"\n                    } hover:text-primary-800 w-full rounded px-3 py-2 bg-white cursor-pointer flex flex-row items-center gap-3 justify-between`}\n                  >\n                    <div className={`flex flex-row items-center gap-3`}>\n                      {this.state.selected_district !== \"\" &&\n                        selected_district_name && (\n                          <div className=\"rounded-full px-2 bg-blue-200 text-primary-800\">\n                            {shortString(selected_district_name.district_name)}\n                          </div>\n                        )}\n                      <span>\n                        {this.state.selected_district === \"\"\n                          ? \"Choose a district\"\n                          : \"Change district\"}\n                      </span>\n                    </div>\n\n                    <div>\n                      {this.state.showDistrictsList === false ? (\n                        <IoIosArrowDown className=\"text-xl\" />\n                      ) : (\n                        <IoIosArrowUp className=\"text-xl\" />\n                      )}\n                    </div>\n                  </div>\n                  {this.state.showDistrictsList === true && (\n                    <DistrictsLabel\n                      onChange={(value: string) => {\n                        this.setState({ selected_district: value });\n                        this.FC_GetDistrictDistribution(value);\n                      }}\n                      districts={this.state.districts}\n                      selected_district={this.state.selected_district}\n                      setVisibility={(status: boolean) => {\n                        this.setState({ showDistrictsList: status });\n                      }}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* FILTER POSITION DATA ======================== */}\n            <div className=\"flex flex-row items-center gap-3 w-full\">\n              {this.props.basic.positions === null ? (\n                <div className=\"font-bold\">Loading, please wait...</div>\n              ) : (\n                <div className=\"w-full\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        showPositionList: !this.state.showPositionList,\n                      })\n                    }\n                    className={`border font-bold ${\n                      this.state.showPositionList === false\n                        ? \"border-gray-400 hover:border-primary-800 hover:bg-blue-100\"\n                        : \"border\"\n                    } hover:text-primary-800 w-full rounded px-3 py-2 bg-white cursor-pointer flex flex-row items-center gap-3 justify-between`}\n                  >\n                    <div className=\"flex flex-row items-center gap-3\">\n                      {this.state.selected_position !== \"\" &&\n                        selected_position && (\n                          <div className=\"rounded-full px-2 bg-blue-200 text-primary-800\">\n                            {shortString(selected_position.position_name)}\n                          </div>\n                        )}\n                      <span>\n                        {this.state.selected_position === \"\"\n                          ? \"Choose a position\"\n                          : \"Change position\"}\n                      </span>\n                    </div>\n\n                    <div>\n                      {this.state.showPositionList === false ? (\n                        <IoIosArrowDown className=\"text-xl\" />\n                      ) : (\n                        <IoIosArrowUp className=\"text-xl\" />\n                      )}\n                    </div>\n                  </div>\n                  {this.state.showPositionList === true && (\n                    <SelectPosition\n                      onChange={(value: string) => {\n                        this.setState({ selected_position: value });\n                      }}\n                      positions={this.props.basic.positions}\n                      selected_position={this.state.selected_position}\n                      setVisibility={(status: boolean) => {\n                        this.setState({ showPositionList: status });\n                      }}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* BODY DATA ======================== */}\n          <div>\n            {(isEmptyOrSpaces(this.state.selected_district.toString()) ||\n              isEmptyOrSpaces(this.state.selected_position.toString())) && (\n              <div\n                onClick={() =>\n                  this.setState({\n                    showDistrictsList: !this.state.showDistrictsList,\n                  })\n                }\n                className=\"underline px-5 py-5 cursor-pointer rounded-md mt-5 bg-blue-50 text-gray-900 font-extrabold text-center w-full text-2xl\"\n              >\n                {isEmptyOrSpaces(this.state.selected_district)\n                  ? \"No district selected!\"\n                  : \"No position selected!\"}\n              </div>\n            )}\n\n            {/* {this.state.distributionList&&this.state.distributionList} */}\n            {!isEmptyOrSpaces(this.state.selected_district.toString()) &&\n              !isEmptyOrSpaces(this.state.selected_position.toString()) && (\n                <div className=\"my-3\">\n                  <table className=\"w-full text-left table-auto\">\n                    <thead>\n                      <tr>\n                        <th className=\"p-2 border\">#</th>\n                        <th className=\"p-2 border\">School name</th>\n                        <th className=\"p-2 border\">Post name</th>\n                        <th className=\"p-2 border\">\n                          Existing post{\"(\"}s{\")\"}\n                        </th>\n                        <th className=\"p-2 border \">Vacant posts</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.loadingDistribution ? (\n                        <TableLoading cols={5} />\n                      ) : this.state.distributionList === null ||\n                        this.state.distributionList.academic_distributed\n                          .length === 0 ||\n                        DATA_Result.length === 0 ? (\n                        <tr>\n                          <td\n                            colSpan={5}\n                            className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                          >\n                            <Heading size=\"md\">No results found</Heading>\n                          </td>\n                        </tr>\n                      ) : (\n                        DATA_Result.map(\n                          (itemDistributed: AcademicDDEDistribution, i) => {\n                            let distributionValue =\n                              this.FC_GetDistributionValue(itemDistributed);\n                            return (\n                              <Fragment key={i}>\n                                <tr className=\"border rounded hover:bg-blue-500 hover:bg-opacity-20\">\n                                  <td className=\"p-2 border\" key={i}>\n                                    {i + 1}\n                                  </td>\n                                  <td className=\"p-2 border\">\n                                    {itemDistributed.school_name}\n                                  </td>\n                                  <td className=\"p-2 border\">\n                                    {itemDistributed.position_name}\n                                  </td>\n                                  <td className=\"p-2 border\">\n                                    {itemDistributed.existing_post}\n                                  </td>\n\n                                  {this.state.selected_request_id ===\n                                  itemDistributed.post_request_id ? (\n                                    <td className=\" border  w-20 relative\">\n                                      <input\n                                        type=\"number\"\n                                        className=\"w-full p-1 border-4 rounded-t border-primary-800 font-bold bg-transparent\"\n                                        value={this.state.new_value}\n                                        onChange={(e) => {\n                                          Number(e.target.value) < 0\n                                            ? this.setState({\n                                                new_value: \"0\",\n                                              })\n                                            : this.setState({\n                                                new_value: e.target.value,\n                                              });\n                                        }}\n                                        onBlur={(e) =>\n                                          this.FC_ChangeCustomVacant(\n                                            itemDistributed.dde_post_distribution,\n                                            e.target.value\n                                          )\n                                        }\n                                        max={\n                                          itemDistributed.dde_post_distribution\n                                        }\n                                        autoFocus\n                                        min={0}\n                                      />\n                                    </td>\n                                  ) : (\n                                    <td\n                                      className=\"p-2 border w-20 font-bold bg-green-100 bg-opacity-40 text-green-800 cursor-pointer\"\n                                      onClick={() =>\n                                        this.setState({\n                                          selected_request_id:\n                                            itemDistributed.post_request_id,\n                                          new_value: distributionValue,\n                                        })\n                                      }\n                                    >\n                                      {distributionValue}\n                                    </td>\n                                  )}\n                                </tr>\n                              </Fragment>\n                            );\n                          }\n                        )\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\nexport const DoPlacement = connect(mapStateToProps, { FC_GetAllPositions })(\n  _DoPlacement\n);\n"],"sourceRoot":""}