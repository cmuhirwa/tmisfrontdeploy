{"version":3,"sources":["components/Inputs/InputSelect.tsx","types/PlacementReportTypes.ts","utils/validatedStaff.ts","components/PlacementListPreview/PlacementListPreview.tsx","containers/CreatePlacementList/CreatePlacementList.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","staff_code","status","isChangeAllowed","nid","full_name","first_name","middle_name","last_name","phone_numbers","email","dob","sex","marital_status","qualification","specialization","rssb_number","bank_name","bank_account","position","role","district_code","district_name","school_code","school_name","school_category","school_status","nationality","date_of_hire","date_in_school","subjects","grades","periods","forReportRoles","system","country","district","school","FC_GetStringValue","FC_isDateValid","DATE","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","element","includes","push","isEmptyOrSpaces","course_name","grade_code","findIndex","item","index","JSON","parse","grade_group","length","grade_name","Number","teaching_period","toString","dateWrapper","Date","isNaN","getDate","validateStaff","staff","errors","hired_date","role_id","validated","PlacementListPreview","placement_list","footer","header","filter","itm","Hierachy","location","staff_category","_PlacementList","props","submitLogin","e","preventDefault","componentDidMount","RenderPageAccess","auth","access","UsersAccess","HEADTEACHER_CREATE_PLACEMENT_LIST","startApp","basic","academic_calender","setState","target","msg","FC_GetTeachersBySchool","loading_data","roles","req","UpdatePlacement","el","submitList","substring","loading_placement_submit","FC_SubmitPlacementList","academic_year_id","list","stringify","state","month","MONTHS_LIST","getMonth","ht_comment","selected_month","setTimeout","setApprovedList","approved_list","SelectAll","DeSelectAll","loading","selected_role","selected_request_id","selected_value","selected_comment","selected_auto_level","search","selected_qualification","user","accepted_changes","selected_check_validation","this","to","RequestsList","user_id","username","theme","fixed","onClick","type","onSubmit","full","qualifications","qualification_name","colSpan","existOnPlacement","validatedCheck","bind","React","Component","CreatePlacementList","connect"],"mappings":"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","file":"static/js/17.679ee091.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        <label\n          htmlFor=\"login-form-email\"\n          className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n        >\n          {label}\n        </label>\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import { DATE, isEmptyOrSpaces } from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  staff_code: string;\n  full_name: string;\n  first_name: string;\n  last_name: string;\n  nid: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  // nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  staff_category: string;\n  rssb_number: string;\n  bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  region_code: string;\n  // LOCATION INFO ##############\n  village_name: string;\n  cell_name: string;\n  cell_code: string;\n  sector_name: string;\n  sector_code: string;\n  district_name: string;\n  district_code: string;\n  province_name: string;\n  province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  periods: string;\n  // NEW FIELD =====================\n  date_in_school: string;\n  date_of_hire: string;\n  nationality: string;\n  middle_name: string;\n  bank_name: string;\n  // END NEW FIELD =================\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  nid = \"nid\",\n  rssb_number = \"rssb_number\",\n  // nationality_id = \"nationality_id\",\n  bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  staff_category = \"staff_category\",\n  staff_code = \"staff_code\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  region_code = \"region_code\",\n  village_name = \"village_name\",\n  cell_name = \"cell_name\",\n  cell_code = \"cell_code\",\n  sector_name = \"sector_name\",\n  sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  district_code = \"district_code\",\n  province_name = \"province_name\",\n  province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  periods = \"periods\",\n\n  // NEW FIELDS ================\n  date_in_school = \"date_in_school\",\n  date_of_hire = \"date_of_hire\",\n  nationality = \"nationality\",\n  middle_name = \"middle_name\",\n  bank_name = \"bank_name\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.staff_code,\n      title: \"Staff code\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.first_name,\n      title: \"Staff First Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.middle_name,\n      title: \"Staff Middle Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.last_name,\n      title: \"Staff Last Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.rssb_number,\n      title: \"RSSB\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_name,\n      title: \"Bank name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_account,\n      title: \"Bank account\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_code,\n      title: \"District Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nationality,\n      title: \"Nationality\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_in_school,\n      title: \"Date in school\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.periods,\n      title: \"Periods\",\n      status: true,\n      isChangeAllowed: true,\n    },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  system: string[];\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  system: [\"26\", \"Admin\"],\n  country: [\"REB\", \"4\", \"RTB\", \"300\", \"MINECOFIN\", \"27\"],\n  district: [\"DDE\", \"3\", \"Human Resource\", \"25\"],\n  school: [\"Head Teacher\", \"Teacher\", \"2\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | Date | null): string => {\n  if (value === null) return \"\";\n  if (FC_isDateValid(value)) return DATE(value);\n  return value as string;\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: number[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(JSON.parse(element.grade_group).length);\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | Date | null): boolean => {\n  if (value === null) return false;\n  var dateWrapper = new Date(value);\n  return !isNaN(dateWrapper.getDate());\n};\n","import { TeacherData } from \"../actions\";\n\nconst validateStaff = (\n  staff: TeacherData\n): { validated: boolean; errors: string[] } => {\n  let errors: string[] = [];\n\n  // first name\n  if (!staff.first_name || staff.first_name.length <= 2)\n    errors.push(\"First name is not valid\");\n\n  // last name\n  if (!staff.last_name || staff.last_name.length <= 2)\n    errors.push(\"Last name is not valid\");\n\n  // bank name\n  if (!staff.bank_name || staff.bank_name.length <= 2)\n    errors.push(\"Bank name is not valid\");\n\n  // bank account\n  if (!staff.bank_account || staff.bank_account.length <= 2)\n    errors.push(\"Bank account number is not valid\");\n\n  // bank account\n  if (!staff.full_name || staff.full_name.length <= 2)\n    errors.push(\"Full names\");\n\n  // hired date\n  if (!staff.hired_date || staff.hired_date.length <= 2)\n    errors.push(\"Hired date is not valid\");\n\n  // martial status\n  if (!staff.marital_status || staff.marital_status.length <= 2)\n    errors.push(\"Martial status not valid\");\n\n  // National status\n  if (!staff.nationality || staff.nationality.length <= 2)\n    errors.push(\"Nationality is not valid\");\n\n  // National status\n  if (!staff.nid || staff.nid.length <= 8) errors.push(\"NID is not valid\");\n\n  // Phone number\n  if (!staff.phone_numbers || staff.phone_numbers.length <= 8)\n    errors.push(\"Phone number is not valid\");\n\n  // Phone number\n  if (!staff.position || staff.position.length <= 2)\n    errors.push(\"No selected position\");\n\n  // Qualification\n  if (!staff.qualification || staff.qualification.length <= 1)\n    errors.push(\"No selected qualification\");\n\n  // Role\n  if (!staff.role || staff.role.length <= 2) errors.push(\"No selected role\");\n\n  // RSSB number\n  if (!staff.rssb_number || staff.rssb_number.length <= 4)\n    errors.push(\"Invalid RSSB Number\");\n\n  // School\n  if (\n    !staff.school ||\n    !staff.school?.school_name ||\n    staff.school?.school_name.length <= 1\n  )\n    errors.push(\"Invalid School\");\n\n  // No sex selected\n  if (!staff.sex || staff.sex.length <= 2) errors.push(\"No sex selected\");\n\n  // Specialization\n  if (!staff.specialization || staff.specialization.length <= 2)\n    errors.push(\"Invalid specialization\");\n\n  // Specialization\n  if (!staff.staff_code || staff.staff_code.length <= 2)\n    errors.push(\"Invalid Staff category\");\n\n  // Hierarch\n  if (staff.role_id === \"1\")\n    if (!staff.teacher_hierarch || staff.teacher_hierarch.length <= 0)\n      errors.push(\"This user is a teacher, and must have at least one course\");\n\n  return {\n    errors: errors,\n    validated: errors.length > 0 ? false : true,\n  };\n};\n\nexport default validateStaff;\n","import React, { FC, ReactElement } from \"react\";\nimport { TeacherData } from \"../../actions\";\nimport { FC_GetHierarchStrings } from \"../../types/PlacementReportTypes\";\n// import Heading from \"../Heading/Heading\";\n\ntype PlacementListPreviewProps = {\n  placement_list: TeacherData[];\n  header: React.ReactNode | undefined;\n  footer: React.ReactNode | undefined;\n};\n\nconst PlacementListPreview: FC<PlacementListPreviewProps> = ({\n  placement_list,\n  footer,\n  header,\n}): ReactElement => {\n  return (\n    <div className=\"fixed top-0 bottom-0 right-0 left-0 animate__animated animate__fadeIn  bg-black bg-opacity-95 z-60 overflow-auto\">\n      <div className=\"w-full mx-auto bg-white px-3 py-8 animate__animated animate__zoomIn animate__faster\">\n        {header && header}\n\n        <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                {/* <th className=\"p-1 border\">Date to School</th> */}\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status === \"Active\")\n                .map((itm, i) => {\n                  let Hierachy = FC_GetHierarchStrings(itm.teacher_hierarch);\n                  return (\n                    <tr key={i}>\n                      <th className=\"p-1 border\">{i + 1}</th>\n                      <th className=\"p-1 border\">\n                        {itm?.location?.district_code}\n                      </th>\n                      <th className=\"p-1 border\">\n                        {itm?.location?.district_name}\n                      </th>\n                      <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                      <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                      <th className=\"p-1 border\">\n                        {itm?.school?.school_category}\n                      </th>\n                      <th className=\"p-1 border\">\n                        {itm?.school?.school_status}\n                      </th>\n                      <th className=\"p-1 border\">{itm?.staff_category}</th>\n                      <th className=\"p-1 border\">{itm?.staff_code}</th>\n                      <th className=\"p-1 border\">{itm?.nid}</th>\n                      <th className=\"p-1 border\">{itm?.full_name}</th>\n                      <th className=\"p-1 border\">{itm?.first_name}</th>\n                      <th className=\"p-1 border\">{itm?.middle_name}</th>\n                      <th className=\"p-1 border\">{itm?.last_name}</th>\n                      <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                      <th className=\"p-1 border\">{itm?.email}</th>\n                      <th className=\"p-1 border\">{itm?.dob}</th>\n                      <th className=\"p-1 border\">{itm?.sex}</th>\n                      <th className=\"p-1 border\">{itm?.nationality}</th>\n                      <th className=\"p-1 border\">{itm?.marital_status}</th>\n                      <th className=\"p-1 border\">{itm?.qualification}</th>\n                      <th className=\"p-1 border\">{itm?.position}</th>\n                      <th className=\"p-1 border\">{itm?.specialization}</th>\n                      <th className=\"p-1 border\">{itm?.hired_date}</th>\n                      {/* <th className=\"p-1 border\">\n                        {itm?.start_date_in_the_school}\n                      </th> */}\n                      <th className=\"p-1 border\">{Hierachy.courses}</th>\n                      <th className=\"p-1 border\">{Hierachy.periods}</th>\n                      <th className=\"p-1 border\">{Hierachy.grades}</th>\n                      <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                      <th className=\"p-1 border\">{itm?.bank_account}</th>\n                      <th className=\"p-1 border\">{itm?.bank_name}</th>\n                      <th className=\"p-1 border\">{itm?.status}</th>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n        <br />\n        {/* <Heading className=\"text-center\">\n          Others candidates on placement list\n        </Heading> */}\n        {/* <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                <th className=\"p-1 border\">Date to School</th>\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status !== \"Active\")\n                .map((itm, i) => (\n                  <tr key={i}>\n                    <th className=\"p-1 border\">{i + 1}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_code}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_name}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                    <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.school?.school_category}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_status}</th>\n                    <th className=\"p-1 border\">{itm?.staff_category}</th>\n                    <th className=\"p-1 border\">{itm?.staff_code}</th>\n                    <th className=\"p-1 border\">{itm?.nid}</th>\n                    <th className=\"p-1 border\">{itm?.full_name}</th>\n                    <th className=\"p-1 border\">{itm?.first_name}</th>\n                    <th className=\"p-1 border\">{itm?.last_name}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                    <th className=\"p-1 border\">{itm?.email}</th>\n                    <th className=\"p-1 border\">{itm?.dob}</th>\n                    <th className=\"p-1 border\">{itm?.sex}</th>\n                    <th className=\"p-1 border\">{itm?.nationality_id}</th>\n                    <th className=\"p-1 border\">{itm?.marital_status}</th>\n                    <th className=\"p-1 border\">{itm?.qualification}</th>\n                    <th className=\"p-1 border\">{itm?.position}</th>\n                    <th className=\"p-1 border\">{itm?.specialization}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                    <th className=\"p-1 border\">{itm?.bank_account}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.status}</th>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div> */}\n\n        <div className=\"\">{footer && footer}</div>\n      </div>\n    </div>\n  );\n};\nexport default PlacementListPreview;\n","import React, { Fragment } from \"react\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdWarning } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nimport {\n  Auth,\n  Basic,\n  TeacherData,\n  TeacherDataRole,\n  FC_GetTeachersBySchool,\n  FC_SubmitPlacementList,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport PlacementListPreview from \"../../components/PlacementListPreview/PlacementListPreview\";\nimport { StoreState } from \"../../reducers\";\nimport { RenderPageAccess, UsersAccess } from \"../../utils/access\";\nimport { DATE, MONTHS_LIST, search } from \"../../utils/functions\";\nimport validateStaff from \"../../utils/validatedStaff\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n}\n\ninterface AppState {\n  loading: boolean;\n  approved_list: boolean;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"update-error\"\n      | \"main-error\"\n      | \"submit-list-error\"\n      | \"submit-month-error\"\n      | \"submit-list-success\"\n      | \"submit-list-success-redirect\"\n      | null;\n    msg: string;\n  };\n  data: TeacherData[];\n  placement_list: TeacherData[];\n  roles: TeacherDataRole[];\n  loading_data: boolean;\n  selected_role: string;\n  selected_request_id: string;\n  selected_value: string;\n  selected_comment: string;\n  selected_auto_level: string;\n  search: string;\n  selected_qualification: string;\n  selected_month: string;\n  loading_placement_submit: boolean;\n  ht_comment: string;\n  accepted_changes: boolean;\n  selected_check_validation: string;\n}\n\nclass _PlacementList extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      approved_list: false,\n      loading: false,\n      data: [],\n      placement_list: [],\n      roles: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_data: true,\n      selected_role: \"\",\n      selected_request_id: \"\",\n      selected_value: \"0\",\n      selected_comment: \"\",\n      selected_auto_level: \"\",\n      search: \"\",\n      selected_qualification: \"\",\n      selected_month: \"\",\n      loading_placement_submit: false,\n      ht_comment: `I,  ${this.props.auth.user?.first_name} ${\n        this.props.auth.user?.middle_name\n      } ${this.props.auth.user?.last_name} with Staff code: ${\n        this.props.auth.user?.staff_code\n      } and with NID: ${this.props.auth.user?.nid}, Head Teacher of ${\n        this.props.auth.school?.school_name\n      } - ${\n        this.props.auth.school?.school_code\n      }, confirm that the list of teachers displayed on this teacher placement report for ${\n        MONTHS_LIST[new Date().getMonth()]\n      } generated on ${DATE(\n        new Date()\n      )} is valid. I also confirm that every teacher is assigned to his/her teaching qualification as per their appointment letters. `,\n\n      accepted_changes: false,\n      selected_check_validation: \"\",\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n  };\n\n  componentDidMount = () => {\n    RenderPageAccess(\n      this.props.auth.role?.access,\n      UsersAccess.HEADTEACHER_CREATE_PLACEMENT_LIST,\n      () => {\n        this.startApp();\n      }\n    );\n  };\n\n  startApp = () => {\n    if (this.props.basic.academic_calender === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"failed to load data, please reload the page (Refresh)\",\n        },\n      });\n    } else if (this.props.auth.school === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No school assigned to you\",\n        },\n      });\n    } else {\n      let school_code = this.props.auth.school.school_code;\n      this.setState({\n        error: {\n          target: null,\n          msg: \"\",\n        },\n      });\n      FC_GetTeachersBySchool(school_code, (status, data, msg) => {\n        if (status === true && data !== null) {\n          this.setState({\n            loading_data: false,\n            data: data.staff,\n            roles: data.role,\n            placement_list: data.staff.filter(\n              (req) => validateStaff(req).validated\n            ),\n            // placement_list: data.staff.filter(\n            //   (req) => !(req.first_name == null || req.first_name === \"\")\n            // ),\n          });\n          // this.SelectAll()\n        } else {\n          this.setState({\n            loading_data: false,\n            error: {\n              msg: msg,\n              target: \"main-error\",\n            },\n          });\n        }\n      });\n    }\n  };\n\n  UpdatePlacement = (el: TeacherData, status: number) => {\n    // if (status < 0) {\n    //   this.setState({\n    //     placement_list: [...this.state.placement_list, el],\n    //   });\n    // } else {\n    //   this.setState({\n    //     placement_list: this.state.placement_list.filter(\n    //       (itm) => itm.user_id !== el.user_id\n    //     ),\n    //   });\n    // }\n  };\n\n  submitList = (e: any) => {\n    e.preventDefault();\n\n    // if (this.state.selected_month === \"\")\n    //   return this.setState({\n    //     error: {\n    //       target: \"submit-month-error\",\n    //       msg: \"Please select the month\",\n    //     },\n    //   });\n\n    if (\n      this.props.basic.academic_calender === null ||\n      this.props.auth.school === null\n    )\n      return this.setState({\n        error: {\n          target: \"submit-list-error\",\n          msg: \"You don't has a district assigned to you\",\n        },\n      });\n\n    let district_code = this.props.auth.school.school_code.substring(0, 2);\n\n    this.setState({\n      loading_placement_submit: true,\n    });\n    FC_SubmitPlacementList(\n      {\n        academic_year_id: this.props.basic.academic_calender?.academic_year_id,\n        district_code: district_code,\n        list: JSON.stringify(this.state.placement_list),\n        month: MONTHS_LIST[new Date().getMonth()],\n        school_code: this.props.auth.school.school_code,\n        ht_comment: this.state.ht_comment,\n      },\n      (status, data, msg) => {\n        if (status === true) {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-success\",\n              msg: `Placement list for ${this.state.selected_month} has been submitted successfully`,\n            },\n          });\n\n          //* redirect the data\n          setTimeout(() => {\n            this.setState({\n              error: {\n                target: \"submit-list-success-redirect\",\n                msg: \"\",\n              },\n            });\n          }, 2000);\n        } else {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-error\",\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  setApprovedList = () =>\n    this.setState({ approved_list: !this.state.approved_list });\n\n  SelectAll = () => this.setState({ placement_list: this.state.data });\n  DeSelectAll = () => this.setState({ placement_list: [] });\n\n  render() {\n    if (this.state.error.target === \"submit-list-success-redirect\")\n      return <Redirect to=\"/placement-list-ht\" />;\n\n    let RequestsList =\n      this.state.selected_role === \"\"\n        ? this.state.data\n        : this.state.data.filter(\n            (itm) => itm.role_id === this.state.selected_role\n          );\n\n    RequestsList =\n      this.state.selected_qualification === \"\"\n        ? RequestsList\n        : RequestsList.filter(\n            (itm) => itm.qualification === this.state.selected_qualification\n          );\n\n    RequestsList = search(RequestsList, this.state.search, {\n      email: true,\n      first_name: true,\n      full_name: true,\n      last_name: true,\n      phone_numbers: true,\n      qualification: true,\n      role: true,\n      role_id: true,\n      status: true,\n      user_id: true,\n      username: true,\n    });\n\n    if (this.state.loading_data === true)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.error.target === \"main-error\") {\n      return (\n        <Alert theme=\"danger\" fixed>\n          {this.state.error.msg}\n        </Alert>\n      );\n    }\n\n    if (this.state.approved_list === true)\n      return (\n        <>\n          <PlacementListPreview\n            placement_list={this.state.placement_list}\n            header={\n              <>\n                <div className=\"flex\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-xl\">\n                      <h2>\n                        School code:{\" \"}\n                        <b>{this.props.auth.school?.school_code}</b>\n                      </h2>\n                      <h2>\n                        School name:{\" \"}\n                        <b>{this.props.auth.school?.school_name}</b>\n                      </h2>\n                      <h2>\n                        Done by: <b>{this.props.auth.user?.full_name}</b>\n                      </h2>\n                    </div>\n                  </div>\n                  <div className=\"flex-1 text-right\">\n                    <Button\n                      size=\"lg\"\n                      theme=\"danger-light\"\n                      onClick={this.setApprovedList}\n                      disabled={this.state.loading_placement_submit}\n                      type=\"button\"\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n\n                <h1 className=\"text-center text-3xl font-bold mb-4 \">\n                  Placement list\n                </h1>\n              </>\n            }\n            footer={\n              <>\n                <form onSubmit={this.submitList}>\n                  <div className=\"mt-5 flex border-t pt-3\">\n                    <div className=\"lg:flex-1\"></div>\n                    <div className=\"flex-1\">\n                      {this.state.error.target === \"submit-list-success\" && (\n                        <Alert theme=\"success\">{this.state.error.msg}</Alert>\n                      )}\n                      {this.state.error.target === \"submit-list-error\" && (\n                        <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n                      )}\n                      <div className=\"\">\n                        <span>Comment:</span>\n                        <div\n                          // readOnly\n                          // onChange={(e) =>\n                          //   this.setState({\n                          //     ht_comment: e.target.value,\n                          //   })\n                          // }\n                          className=\"w-full  border-2 bg-blue-100 border-blue-900  rounded p-2\"\n                        >\n                          {this.state.ht_comment}\n                        </div>\n                      </div>\n\n                      <div\n                        onClick={() =>\n                          this.setState({\n                            accepted_changes: !this.state.accepted_changes,\n                          })\n                        }\n                        className={`flex my-2 p-1 bg-gray-100 rounded gap-2 cursor-pointer ${\n                          this.state.accepted_changes === true\n                            ? \"text-green-600\"\n                            : \"text-gray-800\"\n                        }`}\n                      >\n                        <div className=\"\">\n                          {this.state.accepted_changes === true ? (\n                            <MdCheckBox className=\"text-3xl\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"text-3xl\" />\n                          )}\n                        </div>\n                        <div className=\"flex-1 \">\n                          <p className=\"text-xl\">\n                            I have read and agree/agreed with the comment.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex w-full items-end gap-4\">\n                        <div className=\"flex-1\">\n                          <InputSelect\n                            data={[\n                              {\n                                title: MONTHS_LIST[new Date().getMonth()],\n                                value: MONTHS_LIST[new Date().getMonth()],\n                              },\n                              // ...MONTHS_LIST.map((itm) => ({\n                              //   title: itm,\n                              //   value: itm,\n                              // })),\n                            ]}\n                            label=\"Current month\"\n                            name=\"selected-month\"\n                            onChange={(e) =>\n                              this.setState({\n                                selected_month: e.target.value,\n                                error: { target: null, msg: \"\" },\n                              })\n                            }\n                            placeholder=\"Select month\"\n                            value={this.state.selected_month}\n                            error={\n                              this.state.error.target === \"submit-month-error\"\n                                ? this.state.error.msg\n                                : \"\"\n                            }\n                            // disabled={this.state.loading_placement_submit}\n                            disabled={true}\n                          />\n                        </div>\n\n                        {this.state.accepted_changes === true && (\n                          <div className=\"flex-1 pb-2 animate__animated animate__zoomIn animate__faster\">\n                            <Button\n                              full\n                              size=\"lg\"\n                              className=\"flex-1\"\n                              loading={this.state.loading_placement_submit}\n                            >\n                              Submit placement list\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </>\n            }\n          />\n        </>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"fixed bottom-0 right-0 flex left-0 bg-white shadow-lg border-t-2 px-3 items-center\">\n          <div className=\"main-side-spacer\"></div>\n          <div className=\"flex-1 p-2 flex items-center\">\n            <div className=\"mr-4 bg-green-50 text-green-700 px-2\">\n              <span className=\"text-sm\">Total validated</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.placement_list.length}\n              </h3>\n            </div>\n            <div className=\"px-2 bg-gray-50 rounded\">\n              <span className=\"text-sm\">Total Teachers</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.data.length}\n              </h3>\n            </div>\n            <div className=\"flex-1\"></div>\n            <div className=\"\">\n              {this.state.placement_list.length >= 1 && (\n                <Button\n                  theme=\"accent\"\n                  onClick={this.setApprovedList}\n                  className=\"animate__animated animate__zoomIn animate__faster\"\n                >\n                  Preview list\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <DashboardContainer>\n          {this.state.error.target === \"main\" && (\n            <Alert theme=\"danger\" fixed>\n              {this.state.error.msg}\n            </Alert>\n          )}\n          {this.state.error.target === \"loading-update-error\" && (\n            <Alert theme=\"danger\" fixed>\n              {this.state.error.msg}\n            </Alert>\n          )}\n\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <Heading>Placement List Approval Process</Heading>\n              <p className=\"opacity-60 text-lg -mt-1 font-bold text-accent-900 dark:text-accent-800\">\n                {this.props.auth.school?.school_name}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"border border-t mt-2 mb-1 flex items-center pl-3 pr-2 rounded\">\n              <div className=\"flex-1 pr-2\">\n                <TextInput\n                  error=\"\"\n                  label=\"Search\"\n                  name=\"\"\n                  type=\"search\"\n                  onChange={(e) => this.setState({ search: e.target.value })}\n                  placeholder=\"Search by teacher name\"\n                  value={this.state.search}\n                  size=\"sm\"\n                />\n              </div>\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    { title: \"All Roles\", value: \"\" },\n                    ...this.state.roles.map((el) => ({\n                      title: el.role,\n                      value: el.role_id,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_role\"\n                  onChange={(e) =>\n                    this.setState({ selected_role: e.target.value })\n                  }\n                  label=\"Role\"\n                  placeholder=\"Select role\"\n                  value={this.state.selected_role}\n                  size=\"sm\"\n                />\n              </div>\n              {this.props.basic.qualifications !== null && (\n                <div className=\"px-2\">\n                  <InputSelect\n                    data={[\n                      { title: \"All\", value: \"\" },\n                      ...this.props.basic.qualifications.map((el) => ({\n                        title: el.qualification_name,\n                        value: el.qualification_name,\n                      })),\n                    ]}\n                    error=\"\"\n                    name=\"select_qualification\"\n                    onChange={(e) =>\n                      this.setState({ selected_qualification: e.target.value })\n                    }\n                    label=\"Qualification\"\n                    placeholder=\"Select Qualification\"\n                    value={this.state.selected_qualification}\n                    size=\"sm\"\n                  />\n                </div>\n              )}\n              {/* <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n                <label className=\"\">Results:</label>\n                <h4 className=\"text-2xl -mt-1 font-bold\">\n                  {RequestsList.length}\n                </h4>\n              </div> */}\n            </div>\n            <div className=\"p-2 flex\">\n              {/* {this.state.placement_list.length !== this.state.data.length && (\n                <Button\n                  theme=\"default\"\n                  size=\"sm\"\n                  className=\"flex items-center\"\n                  onClick={this.SelectAll.bind(this)}\n                >\n                  <MdIndeterminateCheckBox className=\"inline-block text-lg mr-1\" />\n                  <span>Select all</span>\n                </Button>\n              )} */}\n\n              {/* {this.state.placement_list.length !== 0 && (\n                <Button\n                  theme=\"default\"\n                  size=\"sm\"\n                  className=\"flex items-center ml-2\"\n                  onClick={this.DeSelectAll.bind(this)}\n                >\n                  <MdIndeterminateCheckBox className=\"inline-block text-lg mr-1\" />\n                  <span>De-select all</span>\n                </Button>\n              )} */}\n            </div>\n            <table className=\"w-full text-left table-auto border\">\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Names</th>\n                  <th>First name</th>\n                  <th>Last name</th>\n                  <th>Phone number</th>\n                  <th>Role</th>\n                  <th>Qualification</th>\n                </tr>\n              </thead>\n              <tbody>\n                {RequestsList.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={8}\n                      className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      <Heading size=\"md\" className=\"opacity-60 font-light\">\n                        No results found\n                      </Heading>\n                    </td>\n                  </tr>\n                ) : (\n                  RequestsList.map((req, i) => {\n                    let existOnPlacement = this.state.placement_list.findIndex(\n                      (itm) => itm.user_id === req.user_id\n                    );\n\n                    let validatedCheck = validateStaff(req);\n\n                    return (\n                      <Fragment key={i}>\n                        <tr\n                          className={`group border rounded hover:bg-blue-500 hover:bg-opacity-20 ${\n                            existOnPlacement < 0\n                              ? \"\"\n                              : \"bg-green-600 bg-opacity-10\"\n                          } `}\n                        >\n                          <td\n                            className=\"p-1 border cursor-pointer\"\n                            key={i}\n                            onClick={this.UpdatePlacement.bind(\n                              this,\n                              req,\n                              existOnPlacement\n                            )}\n                          >\n                            {existOnPlacement < 0 ? (\n                              <button\n                                onClick={() =>\n                                  this.setState({\n                                    selected_check_validation: req.user_id,\n                                  })\n                                }\n                              >\n                                <MdWarning\n                                  className=\"text-3xl text-yellow-500 mx-auto\"\n                                  title=\"This teacher is not validated\"\n                                />\n                              </button>\n                            ) : (\n                              <MdCheckBox className=\"text-3xl text-green-600 mx-auto\" />\n                            )}\n                          </td>\n                          <td className=\"p-2 border\">{req.full_name}</td>\n                          <td className=\"p-2 border\">{req.first_name}</td>\n                          <td className=\"p-2 border\">{req.last_name}</td>\n                          <td className=\"p-2 border\">{req.phone_numbers}</td>\n                          <td className=\"p-2 border\">{req.role}</td>\n                          <td className=\"p-2 border\">{req.qualification}</td>\n                        </tr>\n                        {this.state.selected_check_validation ===\n                          req.user_id && (\n                          <tr>\n                            <td colSpan={10} className=\"pb-5\">\n                              <div className=\"pb-2 rounded-b-lg -mt-1 animate__animated animate__zoomIn animate__faster border bg-red-100\">\n                                <div className=\"p-1 px-2 flex bg-red-200\">\n                                  <h2 className=\"flex-1 text-lg text-red-800 font-bold\">\n                                    <span className=\"p-0.5 text-center rounded-full bg-red-600 pr-1 inline-block text-white\">\n                                      {validatedCheck.errors.length}\n                                    </span>{\" \"}\n                                    Items to be validated\n                                  </h2>\n                                  <Button\n                                    className=\"\"\n                                    size=\"sm\"\n                                    theme=\"danger-light\"\n                                    onClick={() =>\n                                      this.setState({\n                                        selected_check_validation: \"\",\n                                      })\n                                    }\n                                  >\n                                    Close\n                                  </Button>\n                                </div>\n\n                                <div className=\"px-2 gap-1 rounded grid md:grid-cols-2 lg:grid-cols-3 pt-2\">\n                                  {validatedCheck.errors.map((itm, i) => (\n                                    <div\n                                      key={i}\n                                      className=\"border rounded full mb-1 mx-2 border-red-300 bg-white p-1 flex\"\n                                    >\n                                      <MdWarning className=\"pr-1 text-xl inline-block text-yellow-600\" />{\" \"}\n                                      <p>{itm}</p>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n                        )}\n                      </Fragment>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n        <div className=\"h-24\"></div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const CreatePlacementList = connect(mapStateToProps, {})(_PlacementList);\n"],"sourceRoot":""}