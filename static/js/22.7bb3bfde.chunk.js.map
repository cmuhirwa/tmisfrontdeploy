{"version":3,"sources":["components/Inputs/InputSelect.tsx","types/PlacementReportTypes.ts","utils/validatedStaff.ts","components/PlacementListPreview/PlacementListPreview.tsx","components/UpdatePlacementComponent/UpdatePlacementComponent.tsx","containers/UpdatePlacementList/UpdatePlacementList.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","staff_code","status","isChangeAllowed","nid","full_name","first_name","middle_name","last_name","phone_numbers","email","dob","sex","marital_status","qualification","specialization","rssb_number","bank_name","bank_account","position","role","district_code","district_name","school_code","school_name","school_category","school_status","nationality","date_of_hire","date_in_school","subjects","grades","periods","forReportRoles","system","country","district","school","FC_GetStringValue","FC_isDateValid","DATE","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","element","includes","push","isEmptyOrSpaces","course_name","grade_code","findIndex","item","index","JSON","parse","grade_group","length","grade_name","Number","teaching_period","toString","dateWrapper","Date","isNaN","getDate","validateStaff","staff","errors","hired_date","role_id","validated","PlacementListPreview","placement_list","footer","header","filter","itm","Hierachy","location","staff_category","nationality_id","start_date_in_the_school","_PlacementList","props","submitLogin","e","preventDefault","componentDidMount","placement","placements","to","RenderPageAccess","auth","access","UsersAccess","HEADTEACHER_UPDATE_PLACEMENT_LIST","startApp","basic","academic_calender","setState","target","msg","FC_GetTeachersBySchool","placementExist","find","placement_list_approval_id","placement_id","selected_placement","undefined","ht_comment","loading_data","roles","req","UpdatePlacement","el","submitList","state","loading_placement_submit","FC_UpdatePlacementList","academic_year_id","list","stringify","month","selected_month","setTimeout","console","log","setApprovedList","approved_list","SelectAll","DeSelectAll","loading","selected_role","selected_request_id","selected_value","selected_comment","selected_auto_level","search","selected_qualification","selected_check_validation","RequestsList","this","user_id","username","Loading","Alert","theme","fixed","head_teacher_name","Button","onClick","type","onSubmit","readOnly","DashboardContainer","Heading","TextInput","qualifications","qualification_name","colSpan","existOnPlacement","validatedCheck","bind","React","Component","UpdatePlacementComponent","connect","UpdatePlacementList","match","params"],"mappings":"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","file":"static/js/22.7bb3bfde.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label && (\n          <label\n            htmlFor=\"login-form-email\"\n            className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import { DATE, isEmptyOrSpaces } from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  staff_code: string;\n  full_name: string;\n  first_name: string;\n  last_name: string;\n  nid: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  // nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  staff_category: string;\n  rssb_number: string;\n  bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  region_code: string;\n  // LOCATION INFO ##############\n  village_name: string;\n  cell_name: string;\n  cell_code: string;\n  sector_name: string;\n  sector_code: string;\n  district_name: string;\n  district_code: string;\n  province_name: string;\n  province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  periods: string;\n  // NEW FIELD =====================\n  date_in_school: string;\n  date_of_hire: string;\n  nationality: string;\n  middle_name: string;\n  bank_name: string;\n  // END NEW FIELD =================\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  nid = \"nid\",\n  rssb_number = \"rssb_number\",\n  // nationality_id = \"nationality_id\",\n  bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  staff_category = \"staff_category\",\n  staff_code = \"staff_code\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  region_code = \"region_code\",\n  village_name = \"village_name\",\n  cell_name = \"cell_name\",\n  cell_code = \"cell_code\",\n  sector_name = \"sector_name\",\n  sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  district_code = \"district_code\",\n  province_name = \"province_name\",\n  province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  periods = \"periods\",\n\n  // NEW FIELDS ================\n  date_in_school = \"date_in_school\",\n  date_of_hire = \"date_of_hire\",\n  nationality = \"nationality\",\n  middle_name = \"middle_name\",\n  bank_name = \"bank_name\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.staff_code,\n      title: \"Staff code\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.first_name,\n      title: \"Staff First Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.middle_name,\n      title: \"Staff Middle Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.last_name,\n      title: \"Staff Last Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.rssb_number,\n      title: \"RSSB\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_name,\n      title: \"Bank name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.bank_account,\n      title: \"Bank account\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_code,\n      title: \"District Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nationality,\n      title: \"Nationality\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_in_school,\n      title: \"Date in school\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.periods,\n      title: \"Periods\",\n      status: true,\n      isChangeAllowed: true,\n    },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  system: string[];\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  system: [\"26\", \"Admin\"],\n  country: [\"REB\", \"4\", \"RTB\", \"300\", \"MINECOFIN\", \"27\", \"26\", \"Admin\"],\n  district: [\"DDE\", \"3\", \"Human Resource\", \"25\"],\n  school: [\"Head Teacher\", \"Teacher\", \"2\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | Date | null): string => {\n  if (value === null) return \"\";\n  if (FC_isDateValid(value)) return DATE(value);\n  return value as string;\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: number[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(JSON.parse(element.grade_group).length);\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | Date | null): boolean => {\n  if (value === null) return false;\n  var dateWrapper = new Date(value);\n  return !isNaN(dateWrapper.getDate());\n};\n","import { TeacherData } from \"../actions\";\n\nconst validateStaff = (\n  staff: TeacherData\n): { validated: boolean; errors: string[] } => {\n  let errors: string[] = [];\n\n  // first name\n  if (!staff.first_name || staff.first_name.length <= 2)\n    errors.push(\"First name is not valid\");\n\n  // last name\n  if (!staff.last_name || staff.last_name.length <= 2)\n    errors.push(\"Last name is not valid\");\n\n  // bank name\n  if (!staff.bank_name || staff.bank_name.length <= 2)\n    errors.push(\"Bank name is not valid\");\n\n  // bank account\n  if (!staff.bank_account || staff.bank_account.length <= 2)\n    errors.push(\"Bank account number is not valid\");\n\n  // bank account\n  if (!staff.full_name || staff.full_name.length <= 2)\n    errors.push(\"Full names\");\n\n  // hired date\n  if (!staff.hired_date || staff.hired_date.length <= 2)\n    errors.push(\"Hired date is not valid\");\n\n  // martial status\n  if (!staff.marital_status || staff.marital_status.length <= 2)\n    errors.push(\"Martial status not valid\");\n\n  // National status\n  if (!staff.nationality || staff.nationality.length <= 2)\n    errors.push(\"Nationality is not valid\");\n\n  // National status\n  if (!staff.nid || staff.nid.length <= 4) errors.push(\"NID is not valid\");\n\n  // Phone number\n  if (!staff.phone_numbers || staff.phone_numbers.length <= 8)\n    errors.push(\"Phone number is not valid\");\n\n  // Phone number\n  if (!staff.position || staff.position.length <= 2)\n    errors.push(\"No selected position\");\n\n  // Qualification\n  if (!staff.qualification || staff.qualification.length <= 1)\n    errors.push(\"No selected qualification\");\n\n  // Role\n  if (!staff.role || staff.role.length <= 2) errors.push(\"No selected role\");\n\n  // RSSB number\n  if (!staff.rssb_number || staff.rssb_number.length <= 4)\n    errors.push(\"Invalid RSSB Number\");\n\n  // School\n  if (\n    !staff.school ||\n    !staff.school?.school_name ||\n    staff.school?.school_name.length <= 1\n  )\n    errors.push(\"Invalid School\");\n\n  // No sex selected\n  if (!staff.sex || staff.sex.length <= 2) errors.push(\"No sex selected\");\n\n  // Specialization\n  if (!staff.specialization || staff.specialization.length <= 2)\n    errors.push(\"Invalid specialization\");\n\n  // Specialization\n  if (!staff.staff_code || staff.staff_code.length <= 2)\n    errors.push(\"Invalid Staff category\");\n\n  // Hierarch\n  if (staff.role_id === \"1\")\n    if (!staff.teacher_hierarch || staff.teacher_hierarch.length <= 0)\n      errors.push(\"This user is a teacher, and must have at least one course\");\n\n  return {\n    errors: errors,\n    validated: errors.length > 0 ? false : true,\n  };\n};\n\nexport default validateStaff;\n","import React, { FC, ReactElement } from \"react\";\nimport { TeacherData } from \"../../actions\";\nimport { FC_GetHierarchStrings } from \"../../types/PlacementReportTypes\";\nimport Heading from \"../Heading/Heading\";\n// import Heading from \"../Heading/Heading\";\n\ntype PlacementListPreviewProps = {\n  placement_list: TeacherData[];\n  header: React.ReactNode | undefined;\n  footer: React.ReactNode | undefined;\n};\n\nconst PlacementListPreview: FC<PlacementListPreviewProps> = ({\n  placement_list,\n  footer,\n  header,\n}): ReactElement => {\n  return (\n    <div className=\"fixed top-0 bottom-0 right-0 left-0 animate__animated animate__fadeIn  bg-black bg-opacity-95 z-60 overflow-auto\">\n      <div className=\"w-full mx-auto bg-white px-3 py-8 animate__animated animate__zoomIn animate__faster\">\n        {header && header}\n\n        <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                {/* <th className=\"p-1 border\">Date to School</th> */}\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status === \"Active\")\n                .map((itm, i) => {\n                  let Hierachy = FC_GetHierarchStrings(itm.teacher_hierarch);\n                  return (\n                    <tr key={i}>\n                      <th className=\"p-1 border\">{i + 1}</th>\n                      <th className=\"p-1 border\">\n                        {itm?.location?.district_code}\n                      </th>\n                      <th className=\"p-1 border\">\n                        {itm?.location?.district_name}\n                      </th>\n                      <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                      <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                      <th className=\"p-1 border\">\n                        {itm?.school?.school_category}\n                      </th>\n                      <th className=\"p-1 border\">\n                        {itm?.school?.school_status}\n                      </th>\n                      <th className=\"p-1 border\">{itm?.staff_category}</th>\n                      <th className=\"p-1 border\">{itm?.staff_code}</th>\n                      <th className=\"p-1 border\">{itm?.nid}</th>\n                      <th className=\"p-1 border\">{itm?.full_name}</th>\n                      <th className=\"p-1 border\">{itm?.first_name}</th>\n                      <th className=\"p-1 border\">{itm?.middle_name}</th>\n                      <th className=\"p-1 border\">{itm?.last_name}</th>\n                      <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                      <th className=\"p-1 border\">{itm?.email}</th>\n                      <th className=\"p-1 border\">{itm?.dob}</th>\n                      <th className=\"p-1 border\">{itm?.sex}</th>\n                      <th className=\"p-1 border\">{itm?.nationality}</th>\n                      <th className=\"p-1 border\">{itm?.marital_status}</th>\n                      <th className=\"p-1 border\">{itm?.qualification}</th>\n                      <th className=\"p-1 border\">{itm?.position}</th>\n                      <th className=\"p-1 border\">{itm?.specialization}</th>\n                      <th className=\"p-1 border\">{itm?.hired_date}</th>\n                      {/* <th className=\"p-1 border\">\n                        {itm?.start_date_in_the_school}\n                      </th> */}\n                      <th className=\"p-1 border\">{Hierachy.courses}</th>\n                      <th className=\"p-1 border\">{Hierachy.periods}</th>\n                      <th className=\"p-1 border\">{Hierachy.grades}</th>\n                      <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                      <th className=\"p-1 border\">{itm?.bank_account}</th>\n                      <th className=\"p-1 border\">{itm?.bank_name}</th>\n                      <th className=\"p-1 border\">{itm?.status}</th>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n        <br />\n        <Heading className=\"text-center\">\n          Others candidates on placement list\n        </Heading>\n        <div className=\"overflow-auto \">\n          <table className=\"border w-full \">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-1 border\">No</th>\n                <th className=\"p-1 border\">District Code</th>\n                <th className=\"p-1 border\">District Name</th>\n                <th className=\"p-1 border\">School Code</th>\n                <th className=\"p-1 border\">School Name</th>\n                <th className=\"p-1 border\">School Category</th>\n                <th className=\"p-1 border\">School Status</th>\n                <th className=\"p-1 border\">Staff Category</th>\n                <th className=\"p-1 border\">Staff Code</th>\n                <th className=\"p-1 border\">NID</th>\n                <th className=\"p-1 border\">Names</th>\n                <th className=\"p-1 border\">First name</th>\n                <th className=\"p-1 border\">Last name</th>\n                <th className=\"p-1 border\">Middle name</th>\n                <th className=\"p-1 border\">Phone Number</th>\n                <th className=\"p-1 border\">Email</th>\n                <th className=\"p-1 border\">DOB</th>\n                <th className=\"p-1 border\">Sex</th>\n                <th className=\"p-1 border\">Nationality</th>\n                <th className=\"p-1 border\">Martial Status</th>\n                <th className=\"p-1 border\">Qualification</th>\n                <th className=\"p-1 border\">Position</th>\n                <th className=\"p-1 border\">Specialization</th>\n                <th className=\"p-1 border\">Date in Education</th>\n                <th className=\"p-1 border\">Date to School</th>\n                <th className=\"p-1 border\">Subjects</th>\n                <th className=\"p-1 border\">Periods</th>\n                <th className=\"p-1 border\">Grades</th>\n                <th className=\"p-1 border\">RSSB</th>\n                <th className=\"p-1 border\">Bank Account</th>\n                <th className=\"p-1 border\">Bank Name</th>\n                <th className=\"p-1 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {placement_list\n                .filter((itm) => itm.status !== \"Active\")\n                .map((itm, i) => (\n                  <tr key={i}>\n                    <th className=\"p-1 border\">{i + 1}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_code}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.location?.district_name}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_code}</th>\n                    <th className=\"p-1 border\">{itm?.school?.school_name}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.school?.school_category}\n                    </th>\n                    <th className=\"p-1 border\">{itm?.school?.school_status}</th>\n                    <th className=\"p-1 border\">{itm?.staff_category}</th>\n                    <th className=\"p-1 border\">{itm?.staff_code}</th>\n                    <th className=\"p-1 border\">{itm?.nid}</th>\n                    <th className=\"p-1 border\">{itm?.full_name}</th>\n                    <th className=\"p-1 border\">{itm?.first_name}</th>\n                    <th className=\"p-1 border\">{itm?.last_name}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.phone_numbers}</th>\n                    <th className=\"p-1 border\">{itm?.email}</th>\n                    <th className=\"p-1 border\">{itm?.dob}</th>\n                    <th className=\"p-1 border\">{itm?.sex}</th>\n                    <th className=\"p-1 border\">{itm?.nationality_id}</th>\n                    <th className=\"p-1 border\">{itm?.marital_status}</th>\n                    <th className=\"p-1 border\">{itm?.qualification}</th>\n                    <th className=\"p-1 border\">{itm?.position}</th>\n                    <th className=\"p-1 border\">{itm?.specialization}</th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\">\n                      {itm?.start_date_in_the_school}\n                    </th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.rssb_number}</th>\n                    <th className=\"p-1 border\">{itm?.bank_account}</th>\n                    <th className=\"p-1 border\"></th>\n                    <th className=\"p-1 border\">{itm?.status}</th>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"\">{footer && footer}</div>\n      </div>\n    </div>\n  );\n};\nexport default PlacementListPreview;\n","import React, { Fragment } from \"react\";\nimport {\n  MdCheckBox,\n  // MdCheckBoxOutlineBlank,\n  // MdIndeterminateCheckBox,\n  MdWarning,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  Auth,\n  Basic,\n  TeacherData,\n  TeacherDataRole,\n  FC_GetTeachersBySchool,\n  FC_UpdatePlacementList,\n  Placement,\n  API_GetPlacementBySchool,\n  FT_UpdatePlacementList,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport PlacementListPreview from \"../../components/PlacementListPreview/PlacementListPreview\";\nimport { StoreState } from \"../../reducers\";\nimport { RenderPageAccess, UsersAccess } from \"../../utils/access\";\nimport { search } from \"../../utils/functions\";\nimport validateStaff from \"../../utils/validatedStaff\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  placement_id: string;\n  FC_UpdatePlacementList: FT_UpdatePlacementList;\n}\n\ninterface AppState {\n  loading: boolean;\n  approved_list: boolean;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"update-error\"\n      | \"main-error\"\n      | \"submit-list-error\"\n      | \"submit-month-error\"\n      | \"submit-list-success\"\n      | null;\n    msg: string;\n  };\n  data: TeacherData[];\n  selected_placement: API_GetPlacementBySchool | null;\n  placement_list: TeacherData[];\n  roles: TeacherDataRole[];\n  loading_data: boolean;\n  selected_role: string;\n  selected_request_id: string;\n  selected_value: string;\n  selected_comment: string;\n  selected_auto_level: string;\n  search: string;\n  selected_qualification: string;\n  selected_month: string;\n  loading_placement_submit: boolean;\n  ht_comment: string;\n  selected_check_validation: string;\n}\n\nclass _PlacementList extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      approved_list: false,\n      selected_placement: null,\n      loading: true,\n      data: [],\n      placement_list: [],\n      roles: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_data: true,\n      selected_role: \"\",\n      selected_request_id: \"\",\n      selected_value: \"0\",\n      selected_comment: \"\",\n      selected_auto_level: \"\",\n      search: \"\",\n      selected_qualification: \"\",\n      selected_month: \"\",\n      loading_placement_submit: false,\n      ht_comment: \"\",\n      selected_check_validation: \"\",\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n  };\n\n  componentDidMount = () => {\n    if (this.props.placement.placements.length === 0)\n      return <Redirect to=\"/placement-list-ht\" />;\n\n    RenderPageAccess(\n      this.props.auth.role?.access,\n      UsersAccess.HEADTEACHER_UPDATE_PLACEMENT_LIST,\n      () => {\n        this.startApp();\n      }\n    );\n  };\n\n  startApp = () => {\n    if (this.props.basic.academic_calender === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"failed to load data, please reload the page (Refresh)\",\n        },\n      });\n    } else if (this.props.auth.school === null) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No school assigned to you\",\n        },\n      });\n    } else {\n      let school_code = this.props.auth.school.school_code;\n      this.setState({\n        error: {\n          target: null,\n          msg: \"\",\n        },\n      });\n      FC_GetTeachersBySchool(school_code, (status, data, msg) => {\n        if (status === true && data !== null) {\n          // * get the current list\n          let placementExist = this.props.placement.placements.find(\n            (itm) => itm.placement_list_approval_id === this.props.placement_id\n          );\n          this.setState({\n            selected_placement:\n              placementExist === undefined ? null : placementExist,\n            ht_comment:\n              placementExist === undefined ? \"\" : placementExist?.ht_comment,\n            loading_data: false,\n            data: data.staff,\n            roles: data.role,\n            placement_list: data.staff.filter(\n              (req) => validateStaff(req).validated\n            ),\n            // placement_list: data.staff.filter(\n            //   (req) => !(req.first_name == null || req.first_name === \"\")\n            // ),\n          });\n        } else {\n          this.setState({\n            loading_data: false,\n            error: {\n              msg: msg,\n              target: \"main-error\",\n            },\n          });\n        }\n      });\n    }\n  };\n\n  UpdatePlacement = (el: TeacherData, status: number) => {\n    // if (status < 0) {\n    //   this.setState({\n    //     placement_list: [...this.state.placement_list, el],\n    //   });\n    // } else {\n    //   this.setState({\n    //     placement_list: this.state.placement_list.filter(\n    //       (itm) => itm.user_id !== el.user_id\n    //     ),\n    //   });\n    // }\n  };\n\n  submitList = (e: any) => {\n    e.preventDefault();\n\n    // if (this.state.selected_month === \"\")\n    //   return this.setState({\n    //     error: {\n    //       target: \"submit-month-error\",\n    //       msg: \"Please select the month\",\n    //     },\n    //   });\n\n    if (\n      this.props.basic.academic_calender === null ||\n      this.props.auth.school === null\n    )\n      return this.setState({\n        error: {\n          target: \"submit-list-error\",\n          msg: \"You don't has a district assigned to you\",\n        },\n      });\n\n    // let district_code = this.props.auth.school.school_code.substring(0, 2);\n\n    if (this.state.selected_placement === null)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No placement list selected\",\n        },\n      });\n\n    this.setState({\n      loading_placement_submit: true,\n    });\n    this.props.FC_UpdatePlacementList(\n      this.state.selected_placement.placement_list_approval_id,\n      {\n        academic_year_id: this.state.selected_placement.academic_year_id,\n        district_code: this.state.selected_placement.district_code,\n        list: JSON.stringify(this.state.placement_list),\n        month: this.state.selected_placement.month,\n        school_code: this.state.selected_placement.school_code,\n        ht_comment: this.state.ht_comment,\n      },\n      (status, msg) => {\n        if (status === true) {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-success\",\n              msg: `Placement list for ${this.state.selected_month} has been updated successfully`,\n            },\n          });\n        } else {\n          this.setState({\n            loading_placement_submit: false,\n            error: {\n              target: \"submit-list-error\",\n              msg: msg,\n            },\n          });\n        }\n\n        setTimeout(() => {\n          this.setState({\n            error: {\n              msg: \"\",\n              target: null,\n            },\n          });\n        }, 3000);\n      }\n    );\n    console.log(\"janvier\");\n  };\n\n  setApprovedList = () =>\n    this.setState({ approved_list: !this.state.approved_list });\n\n  SelectAll = () => this.setState({ placement_list: this.state.data });\n  DeSelectAll = () => this.setState({ placement_list: [] });\n\n  render() {\n    let RequestsList =\n      this.state.selected_role === \"\"\n        ? this.state.data\n        : this.state.data.filter(\n            (itm) => itm.role_id === this.state.selected_role\n          );\n\n    RequestsList =\n      this.state.selected_qualification === \"\"\n        ? RequestsList\n        : RequestsList.filter(\n            (itm) => itm.qualification === this.state.selected_qualification\n          );\n\n    RequestsList = search(RequestsList, this.state.search, {\n      email: true,\n      first_name: true,\n      full_name: true,\n      last_name: true,\n      phone_numbers: true,\n      qualification: true,\n      role: true,\n      role_id: true,\n      status: true,\n      user_id: true,\n      username: true,\n    });\n\n    if (this.state.loading_data === true)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.error.target === \"main-error\") {\n      return (\n        <Alert theme=\"danger\" fixed>\n          {this.state.error.msg}\n        </Alert>\n      );\n    }\n\n    if (this.state.approved_list === true)\n      return (\n        <>\n          <PlacementListPreview\n            placement_list={this.state.placement_list}\n            header={\n              <>\n                <div className=\"flex\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-xl\">\n                      <h2>\n                        School code:{\" \"}\n                        <b>{this.state.selected_placement?.school_code}</b>\n                      </h2>\n                      <h2>\n                        School name:{\" \"}\n                        <b>{this.state.selected_placement?.school_name}</b>\n                      </h2>\n                      <h2>\n                        Done by:{\" \"}\n                        <b>\n                          {this.state.selected_placement?.head_teacher_name}\n                        </b>\n                      </h2>\n                      <h2>\n                        Month: <b>{this.state.selected_placement?.month}</b>\n                      </h2>\n                      <h2>\n                        District:{\" \"}\n                        <b>{this.state.selected_placement?.district_name}</b>\n                      </h2>\n                    </div>\n                  </div>\n                  <div className=\"\">\n                    <Button\n                      size=\"lg\"\n                      theme=\"danger-light\"\n                      onClick={this.setApprovedList}\n                      disabled={this.state.loading_placement_submit}\n                      type=\"button\"\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n\n                <h1 className=\"text-center text-3xl font-bold mb-4\">\n                  Placement list\n                </h1>\n              </>\n            }\n            footer={\n              <>\n                <form onSubmit={this.submitList}>\n                  <div className=\"mt-5 flex border-t pt-3\">\n                    <div className=\"flex-1\"></div>\n                    <div className=\"flex-1\">\n                      {this.state.error.target === \"submit-list-success\" && (\n                        <Alert theme=\"success\">{this.state.error.msg}</Alert>\n                      )}\n                      {this.state.error.target === \"submit-list-error\" && (\n                        <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n                      )}\n                      <div className=\"\">\n                        <span>Comment:</span>\n                        <textarea\n                          value={this.state.ht_comment}\n                          // onChange={(e) =>\n                          //   this.setState({\n                          //     ht_comment: e.target.value,\n                          //   })\n                          // }\n                          readOnly\n                          className=\"w-full h-32 border-2   rounded p-2\"\n                        ></textarea>\n                      </div>\n                      <div className=\"text-right\">\n                        <Button\n                          theme=\"success\"\n                          size=\"lg\"\n                          className=\"flex-1 animate__animated animate__pulse animate__infinite\"\n                          loading={this.state.loading_placement_submit}\n                        >\n                          Update placement list\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </>\n            }\n          />\n        </>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"submit-list-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"submit-list-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"fixed bottom-0 right-0 flex left-0 bg-white shadow-lg border-t-2 px-3 items-center\">\n          <div className=\"main-side-spacer\"></div>\n          <div className=\"flex-1 p-2 flex items-center\">\n            <div className=\"mr-4 bg-green-50 text-green-700 px-2\">\n              <span className=\"text-sm\">Total selected</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.placement_list.length}\n              </h3>\n            </div>\n            <div className=\"px-2 bg-gray-50 rounded\">\n              <span className=\"text-sm\">Total Teachers</span>\n              <h3 className=\"font-bold text-2xl -mt-1\">\n                {this.state.data.length}\n              </h3>\n            </div>\n            <div className=\"flex-1\"></div>\n            <div className=\"animate__animated animate__zoomIn animate__faster flex\">\n              {this.state.placement_list.length >= 1 && (\n                <Button\n                  theme=\"accent-light\"\n                  onClick={this.setApprovedList}\n                  className=\" animate__faster\"\n                >\n                  Preview list\n                </Button>\n              )}\n\n              <form onSubmit={this.submitList}>\n                <Button\n                  theme=\"success\"\n                  className=\"animate__animated animate__pulse animate__infinite ml-1\"\n                  loading={this.state.loading_placement_submit}\n                >\n                  Update placement list\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <DashboardContainer>\n          {this.state.error.target === \"main\" && (\n            <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n          )}\n          {this.state.error.target === \"loading-update-error\" && (\n            <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n          )}\n\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <Heading>\n                Update placement list {this.state.selected_placement?.month}{\" \"}\n              </Heading>\n              <p className=\"opacity-60 text-lg -mt-1 font-bold text-accent-900 dark:text-accent-800\">\n                {this.props.auth.school?.school_name}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"border border-t mt-2 mb-1 flex items-center pl-3 pr-2 rounded\">\n              <div className=\"flex-1 pr-2\">\n                <TextInput\n                  error=\"\"\n                  label=\"Search\"\n                  name=\"\"\n                  type=\"search\"\n                  onChange={(e) => this.setState({ search: e.target.value })}\n                  placeholder=\"Search by teacher name\"\n                  value={this.state.search}\n                  size=\"sm\"\n                />\n              </div>\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    { title: \"All Roles\", value: \"\" },\n                    ...this.state.roles.map((el) => ({\n                      title: el.role,\n                      value: el.role_id,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_role\"\n                  onChange={(e) =>\n                    this.setState({ selected_role: e.target.value })\n                  }\n                  label=\"Role\"\n                  placeholder=\"Select role\"\n                  value={this.state.selected_role}\n                  size=\"sm\"\n                />\n              </div>\n              {this.props.basic.qualifications !== null && (\n                <div className=\"px-2\">\n                  <InputSelect\n                    data={[\n                      { title: \"All\", value: \"\" },\n                      ...this.props.basic.qualifications.map((el) => ({\n                        title: el.qualification_name,\n                        value: el.qualification_name,\n                      })),\n                    ]}\n                    error=\"\"\n                    name=\"select_qualification\"\n                    onChange={(e) =>\n                      this.setState({ selected_qualification: e.target.value })\n                    }\n                    label=\"Qualification\"\n                    placeholder=\"Select Qualification\"\n                    value={this.state.selected_qualification}\n                    size=\"sm\"\n                  />\n                </div>\n              )}\n              {/* <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n                <label className=\"\">Results:</label>\n                <h4 className=\"text-2xl -mt-1 font-bold\">\n                  {RequestsList.length}\n                </h4>\n              </div> */}\n            </div>\n            <div className=\"p-2 flex\">\n              {/* {this.state.placement_list.length !== this.state.data.length && (\n                <Button\n                  theme=\"default\"\n                  size=\"sm\"\n                  className=\"flex items-center\"\n                  onClick={this.SelectAll.bind(this)}\n                >\n                  <MdIndeterminateCheckBox className=\"inline-block text-lg mr-1\" />\n                  <span>Select all</span>\n                </Button>\n              )} */}\n\n              {/* {this.state.placement_list.length !== 0 && (\n                <Button\n                  theme=\"default\"\n                  size=\"sm\"\n                  className=\"flex items-center ml-2\"\n                  onClick={this.DeSelectAll.bind(this)}\n                >\n                  <MdIndeterminateCheckBox className=\"inline-block text-lg mr-1\" />\n                  <span>De-select all</span>\n                </Button>\n              )} */}\n            </div>\n            <table className=\"w-full text-left table-auto border\">\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Names</th>\n                  <th>First name</th>\n                  <th>Last name</th>\n                  <th>Phone number</th>\n                  <th>Role</th>\n                  <th>Qualification</th>\n                </tr>\n              </thead>\n              <tbody>\n                {RequestsList.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={8}\n                      className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      <Heading size=\"md\" className=\"opacity-60 font-light\">\n                        No results found\n                      </Heading>\n                    </td>\n                  </tr>\n                ) : (\n                  RequestsList.map((req, i) => {\n                    let existOnPlacement = this.state.placement_list.findIndex(\n                      (itm) => itm.user_id === req.user_id\n                    );\n\n                    let validatedCheck = validateStaff(req);\n\n                    return (\n                      <Fragment key={i}>\n                        <tr\n                          className={`group border rounded hover:bg-blue-500 hover:bg-opacity-20 ${\n                            existOnPlacement < 0\n                              ? \"\"\n                              : \"bg-green-100 bg-opacity-10\"\n                          } `}\n                        >\n                          <td\n                            className=\"p-1 border cursor-pointer\"\n                            key={i}\n                            onClick={this.UpdatePlacement.bind(\n                              this,\n                              req,\n                              existOnPlacement\n                            )}\n                          >\n                            {existOnPlacement < 0 ? (\n                              <button\n                                onClick={() =>\n                                  this.setState({\n                                    selected_check_validation: req.user_id,\n                                  })\n                                }\n                              >\n                                <MdWarning\n                                  className=\"text-3xl text-yellow-500 mx-auto\"\n                                  title=\"This teacher is not validated\"\n                                />\n                              </button>\n                            ) : (\n                              <MdCheckBox className=\"text-3xl text-green-600 mx-auto\" />\n                            )}\n                          </td>\n                          <td className=\"p-2 border\">{req.full_name}</td>\n                          <td className=\"p-2 border\">{req.first_name}</td>\n                          <td className=\"p-2 border\">{req.last_name}</td>\n                          <td className=\"p-2 border\">{req.phone_numbers}</td>\n                          <td className=\"p-2 border\">{req.role}</td>\n                          <td className=\"p-2 border\">{req.qualification}</td>\n                        </tr>\n                        {this.state.selected_check_validation ===\n                          req.user_id && (\n                          <tr>\n                            <td colSpan={10} className=\"pb-5\">\n                              <div className=\"pb-2 rounded-b-lg -mt-1 animate__animated animate__zoomIn animate__faster border bg-red-100\">\n                                <div className=\"p-1 px-2 flex bg-red-200\">\n                                  <h2 className=\"flex-1 text-lg text-red-800 font-bold\">\n                                    <span className=\"p-0.5 text-center rounded-full bg-red-600 pr-1 inline-block text-white\">\n                                      {validatedCheck.errors.length}\n                                    </span>{\" \"}\n                                    Items to be validated\n                                  </h2>\n                                  <Button\n                                    className=\"\"\n                                    size=\"sm\"\n                                    theme=\"danger-light\"\n                                    onClick={() =>\n                                      this.setState({\n                                        selected_check_validation: \"\",\n                                      })\n                                    }\n                                  >\n                                    Close\n                                  </Button>\n                                </div>\n\n                                <div className=\"px-2 gap-1 rounded grid md:grid-cols-2 lg:grid-cols-3 pt-2\">\n                                  {validatedCheck.errors.map((itm, i) => (\n                                    <div\n                                      key={i}\n                                      className=\"border rounded full mb-1 mx-2 border-red-300 bg-white p-1 flex\"\n                                    >\n                                      <MdWarning className=\"pr-1 text-xl inline-block text-yellow-600\" />{\" \"}\n                                      <p>{itm}</p>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n                        )}\n                      </Fragment>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n        <div className=\"h-24\"></div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n} => {\n  return {\n    auth: auth,\n    basic: basic,\n    placement: placement,\n  };\n};\n\nexport const UpdatePlacementComponent = connect(mapStateToProps, {\n  FC_UpdatePlacementList,\n})(_PlacementList);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { UpdatePlacementComponent } from \"../../components/UpdatePlacementComponent/UpdatePlacementComponent\";\n\nexport class UpdatePlacementList extends React.Component<\n  IDetailsProps,\n  IDetailsState\n> {\n  render() {\n    return (\n      <UpdatePlacementComponent\n        placement_id={this.props.match.params.placement_id}\n      />\n    );\n  }\n}\n\ninterface IDetailsProps extends RouteComponentProps<{ placement_id: string }> {}\n\ninterface IDetailsState {\n  name: string;\n}\n"],"sourceRoot":""}