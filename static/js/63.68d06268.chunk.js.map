{"version":3,"sources":["containers/GeneralPlacementReport/DistrictPlacementDetails.tsx","containers/GeneralPlacementReport/GeneralReport.tsx","containers/GeneralPlacementReport/VacantSummary.tsx","containers/GeneralPlacementReport/GeneralPlacementReport.tsx"],"names":["DistrictPlacementDetails","props","className","selectedDistrictDetails","district_name","district_code","details","map","item","i","qualification_name","total","GeneralReport","getDistrictSchools","schools_submitted_placements","getPlaced","pla_district_total_summary","find","itm","getSchools","district_total_summary","total_schools","undefined","parseInt","placed_schools","getDistrictData","response","generalReport","qualification","toLocaleLowerCase","totalTeachersOnDistrict","basic","qualifications","sortData","data","result","state","sortBy","column","status","sort","a","b","schools","remainingA","districtsWithTotals","districts","push","pinned_districts","length","filter","test","search","search_district","getGrandTotal","total_placed_schools","total_pending_schools","total_teachers","pinDistrict","auth","role","role_id","setState","loading","district","this","selected_district","academic_calender","FC_GetSubmittedPlacementSchools","academic_year_id","selected_month","msg","res","console","log","Loading","commaFy","type","value","onChange","e","target","placeholder","ExportToExcel","fileData","no","DistrictCode","DistrictName","A2","A1","A0","TotalPlacedTeachers","TotalDistrictSchools","TotalSchoolsSubmitted","PendingSchools","fileName","btnName","onClick","colSpan","k","Button","theme","to","Component","VacantSummary","getDistrictSummaryLimit","districts_limits","getTotalPlacedDistrict","districts_placements","totals","total_placed","getDistrictDataAvailable","Total","totalAvailable","totalPlaced","qualification_id","getAllTotalAvailable","getAllTotalExisting","getDistrictToBePlaced","toBePlacedData","toLowerCase","approved","getDistrictNameToBePlaced","getTotalDistrictToBePlaced","data_temp","getTotalQualificationToBePlacedByQualification","filtered","getTotalQualificationToBePlacedTotals","getTeachersAvailableAndToBePlaced","componentDidMount","loadToBePlacedData","District_Code","District_Name","AO_Placed","A0_to_be_placed","A0_grand_total","A0_total_ceiling","A1_Placed","A1_to_be_placed","A1_grand_total","A1_total_ceiling","A2_Placed","A2_to_be_placed","A2_grand_total","A2_total_ceiling","Grand_total_teachers","Grand_total_ceiling","Total_vacant","style","width","TodayDate","Date","_GeneralPlacementReport","setLoading","FC_LoadGeneralReport","GetGeneralPlacementReports","error","loadToBePlaced","report_type","districts_to_be_placed","FC_GetPostsToBePlacedSummaries","GetDistrictsLimits","FC_GetDistricts","MONTHS_LIST","getMonth","title","GeneralPlacementReport","connect","placement"],"mappings":"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","file":"static/js/63.68d06268.chunk.js","sourcesContent":["import React from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\n\ninterface DataInterface {\n  selectedDistrictDetails: {\n    district_code: string;\n    district_name: string;\n    details: {\n      qualification_name: string;\n      total: number;\n    }[];\n    total: number;\n  };\n}\n\nconst DistrictPlacementDetails = (props: DataInterface) => {\n  return (\n    <div>\n      <div className=\"flex flex-row items-center gap-2\">\n        <div>\n          <div className=\"rounded-full h-12 w-12 bg-gray-100 hover:bg-primary-100 flex items-center justify-center\">\n            <BsArrowLeft className=\"text-3xl\" />\n          </div>\n        </div>\n        <div className=\"font-extrabold text-2xl text-primary-800 border-b border-primary-800 px-3 py-2 w-full\">\n          {props.selectedDistrictDetails.district_name} District placement\n          details\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-12 my-8\">\n        <div className=\"col-span-4 flex flex-row gap-6 pl-3 pt-3\">\n          <div className=\"flex flex-col mb-3\">\n            <span className=\"font-light\">District name</span>\n            <span className=\"font-extrabold text-xl\">\n              {props.selectedDistrictDetails.district_name}\n            </span>\n          </div>\n          <div className=\"flex flex-col mb-3\">\n            <span className=\"font-light\">District Code</span>\n            <span className=\"font-extrabold text-xl\">\n              {props.selectedDistrictDetails.district_code}\n            </span>\n          </div>\n        </div>\n        <div className=\"col-span-8\">\n          <div className=\"p-4 grid grid-cols-12 w-full gap-5\">\n            {props.selectedDistrictDetails.details.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"col-span-4 bg-primary-100 rounded-lg overflow-hidden flex flex-row\"\n              >\n                <div className=\"text-xl w-full text-center flex items-center justify-center bg-gray-100 p-3 py-5 border-r border-primary-800 font-light\">\n                  {item.qualification_name}\n                </div>\n                <div className=\"font-extrabold text-3xl text-primary-800 w-full text-center flex items-center justify-center\">\n                  {item.total}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DistrictPlacementDetails;\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  Basic,\n  DistrictTotalsSummarySubmitted,\n  FC_GetSubmittedPlacementSchools,\n} from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy, search } from \"../../utils/functions\";\nimport DistrictPlacementDetails from \"./DistrictPlacementDetails\";\nimport { GeneralPlacementReportInterface } from \"./GeneralPlacementReport\";\n\ninterface GeneralReportProps {\n  loading: boolean;\n  generalReport: GeneralPlacementReportInterface[] | null;\n  selected_month: string;\n  error: string;\n  districts: DistrictTypes[] | null;\n  basic: Basic;\n  selected_district?: {\n    district_code: string;\n    district_name: string;\n  };\n  auth: Auth;\n}\ninterface GeneralReportState {\n  loading: boolean;\n  sortBy: {\n    column: \"teachers\" | \"schools_submitted\" | \"remaining\";\n    status: \"ASC\" | \"DESC\";\n  } | null;\n  search_district: string;\n  selectedDistrictDetails: {\n    district_code: string;\n    district_name: string;\n    details: {\n      qualification_name: string;\n      total: number;\n    }[];\n    total: number;\n  } | null;\n  schools_submitted_placements: DistrictTotalsSummarySubmitted | null;\n  pinned_districts: string[];\n}\n\nexport class GeneralReport extends Component<\n  GeneralReportProps,\n  GeneralReportState\n> {\n  constructor(props: GeneralReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      sortBy: null,\n      search_district: \"\",\n      selectedDistrictDetails: null,\n      schools_submitted_placements: null,\n      pinned_districts:\n        (this.props.auth.role?.role_id === \"3\" ||\n          this.props.auth.role?.role_id === \"2\" ||\n          this.props.auth.role?.role_id === \"1\") &&\n        this.props.auth.district !== null\n          ? [this.props.auth.district.district_code]\n          : [],\n    };\n  }\n\n  getDistrictSchools = (\n    district_code: string,\n    schools_submitted_placements: DistrictTotalsSummarySubmitted\n  ): {\n    total_schools: number;\n    placed_schools: number;\n  } => {\n    const getPlaced =\n      schools_submitted_placements.pla_district_total_summary.find(\n        (itm) => itm.district_code === district_code\n      );\n    const getSchools = schools_submitted_placements.district_total_summary.find(\n      (itm) => itm.district_code === district_code\n    );\n    return {\n      total_schools: getSchools === undefined ? 0 : parseInt(getSchools.total),\n      placed_schools: getPlaced === undefined ? 0 : parseInt(getPlaced.total),\n    };\n  };\n  getDistrictData = (\n    district_code: string,\n    qualification_name: string\n  ): number => {\n    const response = this.props.generalReport?.find(\n      (itm) =>\n        itm.district_code === district_code &&\n        itm.qualification.toLocaleLowerCase() ===\n          qualification_name.toLocaleLowerCase()\n    );\n    if (response !== undefined) {\n      return parseInt(response.total);\n    }\n    return 0;\n  };\n  totalTeachersOnDistrict = (district_code: string) => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.getDistrictData(district_code, item.qualification_name);\n    }\n    return total;\n  };\n\n  sortData = (\n    data: {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[]\n  ) => {\n    let result: {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[] = [];\n    switch (this.state.sortBy?.column) {\n      case \"teachers\":\n        result =\n          this.state.sortBy?.status === \"ASC\"\n            ? data.sort(function (a, b) {\n                return a.total - b.total;\n              })\n            : this.state.sortBy?.status === \"DESC\"\n            ? data.sort(function (a, b) {\n                return b.total - a.total;\n              })\n            : data;\n        break;\n      case \"schools_submitted\":\n        result =\n          this.state.sortBy?.status === \"ASC\"\n            ? data.sort(function (a, b) {\n                return a.placed_schools - b.placed_schools;\n              })\n            : this.state.sortBy?.status === \"DESC\"\n            ? data.sort(function (a, b) {\n                return b.placed_schools - a.placed_schools;\n              })\n            : data;\n        break;\n      case \"remaining\":\n        result =\n          this.state.sortBy?.status === \"ASC\"\n            ? data.sort(function (a, b) {\n                const remainingA = a.schools - a.placed_schools;\n                const remainingB = b.schools - b.placed_schools;\n                return remainingA - remainingB;\n              })\n            : this.state.sortBy?.status === \"DESC\"\n            ? data.sort(function (a, b) {\n                const remainingA = a.schools - a.placed_schools;\n                const remainingB = b.schools - b.placed_schools;\n                return remainingB - remainingA;\n              })\n            : data;\n        break;\n\n      default:\n        result = data;\n        break;\n    }\n    return result;\n  };\n\n  districtsWithTotals = (): {\n    district_code: string;\n    district_name: string;\n    total: number;\n    schools: number;\n    placed_schools: number;\n  }[] => {\n    let response: {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[] = [];\n    if (\n      this.props.districts !== null &&\n      this.props.generalReport !== null &&\n      this.state.schools_submitted_placements !== null\n    ) {\n      for (const item of this.props.districts) {\n        response.push({\n          district_code: item.district_code,\n          district_name: item.district_name,\n          total: this.totalTeachersOnDistrict(item.district_code),\n          schools: this.getDistrictSchools(\n            item.district_code,\n            this.state.schools_submitted_placements\n          ).total_schools,\n          placed_schools: this.getDistrictSchools(\n            item.district_code,\n            this.state.schools_submitted_placements\n          ).placed_schools,\n        });\n      }\n    }\n    response =\n      this.state.pinned_districts.length > 0\n        ? response.filter(\n            (itm) =>\n              this.state.pinned_districts.find(\n                (test) => test === itm.district_code\n              ) !== undefined\n          )\n        : response;\n    return search(this.sortData(response), this.state.search_district) as {\n      district_code: string;\n      district_name: string;\n      total: number;\n      schools: number;\n      placed_schools: number;\n    }[];\n  };\n\n  getGrandTotal = () => {\n    let total_placed_schools = 0;\n    let total_schools = 0;\n    let total_pending_schools = 0;\n    let total_teachers = 0;\n    for (const item of this.districtsWithTotals()) {\n      total_placed_schools += item.placed_schools;\n      total_schools += item.schools;\n      total_pending_schools += item.schools - item.placed_schools;\n      total_teachers += item.total;\n    }\n    return {\n      total_placed_schools: total_placed_schools,\n      total_schools: total_schools,\n      total_pending_schools: total_pending_schools,\n      total_teachers: total_teachers,\n    };\n  };\n  componentDidMount(): void {\n    if (this.props.selected_district !== undefined) {\n      this.setState({\n        selectedDistrictDetails: {\n          district_code: this.props.selected_district.district_code,\n          district_name: this.props.selected_district.district_name,\n          details: this.props.basic.qualifications.map((itm) => ({\n            qualification_name: itm.qualification_name,\n            total: this.getDistrictData(\n              this.props.selected_district!.district_code,\n              itm.qualification_name\n            ),\n          })),\n          total: this.totalTeachersOnDistrict(\n            this.props.selected_district.district_code\n          ),\n        },\n      });\n    }\n    if (this.state.schools_submitted_placements === null) {\n      this.props.basic.academic_calender !== null &&\n        FC_GetSubmittedPlacementSchools(\n          this.props.basic.academic_calender.academic_year_id,\n          this.props.selected_month,\n          (\n            loading: boolean,\n            msg: string,\n            res: DistrictTotalsSummarySubmitted | null\n          ) => {\n            console.log(res);\n            this.setState({ loading: loading });\n            if (res !== null && loading === false) {\n              this.setState({\n                schools_submitted_placements: res,\n                loading: false,\n              });\n            }\n          }\n        );\n    }\n  }\n  pinDistrict = (district_code: string) => {\n    if (\n      this.props.auth.role?.role_id !== \"3\" &&\n      this.props.auth.role?.role_id !== \"2\" &&\n      this.props.auth.role?.role_id !== \"1\"\n    ) {\n      if (\n        this.state.pinned_districts.find((itm) => itm === district_code) ===\n        undefined\n      ) {\n        this.setState({\n          pinned_districts: [...this.state.pinned_districts, district_code],\n        });\n      } else {\n        this.setState({\n          pinned_districts: this.state.pinned_districts.filter(\n            (itm) => itm !== district_code\n          ),\n        });\n      }\n    }\n  };\n  render() {\n    if (\n      this.props.loading === true ||\n      this.state.loading === true ||\n      this.props.districts === null ||\n      this.props.generalReport === null\n    ) {\n      return (\n        <div className=\"bg-white p-4 flex flex-col items-center justify-center\">\n          <Loading />\n          <div className=\"animate__animated animate__falseIn animate__infinite mt-2 text-lg font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    if (this.state.selectedDistrictDetails !== null) {\n      return (\n        <DistrictPlacementDetails\n          selectedDistrictDetails={this.state.selectedDistrictDetails}\n        />\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row justify-between gap-3 mb-5\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-primary-800\">\n              Teacher placement summary\n            </span>\n            <span className=\"-mt-1\">\n              This file presents number of existing in the district\n            </span>\n            {/* <Link\n              title=\"Click here to print placement reports\"\n              to=\"/placement-books\"\n              className=\"underline text-accent-900 font-bold -mt-1\"\n            >\n              Print placement reports\n            </Link> */}\n          </div>\n          <div className=\"flex flex-row items-center gap-8 justify-end\">\n            <div className=\"flex flex-col text-green-700\">\n              <span>Existing teachers</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-green-600\">\n                {commaFy(this.getGrandTotal().total_teachers)}\n              </span>\n            </div>\n            <div className=\"flex flex-col\">\n              <span>Total Schools</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-gray-800\">\n                {commaFy(this.getGrandTotal().total_schools)}\n              </span>\n            </div>\n            <div className=\"flex flex-col\">\n              <span>Submitted Schools</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-primary-800\">\n                {commaFy(this.getGrandTotal().total_placed_schools)}\n              </span>\n            </div>\n            <div className=\"flex flex-col text-yellow-700\">\n              <span>Pending Schools</span>\n              <span className=\"text-3xl font-extrabold -mt-1 text-accent-900\">\n                {commaFy(this.getGrandTotal().total_pending_schools)}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3 flex flex-row items-center gap-2\">\n          <input\n            type=\"text\"\n            value={this.state.search_district}\n            onChange={(e) => this.setState({ search_district: e.target.value })}\n            placeholder=\"Search by district\"\n            className=\"px-3 py-2 rounded border border-gray-400 w-full font-bold text-primary-800\"\n          />\n          <div className=\"w-56\">\n            <ExportToExcel\n              fileData={this.districtsWithTotals().map((item, i) => ({\n                no: `${i + 1}`,\n                DistrictCode: `${item.district_code}`,\n                DistrictName: `${item.district_name}`,\n                A2: `${this.getDistrictData(item.district_code, \"a2\")}`,\n                A1: `${this.getDistrictData(item.district_code, \"a1\")}`,\n                A0: `${this.getDistrictData(item.district_code, \"a0\")}`,\n                TotalPlacedTeachers: `${item.total}`,\n                TotalDistrictSchools: `${item.schools}`,\n                TotalSchoolsSubmitted: `${item.placed_schools}`,\n                PendingSchools: `${item.schools - item.placed_schools}`,\n              }))}\n              fileName={`Districts Teacher placement summary`}\n              btnName=\"Download EXCEL\"\n            />\n          </div>\n        </div>\n        <table className=\"w-full\">\n          <thead>\n            <tr className=\"text-primary-800 text-left font-extrabold bg-primary-100 text-sm\">\n              <th className=\"px-4 py-2 border border-blue-300\">#</th>\n              <th className=\"px-4 py-2 border border-blue-300\">\n                District code\n              </th>\n              <th className=\"px-4 py-2 border border-blue-300\">\n                District name\n              </th>\n              {this.props.basic.qualifications.map((item, i) => (\n                <th\n                  className=\"border border-blue-300 text-center px-4 py-2\"\n                  key={i + 1}\n                >\n                  {item.qualification_name}\n                </th>\n              ))}\n              <th className=\"border border-blue-300 text-left text-green-700 bg-green-50\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      sortBy: {\n                        status:\n                          this.state.sortBy === null\n                            ? \"DESC\"\n                            : this.state.sortBy.status === \"ASC\"\n                            ? \"DESC\"\n                            : \"ASC\",\n                        column: \"teachers\",\n                      },\n                    })\n                  }\n                  className=\" flex flex-row items-center gap-3 px-4 py-2 hover:bg-primary-100 cursor-pointer text-left\"\n                >\n                  <span>Existing teachers</span>\n                  <BiSort />\n                </div>\n              </th>\n              <th className=\"border border-blue-300 text-center px-3 py-2\">\n                Total schools\n              </th>\n              <th className=\"border border-blue-300 text-center\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      sortBy: {\n                        status:\n                          this.state.sortBy === null\n                            ? \"DESC\"\n                            : this.state.sortBy.status === \"ASC\"\n                            ? \"DESC\"\n                            : \"ASC\",\n                        column: \"schools_submitted\",\n                      },\n                    })\n                  }\n                  className=\" flex flex-row items-center gap-3 px-4 py-2 hover:bg-primary-100 cursor-pointer text-center\"\n                >\n                  <span>Schools submitted</span>\n                  <BiSort />\n                </div>\n              </th>\n              <th className=\"border border-blue-300 text-center\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      sortBy: {\n                        status:\n                          this.state.sortBy === null\n                            ? \"DESC\"\n                            : this.state.sortBy.status === \"ASC\"\n                            ? \"DESC\"\n                            : \"ASC\",\n                        column: \"remaining\",\n                      },\n                    })\n                  }\n                  className=\" flex flex-row items-center gap-3 px-4 py-2 hover:bg-primary-100 cursor-pointer text-center\"\n                >\n                  <span>Remaining</span>\n                  <BiSort />\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.districtsWithTotals().length === 0 ? (\n              <tr>\n                <td\n                  colSpan={10}\n                  className={`text-center text-2xl font-extralight p-5 animate__animated animate__fadeIn border border-gray-300`}\n                >\n                  No Result Found!\n                </td>\n              </tr>\n            ) : (\n              this.districtsWithTotals().map((item, i) => (\n                <tr\n                  onClick={() => this.pinDistrict(item.district_code)}\n                  key={i + 1}\n                  className=\"hover:bg-primary-100 cursor-pointer\"\n                >\n                  <td className=\"px-4 py-2 border border-gray-300\">{i + 1}</td>\n                  <td className=\"px-4 py-2 border border-gray-300\">\n                    {item.district_code}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300\">\n                    {item.district_name}\n                  </td>\n                  {this.props.basic.qualifications.map((itm, k) => (\n                    <td\n                      key={k + 1}\n                      className=\"px-4 py-2 border border-gray-300 text-center\"\n                    >\n                      {commaFy(\n                        this.getDistrictData(\n                          item.district_code,\n                          itm.qualification_name\n                        )\n                      )}\n                    </td>\n                  ))}\n                  <td className=\"px-4 py-2 border border-gray-300 text-green-600 text-center\">\n                    {commaFy(item.total)}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300 text-gray-800 text-center\">\n                    {this.state.schools_submitted_placements === null\n                      ? \"Loading...\"\n                      : commaFy(item.schools)}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300 text-blue-600 text-center\">\n                    {this.state.schools_submitted_placements === null\n                      ? \"Loading...\"\n                      : commaFy(item.placed_schools)}\n                  </td>\n                  <td className=\"px-4 py-2 border border-gray-300 text-accent-900 text-center\">\n                    {this.state.schools_submitted_placements === null\n                      ? \"Loading...\"\n                      : commaFy(item.schools - item.placed_schools)}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n        {this.state.pinned_districts.length > 0 &&\n          this.props.auth.role?.role_id !== \"3\" &&\n          this.props.auth.role?.role_id !== \"2\" &&\n          this.props.auth.role?.role_id !== \"1\" && (\n            <div className=\"my-5\">\n              <Button\n                onClick={() => this.setState({ pinned_districts: [] })}\n                theme=\"accent\"\n              >\n                Unpin selected district\n              </Button>\n            </div>\n          )}\n        {this.props.auth.role?.role_id === \"3\" && (\n          <div>\n            <div className=\"my-3\">\n              You can view details for the above summary by viewing schools\n              lists and generating PDF format placement reports\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <Link\n                className=\"bg-accent-800 font-bold px-3 py-2 rounded hover:bg-yellow-800 hover:text-white\"\n                to={\"/placement-list-dde\"}\n              >\n                View placement list details\n              </Link>\n              <Link\n                className=\"border border-accent-900 text-accent-900 font-bold px-3 py-2 rounded hover:bg-accent-800 hover:text-black\"\n                to={\"/placement-books\"}\n              >\n                Print placement reports\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Auth, Basic, ToBePlacedDistrictsPostsInterface } from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport ExportToExcel from \"../../components/GenerateReport/ExportToExcel\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { commaFy, search } from \"../../utils/functions\";\nimport { GeneralPlacementReportInterface } from \"./GeneralPlacementReport\";\n\ninterface DistrictTotalsDistrictsCountsItem {\n  Existing: number;\n  New: number;\n  Total: number;\n}\n\nexport interface DistrictTotalsDistrictsCounts {\n  district: string;\n  A2: DistrictTotalsDistrictsCountsItem;\n  A1: DistrictTotalsDistrictsCountsItem;\n  A0: DistrictTotalsDistrictsCountsItem;\n  Total: DistrictTotalsDistrictsCountsItem;\n}\n\ninterface VacantSummaryProps {\n  auth: Auth;\n  basic: Basic;\n  districts: DistrictTypes[] | null;\n  districts_limits: DistrictTotalsDistrictsCounts[];\n  districts_placements: GeneralPlacementReportInterface[];\n  toBePlacedData: ToBePlacedDistrictsPostsInterface[] | null;\n  loading: boolean;\n  loadToBePlacedData: () => void;\n}\ninterface VacantSummaryState {\n  loading: boolean;\n  search_district: string;\n  sortBy: {\n    status: string;\n    column: string;\n  } | null;\n  pinned_districts: string[];\n}\n\nexport class VacantSummary extends Component<\n  VacantSummaryProps,\n  VacantSummaryState\n> {\n  constructor(props: VacantSummaryProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      search_district: \"\",\n      sortBy: null,\n      pinned_districts:\n        (this.props.auth.role?.role_id === \"3\" ||\n          this.props.auth.role?.role_id === \"2\" ||\n          this.props.auth.role?.role_id === \"1\") &&\n        this.props.auth.district !== null\n          ? [this.props.auth.district.district_code]\n          : [],\n    };\n  }\n  getDistrictSummaryLimit = (district_name: string) => {\n    const test = this.props.districts_limits.find(\n      (itm) => itm.district === district_name\n    );\n    return test === undefined ? null : test;\n  };\n  getTotalPlacedDistrict = (district_code: string) => {\n    let response = 0;\n    const total = this.props.districts_placements.filter(\n      (itm) => itm.district_code === district_code\n    );\n    for (const item of total) {\n      response += parseInt(item.total);\n    }\n    return response;\n  };\n  districtsWithTotals = () => {\n    let response =\n      this.props.districts === null\n        ? []\n        : this.props.districts.map((item) => ({\n            district_code: item.district_code,\n            district_name: item.district_name,\n            totals: this.getDistrictSummaryLimit(item.district_name),\n            total_placed: this.getTotalPlacedDistrict(item.district_code),\n          }));\n    response =\n      this.state.pinned_districts.length > 0\n        ? response.filter(\n            (itm) =>\n              this.state.pinned_districts.find(\n                (test) => test === itm.district_code\n              ) !== undefined\n          )\n        : response;\n    return search(response, this.state.search_district) as {\n      district_code: string;\n      district_name: string;\n      totals: DistrictTotalsDistrictsCounts | null;\n      total_placed: number;\n    }[];\n  };\n\n  getDistrictData = (\n    district_code: string,\n    qualification_name: string\n  ): number => {\n    const response = this.props.districts_placements.find(\n      (itm) =>\n        itm.district_code === district_code &&\n        itm.qualification.toLocaleLowerCase() ===\n          qualification_name.toLocaleLowerCase()\n    );\n    if (response !== undefined) {\n      return parseInt(response.total);\n    }\n    return 0;\n  };\n  getDistrictDataAvailable = (\n    district_name: string,\n    qualification_name: string\n  ): number => {\n    var res = 0;\n    const response = this.props.districts_limits.find(\n      (itm) => itm.district === district_name\n    );\n    if (response !== undefined) {\n      switch (qualification_name.toLocaleLowerCase()) {\n        case \"a2\":\n          res = response.A2.Total;\n          break;\n        case \"a1\":\n          res = response.A1.Total;\n          break;\n        case \"a0\":\n          res = response.A0.Total;\n          break;\n      }\n    }\n    return res;\n  };\n  totalTeachersOnDistrict = (district_code: string) => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.getDistrictData(district_code, item.qualification_name);\n    }\n    return total;\n  };\n  totalAvailable = (qualification_name: string) => {\n    let total = 0;\n    if (this.props.districts !== null) {\n      for (const item of this.props.districts) {\n        total += this.getDistrictDataAvailable(\n          item.district_name,\n          qualification_name\n        );\n      }\n    }\n    return total;\n  };\n  totalPlaced = (qualification_id: string) => {\n    let total = 0;\n    if (this.props.districts !== null) {\n      for (const item of this.props.districts) {\n        total += this.getDistrictData(item.district_code, qualification_id);\n      }\n    }\n    return total;\n  };\n  getAllTotalAvailable = () => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.totalAvailable(item.qualification_name);\n    }\n    return total;\n  };\n  getAllTotalExisting = () => {\n    let total = 0;\n    for (const item of this.props.basic.qualifications) {\n      total += this.totalPlaced(item.qualification_name);\n    }\n    return total;\n  };\n  pinDistrict = (district_code: string) => {\n    if (\n      this.props.auth.role?.role_id !== \"3\" &&\n      this.props.auth.role?.role_id !== \"2\" &&\n      this.props.auth.role?.role_id !== \"1\"\n    ) {\n      if (\n        this.state.pinned_districts.find((itm) => itm === district_code) ===\n        undefined\n      ) {\n        this.setState({\n          pinned_districts: [...this.state.pinned_districts, district_code],\n        });\n      } else {\n        this.setState({\n          pinned_districts: this.state.pinned_districts.filter(\n            (itm) => itm !== district_code\n          ),\n        });\n      }\n    }\n  };\n\n  getDistrictToBePlaced = (\n    district_code: string,\n    qualification_name: string\n  ): number => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const response = this.props.toBePlacedData.find(\n        (itm) =>\n          itm.district_code === district_code &&\n          itm.qualification_name.toLowerCase() ===\n            qualification_name.toLocaleLowerCase()\n      );\n      if (response !== undefined) {\n        return parseInt(response.approved);\n      }\n    }\n    return total;\n  };\n\n  getDistrictNameToBePlaced = (\n    district_name: string,\n    qualification_name: string\n  ): number => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const response = this.props.toBePlacedData.find(\n        (itm) =>\n          itm.district_name.toLocaleLowerCase() ===\n            district_name.toLocaleLowerCase() &&\n          itm.qualification_name.toLowerCase() ===\n            qualification_name.toLocaleLowerCase()\n      );\n      if (response !== undefined) {\n        return parseInt(response.approved);\n      }\n    }\n    return total;\n  };\n\n  getTotalDistrictToBePlaced = (district_code: string) => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const data_temp = this.props.toBePlacedData.filter(\n        (itm) => itm.district_code === district_code\n      );\n      for (const item of data_temp) {\n        total += parseInt(item.approved);\n      }\n    }\n    return total;\n  };\n\n  getTotalQualificationToBePlacedByQualification = (\n    qualification_name: string\n  ) => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      const filtered = this.props.toBePlacedData.filter(\n        (itm) =>\n          itm.qualification_name.toLocaleLowerCase() ===\n          qualification_name.toLocaleLowerCase()\n      );\n      for (const item of filtered) {\n        total += parseInt(item.approved);\n      }\n    }\n    return total;\n  };\n\n  getTotalQualificationToBePlacedTotals = () => {\n    var total = 0;\n    if (this.props.toBePlacedData !== null) {\n      for (const item of this.props.toBePlacedData) {\n        total += parseInt(item.approved);\n      }\n    }\n    return total;\n  };\n\n  getTeachersAvailableAndToBePlaced = (\n    district_code: string,\n    qualification_name: string\n  ) => {\n    return (\n      this.getDistrictToBePlaced(district_code, qualification_name) +\n      this.getDistrictData(district_code, qualification_name)\n    );\n  };\n  componentDidMount = () => {\n    if (this.props.toBePlacedData === null) {\n      this.setState({ loading: true });\n      this.props.loadToBePlacedData();\n    }\n  };\n\n  render() {\n    if (this.state.loading === true || this.props.toBePlacedData === null) {\n      return (\n        <div className=\"bg-white p-4 flex flex-col items-center justify-center\">\n          <Loading />\n          <div className=\"animate__animated animate__falseIn animate__infinite mt-2 text-lg font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row justify-between gap-3 mb-5\">\n          <div className=\"flex flex-col pl-4 pt-5\">\n            <span className=\"font-extrabold text-2xl text-primary-800\">\n              Posts management\n            </span>\n            <span className=\"-mt-1\">\n              This includes total ceiling and available teachers comparison\n            </span>\n            <div className=\"mt-3\">\n              <ExportToExcel\n                fileData={this.districtsWithTotals().map((item, i) => ({\n                  no: `${i + 1}`,\n                  District_Code: `${item.district_code}`,\n                  District_Name: `${item.district_name}`,\n                  AO_Placed: `${this.getDistrictData(\n                    item.district_code,\n                    \"a0\"\n                  )}`,\n                  A0_to_be_placed: `${this.getDistrictToBePlaced(\n                    item.district_code,\n                    \"a0\"\n                  )}`,\n                  A0_grand_total: `${this.getTeachersAvailableAndToBePlaced(\n                    item.district_code,\n                    \"a0\"\n                  )}`,\n                  A0_total_ceiling: `${this.getDistrictDataAvailable(\n                    item.district_name,\n                    \"a0\"\n                  )}`,\n                  A1_Placed: `${this.getDistrictData(\n                    item.district_code,\n                    \"a1\"\n                  )}`,\n                  A1_to_be_placed: `${this.getDistrictToBePlaced(\n                    item.district_code,\n                    \"a1\"\n                  )}`,\n                  A1_grand_total: `${this.getTeachersAvailableAndToBePlaced(\n                    item.district_code,\n                    \"a1\"\n                  )}`,\n                  A1_total_ceiling: `${this.getDistrictDataAvailable(\n                    item.district_name,\n                    \"a1\"\n                  )}`,\n                  A2_Placed: `${this.getDistrictData(\n                    item.district_code,\n                    \"a2\"\n                  )}`,\n                  A2_to_be_placed: `${this.getDistrictToBePlaced(\n                    item.district_code,\n                    \"a2\"\n                  )}`,\n                  A2_grand_total: `${this.getTeachersAvailableAndToBePlaced(\n                    item.district_code,\n                    \"a2\"\n                  )}`,\n                  A2_total_ceiling: `${this.getDistrictDataAvailable(\n                    item.district_name,\n                    \"a2\"\n                  )}`,\n                  Grand_total_teachers: `${\n                    item.total_placed +\n                    this.getTotalDistrictToBePlaced(item.district_code)\n                  }`,\n                  Grand_total_ceiling: `${\n                    item.totals === null ? \"0\" : item.totals.Total.Total\n                  }`,\n                  Total_vacant: `${\n                    item.totals === null\n                      ? \"0\"\n                      : item.totals.Total.Total -\n                        (item.total_placed +\n                          this.getTotalDistrictToBePlaced(item.district_code))\n                  }`,\n                }))}\n                fileName={`Districts ceiling tracking report`}\n                btnName=\"Download EXCEL\"\n              />\n            </div>\n          </div>\n          {this.props.auth.role?.role_id !== \"3\" &&\n            this.props.auth.role?.role_id !== \"2\" &&\n            this.props.auth.role?.role_id !== \"1\" && (\n              <div className=\"\">\n                <table className=\"\">\n                  <tbody>\n                    <tr className=\"bg-primary-100 font-light\">\n                      <td className=\"border border-blue-300 px-3\">\n                        Report type\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-blue-300 text-gray-800\"\n                        >\n                          {item.qualification_name}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3\">Total</td>\n                    </tr>\n                    <tr className=\"bg-gray-100 font-bold\">\n                      <td className=\"border border-gray-300 px-3\">\n                        National Ceiling\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-gray-300\"\n                        >\n                          {commaFy(\n                            this.totalAvailable(\n                              item.qualification_name.toLocaleLowerCase()\n                            )\n                          )}\n                        </td>\n                      ))}\n                      <td className=\"border border-gray-300 px-3\">\n                        {commaFy(this.getAllTotalAvailable())}\n                      </td>\n                    </tr>\n                    <tr className=\"text-green-700\">\n                      <td className=\"border border-blue-300 px-3\">\n                        Current teachers\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-blue-300\"\n                        >\n                          {commaFy(this.totalPlaced(item.qualification_name))}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3\">\n                        {commaFy(this.getAllTotalExisting())}\n                      </td>\n                    </tr>\n                    <tr className=\"text-yellow-700\">\n                      <td className=\"border border-blue-300 px-3\">\n                        Posts to be placed\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-light border border-blue-300\"\n                        >\n                          {commaFy(\n                            this.getTotalQualificationToBePlacedByQualification(\n                              item.qualification_name\n                            )\n                          )}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3\">\n                        {commaFy(this.getTotalQualificationToBePlacedTotals())}\n                      </td>\n                    </tr>\n                    <tr className={`bg-accent-400 text-black`}>\n                      <td className=\"border border-blue-300 font-extrabold px-3\">\n                        Total Vacant\n                      </td>\n                      {this.props.basic.qualifications.map((item, i) => (\n                        <td\n                          key={i + 1}\n                          className=\"px-5 py-1 font-bold border border-blue-300\"\n                        >\n                          {commaFy(\n                            this.totalAvailable(\n                              item.qualification_name.toLocaleLowerCase()\n                            ) -\n                              this.getTotalQualificationToBePlacedByQualification(\n                                item.qualification_name\n                              ) -\n                              this.totalPlaced(item.qualification_name)\n                          )}\n                        </td>\n                      ))}\n                      <td className=\"border border-blue-300 px-3 font-extrabold text-black\">\n                        {commaFy(\n                          this.getAllTotalAvailable() -\n                            this.getTotalQualificationToBePlacedTotals() -\n                            this.getAllTotalExisting()\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            )}\n        </div>\n        <div className=\"mb-3 flex flex-row items-center gap-2\">\n          <input\n            type=\"text\"\n            value={this.state.search_district}\n            onChange={(e) => this.setState({ search_district: e.target.value })}\n            placeholder=\"Search by district\"\n            className=\"px-3 py-2 rounded border border-gray-400 w-full font-bold text-primary-800\"\n          />\n        </div>\n        <div\n          className=\"overflow-x-auto\"\n          style={{ width: \"calc(100vw - 300px)\" }}\n        >\n          <table className=\"\">\n            <thead>\n              <tr className=\"text-primary-800 text-left font-extrabold bg-primary-100 text-xs\">\n                <th className=\"px-1 py-2 border border-blue-300\">#</th>\n                <th className=\"px-1 py-2 border border-blue-300\">\n                  District code\n                </th>\n                <th className=\"px-1 py-2 border border-blue-300\">\n                  District name\n                </th>\n                {this.props.basic.qualifications.map((item, i) => (\n                  <th\n                    className=\"border border-blue-300 text-center\"\n                    key={i + 1}\n                  >\n                    <div>\n                      <div className=\"my-2\">{item.qualification_name}</div>\n                      <table className=\"w-full text-xs\">\n                        <thead>\n                          <tr>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">Placed</div>\n                            </td>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">To be placed</div>\n                            </td>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">G.Total</div>\n                            </td>\n                            <td className=\"border border-blue-300 px-1 py-2\">\n                              <div className=\"w-14\">Ceiling</div>\n                            </td>\n                          </tr>\n                        </thead>\n                      </table>\n                    </div>\n                  </th>\n                ))}\n                <th className=\"border border-blue-300 text-left text-primary-800\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        sortBy: {\n                          status:\n                            this.state.sortBy === null\n                              ? \"DESC\"\n                              : this.state.sortBy.status === \"ASC\"\n                              ? \"DESC\"\n                              : \"ASC\",\n                          column: \"teachers\",\n                        },\n                      })\n                    }\n                    className=\" flex flex-row items-center gap-3 px-2 py-2 hover:bg-primary-100 cursor-pointer text-left\"\n                  >\n                    <span>Total teachers</span>\n                    {/* <BiSort /> */}\n                  </div>\n                </th>\n                <th className=\"border border-blue-300 text-center px-3 py-2\">\n                  Total Ceiling\n                </th>\n                <th className=\"border border-blue-300 text-center\">\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        sortBy: {\n                          status:\n                            this.state.sortBy === null\n                              ? \"DESC\"\n                              : this.state.sortBy.status === \"ASC\"\n                              ? \"DESC\"\n                              : \"ASC\",\n                          column: \"schools_submitted\",\n                        },\n                      })\n                    }\n                    className=\" flex flex-row items-center gap-3 px-2 py-2 hover:bg-primary-100 cursor-pointer text-center\"\n                  >\n                    <span>Vacant posts</span>\n                    {/* <BiSort /> */}\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.districtsWithTotals().length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={10}\n                    className={`text-center text-2xl font-extralight p-5 animate__animated animate__fadeIn border border-gray-300`}\n                  >\n                    No Result Found!\n                  </td>\n                </tr>\n              ) : (\n                this.districtsWithTotals().map((item, i) => (\n                  <tr\n                    onClick={() => {\n                      this.pinDistrict(item.district_code);\n                    }}\n                    key={i + 1}\n                    className=\"hover:bg-primary-100 cursor-pointer text-xs\"\n                  >\n                    <td className=\"px-1 py-2 border border-gray-300 text-center\">\n                      {i + 1}\n                    </td>\n                    <td className=\"px-1 py-2 border border-gray-300 text-center\">\n                      {item.district_code}\n                    </td>\n                    <td className=\"px-1 py-2 border border-gray-300\">\n                      {item.district_name}\n                    </td>\n                    {this.props.basic.qualifications.map((itm, k) => (\n                      <td\n                        key={k + 1}\n                        className=\"border border-gray-300 text-center\"\n                      >\n                        <div>\n                          <table className=\"w-full text-xs\">\n                            <tbody>\n                              <tr>\n                                <td\n                                  className={`border border-blue-300 py-2 ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >\n                                    this.getDistrictData(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"\"\n                                      : \"bg-red-100\"\n                                  }`}\n                                >\n                                  <div className={`w-6 px-1 text-center`}>\n                                    {commaFy(\n                                      this.getDistrictData(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                                <td\n                                  className={`border border-blue-300 py-2 ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >\n                                    this.getDistrictData(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"\"\n                                      : \"bg-red-100\"\n                                  }`}\n                                >\n                                  <div\n                                    className={`w-6 px-1 text-center ${\n                                      this.getDistrictToBePlaced(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      ) > 0\n                                        ? \"text-accent-900\"\n                                        : \"text-gray-600\"\n                                    }`}\n                                  >\n                                    {commaFy(\n                                      this.getDistrictToBePlaced(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                                <td\n                                  className={`border py-2 ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >=\n                                    this.getTeachersAvailableAndToBePlaced(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"bg-green-50 text-green-700 border-blue-300\"\n                                      : \"bg-red-600 text-white border-red-700\"\n                                  }`}\n                                >\n                                  <div className={`w-6 text-center px-1`}>\n                                    {commaFy(\n                                      this.getTeachersAvailableAndToBePlaced(\n                                        item.district_code,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                                <td\n                                  className={`border ${\n                                    this.getDistrictDataAvailable(\n                                      item.district_name,\n                                      itm.qualification_name\n                                    ) >=\n                                    this.getTeachersAvailableAndToBePlaced(\n                                      item.district_code,\n                                      itm.qualification_name\n                                    )\n                                      ? \"bg-accent-400 border-blue-300\"\n                                      : \"bg-red-700 text-white border-red-600\"\n                                  } py-2 text-center`}\n                                >\n                                  <div className=\"w-6 px-1\">\n                                    {commaFy(\n                                      this.getDistrictDataAvailable(\n                                        item.district_name,\n                                        itm.qualification_name\n                                      )\n                                    )}\n                                  </div>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </td>\n                    ))}\n                    <td className=\"px-1 py-2 border border-gray-300 text-primary-600 text-center\">\n                      {commaFy(\n                        item.total_placed +\n                          this.getTotalDistrictToBePlaced(item.district_code)\n                      )}\n                    </td>\n                    <td className=\"px-1 py-2 border border-gray-300 text-gray-800 text-center\">\n                      {item.totals === null\n                        ? \"Loading...\"\n                        : commaFy(item.totals.Total.Total)}\n                    </td>\n                    <td\n                      className={`px-1 py-2 border ${\n                        item.totals === null\n                          ? \"\"\n                          : item.totals.Total.Total -\n                              (item.total_placed +\n                                this.getTotalDistrictToBePlaced(\n                                  item.district_code\n                                )) <\n                            0\n                          ? \"bg-red-600 text-white border-red-700\"\n                          : \"text-blue-600 border-gray-300\"\n                      }  text-center`}\n                    >\n                      {item.totals === null\n                        ? 0\n                        : commaFy(\n                            item.totals.Total.Total -\n                              (item.total_placed +\n                                this.getTotalDistrictToBePlaced(\n                                  item.district_code\n                                ))\n                          )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n        {this.state.pinned_districts.length > 0 &&\n          this.props.auth.role?.role_id !== \"3\" &&\n          this.props.auth.role?.role_id !== \"2\" &&\n          this.props.auth.role?.role_id !== \"1\" && (\n            <div className=\"my-5\">\n              <Button\n                onClick={() => this.setState({ pinned_districts: [] })}\n                theme=\"accent\"\n              >\n                Unpin selected district\n              </Button>\n            </div>\n          )}\n        {this.props.auth.role?.role_id === \"3\" && (\n          <div>\n            <div className=\"my-3\">\n              You can view details for the above summary by viewing schools\n              lists and generating PDF format placement reports\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <Link\n                className=\"bg-accent-800 font-bold px-3 py-2 rounded hover:bg-yellow-800 hover:text-white\"\n                to={\"/placement-list-dde\"}\n              >\n                View placement list details\n              </Link>\n              <Link\n                className=\"border border-accent-900 text-accent-900 font-bold px-3 py-2 rounded hover:bg-accent-800 hover:text-black\"\n                to={\"/placement-books\"}\n              >\n                Print placement reports\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  FC_GetPostsToBePlacedSummaries,\n  GetDistrictsLimits,\n  GetGeneralPlacementReports,\n  Placement,\n  ToBePlacedDistrictsPostsInterface,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\nimport { MONTHS_LIST } from \"../../utils/functions\";\nimport { GeneralReport } from \"./GeneralReport\";\nimport { DistrictTotalsDistrictsCounts, VacantSummary } from \"./VacantSummary\";\n\nexport interface GeneralPlacementReportInterface {\n  district_code: string;\n  qualification: string;\n  total: string;\n}\n\ninterface GeneralPlacementReportProps {\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n}\ninterface GeneralPlacementReportState {\n  loading: boolean;\n  report_type: \"general\" | \"vacant\" | \"search\";\n  generalReport: GeneralPlacementReportInterface[] | null;\n  selected_month: string;\n  error: string;\n  districts: DistrictTypes[] | null;\n  districts_limits: DistrictTotalsDistrictsCounts[] | null;\n  districts_to_be_placed: ToBePlacedDistrictsPostsInterface[] | null;\n}\n\nconst TodayDate = new Date();\n\nclass _GeneralPlacementReport extends Component<\n  GeneralPlacementReportProps,\n  GeneralPlacementReportState\n> {\n  constructor(props: GeneralPlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      report_type: \"general\",\n      generalReport: null,\n      selected_month: MONTHS_LIST[TodayDate.getMonth()],\n      error: \"\",\n      districts: null,\n      districts_limits: null,\n      districts_to_be_placed: null,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n\n  FC_LoadGeneralReport = () => {\n    this.setLoading(true);\n    this.props.basic.academic_calender !== null &&\n      GetGeneralPlacementReports(\n        this.props.basic.academic_calender.academic_year_id, //Add selection of academic\n        this.state.selected_month,\n        (\n          loading: boolean,\n          msg: string,\n          res: GeneralPlacementReportInterface[] | null\n        ) => {\n          this.setLoading(loading);\n          if (loading === false && msg === \"\" && res !== null) {\n            this.setState({ generalReport: res, loading: false });\n            console.log(\"Test report\", res);\n          } else {\n            if (msg !== \"\") {\n              this.setState({ error: msg, generalReport: [] });\n            }\n          }\n        }\n      );\n  };\n\n  loadToBePlaced = () => {\n    if (\n      this.state.report_type === \"vacant\" &&\n      this.state.districts_to_be_placed === null\n    ) {\n      this.setLoading(true);\n      FC_GetPostsToBePlacedSummaries(\n        (\n          loading: boolean,\n          msg: string,\n          res: ToBePlacedDistrictsPostsInterface[] | null\n        ) => {\n          this.setLoading(loading);\n          if (loading === false && res !== null) {\n            this.setState({ districts_to_be_placed: res });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.state.districts_limits === null) {\n      this.setLoading(true);\n      GetDistrictsLimits(\n        (loading: boolean, res: DistrictTotalsDistrictsCounts[] | null) => {\n          this.setState({\n            loading: loading,\n            districts_limits: res,\n          });\n        }\n      );\n    }\n    if (this.state.districts === null) {\n      this.setLoading(true);\n      FC_GetDistricts(\n        (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n          if (data !== null) {\n            this.setState({ districts: data, loading: false });\n          }\n        }\n      );\n    }\n    if (\n      this.state.report_type === \"general\" &&\n      this.state.generalReport === null\n    ) {\n      this.FC_LoadGeneralReport();\n    }\n    this.loadToBePlaced();\n  };\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className=\"bg-white p-4 flex flex-col items-center justify-center\">\n          <Loading />\n          <div className=\"animate__animated animate__falseIn animate__infinite mt-2 text-lg font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div className=\"px-3 md:px-6 py-6\">\n          <div className=\"flex flex-row items-center justify-between gap-3\">\n            <div className=\"text-2xl font-extrabold\">\n              General placement report\n            </div>\n            <div className=\"flex flex-row items-center justify-end gap-1 bg-white p-1 rounded\">\n              <div\n                onClick={() => {\n                  this.state.loading === false &&\n                    this.setState({ report_type: \"general\" });\n                }}\n                className={`px-3 py-2 rounded w-max hover:bg-yellow-50 hover:text-accent-900 ${\n                  this.state.report_type === \"general\"\n                    ? \"cursor-not-allowed bg-yellow-100 text-yellow-800 font-bold animate__animated animate__fadeIn\"\n                    : \"bg-white cursor-pointer font-bold\"\n                }`}\n              >\n                General report\n              </div>\n              <div\n                onClick={() => {\n                  this.state.loading === false &&\n                    this.setState({ report_type: \"vacant\" });\n                }}\n                className={`px-3 py-2 rounded w-max hover:bg-yellow-50 hover:text-accent-900 ${\n                  this.state.report_type === \"vacant\"\n                    ? \"cursor-not-allowed bg-yellow-100 text-yellow-800 font-bold animate__animated animate__fadeIn\"\n                    : \"bg-white cursor-pointer font-bold\"\n                }`}\n              >\n                Posts Management\n              </div>\n              <div\n                onClick={() => {\n                  this.state.loading === false &&\n                    this.setState({ report_type: \"search\" });\n                }}\n                className={`px-3 py-2 rounded w-max hover:bg-yellow-50 hover:text-accent-900 ${\n                  this.state.report_type === \"search\"\n                    ? \"cursor-not-allowed bg-yellow-100 text-yellow-800 font-bold animate__animated animate__fadeIn\"\n                    : \"bg-white cursor-pointer font-bold\"\n                } flex flex-row items-center gap-1`}\n              >\n                <div>\n                  <RiSearchLine className=\"text-2xl\" />\n                </div>\n                <span>Search</span>\n              </div>\n            </div>\n          </div>\n          {/* Report here */}\n          <div className=\"bg-white p-3 rounded mt-5\">\n            {/* Alerts here */}\n            {this.state.error !== \"\" && (\n              <div\n                title=\"Click to close alert\"\n                onClick={() => this.setState({ error: \"\" })}\n                className=\"rounded-md bg-red-50 border border-red-200 px-3 py-2 text-base font-light w-full cursor-pointer hover:bg-red-100 flex flex-row items-center justify-between gap-3 mb-3 animate__animated animate__shakeX\"\n              >\n                <span>{this.state.error}</span>\n                <div>\n                  <MdClose className=\"text-2xl hover:text-red-600\" />\n                </div>\n              </div>\n            )}\n            <div>\n              {this.state.report_type === \"general\" && (\n                <GeneralReport\n                  loading={this.state.loading}\n                  generalReport={this.state.generalReport}\n                  selected_month={this.state.selected_month}\n                  error={this.state.error}\n                  districts={this.state.districts}\n                  basic={this.props.basic}\n                  auth={this.props.auth}\n                  //   selected_district={{\n                  //     district_code: \"11\",\n                  //     district_name: \"Nyarugenge\",\n                  //   }}\n                />\n              )}\n              {this.state.report_type === \"vacant\" &&\n                this.state.districts_limits !== null &&\n                this.state.generalReport !== null && (\n                  <VacantSummary\n                    districts={this.state.districts}\n                    basic={this.props.basic}\n                    auth={this.props.auth}\n                    districts_limits={this.state.districts_limits}\n                    districts_placements={this.state.generalReport}\n                    toBePlacedData={this.state.districts_to_be_placed}\n                    loading={this.state.loading}\n                    loadToBePlacedData={() => {\n                      this.loadToBePlaced();\n                    }}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): { auth: Auth; basic: Basic; placement: Placement } => {\n  return { auth: auth, basic: basic, placement: placement };\n};\n\nexport const GeneralPlacementReport = connect(\n  mapStateToProps,\n  {}\n)(_GeneralPlacementReport);\n"],"sourceRoot":""}