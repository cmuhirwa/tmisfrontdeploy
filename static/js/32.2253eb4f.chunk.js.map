{"version":3,"sources":["trainingModule/components/NoResult/NoResultFound.tsx","actions/training_approval.action.ts","trainingModule/TrainingTraineesRequests/components/TraineesList.tsx","trainingModule/TrainingTraineesRequests/components/TrainingsList.tsx","trainingModule/components/ProgressBar/ProgressBar.tsx","trainingModule/TrainingTraineesRequests/components/TrainingCohorts.tsx","trainingModule/components/SelectDistrict/SelectDistrict.tsx","trainingModule/TrainingTraineesRequests/TrainingTraineesRequests.tsx"],"names":["NoResultFound","props","ButtonSelected","button","className","undefined","title","description","onClick","GetTrainingsFromSelectedDistrict","district_code","setResponse","axios","get","TRAINING_APP_URL","res","data","type","msg","returnErrorToText","console","log","GetTrainingSchoolsTotalAssigned","training_id","ApproveTrainingTraineesRequest","post","is_approved","training_request_id","parseInt","TraineesList","GetParticipantUnique","response","item","find","itm","id","push","LoadParticipants","setState","loading","GetSchoolTrainingParticipants","selected_training_request","school_code","selected_district_code","trainees","error","componentDidMount","state","search_data","view_subjects","this","onGoBack","school_name","district_name","length","total","placeholder","value","onChange","e","target","Loading","search","colSpan","map","i","first_name","last_name","nid","teaching_level","qualification_name","position_name","role","subjects","removeDuplicateParticipantsSubjects","style","zIndex","course","course_code","course_name","Component","TrainingsList","ReturnFilterTrainings","trainings_list","selected_training_provider_id","filter","development_partner_id","toString","training_provider_id","GetTotalRequired","GetTotalRequiredTrainees","GetTrainingProviders","training_provider_name","development_partner_name","openSelectTrainingProvider","commaFy","SelectCustom","close","click","selected_training","onSelected","topic_name","DATE","start_date","end_date","ProgressBar","useState","count","setCount","useEffect","interval","setInterval","maxValue","clearInterval","percentage","backgroundClass","width","transition","isNaN","Infinity","Math","ceil","TrainingCohorts","GetCohorts","cohorts","selectedTrainingTotals","cohort_id","cohort","GetDaysBetweenDates","Date","selectedTraining","selectedCohortId","setSelectCohort","cohort_name","getTotalAssignedByCohort","getTotalRequestsByCohort","cohort_start_date","cohort_end_date","options","chart","labels","responsive","breakpoint","legend","position","series","getTotalSchoolsInProgress","getTotalSchoolsCompleted","getTotalSchoolsNotStarted","SelectDistrict","FilteredData","districts","searchData","selectedDistrict","onSelectDistrict","_TrainingTraineesRequests","LoadTotalTrainingAssignedTrainees","selected_training_assigned_totals","GetDistrictsList","FC_GetDistrictList","status","districts_list","province_code","FC_GetTrainingsListToBeApproved","district","auth","stakeholder","chooseTrainingProvider","FC_GetTrainingsList","implementation_status","intervantion_area","intervation_id","sub_area_id","subarea_name","topic_id","FC_GetTrainingSchools","request_id","GetTotalRequiredByRequestId","GetTotalSchools","GetTotalDistricts","GetTotalAssignedByRequestId","test","trainee_request_id","GetTotalAssignedTrainees","FC_ApproveTrainingRequest","training_request","approve_training_request","selected_status","success","selected_district","openSelectDistrict","Button","borderColor","training_requests","openSelect","PopUpContainer","onSubmitApproval","Modal","backDrop","backDropClose","displayClose","widthSizeClass","ModalSize","large","padding","body","footer","theme","TrainingTraineesRequests","connect","basic"],"mappings":"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","file":"static/js/32.2253eb4f.chunk.js","sourcesContent":["export const NoResultFound = (props: {\n  title?: string;\n  description?: string;\n  button?: JSX.Element;\n  onClick?: () => void;\n}) => {\n  const ButtonSelected = props.button;\n  return (\n    <div className=\"bg-gray-100 rounded-md p-3 py-6 text-center\">\n      <div className=\"font-bold text-xl\">\n        {props.title === undefined ? \"No result found!\" : props.title}\n      </div>\n      <div className=\"text-sm text-gray-500\">\n        {props.description === undefined\n          ? \"Try another keyword to view the result!\"\n          : props.description}\n      </div>\n      <div className=\"flex flex-row items-center justify-center\">\n        {ButtonSelected !== undefined && (\n          <div onClick={props.onClick}>{ButtonSelected}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n  ","import axios from \"axios\";\nimport { TRAINING_APP_URL } from \"../config/app.config\";\nimport { returnErrorToText } from \"../utils/functions\";\nimport { TrainingImplementationStatus } from \"./training-offers\";\nimport { TrainingCohortItemInterface } from \"../trainingModule/TrainingOffers/components/TrainingCohort\";\n\nexport interface DistrictListTrainingsListInterface {\n  id: number;\n  school_code: number | null;\n  school_name: string | null;\n  total: number | null;\n  training_id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervation_id: number;\n  intervantion_area: string;\n  sub_area_id: number;\n  subarea_name: string;\n  topic_id: number;\n  topic_name: string;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n  is_approved: 1 | 0;\n  cohort_id: string;\n}\n\nexport interface GetTrainingsToBeApprovedListInterface {\n  id: number;\n  training_id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  intervation_id: number;\n  intervantion_area: string;\n  sub_area_id: number;\n  subarea_name: string;\n  topic_id: number;\n  topic_name: string;\n  development_partner_id: string;\n  development_partner_name: string;\n  implementation_status: TrainingImplementationStatus;\n}\n\nexport interface TraineeRequestsCohortsSummary {\n  trainee_request_id: string;\n  cohort_id: string;\n  total: number;\n  cohort: TrainingCohortItemInterface[];\n}\n\n// ************* Functions -------------------------------------------------------------------------------\n\n// Get to be trained on district level\nexport const GetTrainingsFromSelectedDistrict = async (\n  district_code: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: DistrictListTrainingsListInterface[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<DistrictListTrainingsListInterface[]>(\n      `${TRAINING_APP_URL}/district/training/${district_code}`\n    );\n    // console.log(\"Trainings list: \", res.data);\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Get to be trained on district level\nexport const GetTrainingSchoolsTotalAssigned = async (\n  training_id: string,\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n      data: TraineeRequestsCohortsSummary[] | null;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.get<TraineeRequestsCohortsSummary[]>(\n      `${TRAINING_APP_URL}/training/trainee/request/total/${training_id}`\n    );\n    if (res) {\n      setResponse(false, {\n        data: res.data,\n        type: \"success\",\n        msg: \"Data loaded successfully\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      data: null,\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n\n// Function to approve training request\nexport const ApproveTrainingTraineesRequest = async (\n  data: {\n    is_approved: boolean;\n    training_request_id: string;\n  },\n  setResponse: (\n    loading: boolean,\n    res: {\n      type: \"success\" | \"error\";\n      msg: string;\n    } | null\n  ) => void\n) => {\n  setResponse(true, null);\n  try {\n    const res = await axios.post(`${TRAINING_APP_URL}/school/request`, {\n      is_approved: data.is_approved,\n      training_request_id: parseInt(data.training_request_id),\n    });\n    console.log(\"Training status changed: \", res);\n    if (res) {\n      setResponse(false, {\n        type: \"success\",\n        msg:\n          data.is_approved === true\n            ? \"Training request approved successfully!\"\n            : \"Training request undo successfully!\",\n      });\n    }\n  } catch (error: any) {\n    setResponse(false, {\n      type: \"error\",\n      msg: returnErrorToText(error),\n    });\n    console.log(\"Err: \", { ...error });\n  }\n};\n","import React, { Component } from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { MdClose } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { AuthDistrict } from \"../../../actions\";\nimport {\n  GetSchoolTrainingParticipants,\n  TrainingParticipants,\n} from \"../../../actions/training-offers\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { search } from \"../../../utils/functions\";\nimport { removeDuplicateParticipantsSubjects } from \"../../TrainingOffers/School/Details/AddParticipants\";\n\ninterface TraineesListProps {\n  selected_district_code: AuthDistrict | null;\n  training_id: string;\n  selected_training_request: {\n    request_id: string;\n    school_code: string;\n    school_name: string;\n    total: number;\n    is_approved: 1 | 0;\n  };\n  onGoBack: () => void;\n  GetTotalRequiredByRequestId: (training_request_id: string) => number;\n  onSubmitApproval: (training_request_id: string) => void;\n}\ninterface TraineesListState {\n  loading: boolean;\n  trainees: TrainingParticipants[] | null;\n  error: string;\n  search_data: string;\n  view_subjects: TrainingParticipants | null;\n}\n\nexport class TraineesList extends Component<\n  TraineesListProps,\n  TraineesListState\n> {\n  constructor(props: TraineesListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      trainees: null,\n      error: \"\",\n      search_data: \"\",\n      view_subjects: null,\n    };\n  }\n  GetParticipantUnique = (\n    data: TrainingParticipants[]\n  ): TrainingParticipants[] => {\n    var response: TrainingParticipants[] = [];\n    for (const item of data) {\n      if (response.find((itm) => itm.id === item.id) === undefined) {\n        response.push(item);\n      }\n    }\n    return response;\n  };\n  LoadParticipants = () => {\n    this.setState({ loading: true });\n    GetSchoolTrainingParticipants(\n      this.props.training_id,\n      this.props.selected_training_request.school_code === \"\"\n        ? this.props.selected_district_code === null\n          ? \"\"\n          : this.props.selected_district_code.district_code\n        : this.props.selected_training_request.school_code,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: TrainingParticipants[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          this.setState({\n            trainees:\n              res.data === null ? null : this.GetParticipantUnique(res.data),\n            loading: false,\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ trainees: [], loading: false, error: res.msg });\n        }\n      }\n    );\n  };\n  componentDidMount = () => {\n    if (this.state.trainees === null) {\n      this.LoadParticipants();\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"text-xl font-bold\">Trainings List</div>\n        <div className=\"flex flex-row items-center justify-between gap-2\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div className=\"flex flex-row items-center justify-between gap-3\">\n              <div>\n                <div\n                  onClick={this.props.onGoBack}\n                  className=\"h-11 w-11 cursor-pointer bg-accent-400 text-accent-900 hover:bg-accent-500 flex items-center justify-center rounded-full\"\n                >\n                  <BsArrowLeft className=\"text-2xl\" />\n                </div>\n              </div>\n              <div className=\"bg-primary-100 rounded-md flex flex-col w-max px-3 py-1 text-primary-800 my-2\">\n                <span className=\"text-sm\">Selected school/district</span>\n                <span className=\"font-bold text-base\">\n                  {this.props.selected_training_request.school_code !== \"\"\n                    ? this.props.selected_training_request.school_code\n                    : this.props.selected_district_code?.district_code}{\" \"}\n                  -{\" \"}\n                  {this.props.selected_training_request.school_name !== \"\"\n                    ? this.props.selected_training_request.school_name\n                    : this.props.selected_district_code?.district_name}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center justify-end gap-2\">\n            <div className=\" px-4 py-0 text-right\">\n              <div className=\"text-sm\">Total trainees</div>\n              <div className=\"text-lg -mt-1 font-bold\">\n                {this.state.trainees === null\n                  ? \"...\"\n                  : this.state.trainees.length}{\" \"}\n                of {this.props.selected_training_request.total}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Table here */}\n        {/* error */}\n        {this.state.error !== \"\" && (\n          <div\n            onClick={() => this.setState({ error: \"\" })}\n            className=\"bg-red-100 text-red-700 px-3 py-2 rounded cursor-pointer flex flex-row items-center justify-between gap-2 my-3 animate__animated animate__shakeX\"\n          >\n            <div className=\"flex flex-col\">\n              <span className=\"text-lg font-bold\">Error occurred:</span>\n              <span>{this.state.error}</span>\n            </div>\n            <div>\n              <MdClose className=\"text-2xl\" />\n            </div>\n          </div>\n        )}\n        <div className=\"relative w-full mt-3\">\n          <div className=\"absolute px-3 py-2\">\n            <RiSearchLine className=\"text-2xl text-gray-600\" />\n          </div>\n          <input\n            type=\"search\"\n            className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded\"\n            placeholder=\"Search...\"\n            value={this.state.search_data}\n            onChange={(e) => this.setState({ search_data: e.target.value })}\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          {this.state.trainees === null ? (\n            <div className=\"flex flex-col items-center justify-center p-6 bg-gray-100 rounded my-4\">\n              <Loading />\n              <div className=\"text-center font-light text-lg\">\n                Loading, please wait...\n              </div>\n            </div>\n          ) : this.state.trainees.length === 0 ? (\n            <div>\n              <div className=\"text-center p-5 bg-gray-100 rounded-md mt-3 flex flex-col items-center justify-center w-full\">\n                <div className=\"text-xl font-bold\">No trainees found!</div>\n                <div className=\"text-sm text-gray-500\">\n                  No trainees assigned to the selected training from the school\n                  or district {this.props.selected_training_request.school_name}\n                </div>\n                <div className=\"mt-4\">\n                  <div\n                    className=\"bg-white hover:bg-gray-300 border border-gray-300 px-3 py-2 rounded w-max cursor-pointer italic\"\n                    onClick={this.props.onGoBack}\n                  >\n                    Go back to the list\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mt-3 w-full overflow-x-auto\">\n              <table className=\"min-w-full text-left text-sm animate__animated animate__fadeIn\">\n                <thead>\n                  <tr className=\"text-primary-800 truncate\">\n                    <th className=\"px-2 py-2 border border-gray-300 text-center\">\n                      #\n                    </th>\n                    <th className=\"px-2 py-2 border border-gray-300\">\n                      Full name\n                    </th>\n                    <th className=\"px-2 py-2 border border-gray-300\">\n                      National ID\n                    </th>\n                    <th className=\"px-2 py-2 border border-gray-300\">\n                      Teaching level\n                    </th>\n                    <th className=\"px-2 py-2 border border-gray-300\">\n                      Qualification\n                    </th>\n                    <th className=\"px-2 py-2 border border-gray-300\">\n                      Position\n                    </th>\n                    <th className=\"px-2 py-2 border border-gray-300 text-right\">\n                      Subjects taught\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {(\n                    search(\n                      this.state.trainees,\n                      this.state.search_data\n                    ) as TrainingParticipants[]\n                  ).length === 0 ? (\n                    <tr>\n                      <td\n                        colSpan={8}\n                        className=\"p-6 text-lg font-light text-center\"\n                      >\n                        <div className=\"animate__animated animate__shakeX text-center\">\n                          No result found!\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    (\n                      search(\n                        this.state.trainees,\n                        this.state.search_data\n                      ) as TrainingParticipants[]\n                    ).map((item, i) => (\n                      <tr key={i + 1} className=\"group\">\n                        <td className=\"px-2 py-2 border border-gray-300 text-center\">\n                          {i + 1}\n                        </td>\n                        <td className=\"px-2 py-2 border border-gray-300\">\n                          {item.first_name} {item.last_name}\n                        </td>\n                        <td className=\"px-2 py-2 border border-gray-300\">\n                          {item.nid}\n                        </td>\n                        <td className=\"px-2 py-2 border border-gray-300\">\n                          {item.teaching_level}\n                        </td>\n                        <td className=\"px-2 py-2 border border-gray-300\">\n                          {item.qualification_name}\n                        </td>\n                        <td className=\"px-2 py-2 border border-gray-300\">\n                          {item.position_name === undefined\n                            ? item.role\n                            : item.position_name}\n                        </td>\n                        <td className=\"px-1 py-1 border border-gray-300\">\n                          {item.subjects !== undefined &&\n                          item.subjects.length > 0 ? (\n                            <div\n                              onClick={() =>\n                                this.setState({ view_subjects: item })\n                              }\n                              className=\"bg-gray-100 px-2 py-2 rounded cursor-pointer hover:text-primary-800 text-sm w-max hover:bg-primary-100 float-right\"\n                            >\n                              View subjects (\n                              {\n                                removeDuplicateParticipantsSubjects(\n                                  item.subjects\n                                ).length\n                              }\n                              )\n                            </div>\n                          ) : (\n                            <div className=\"px-3\"></div>\n                          )}\n                          {this.state.view_subjects !== null &&\n                            this.state.view_subjects.nid === item.nid && (\n                              <div\n                                className=\"bg-white border rounded-md shadow-lg absolute right-5 animate__animated animate__zoomIn animate__faster\"\n                                style={{ zIndex: 9 }}\n                              >\n                                <div className=\"flex flex-row items-center justify-between gap-2 p-2 px-3\">\n                                  <span className=\"font-bold text-lg\">\n                                    Subjects taught\n                                  </span>\n                                  <div>\n                                    <div\n                                      onClick={() =>\n                                        this.setState({\n                                          view_subjects: null,\n                                        })\n                                      }\n                                      className=\"h-8 w-8 rounded-full bg-red-100 text-red-700 cursor-pointer hover:bg-red-200 flex items-center justify-center\"\n                                    >\n                                      <MdClose className=\"text-2xl\" />\n                                    </div>\n                                  </div>\n                                </div>\n                                {/* List */}\n                                <div className=\"p-2\">\n                                  <table className=\"w-full text-sm text-left\">\n                                    <thead>\n                                      <td className=\"px-3 py-2 border border-gray-300 font-bold\">\n                                        #\n                                      </td>\n                                      <td className=\"px-3 py-2 border border-gray-300 font-bold\">\n                                        Course code\n                                      </td>\n                                      <td className=\"px-3 py-2 border border-gray-300 font-bold\">\n                                        Course name\n                                      </td>\n                                    </thead>\n                                    <tbody>\n                                      {removeDuplicateParticipantsSubjects(\n                                        this.state.view_subjects.subjects\n                                      ).map((course, i) => (\n                                        <tr key={i + 1} className={``}>\n                                          <td className=\"px-3 py-2 border border-gray-300\">\n                                            {i + 1}\n                                          </td>\n                                          <td className=\"px-3 py-2 border border-gray-300\">\n                                            {course.course_code}\n                                          </td>\n                                          <td className=\"px-3 py-2 border border-gray-300\">\n                                            {course.course_name}\n                                          </td>\n                                        </tr>\n                                      ))}\n                                    </tbody>\n                                  </table>\n                                </div>\n                              </div>\n                            )}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TraineesList;\n","import React, { Component } from \"react\";\nimport { BiReset } from \"react-icons/bi\";\nimport { BsArrowLeft, BsArrowRight, BsCalendar2Range } from \"react-icons/bs\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { GetTrainingsToBeApprovedListInterface } from \"../../../actions/training_approval.action\";\nimport SelectCustom from \"../../../components/SelectCustom/SelectCustom\";\nimport { commaFy, DATE, search } from \"../../../utils/functions\";\n\ninterface TrainingsListProps {\n  trainings_list: GetTrainingsToBeApprovedListInterface[];\n  selected_training: GetTrainingsToBeApprovedListInterface | null;\n  onSelected: (data: GetTrainingsToBeApprovedListInterface) => void;\n  onGoBack: () => void;\n  GetTotalRequiredTrainees: (training_id: string) => number;\n  GetTotalRequiredByRequestId: (training_request_id: string) => number;\n}\ninterface TrainingsListState {\n  search_data: string;\n  loading: boolean;\n  openSelectTrainingProvider: boolean;\n  selected_training_provider_id: {\n    training_provider_id: string;\n    training_provider_name: string;\n  } | null;\n}\n\nexport class TrainingsList extends Component<\n  TrainingsListProps,\n  TrainingsListState\n> {\n  constructor(props: TrainingsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      search_data: \"\",\n      openSelectTrainingProvider: false,\n      selected_training_provider_id: null,\n    };\n  }\n  ReturnFilterTrainings = (): GetTrainingsToBeApprovedListInterface[] => {\n    var data = this.props.trainings_list;\n    if (this.state.selected_training_provider_id !== null) {\n      data = data.filter(\n        (itm) =>\n          this.state.selected_training_provider_id !== null &&\n          itm.development_partner_id.toString() ===\n            this.state.selected_training_provider_id.training_provider_id.toString()\n      );\n    }\n    return search(\n      data,\n      this.state.search_data\n    ) as GetTrainingsToBeApprovedListInterface[];\n  };\n  GetTotalRequired = () => {\n    var total: number = 0;\n    for (const item of this.props.trainings_list) {\n      total += this.props.GetTotalRequiredTrainees(item.training_id);\n    }\n    return total;\n  };\n  GetTrainingProviders = () => {\n    const response: {\n      training_provider_id: string;\n      training_provider_name: string;\n    }[] = [];\n    for (const item of this.props.trainings_list) {\n      if (\n        response.find(\n          (itm) =>\n            itm.training_provider_id.toString() ===\n            item.development_partner_id.toString()\n        ) === undefined\n      ) {\n        response.push({\n          training_provider_id: item.development_partner_id,\n          training_provider_name: item.development_partner_name,\n        });\n      }\n    }\n    return response;\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"flex flex-col lg:flex-row items-start lg:items-center gap-3 lg:justify-between px-2 py-2 pb-4\">\n          <div className=\"flex flex-row items-center gap-3 w-full\">\n            <div>\n              <div\n                onClick={this.props.onGoBack}\n                className=\"p-1 rounded-full bg-accent-400 h-12 w-12 flex items-center justify-center cursor-pointer\"\n              >\n                <BsArrowLeft className=\"text-3xl text-accent-900 animate__animated animate__zoomIn\" />\n              </div>\n            </div>\n            <div className=\"truncate\">\n              <div className=\"text-xl font-bold\">Trainings list</div>\n              <div className=\"text-gray-500\">\n                Choose or select a training from the list\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center justify-end gap-2\">\n            <div className=\"flex flex-col items-center justify-center bg-primary-100 p-2 px-3 rounded\">\n              <div className=\"truncate text-sm text-primary-700\">\n                Total required trainees\n              </div>\n              <div className=\"font-bold text-xl text-primary-700\">\n                {commaFy(this.GetTotalRequired())}\n              </div>\n            </div>\n            {/* <div className=\"flex flex-col items-center justify-center bg-gray-100 p-2 rounded\">\n              <div className=\"truncate text-sm text-gray-700\">\n                Total required\n              </div>\n              <div className=\"font-bold text-xl text-gray-700\">\n                {this.GetTotalRequired()}\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-center bg-green-50 p-1 px-3 rounded\">\n              <div className=\"truncate text-4xl text-green-600\">\n                <HiCheckCircle />\n              </div>\n              <div className=\"text-sm text-green-700 truncate\">\n                {\"Validation Done\"}\n              </div>\n            </div> */}\n          </div>\n        </div>\n        {/* Search */}\n        <div className=\"flex flex-row items-center gap-2 justify-between w-full\">\n          <div className=\"relative w-full rounded bg-primary-100 -mt-3 text-primary-700 cursor-pointer hover:bg-primary-100\">\n            <div\n              onClick={() =>\n                this.setState({\n                  openSelectTrainingProvider:\n                    !this.state.openSelectTrainingProvider,\n                })\n              }\n              className=\"flex flex-row items-center justify-between gap-2 w-full py-2 px-3\"\n            >\n              <div className=\"font-bold\">\n                {this.state.selected_training_provider_id !== null ? (\n                  this.state.selected_training_provider_id\n                    .training_provider_name\n                ) : (\n                  <span className=\"text-primary-800\">\n                    Filter by training provider\n                  </span>\n                )}\n              </div>\n              <div>\n                {this.state.openSelectTrainingProvider === false ? (\n                  <BsArrowRight className=\"text-2xl\" />\n                ) : (\n                  <FaTimes className=\"text-2xl text-yellow-700\" />\n                )}\n              </div>\n            </div>\n\n            {this.state.openSelectTrainingProvider === true && (\n              <div className=\"absolute pt-2 animate__animated animate__zoomIn animate__faster text-black\">\n                {/* <div>Select training provider</div> */}\n                <SelectCustom\n                  loading={this.state.loading}\n                  id={\"training_provider_id\"}\n                  title={\"training_provider_name\"}\n                  close={() =>\n                    this.setState({ openSelectTrainingProvider: false })\n                  }\n                  data={this.GetTrainingProviders()}\n                  click={(data: {\n                    training_provider_id: string;\n                    training_provider_name: string;\n                  }) => {\n                    this.setState({\n                      selected_training_provider_id: data,\n                      openSelectTrainingProvider: false,\n                    });\n                  }}\n                />\n              </div>\n            )}\n          </div>\n          {/* Reset */}\n          {this.state.selected_training_provider_id !== null && (\n            <div\n              title=\"Reset\"\n              className=\"py-1 px-2 border border-accent-500 text-yellow-600 h-11 bg-accent-400 rounded-md -mt-3 hover:bg-accent-500 cursor-pointer flex items-center justify-center animate__animated animate__zoomIn animate__faster\"\n              onClick={() =>\n                this.setState({ selected_training_provider_id: null })\n              }\n            >\n              <BiReset className=\"text-3xl\" />\n            </div>\n          )}\n          <div className=\"relative w-full mb-3\">\n            <div className=\"absolute px-3 py-2\">\n              <RiSearchLine className=\"text-2xl text-gray-600\" />\n            </div>\n            <input\n              type=\"search\"\n              className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 rounded border border-gray-100\"\n              placeholder=\"Search...\"\n              value={this.state.search_data}\n              onChange={(e) => this.setState({ search_data: e.target.value })}\n            />\n          </div>\n        </div>\n        {/* Trainings list */}\n        {this.props.trainings_list.length === 0 ? (\n          <div>\n            <div className=\"flex flex-col items-center justify-center bg-gray-100 rounded-md p-6\">\n              <div className=\"mb-2\">\n                <BsCalendar2Range className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n              </div>\n              <div className=\"text-xl font-bold\">No trainings available</div>\n              <div className=\"text-sm\">\n                No trainings available for the selected district to be approved\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <table className=\"w-full text-sm text-left\">\n              <thead>\n                <tr>\n                  <th className=\"px-3 py-2 border border-gray-300\">#</th>\n                  <th className=\"px-3 py-2 border border-gray-300\">\n                    Training title\n                  </th>\n                  <th className=\"px-3 py-2 border border-gray-300\">\n                    Training provider\n                  </th>\n                  <th className=\"px-3 py-2 border border-gray-300\">Topic</th>\n                  <th className=\"px-3 py-2 border border-gray-300\">\n                    Start date\n                  </th>\n                  <th className=\"px-3 py-2 border border-gray-300\">End date</th>\n                  {/* <th className=\"px-3 py-2 border border-gray-300\">Status</th> */}\n                  <th className=\"px-3 py-2 border border-gray-300\">\n                    Total required\n                  </th>\n                  {/* <th className=\"px-3 py-2 border border-gray-300\">\n                    Total provided\n                  </th> */}\n                  <th className=\"px-3 py-2 border border-gray-300\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.ReturnFilterTrainings().map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`cursor-pointer hover:bg-yellow-50 hover:text-accent-900 group`}\n                    onClick={() =>\n                      this.props.selected_training !== null &&\n                      this.props.selected_training.id === item.id\n                        ? this.props.onGoBack()\n                        : this.props.onSelected(item)\n                    }\n                  >\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {i + 1}\n                    </td>\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {item.title}\n                    </td>\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {item.development_partner_name}\n                    </td>\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {item.topic_name}\n                    </td>\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {DATE(item.start_date)}\n                    </td>\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {DATE(item.end_date)}\n                    </td>\n                    {/* <td className=\"px-3 py-2 border border-gray-300\">\n                      {item.implementation_status}\n                    </td> */}\n                    <td className=\"px-3 py-2 border border-gray-300\">\n                      {commaFy(\n                        this.props.GetTotalRequiredTrainees(\n                          item.training_id.toString()\n                        )\n                      )}\n                    </td>\n                    {/* <td className=\"px-3 py-2 border border-gray-300\">{10}</td> */}\n                    <td className=\"px-1 py-1 border border-gray-300 w-10\">\n                      {this.props.selected_training !== null &&\n                      this.props.selected_training.id === item.id ? (\n                        <div className=\"bg-white px-2 py-1 border wounded-md cursor-not-allowed rounded-md text-gray-500\">\n                          Selected\n                        </div>\n                      ) : (\n                        <div className=\"px-2 py-1 rounded bg-accent-400 text-accent-900 text-sm flex flex-row items-center justify-center gap-2 w-max float-right group-hover:bg-accent-900 group-hover:text-white font-bold\">\n                          <div>Select</div>\n                          <div>\n                            <BsArrowRight className=\"text-2xl\" />\n                          </div>\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { useEffect, useState } from \"react\";\n\ninterface ProgressBarProps {\n  value: number;\n  maxValue: number;\n  backgroundClass?: string;\n}\n\nexport function ProgressBar(props: ProgressBarProps) {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (count < props.value) {\n        setCount(\n          (count) =>\n            count +\n            (props.maxValue <= 15\n              ? 1\n              : props.maxValue <= 200\n              ? props.maxValue / 80\n              : props.maxValue / 100)\n        );\n      }\n    }, 50);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [props, count]);\n\n  const percentage = (count * 100) / props.maxValue;\n\n  return (\n    <div className=\"flex flex-row items-center gap-1 w-full\">\n      <div\n        className={`${\n          props.backgroundClass === undefined\n            ? \"bg-white\"\n            : props.backgroundClass\n        } h-4 w-full rounded-full overflow-hidden`}\n      >\n        <div\n          className={`${\n            props.value === 0\n              ? \"bg-red-600\"\n              : percentage >= 100 && props.maxValue <= props.value\n              ? \"bg-green-500\"\n              : percentage >= 50\n              ? \"bg-primary-600\"\n              : percentage >= 40\n              ? \"bg-blue-300\"\n              : percentage >= 30\n              ? \"bg-gray-400\"\n              : \"bg-accent-800\"\n          } h-full transition`}\n          style={{\n            width: `${props.value === 0 ? 1 : percentage}%`,\n            transition: \"width 0.3s\",\n          }}\n        ></div>\n      </div>\n      <div className=\"text-xs font-bold\">\n        {isNaN(percentage)\n          ? 0\n          : percentage === Infinity\n          ? \"\"\n          : percentage >= 100 && props.maxValue !== props.value\n          ? 99\n          : Math.ceil(percentage) > 100\n          ? 100\n          : Math.ceil(percentage)}\n        %\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { TrainingTraineeRequestItemInterface } from \"../TrainingTraineesRequests\";\nimport { BsCalendar3, BsCheckCircleFill } from \"react-icons/bs\";\nimport { FaLayerGroup } from \"react-icons/fa\";\nimport {\n  GetTrainingsToBeApprovedListInterface,\n  TraineeRequestsCohortsSummary,\n} from \"../../../actions/training_approval.action\";\nimport { DATE, GetDaysBetweenDates, commaFy } from \"../../../utils/functions\";\nimport { TrainingCohortItemInterface } from \"../../TrainingOffers/components/TrainingCohort\";\nimport { NoResultFound } from \"../../components/NoResult/NoResultFound\";\nimport { ProgressBar } from \"../../components/ProgressBar/ProgressBar\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { IoMdWarning } from \"react-icons/io\";\nimport { MdOutlinePendingActions } from \"react-icons/md\";\n\ninterface TrainingCohortsProps {\n  training_requests: TrainingTraineeRequestItemInterface[];\n  selectedTraining: GetTrainingsToBeApprovedListInterface;\n  selectedTrainingTotals: TraineeRequestsCohortsSummary[];\n  getTotalRequestsByCohort: (cohort_id: string) => number;\n  getTotalAssignedByCohort: (cohort_id: string) => number;\n  openSelect: boolean;\n  setSelectCohort: (cohort_id: string) => void;\n  selectedCohortId: string;\n  getTotalSchoolsCompleted: () => number;\n  getTotalSchoolsNotStarted: () => number;\n  getTotalSchoolsInProgress: () => number;\n}\ninterface TrainingCohortsState {}\n\nexport class TrainingCohorts extends Component<\n  TrainingCohortsProps,\n  TrainingCohortsState\n> {\n  constructor(props: TrainingCohortsProps) {\n    super(props);\n    this.state = {};\n  }\n  GetCohorts = () => {\n    var cohorts: TrainingCohortItemInterface[] = [];\n    if (this.props.selectedTrainingTotals.length > 0) {\n      for (const item of this.props.selectedTrainingTotals) {\n        if (\n          cohorts.find((itm) => itm.cohort_id === item.cohort_id) === undefined\n        ) {\n          cohorts = [...cohorts, ...item.cohort];\n        }\n      }\n    }\n    return cohorts;\n  };\n\n  render() {\n    return (\n      <div className=\"p-2 px-3\">\n        <div className=\"border-b pb-3 mb-2\">\n          <div className=\"font-bold text-primary-700 text-lg mb-2 flex flex-row items-center justify-between gap-2\">\n            <div>Training summary</div>\n            <div className=\"w-max px-2 rounded-full text-xs bg-accent-900 text-white\">\n              {GetDaysBetweenDates(\n                new Date(this.props.selectedTraining.start_date),\n                new Date(this.props.selectedTraining.end_date)\n              )}{\" \"}\n              days\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center justify-between\">\n            <div className=\"flex flex-row items-center gap-2\">\n              <div>\n                <BsCalendar3 className=\"text-gray-300 text-2xl\" />\n              </div>\n              <div className=\"text-sm font-bold\">\n                <div className=\"text-xs text-gray-400 font-normal\">\n                  Start date\n                </div>\n                <div>{DATE(this.props.selectedTraining.start_date)}</div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-2\">\n              <div>\n                <BsCalendar3 className=\"text-gray-300 text-2xl\" />\n              </div>\n              <div className=\"text-sm font-bold\">\n                <div className=\"text-xs text-gray-400 font-normal\">\n                  Closing date\n                </div>\n                <div>{DATE(this.props.selectedTraining.end_date)}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center justify-between gap-2 mt-3\">\n            <div className=\"flex flex-row items-center gap-2\">\n              <div>\n                <div className=\"h-7 w-7 rounded-full border border-gray-300 flex items-center justify-center\">\n                  <FaLayerGroup className=\"text-gray-300\" />\n                </div>\n              </div>\n              <div>Total cohorts</div>\n            </div>\n            <div>\n              <div className=\"w-max px-2 rounded-full text-xs bg-primary-700 text-white\">\n                {this.GetCohorts().length} cohort\n                {this.GetCohorts().length > 1 ? \"s\" : \"\"}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Cohorts list */}\n        <div className=\"pt-2\">\n          {this.GetCohorts().length === 0 ? (\n            <NoResultFound\n              title=\"Training cohorts\"\n              description=\"No cohorts available for this training\"\n            />\n          ) : (\n            this.GetCohorts().map((item, i) => (\n              <div\n                key={i + 1}\n                className={`${\n                  this.props.selectedCohortId === item.cohort_id\n                    ? \"bg-accent-200 border-accent-800 animate__animated animate__fadeIn\"\n                    : \"bg-gray-100 hover:bg-accent-200 border-gray-300 hover:border-accent-800 animate__animated animate__zoomIn\"\n                } rounded-lg p-3 px-4 cursor-pointer mb-3 border`}\n                onClick={() => this.props.setSelectCohort(item.cohort_id)}\n              >\n                <div className=\"flex flex-row items-center justify-between gap-2 w-full pb-3 mb-3 border-b border-gray-300\">\n                  <div className=\"font-bold text-sm truncate\">\n                    <div className=\"text-xs text-gray-500 font-normal\">\n                      Cohort name\n                    </div>\n                    <div>{item.cohort_name}</div>\n                  </div>\n                  <div className=\"px-2 w-max bg-primary-700 text-white text-sm rounded-lg font-bold\">\n                    {commaFy(\n                      this.props.getTotalAssignedByCohort(item.cohort_id)\n                    )}{\" \"}\n                    of{\" \"}\n                    {commaFy(\n                      this.props.getTotalRequestsByCohort(item.cohort_id)\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex flex-row items-center justify-between\">\n                  <div className=\"flex flex-row items-center gap-2\">\n                    <div>\n                      <BsCalendar3 className=\"text-gray-400 text-2xl\" />\n                    </div>\n                    <div className=\"text-sm font-bold\">\n                      <div className=\"text-xs text-gray-500 font-normal\">\n                        Start date\n                      </div>\n                      <div>{DATE(item.cohort_start_date)}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    <div>\n                      <BsCalendar3 className=\"text-gray-400 text-2xl\" />\n                    </div>\n                    <div className=\"text-sm font-bold\">\n                      <div className=\"text-xs text-gray-500 font-normal\">\n                        Closing date\n                      </div>\n                      <div>{DATE(item.cohort_end_date)}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"pt-3\">\n                  <ProgressBar\n                    value={this.props.getTotalAssignedByCohort(item.cohort_id)}\n                    maxValue={this.props.getTotalRequestsByCohort(\n                      item.cohort_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        {/* Pie chart */}\n        <div>\n          <div className=\"border border-primary-500 rounded-md py-4 pt-2\">\n            <div className=\"px-3\">\n              <div className=\"font-bold text-black text-lg\">\n                Schools & Districts\n              </div>\n              <div className=\"text-xs text-gray-500 -mt-1\">\n                Schools/Districts submissions Rate\n              </div>\n            </div>\n            <ReactApexChart\n              options={{\n                chart: {\n                  width: 380,\n                  type: \"pie\",\n                },\n                labels: [\"Ongoing\", \"Completed\", \"Not started\"],\n                responsive: [\n                  {\n                    breakpoint: 480,\n                    options: {\n                      chart: {\n                        width: 200,\n                      },\n                      legend: {\n                        position: \"bottom\",\n                      },\n                    },\n                  },\n                ],\n              }}\n              series={[\n                this.props.getTotalSchoolsInProgress(),\n                this.props.getTotalSchoolsCompleted(),\n                this.props.getTotalSchoolsNotStarted(),\n              ]}\n              type=\"pie\"\n              //   width={380}\n            />\n            <div className=\"flex flex-col items-center gap-3 px-3 mt-3\">\n              <div className=\"rounded-md border border-accent-600 bg-accent-200 p-2 w-full flex flex-row items-center gap-2\">\n                <div>\n                  <IoMdWarning className=\"text-accent-600 text-5xl\" />\n                </div>\n                <div>\n                  <div className=\"text-sm\">Total Pending</div>\n                  <div className=\"text-3xl font-bold text-accent-900\">\n                    {commaFy(this.props.getTotalSchoolsNotStarted())}\n                  </div>\n                </div>\n              </div>\n              <div className=\"rounded-md border bg-primary-100 border-primary-500 p-2 w-full flex flex-row items-center gap-2\">\n                <div>\n                  <MdOutlinePendingActions className=\"text-primary-500 text-5xl\" />\n                </div>\n                <div>\n                  <div className=\"text-sm\">In Progress</div>\n                  <div className=\"text-3xl font-bold text-primary-700\">\n                    {commaFy(this.props.getTotalSchoolsInProgress())}\n                  </div>\n                </div>\n              </div>\n              <div className=\"rounded-md border border-green-400 bg-green-50 p-2 w-full flex flex-row items-center gap-2\">\n                <div className=\"px-1 pl-2\">\n                  <BsCheckCircleFill className=\"text-green-400 text-4xl\" />\n                </div>\n                <div>\n                  <div className=\"text-sm\">Completed</div>\n                  <div className=\"text-3xl font-bold text-green-500\">\n                    {commaFy(this.props.getTotalSchoolsCompleted())}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { SelectedDistrictInterface } from \"../../TrainingTraineesRequests/TrainingTraineesRequests\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { NoResultFound } from \"../NoResult/NoResultFound\";\nimport { search } from \"../../../utils/functions\";\nimport { BsCheckCircle } from \"react-icons/bs\";\n\ninterface SelectDistrictProps {\n  districts: SelectedDistrictInterface[] | null;\n  selectedDistrict: SelectedDistrictInterface | null;\n  colSpan: number;\n  onSelectDistrict: (district: SelectedDistrictInterface) => void;\n}\ninterface SelectDistrictState {\n  searchData: string;\n}\n\nexport class SelectDistrict extends Component<\n  SelectDistrictProps,\n  SelectDistrictState\n> {\n  constructor(props: SelectDistrictProps) {\n    super(props);\n    this.state = {\n      searchData: \"\",\n    };\n  }\n  FilteredData = () => {\n    if (this.props.districts === null) {\n      return [];\n    }\n    return search(\n      this.props.districts,\n      this.state.searchData\n    ) as SelectedDistrictInterface[];\n  };\n  render() {\n    if (this.props.districts === null) {\n      return (\n        <div className=\"p-4\">\n          <div className=\"flex flex-col items-center justify-center p-4 py-8 border rounded-lg\">\n            <Loading />\n            <div className=\"text-xl text-gray-600 font-light animate__animated animate__fadeIn animate__infinite mt-2\">\n              Loading districts, please wait...\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-3 animate__animated animate__fadeIn animate__fast\">\n        <div className=\"font-bold mb-2 text-lg\">Choose District</div>\n        <div className=\"relative w-full\">\n          <div className=\"absolute px-3 py-3\">\n            <RiSearchLine className=\"text-xl text-gray-600\" />\n          </div>\n          <input\n            type=\"search\"\n            className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 h-11 rounded-md border-2 border-gray-100\"\n            placeholder=\"Search...\"\n            value={this.state.searchData}\n            onChange={(e) => this.setState({ searchData: e.target.value })}\n          />\n        </div>\n        {/* Districts */}\n        <div className=\"mt-3\">\n          {this.props.districts.length === 0 ? (\n            <div>\n              <NoResultFound\n                title=\"No districts found\"\n                description=\"No list of districts found, please try again\"\n              />\n            </div>\n          ) : this.FilteredData().length === 0 ? (\n            <NoResultFound />\n          ) : (\n            <div className=\"grid grid-cols-12 gap-3\">\n              {this.FilteredData().map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`col-span-12 md:col-span-${\n                    this.props.colSpan !== 12 ? \"6\" : \"12\"\n                  } lg:col-span-${\n                    this.props.colSpan\n                  } flex flow-row items-center justify-between gap-2 p-2 pl-4 rounded-md hover:bg-accent-400 cursor-pointer ${\n                    this.props.selectedDistrict?.district_code ===\n                    item.district_code\n                      ? \"bg-accent-400 text-accent-900 animate__animated animate__bounceIn\"\n                      : \"border hover:border-white animate__animated animate__fadeIn animate__slow\"\n                  }`}\n                  onClick={() => this.props.onSelectDistrict(item)}\n                >\n                  <div>{item.district_name}</div>\n                  {this.props.selectedDistrict?.district_code ===\n                  item.district_code ? (\n                    <div>\n                      <BsCheckCircle className=\"text-accent-900 text-xl\" />\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineUndo } from \"react-icons/ai\";\nimport { BsCheckCircleFill, BsShieldFillCheck } from \"react-icons/bs\";\nimport { FaChalkboardTeacher, FaUsers } from \"react-icons/fa\";\nimport { HiOutlineSelector } from \"react-icons/hi\";\nimport { MdOutlineGppGood } from \"react-icons/md\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, DistrictList, FC_GetDistrictList } from \"../../actions\";\nimport {\n  ApproveTrainingTraineesRequest,\n  DistrictListTrainingsListInterface,\n  GetTrainingSchoolsTotalAssigned,\n  GetTrainingsFromSelectedDistrict,\n  GetTrainingsToBeApprovedListInterface,\n  TraineeRequestsCohortsSummary,\n} from \"../../actions/training_approval.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize } from \"../../components/Modal/Modal\";\nimport { PopUpContainer } from \"../../components/PopUpContainer/PopUpContainer\";\nimport { StoreState } from \"../../reducers\";\nimport { commaFy, search } from \"../../utils/functions\";\nimport TraineesList from \"./components/TraineesList\";\nimport { TrainingsList } from \"./components/TrainingsList\";\nimport { TrainingCohorts } from \"./components/TrainingCohorts\";\nimport { IoIosArrowDown, IoIosWarning } from \"react-icons/io\";\nimport { SelectDistrict } from \"../components/SelectDistrict/SelectDistrict\";\n\nexport interface TrainingTraineeRequestItemInterface {\n  request_id: string;\n  school_code: string;\n  school_name: string;\n  total: number;\n  is_approved: 1 | 0;\n  cohort_id: string;\n}\n\nexport interface SelectedDistrictInterface {\n  district_code: string;\n  district_name: string;\n  province_code: string;\n}\n\ninterface TrainingTraineesRequestsProps {\n  basic: Basic;\n  auth: Auth;\n}\ninterface TrainingTraineesRequestsState {\n  loading: boolean;\n  selected_district: SelectedDistrictInterface | null;\n  districts_list: SelectedDistrictInterface[] | null;\n  error: string;\n  chooseTrainingProvider: boolean;\n  trainings_list: DistrictListTrainingsListInterface[] | null;\n  selected_training: GetTrainingsToBeApprovedListInterface | null;\n  selected_training_assigned_totals: TraineeRequestsCohortsSummary[] | null; // Assigned trainees\n  search_data: string;\n  selected_training_request: {\n    request_id: string;\n    school_code: string;\n    school_name: string;\n    total: number;\n    is_approved: 1 | 0;\n  } | null;\n  selected_status: 1 | 0 | null;\n  approve_training_request: {\n    request_id: string;\n    school_code: string;\n    school_name: string;\n    total: number;\n    is_approved: 1 | 0;\n  } | null;\n  success: string;\n  selectedCohortId: string;\n  openSelectDistrict: boolean;\n}\n\nclass _TrainingTraineesRequests extends Component<\n  TrainingTraineesRequestsProps,\n  TrainingTraineesRequestsState\n> {\n  constructor(props: TrainingTraineesRequestsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      districts_list: null,\n      selected_district: this.props.auth.district,\n      // this.props.auth.district !== null\n      //   ? {\n      //       district_code: this.props.auth.district.district_code,\n      //       district_name: this.props.auth.district.district_name,\n      //       province_code: this.props.auth.district.province_code,\n      //     }\n      //   : null,\n      chooseTrainingProvider: false,\n      trainings_list: null,\n      selected_training: null,\n      selected_training_assigned_totals: null,\n      search_data: \"\",\n      selected_training_request: null,\n      selected_status: null,\n      approve_training_request: null,\n      success: \"\",\n      selectedCohortId: \"\",\n      openSelectDistrict: false,\n    };\n  }\n  LoadTotalTrainingAssignedTrainees = (training_id: string) => {\n    this.setState({ loading: true });\n    GetTrainingSchoolsTotalAssigned(\n      training_id,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: TraineeRequestsCohortsSummary[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\" && res.data !== null) {\n          this.setState({\n            loading: false,\n            selected_training_assigned_totals: res.data,\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({\n            loading: false,\n            selected_training_assigned_totals: [],\n            error: res.msg,\n          });\n        }\n      }\n    );\n  };\n  GetDistrictsList = () => {\n    this.setState({ loading: true });\n    FC_GetDistrictList((status: boolean, data: DistrictList[], msg: string) => {\n      if (status === true) {\n        this.setState({\n          loading: false,\n          districts_list: data.map((item) => ({\n            district_code: item.district_code,\n            district_name: item.district_name,\n            province_code: \"\",\n          })),\n          error: \"\",\n        });\n      }\n    });\n  };\n  FC_GetTrainingsListToBeApproved = (district: SelectedDistrictInterface) => {\n    GetTrainingsFromSelectedDistrict(\n      district.district_code,\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n          data: DistrictListTrainingsListInterface[] | null;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\" && res.data !== null) {\n          this.setState({\n            trainings_list:\n              this.props.auth.stakeholder !== null\n                ? res.data.filter(\n                    (itm) =>\n                      itm.development_partner_id.toString() ===\n                      this.props.auth.stakeholder?.development_partner_id.toString()\n                  )\n                : res.data,\n            loading: false,\n            chooseTrainingProvider: true,\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({\n            trainings_list: [],\n            loading: false,\n            error: res.msg,\n          });\n        }\n      }\n    );\n  };\n  // GetTrainingsList\n  FC_GetTrainingsList = (): GetTrainingsToBeApprovedListInterface[] => {\n    if (this.state.trainings_list !== null) {\n      var response: GetTrainingsToBeApprovedListInterface[] = [];\n      for (const item of this.state.trainings_list) {\n        if (\n          response.find(\n            (itm) => itm.training_id.toString() === item.training_id.toString()\n          ) === undefined\n        ) {\n          response = [\n            ...response,\n            {\n              description: item.description,\n              development_partner_id: item.development_partner_id,\n              development_partner_name: item.development_partner_name,\n              end_date: item.end_date,\n              id: item.id,\n              implementation_status: item.implementation_status,\n              intervantion_area: item.intervantion_area,\n              intervation_id: item.intervation_id,\n              start_date: item.start_date,\n              sub_area_id: item.sub_area_id,\n              subarea_name: item.subarea_name,\n              title: item.title,\n              topic_id: item.topic_id,\n              topic_name: item.topic_name,\n              training_id: item.training_id,\n            },\n          ];\n        }\n      }\n      return response;\n    }\n    return [];\n  };\n  FC_GetTrainingSchools = (): TrainingTraineeRequestItemInterface[] => {\n    if (\n      this.state.selected_training === null ||\n      this.state.trainings_list === null\n    ) {\n      return [];\n    } else {\n      var response: TrainingTraineeRequestItemInterface[] = [];\n      if (this.state.selected_training !== null) {\n        for (const item of this.state.trainings_list.filter(\n          (itm) =>\n            this.state.selected_training !== null &&\n            itm.training_id.toString() ===\n              this.state.selected_training.training_id.toString()\n        )) {\n          response.push({\n            request_id: item.id.toString(),\n            school_code:\n              item.school_code === null ? \"\" : item.school_code.toString(),\n            school_name: item.school_name === null ? \"\" : item.school_name,\n            total: item.total === null ? 0 : item.total,\n            is_approved: item.is_approved,\n            cohort_id: item.cohort_id,\n          });\n        }\n      }\n      if (this.state.selectedCohortId !== \"\") {\n        return response.filter(\n          (itm) => itm.cohort_id === this.state.selectedCohortId\n        );\n      }\n      return response;\n    }\n  };\n  // Total trainees requested\n  GetTotalRequiredTrainees = (): number => {\n    var total: number = 0;\n    for (const item of this.FC_GetTrainingSchools()) {\n      total += item.total;\n    }\n    return total;\n  };\n\n  // Total trainees requested by request id\n  GetTotalRequiredByRequestId = (training_request_id: string): number => {\n    var total: number = 0;\n    for (const item of this.FC_GetTrainingSchools().filter(\n      (itm) => itm.request_id.toString() === training_request_id.toString()\n    )) {\n      total += item.total;\n    }\n    return total;\n  };\n\n  // List of schools\n  GetTotalSchools = (): number => {\n    return this.FC_GetTrainingSchools().filter(\n      (itm) => itm.school_code.length > 0\n    ).length;\n  };\n\n  // List of districts\n  GetTotalDistricts = (): number => {\n    return this.FC_GetTrainingSchools().filter(\n      (itm) => itm.school_code.length === 0\n    ).length;\n  };\n\n  // Total assigned trainees by request id\n  GetTotalAssignedByRequestId = (request_id: string): number => {\n    if (this.state.selected_training_assigned_totals !== null) {\n      const test = this.state.selected_training_assigned_totals.find(\n        (itm) => itm.trainee_request_id.toString() === request_id.toString()\n      );\n      if (test !== undefined) {\n        return test.total;\n      }\n    }\n    return 0;\n  };\n\n  // Get total assigned trainees\n  GetTotalAssignedTrainees = () => {\n    var total = 0;\n    for (const item of (\n      this.state.selected_training_assigned_totals ?? []\n    ).filter((itm) =>\n      this.FC_GetTrainingSchools().find(\n        (test) =>\n          test.request_id.toString() === itm.trainee_request_id.toString()\n      )\n    )) {\n      total += item.total;\n    }\n    return total;\n  };\n\n  // Get total schools & districts completed\n  getTotalSchoolsCompleted = (): number => {\n    var response: number = 0;\n    for (const item of this.FC_GetTrainingSchools()) {\n      if (\n        this.GetTotalRequiredByRequestId(item.request_id) ===\n        this.GetTotalAssignedByRequestId(item.request_id)\n      ) {\n        response += 1;\n      }\n    }\n    return response;\n  };\n  getTotalSchoolsNotStarted = (): number => {\n    var response: number = 0;\n    for (const item of this.FC_GetTrainingSchools()) {\n      if (this.GetTotalAssignedByRequestId(item.request_id) === 0) {\n        response += 1;\n      }\n    }\n    return response;\n  };\n  getTotalSchoolsInProgress = (): number => {\n    var response: number = 0;\n    for (const item of this.FC_GetTrainingSchools()) {\n      if (\n        this.GetTotalAssignedByRequestId(item.request_id) > 0 &&\n        this.GetTotalRequiredByRequestId(item.request_id) >\n          this.GetTotalAssignedByRequestId(item.request_id)\n      ) {\n        response += 1;\n      }\n    }\n    return response;\n  };\n\n  FC_ApproveTrainingRequest = (training_request: {\n    request_id: string;\n    school_code: string;\n    school_name: string;\n    total: number;\n    is_approved: 1 | 0;\n  }) => {\n    this.setState({ approve_training_request: null, loading: true });\n    ApproveTrainingTraineesRequest(\n      {\n        is_approved: training_request.is_approved === 1 ? true : false,\n        training_request_id: training_request.request_id,\n      },\n      (\n        loading: boolean,\n        res: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (res !== null && res.type === \"success\") {\n          if (this.state.trainings_list !== null) {\n            var response: DistrictListTrainingsListInterface[] = [];\n            for (const item of this.state.trainings_list) {\n              if (\n                item.id.toString() === training_request.request_id.toString()\n              ) {\n                response.push({\n                  description: item.description,\n                  development_partner_id: item.development_partner_id,\n                  development_partner_name: item.development_partner_name,\n                  end_date: item.end_date,\n                  id: item.id,\n                  implementation_status: item.implementation_status,\n                  intervantion_area: item.intervantion_area,\n                  intervation_id: item.intervation_id,\n                  is_approved: item.is_approved === 1 ? 0 : 1,\n                  school_code: item.school_code,\n                  school_name: item.school_name,\n                  start_date: item.start_date,\n                  sub_area_id: item.sub_area_id,\n                  subarea_name: item.subarea_name,\n                  title: item.title,\n                  topic_id: item.topic_id,\n                  topic_name: item.topic_name,\n                  total: item.total,\n                  training_id: item.training_id,\n                  cohort_id: item.cohort_id,\n                });\n              } else {\n                response.push(item);\n              }\n            }\n            this.setState({\n              selected_status:\n                response.filter((itm) => itm.is_approved === 0).length === 0\n                  ? 1\n                  : 0,\n              trainings_list: response,\n            });\n          }\n          this.setState({\n            success: res.msg,\n            error: \"\",\n            loading: false,\n          });\n        }\n        if (res !== null && res.type === \"error\") {\n          this.setState({ success: \"\", error: res.msg, loading: false });\n        }\n      }\n    );\n  };\n\n  // Get total requests by cohort\n  getTotalRequestsByCohort = (cohort_id: string) => {\n    //correct here!!!!\n\n    var total: number = 0;\n    if (this.state.selected_training_assigned_totals !== null) {\n      for (const item of this.FC_GetTrainingSchools().filter(\n        (itm) => itm.cohort_id.toString() === cohort_id.toString()\n      )) {\n        total += item.total;\n      }\n    }\n    return total;\n  };\n\n  getTotalAssignedByCohort = (cohort_id: string) => {\n    var total: number = 0;\n    if (this.state.selected_training_assigned_totals !== null) {\n      for (const item of this.state.selected_training_assigned_totals.filter(\n        (itm) => itm.cohort_id.toString() === cohort_id.toString()\n      )) {\n        total += this.GetTotalRequiredByRequestId(item.trainee_request_id);\n      }\n    }\n    return total;\n  };\n\n  componentDidMount(): void {\n    // if (this.state.selected_district === null || this.props.auth.district === null) {\n    //   Loading all districts list\n    this.GetDistrictsList();\n    // }\n    if (this.state.selected_district === null) {\n      this.setState({ openSelectDistrict: true });\n    }\n    if (\n      this.state.trainings_list === null &&\n      this.state.selected_district !== null\n    ) {\n      this.FC_GetTrainingsListToBeApproved(this.state.selected_district);\n    }\n  }\n  render() {\n    if (\n      this.state.openSelectDistrict === true ||\n      (this.state.trainings_list !== null &&\n        this.state.trainings_list.length === 0)\n    ) {\n      return (\n        <div className=\"container mx-auto p-3 relative h-full\">\n          <div className=\"h-full w-full bg-white rounded-md\">\n            <SelectDistrict\n              districts={this.state.districts_list}\n              selectedDistrict={this.state.selected_district}\n              colSpan={3}\n              onSelectDistrict={(district: SelectedDistrictInterface) => {\n                this.setState({\n                  selected_district: district,\n                  openSelectDistrict: false,\n                });\n                this.FC_GetTrainingsListToBeApproved(district);\n              }}\n            />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"container mx-auto p-3 relative h-full\">\n        <div>\n          <div className=\"bg-white rounded p-2\">\n            <div className=\"flex flex-col lg:flex-row lg:justify-between gap-2 w-full\">\n              <div className=\"flex flex-row items-center gap-2 w-full lg:w-1/2\">\n                <div>\n                  <div className=\"h-14 w-14 rounded-md bg-accent-400 text-accent-900 flex items-center justify-center\">\n                    <MdOutlineGppGood className=\"text-5xl\" />\n                  </div>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-xl font-bold\">\n                    Training participants\n                  </span>\n                  <span className=\"text-sm text-gray-500\">\n                    View list of selected participants for the training\n                  </span>\n                </div>\n              </div>\n              {/* Select DP */}\n              <div className=\"w-full lg:w-1/2\">\n                <div\n                  onClick={() =>\n                    this.state.loading === false &&\n                    this.setState({\n                      chooseTrainingProvider:\n                        !this.state.chooseTrainingProvider,\n                      selectedCohortId: \"\",\n                    })\n                  }\n                  className={`${\n                    this.state.selected_training !== null\n                      ? \"bg-accent-400 border-accent-500\"\n                      : \"bg-gray-100 border-white\"\n                  } hover:bg-accent-400 border  hover:border-accent-500 w-full pl-3 py-1 pr-1 rounded flex flex-row items-center justify-between gap-20 group cursor-pointer animate__animated animate__fadeIn`}\n                >\n                  {this.state.selected_training !== null ? (\n                    <div className=\"flex flex-row items-center gap-2\">\n                      {/* <div>\n                        <BsCheckCircleFill className=\"text-3xl\" />\n                      </div> */}\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-black text-sm\">\n                          Selected training\n                        </span>\n                        <div className=\"font-bold text-yellow-700\">\n                          {this.state.selected_training.title}\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-lg font-normal pl-2 text-gray-500\">\n                      No training selected!\n                    </div>\n                  )}\n                  <div className=\"\">\n                    <div className=\"bg-white group-hover:bg-accent-900 group-hover:text-white rounded p-1 flex items-center justify-center\">\n                      <HiOutlineSelector className=\"text-4xl text-accent-900 group-hover:text-white\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Body */}\n        <div className=\"h-full\">\n          {/* Error here */}\n          {this.state.error !== \"\" && (\n            <div\n              onClick={() => this.setState({ error: \"\", success: \"\" })}\n              className=\"bg-red-50 text-red-700 font-bold px-3 py-2 my-3\"\n            >\n              <div>Error occurred!</div>\n              <div className=\"font-normal\">{this.state.error}</div>\n            </div>\n          )}\n          {/* Success */}\n          {this.state.success !== \"\" && (\n            <div\n              onClick={() => this.setState({ success: \"\", error: \"\" })}\n              className=\"bg-green-50 text-green-700 font-bold px-3 py-2 my-3 animate__animated animate__zoomIn rounded-md border-2 border-white\"\n            >\n              <div>Action succeeded!</div>\n              <div className=\"font-normal\">{this.state.success}</div>\n            </div>\n          )}\n          {/* Filter and search training */}\n          {this.state.loading === false ? (\n            this.state.selected_training === null ? (\n              <div>\n                {this.state.selected_district !== null &&\n                this.state.trainings_list !== null &&\n                this.state.trainings_list.length > 0 ? (\n                  <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6 mt-3\">\n                    <div className=\"mb-2\">\n                      <FaChalkboardTeacher className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n                    </div>\n                    <div className=\"text-xl font-bold\">Select training</div>\n                    <div className=\"text-sm\">\n                      No training selected, click to select training\n                    </div>\n                    <Button\n                      onClick={() =>\n                        this.state.loading === false &&\n                        this.setState({\n                          chooseTrainingProvider:\n                            !this.state.chooseTrainingProvider,\n                        })\n                      }\n                      className=\"mt-3\"\n                    >\n                      Select training\n                    </Button>\n                  </div>\n                ) : (\n                  <div className=\"flex flex-col items-center justify-center bg-white rounded-md p-6 mt-3\">\n                    <div className=\"mb-2\">\n                      <FaChalkboardTeacher className=\"text-6xl text-gray-300 animate__animated animate__shakeX\" />\n                    </div>\n                    <div className=\"text-xl font-bold\">\n                      No district selected\n                    </div>\n                    <div className=\"text-sm\">\n                      Please click the following district to view trainings\n                      available\n                    </div>\n                    <Button\n                      onClick={() =>\n                        this.state.loading === false &&\n                        this.setState({\n                          openSelectDistrict: true,\n                        })\n                      }\n                      className=\"mt-3\"\n                    >\n                      Select district\n                    </Button>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-12 gap-3\">\n                <div className=\"col-span-12 md:col-span-8\">\n                  <div className=\"bg-white rounded my-2 p-2 h-full animate__animated animate__fadeIn\">\n                    <div className=\"mb-3 flex flex-col lg:flex-row items-center justify-between gap-2\">\n                      <div className=\"flex flex-row items-center justify-start gap-2 h-full w-full\">\n                        <div className=\"rounded-md bg-white p-4 py-1 flex flex-row justify-center items-center gap-2 border border-gray-300\">\n                          <div className=\"pr-4\">\n                            <div className=\"text-sm text-gray-500\">\n                              Districts\n                            </div>\n                            <div className=\"font-bold text-xl\">\n                              {commaFy(this.GetTotalDistricts())}\n                            </div>\n                          </div>\n                          <div className=\"pr-4\">\n                            <div className=\"text-sm text-gray-500\">Schools</div>\n                            <div className=\"font-bold text-xl\">\n                              {commaFy(this.GetTotalSchools())}\n                            </div>\n                          </div>\n                          <div className=\"\">\n                            <div className=\"text-sm text-gray-500\">\n                              Trainees\n                            </div>\n                            <div className=\"font-bold text-xl\">\n                              {commaFy(this.GetTotalRequiredTrainees())}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                        <div\n                          className=\"rounded-md bg-green-50 text-green-700 p-1 px-5 flex flex-col justify-center border border-green-300\"\n                          style={{ borderColor: \"#afd9cc\" }}\n                        >\n                          <div className=\"text-sm\">Assigned trainees</div>\n                          <div className=\"font-bold text-xl\">\n                            {commaFy(this.GetTotalAssignedTrainees())}\n                          </div>\n                        </div>\n                        <div className=\"rounded-md bg-red-50 text-red-700 p-1 px-5 flex flex-col justify-center border border-red-300\">\n                          <div className=\"text-sm\">Not assigned trainees</div>\n                          <div className=\"font-bold text-xl\">\n                            {commaFy(\n                              this.GetTotalRequiredTrainees() -\n                                this.GetTotalAssignedTrainees()\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Search data */}\n                    <div className=\"flex flex-row items-center gap-2 w-full mb-3\">\n                      <div className=\"relative w-1/3\">\n                        <div\n                          onClick={() =>\n                            this.props.auth.district === null &&\n                            this.setState({ openSelectDistrict: true })\n                          }\n                          className=\"w-full flex items-center justify-between gap-2 p-2 font-bold rounded-md bg-white border border-accent-600 hover:bg-accent-200 cursor-pointer\"\n                        >\n                          <div className=\"truncate\">\n                            {this.state.selected_district !== null ? (\n                              `${this.state.selected_district.district_code} - ${this.state.selected_district.district_name}`\n                            ) : (\n                              <span className=\"italic font-light\">\n                                Click to choose district\n                              </span>\n                            )}\n                          </div>\n                          <div>\n                            <IoIosArrowDown className=\"text-gray-400\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"relative w-2/3\">\n                        <div className=\"absolute px-3 py-3\">\n                          <RiSearchLine className=\"text-xl text-gray-600\" />\n                        </div>\n                        <input\n                          type=\"search\"\n                          className=\"font-normal bg-gray-100 w-full px-3 pl-12 py-2 h-11 rounded-md border-2 border-gray-100\"\n                          placeholder=\"Search...\"\n                          value={this.state.search_data}\n                          onChange={(e) =>\n                            this.setState({ search_data: e.target.value })\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"text-xl font-light\">\n                      <table className=\"w-full text-left text-sm\">\n                        <thead>\n                          <tr className=\"border-b border-gray-300\">\n                            <th className=\"px-3 py-3 border border-gray-300\">\n                              #\n                            </th>\n                            <th className=\"px-3 py-3 border border-gray-300\">\n                              School/District code\n                            </th>\n                            <th className=\"px-3 py-3 border border-gray-300\">\n                              School/District name\n                            </th>\n                            <th className=\"px-3 py-3 border border-gray-300\">\n                              Requests\n                            </th>\n                            <th className=\"px-3 py-3 border border-gray-300\">\n                              Assigned\n                            </th>\n                            <th className=\"px-3 py-3 border border-gray-300\">\n                              Remaining\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {(\n                            search(\n                              this.FC_GetTrainingSchools().filter(\n                                (itm) =>\n                                  this.state.selected_status === null ||\n                                  itm.is_approved === this.state.selected_status\n                              ),\n                              this.state.search_data\n                            ) as {\n                              request_id: string;\n                              school_code: string;\n                              school_name: string;\n                              total: number;\n                            }[]\n                          ).length === 0 ? (\n                            <tr>\n                              <td\n                                colSpan={6}\n                                className=\"py-3 text-center text-xl font-light\"\n                              >\n                                No result found!\n                              </td>\n                            </tr>\n                          ) : (\n                            (\n                              search(\n                                this.FC_GetTrainingSchools().filter(\n                                  (itm) =>\n                                    this.state.selected_status === null ||\n                                    itm.is_approved ===\n                                      this.state.selected_status\n                                ),\n                                this.state.search_data\n                              ) as {\n                                request_id: string;\n                                school_code: string;\n                                school_name: string;\n                                total: number;\n                                is_approved: 1 | 0;\n                              }[]\n                            ).map((item, i) => (\n                              <tr\n                                onClick={() =>\n                                  this.setState({\n                                    selected_training_request: item,\n                                  })\n                                }\n                                key={i + 1}\n                                className={`${\n                                  this.GetTotalAssignedByRequestId(\n                                    item.request_id\n                                  ) === 0 && this.GetTotalAssignedTrainees() > 0\n                                    ? \"text-yellow-700 font-bold bg-accent-200\"\n                                    : \"hover:bg-primary-50 hover:text-primary-800\"\n                                } cursor-pointer`}\n                                title=\"Click to view participants\"\n                              >\n                                <td className=\"px-3 py-2 border border-gray-300\">\n                                  {i + 1}\n                                </td>\n                                <td className=\"px-3 py-2 border border-gray-300\">\n                                  {item.school_code === \"\"\n                                    ? this.state.selected_district\n                                        ?.district_code\n                                    : item.school_code}\n                                </td>\n                                <td className=\"px-3 py-2 border border-gray-300\">\n                                  {item.school_name === \"\"\n                                    ? this.state.selected_district\n                                        ?.district_name\n                                    : item.school_name}\n                                </td>\n                                <td className=\"px-3 py-2 border border-gray-300 text-center\">\n                                  {commaFy(\n                                    this.GetTotalRequiredByRequestId(\n                                      item.request_id\n                                    )\n                                  )}\n                                </td>\n                                <td className=\"px-3 py-2 border border-gray-300 text-center\">\n                                  {commaFy(\n                                    this.GetTotalAssignedByRequestId(\n                                      item.request_id\n                                    )\n                                  )}\n                                </td>\n                                <td className=\"px-3 py-2 border border-gray-300 w-10 font-bold\">\n                                  <div className=\"flex flex-row items-center justify-center gap-2\">\n                                    {this.GetTotalAssignedByRequestId(\n                                      item.request_id\n                                    ) === 0 ? (\n                                      <div\n                                        title=\"No any participant assigned\"\n                                        className=\"animate__animated animate__fadeIn animate__slower animate__infinite\"\n                                      >\n                                        <IoIosWarning className=\"text-2xl text-yellow-600\" />\n                                      </div>\n                                    ) : this.GetTotalRequiredByRequestId(\n                                        item.request_id\n                                      ) -\n                                        this.GetTotalAssignedByRequestId(\n                                          item.request_id\n                                        ) >\n                                      0 ? (\n                                      <div>\n                                        {commaFy(\n                                          this.GetTotalRequiredByRequestId(\n                                            item.request_id\n                                          ) -\n                                            this.GetTotalAssignedByRequestId(\n                                              item.request_id\n                                            )\n                                        )}\n                                      </div>\n                                    ) : (\n                                      <div>\n                                        <BsCheckCircleFill className=\"text-xl text-green-600\" />\n                                      </div>\n                                    )}\n                                  </div>\n                                </td>\n                              </tr>\n                            ))\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-span-12 md:col-span-4\">\n                  {/* Right side for cohorts */}\n                  <div className=\"bg-white rounded my-2 p-2 h-full animate__animated animate__fadeIn\">\n                    {this.state.selected_training_assigned_totals !== null && (\n                      <TrainingCohorts\n                        training_requests={this.FC_GetTrainingSchools()}\n                        selectedTraining={this.state.selected_training}\n                        selectedTrainingTotals={\n                          this.state.selected_training_assigned_totals\n                        }\n                        getTotalRequestsByCohort={this.getTotalRequestsByCohort}\n                        getTotalAssignedByCohort={this.getTotalAssignedByCohort}\n                        openSelect={this.state.chooseTrainingProvider}\n                        setSelectCohort={(cohort_id: string) =>\n                          this.setState({\n                            selectedCohortId:\n                              cohort_id === this.state.selectedCohortId\n                                ? \"\"\n                                : cohort_id,\n                          })\n                        }\n                        selectedCohortId={this.state.selectedCohortId}\n                        getTotalSchoolsCompleted={this.getTotalSchoolsCompleted}\n                        getTotalSchoolsNotStarted={\n                          this.getTotalSchoolsNotStarted\n                        }\n                        getTotalSchoolsInProgress={\n                          this.getTotalSchoolsInProgress\n                        }\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            )\n          ) : (\n            <div className=\"flex flex-col items-center justify-center p-6 bg-white rounded my-4\">\n              <Loading />\n              <div className=\"text-center font-light text-lg\">\n                Loading, please wait...\n              </div>\n            </div>\n          )}\n        </div>\n        {this.state.chooseTrainingProvider === true &&\n          this.state.trainings_list !== null && (\n            <PopUpContainer className=\"p-3 px-4\">\n              <TrainingsList\n                onGoBack={() =>\n                  this.setState({ chooseTrainingProvider: false })\n                }\n                trainings_list={this.FC_GetTrainingsList()}\n                selected_training={this.state.selected_training}\n                onSelected={(data: GetTrainingsToBeApprovedListInterface) => {\n                  this.setState({\n                    chooseTrainingProvider: false,\n                    selected_training: data,\n                  });\n                  this.LoadTotalTrainingAssignedTrainees(data.training_id);\n                }}\n                GetTotalRequiredTrainees={this.GetTotalRequiredTrainees}\n                GetTotalRequiredByRequestId={this.GetTotalRequiredByRequestId}\n              />\n            </PopUpContainer>\n          )}\n        {this.state.selected_training !== null &&\n          this.state.selected_training_request !== null && (\n            <PopUpContainer className=\"p-3 px-4\">\n              <TraineesList\n                selected_district_code={\n                  this.props.auth.district === null\n                    ? null\n                    : this.props.auth.district\n                }\n                training_id={this.state.selected_training.training_id}\n                selected_training_request={this.state.selected_training_request}\n                onGoBack={() =>\n                  this.setState({ selected_training_request: null })\n                }\n                GetTotalRequiredByRequestId={this.GetTotalRequiredByRequestId}\n                onSubmitApproval={(training_request_id: string) => {\n                  this.state.selected_training_request !== null &&\n                    this.setState({\n                      approve_training_request: {\n                        is_approved: 1,\n                        request_id:\n                          this.state.selected_training_request.request_id,\n                        school_code:\n                          this.state.selected_training_request.school_code,\n                        school_name:\n                          this.state.selected_training_request.school_name,\n                        total: this.state.selected_training_request.total,\n                      },\n                      selected_training_request: null,\n                    });\n                }}\n              />\n            </PopUpContainer>\n          )}\n\n        {this.state.approve_training_request !== null && (\n          <Modal\n            backDrop={true}\n            close={() => this.setState({ approve_training_request: null })}\n            backDropClose={true}\n            displayClose={false}\n            widthSizeClass={ModalSize.large}\n            padding={{\n              title: undefined,\n              body: true,\n              footer: undefined,\n            }}\n          >\n            <div>\n              <div\n                className={`text-2xl font-bold pb-3 mb-3 ${\n                  this.state.approve_training_request.is_approved === 1\n                    ? \"text-green-700\"\n                    : \"text-accent-900\"\n                } flex flex-row items-center gap-3`}\n              >\n                <div>\n                  {this.state.approve_training_request.is_approved === 1 ? (\n                    <BsShieldFillCheck className=\"text-3xl\" />\n                  ) : (\n                    <AiOutlineUndo className=\"text-3xl\" />\n                  )}\n                </div>\n                <span>\n                  {this.state.approve_training_request.is_approved === 1\n                    ? \"Training trainees approval\"\n                    : \"Undo training approval\"}\n                </span>\n              </div>\n              <div className=\"\">\n                <div>School/District name</div>\n                <div className=\"font-bold text-lg\">\n                  {this.state.approve_training_request.school_code} -{\" \"}\n                  {this.state.approve_training_request.school_name}\n                </div>\n              </div>\n              <div className=\"rounded-md my-3 flex flex-row items-center justify-between gap-3\">\n                <div className=\"rounded-md p-1 flex flex-row items-center gap-3 border border-accent-600 w-full bg-accent-40 animate__animated animate__fadeIn\">\n                  <div>\n                    <div className=\"h-14 w-14 rounded-md bg-accent-400 flex items-center justify-center text-accent-900\">\n                      <FaUsers className=\"text-4xl\" />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col \">\n                    <span className=\"\">Total required trainees</span>\n                    <span className=\"font-bold text-2xl text-accent-900\">\n                      {commaFy(this.state.approve_training_request.total)}\n                    </span>\n                  </div>\n                </div>\n                <div\n                  className=\"rounded-md p-1 flex flex-row items-center gap-3 border w-full bg-accent-40 group animate__animated animate__fadeIn\"\n                  style={{ borderColor: \"#afd9cc\" }}\n                >\n                  <div>\n                    <div className=\"h-14 w-14 rounded-md bg-green-100 flex items-center justify-center text-green-600\">\n                      <FaChalkboardTeacher className=\"text-4xl\" />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col w-full\">\n                    <span className=\"\">Total Assigned trainees</span>\n                    <div className=\"flex flex-row items-center justify-between gap-2 w-full\">\n                      <span className=\"font-bold text-2xl text-green-600\">\n                        {commaFy(\n                          this.GetTotalAssignedByRequestId(\n                            this.state.approve_training_request.request_id\n                          )\n                        )}\n                      </span>\n                      <div\n                        onClick={() => {\n                          this.state.approve_training_request !== null &&\n                            this.setState({\n                              selected_training_request: {\n                                is_approved:\n                                  this.state.approve_training_request\n                                    .is_approved === 1\n                                    ? 0\n                                    : 1,\n                                request_id:\n                                  this.state.approve_training_request\n                                    .request_id,\n                                school_code:\n                                  this.state.approve_training_request\n                                    .school_code,\n                                school_name:\n                                  this.state.approve_training_request\n                                    .school_name,\n                                total:\n                                  this.state.approve_training_request.total,\n                              },\n                              approve_training_request: null,\n                            });\n                        }}\n                        className=\"cursor-pointer px-2 py-1 rounded text-sm bg-gray-100 font-bold w-max float-right group-hover:bg-accent-400 group-hover:text-accent-900\"\n                      >\n                        View trainees\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-light\">\n                <div>Are you sure do you want to confirm?</div>\n              </div>\n              <div className=\"flex flex-row items-center justify-end gap-2\">\n                <Button\n                  onClick={() =>\n                    this.setState({ approve_training_request: null })\n                  }\n                  theme=\"default\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => {\n                    this.state.approve_training_request !== null &&\n                      this.FC_ApproveTrainingRequest(\n                        this.state.approve_training_request\n                      );\n                  }}\n                  theme={\n                    this.state.approve_training_request.is_approved === 1\n                      ? \"success\"\n                      : \"accent\"\n                  }\n                  className=\"animate__animated animate__zoomIn\"\n                >\n                  {this.state.approve_training_request.is_approved === 1\n                    ? \"Approve training trainees\"\n                    : \"Undo training approval\"}\n                </Button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  basic,\n  auth,\n}: StoreState): { basic: Basic; auth: Auth } => {\n  return { basic: basic, auth: auth };\n};\n\nexport const TrainingTraineesRequests = connect(\n  mapStateToProps,\n  {}\n)(_TrainingTraineesRequests);\n"],"sourceRoot":""}