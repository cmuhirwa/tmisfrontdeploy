{"version":3,"sources":["containers/ApproveNewVacantTobeFilled/DashboardCard.tsx","containers/ApproveNewVacantTobeFilled/SelectSchoolVacant.tsx","containers/ApproveNewVacantTobeFilled/ApproveNewVacantTobeFilled.tsx"],"names":["DashboardCard","data","DashboardContainer","className","map","el","qualification_name","APPROVED","WAITING","REJECTED","TOTAL","_SelectSchoolVacant","props","cleanError","setState","error","target","msg","addNewItem","state","selectItem","id","submit_status_loading","selected_posts","find","filter","submitSelected","status_send","console","log","FC_ApproveReject","school_need_post_id","status","itm","loading_assets","create_request","assets","loading_data","loading_hierarchy","delete_loading","deleting_item","this","school_code","school","FC_GetVacantDetailedBySchool","data_vac","totalA0","length","totalA1","totalA2","Alert","theme","fixed","onClick","Button","close","Heading","size","school_name","loading","bind","colSpan","Loading","i","FoundItem","occupation","position_name","specialization_name","total_period","teaching_level","React","Component","SelectSchoolVacant","connect","auth","defaultError","_ApproveNewVacantTobeFilled","loadApp","district","loading_schools","FC_GetDIstrictRequestsVacant","district_code","err","total_needed","total_checked","clearError","setTimeout","changeTab","tab","selected_tab","selected_school","search","data_list","Results","TotalRejected","TotalAccepted","TotalAll","totalSubmitted","totalNonSubmitted","totalSchools","window","scroll","TextInput","onChange","e","value","label","placeholder","name","scrollTo","ApproveNewVacantTobeFilled"],"mappings":"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","file":"static/js/58.05269b6e.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { DistrictToTalCount } from \"../../actions\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\n\ntype DashboardCardProps = {\n  data: DistrictToTalCount[];\n};\n\nconst DashboardCard: FC<DashboardCardProps> = ({ data }): ReactElement => {\n  return (\n    <DashboardContainer className=\"bg-blue-dark\">\n      <div className=\"p-2 flex flex-col lg:flex-row gap-3 text-center\">\n        {data.map((el) => (\n          <div className=\"flex w-full p-2 border rounded border-opacity-40 border-blue-200 \">\n            <div className=\"flex-1\">\n              <h3 className=\"text-blue-200 text-lg font-bold\">\n                {el.qualification_name}\n              </h3>\n              <div className=\"flex gap-2\">\n                <div className=\"p-0.5 bg-green-800 bg-opacity-20 px-2 rounded flex-1 border-green-400 border border-opacity-40\">\n                  <label className=\"text-sm text-green-400\">Approved</label>\n                  <h1 className=\"text-white text-xl -mt-1 font-bold \">\n                    {el.APPROVED}\n                  </h1>\n                </div>\n                <div className=\"p-0.5 bg-yellow-800 bg-opacity-20 px-2 rounded flex-1 border-yellow-400 border border-opacity-40\">\n                  <label className=\"text-sm text-yellow-400\">Waiting</label>\n                  <h1 className=\"text-white text-xl -mt-1 font-bold \">\n                    {el.WAITING}\n                  </h1>\n                </div>\n                <div className=\"p-0.5 bg-red-800 bg-opacity-20 px-2 rounded flex-1 border-red-400 border border-opacity-40\">\n                  <label className=\"text-sm text-red-400\">Rejected</label>\n                  <h1 className=\"text-white text-xl -mt-1 font-bold \">\n                    {el.REJECTED}\n                  </h1>\n                </div>\n                <div className=\"p-0.5 bg-blue-800 bg-opacity-20 px-2 rounded flex-1 border-blue-400 border border-opacity-40\">\n                  <label className=\"text-sm text-blue-400\">Total</label>\n                  <h1 className=\"text-white text-xl -mt-1 font-bold \">\n                    {el.TOTAL}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </DashboardContainer>\n  );\n};\nexport default DashboardCard;\n","import React from \"react\";\nimport {\n  MdBrightness1,\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictRequests_Interface,\n  FC_ApproveReject,\n  FC_GetVacantDetailedBySchool,\n  RegisterPositionAssets,\n  RequestedVacantDetailsInterface,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\n// import AddNewRequest from \"./AddNewRequest\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  school: DistrictRequests_Interface | null;\n  close: () => void;\n}\n\ninterface AppState {\n  loading_assets: boolean;\n  loading_data: boolean;\n  create_request: boolean;\n  assets: RegisterPositionAssets | null;\n  error: {\n    target: \"main-error\" | \"main-success\" | null;\n    msg: string;\n  };\n  data: RequestedVacantDetailsInterface[];\n  //   hierarchy_data: hierarchyDataInterface[];\n  loading_hierarchy: boolean;\n  delete_loading: boolean;\n  deleting_item: string;\n  selected_posts: string[];\n  submit_status_loading: boolean;\n}\n\nclass _SelectSchoolVacant extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_assets: false,\n      create_request: false,\n      assets: null,\n      data: [],\n      loading_data: false,\n      loading_hierarchy: false,\n      delete_loading: false,\n      deleting_item: \"\",\n      selected_posts: [],\n      submit_status_loading: false,\n    };\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      //   loading_assets: true,\n      loading_data: true,\n      loading_hierarchy: true,\n    });\n\n    console.log({ school_code: this.props.school?.school_code });\n\n    // get the request\n    FC_GetVacantDetailedBySchool(\n      this.props.school?.school_code + \"\",\n      (status, data_vac, msg) => {\n        if (status === true) {\n          this.setState({\n            data: data_vac,\n            loading_data: false,\n          });\n        } else {\n          this.setState({\n            data: [],\n            loading_data: false,\n            error: {\n              target: \"main-error\",\n              msg: `Error: ${msg}`,\n            },\n          });\n        }\n      }\n    );\n  }\n\n  cleanError = () =>\n    this.setState({\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n\n  addNewItem = (data: RequestedVacantDetailsInterface) =>\n    this.setState({\n      data: [...this.state.data, data],\n    });\n\n  selectItem = (id: string) => {\n    if (this.state.submit_status_loading === true) return;\n\n    let exist = this.state.selected_posts.find((el) => el === id);\n    if (exist) {\n      this.setState({\n        selected_posts: this.state.selected_posts.filter((el) => el !== id),\n      });\n    } else {\n      this.setState({\n        selected_posts: [...this.state.selected_posts, id],\n      });\n    }\n  };\n\n  submitSelected = (status_send: \"WAITING\" | \"APPROVED\" | \"REJECTED\") => {\n    console.log(\"Yes we are submitting\");\n    this.setState({\n      submit_status_loading: true,\n    });\n\n    FC_ApproveReject(\n      {\n        school_need_post_id: this.state.selected_posts,\n        status: status_send,\n      },\n      (status, data, msg) => {\n        if (status === true) {\n          this.setState({\n            submit_status_loading: false,\n            data: this.state.data.map((el) =>\n              this.state.selected_posts.find(\n                (itm) => itm === el.school_need_post_id\n              )\n                ? { ...el, status: status_send }\n                : el\n            ),\n            error: {\n              target: \"main-success\",\n              msg: `Data updated successfully`,\n            },\n          });\n        } else {\n          this.setState({\n            submit_status_loading: false,\n            error: {\n              target: \"main-error\",\n              msg: `Error: ${msg}`,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    let totalA0 = this.state.data.filter(\n      (el) => el.qualification_name === \"A0\"\n    ).length;\n    let totalA1 = this.state.data.filter(\n      (el) => el.qualification_name === \"A1\"\n    ).length;\n    let totalA2 = this.state.data.filter(\n      (el) => el.qualification_name === \"A2\"\n    ).length;\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed onClick={this.cleanError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed onClick={this.cleanError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer className=\"flex items-center sticky top-1 z-50 mx-auto\">\n          <section className=\"pr-3\">\n            <Button theme=\"primary-light\" onClick={this.props.close}>\n              Back\n            </Button>\n          </section>\n          <div className=\"w-full flex items-center\">\n            <section className=\"flex-1\">\n              <Heading size=\"md\">Vacant posts to be filled </Heading>\n              <p className=\"m-0 text-gray-400 text-lg\">\n                <b className=\"text-blue-500\">\n                  {this.props.school?.school_code}\n                  {\" - \"}\n                  {this.props.school?.school_name}\n                </b>\n              </p>\n            </section>\n          </div>\n          <div className=\"flex gap-1 border p-1 px-1.5 rounded  text-center\">\n            <section className=\"border p-0.5 px-3 rounded bg-gray-100 flex items-center\">\n              <span className=\"text-sm text-gray-500 pr-2\">A0: </span>\n              <h2 className=\"font-bold text-blue-700\">{totalA0}</h2>\n            </section>\n            <section className=\"border p-0.5 px-3 rounded bg-gray-100 flex items-center\">\n              <span className=\"text-sm text-gray-500 pr-2\">A1: </span>\n              <h2 className=\"font-bold text-blue-700\">{totalA1}</h2>\n            </section>\n            <section className=\"border p-0.5 px-3 rounded bg-gray-100 flex items-center\">\n              <span className=\"text-sm text-gray-500 pr-2\">A2: </span>\n              <h2 className=\"font-bold text-blue-700\">{totalA2}</h2>\n            </section>\n            <div className=\"flex-1\"></div>\n            <section className=\"border p-0.5 px-3 rounded bg-gray-100 flex items-center\">\n              <span className=\"text-sm text-gray-500 pr-2\">Total: </span>\n              <h2 className=\"font-bold text-blue-700\">\n                {totalA2 + totalA1 + totalA0}\n              </h2>\n            </section>\n          </div>\n          {this.state.selected_posts.length !== 0 && (\n            <div className=\"flex ml-1 gap-1 border p-1 px-1.5 rounded  text-center\">\n              {this.state.submit_status_loading === true ? (\n                <Button\n                  className=\"w-52 animate__animated animate__fadeIn\"\n                  theme=\"default\"\n                  loading={true}\n                >\n                  Reject request {`(${this.state.selected_posts.length})`}\n                </Button>\n              ) : (\n                <>\n                  <Button\n                    className=\"w-52\"\n                    theme=\"danger-light\"\n                    onClick={this.submitSelected.bind(this, \"REJECTED\")}\n                    loading={this.state.submit_status_loading}\n                  >\n                    Reject request {`(${this.state.selected_posts.length})`}\n                  </Button>\n                  <Button\n                    className=\"w-52\"\n                    theme=\"success\"\n                    onClick={this.submitSelected.bind(this, \"APPROVED\")}\n                    loading={this.state.submit_status_loading}\n                  >\n                    Approve request {`(${this.state.selected_posts.length})`}\n                  </Button>\n                </>\n              )}\n            </div>\n          )}\n        </DashboardContainer>\n\n        <DashboardContainer>\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"text-left\">\n                <th className=\"p-2 border\">\n                  {/* <MdIndeterminateCheckBox /> */}\n                </th>\n                <th className=\"p-2 border\">Position code</th>\n                <th className=\"p-2 border\">Position name</th>\n                <th className=\"p-2 border\">Qualification </th>\n                <th className=\"p-2 border\">Specialization</th>\n                <th className=\"p-2 border\">Total Period</th>\n                <th className=\"p-2 border\">Teaching level</th>\n                <th className=\"p-2 border\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.loading_data === true ? (\n                <tr>\n                  <td className=\"py-8 text-center\" colSpan={10}>\n                    <Loading />\n                  </td>\n                </tr>\n              ) : this.state.data.length === 0 ? (\n                <tr>\n                  <td className=\"py-8 text-center\" colSpan={10}>\n                    <h2 className=\"text-2xl font-bold text-gray-600\">\n                      No results found\n                    </h2>\n                  </td>\n                </tr>\n              ) : (\n                <>\n                  {this.state.data.map((el, i) => {\n                    let FoundItem = this.state.selected_posts.find(\n                      (itm) => itm === el.school_need_post_id\n                    );\n                    return (\n                      <tr\n                        key={i}\n                        className={`${\n                          FoundItem ? \"bg-blue-200 bg-opacity-30\" : \"\"\n                        }`}\n                      >\n                        <td\n                          className={`border p-2 text-3xl cursor-pointer ${\n                            FoundItem ? \"text-blue-600\" : \"\"\n                          }`}\n                          onClick={this.selectItem.bind(\n                            this,\n                            el.school_need_post_id\n                          )}\n                        >\n                          {FoundItem ? (\n                            <>\n                              {this.state.submit_status_loading === true ? (\n                                <MdBrightness1 className=\"animate__animated animate__zoomIn animate__infinite text-blue-400 \" />\n                              ) : (\n                                <MdCheckBox />\n                              )}\n                            </>\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"text-gray-400\" />\n                          )}\n                        </td>\n                        <td className=\"border p-2\">{el.occupation}</td>\n                        <td className=\"border p-2\">{el.position_name}</td>\n                        <td className=\"border p-2\">{el.qualification_name}</td>\n                        <td className=\"border p-2\">{el.specialization_name}</td>\n                        <td className=\"border p-2\">{el.total_period}</td>\n                        <td className=\"border p-2\">{el.teaching_level}</td>\n                        <td className=\"border p-2 text-center\">\n                          <span\n                            className={`p-1 rounded-lg text-xs ${\n                              el.status === \"APPROVED\"\n                                ? \"bg-green-100 text-green-700\"\n                                : \"bg-gray-200\"\n                            }`}\n                          >\n                            {el.status}\n                          </span>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </>\n              )}\n            </tbody>\n          </table>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const SelectSchoolVacant = connect(\n  mapStateToProps,\n  {}\n)(_SelectSchoolVacant);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictRequests_Interface,\n  DistrictToTalCount,\n  FC_GetDIstrictRequestsVacant,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { search } from \"../../utils/functions\";\nimport DashboardCard from \"./DashboardCard\";\nimport { SelectSchoolVacant } from \"./SelectSchoolVacant\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface ErrorStatus {\n  target: \"main-error\" | \"main-success\" | null;\n  msg: string;\n}\n\nconst defaultError: ErrorStatus = {\n  msg: \"\",\n  target: null,\n};\n\ninterface AppState {\n  loading_schools: boolean;\n  data: DistrictRequests_Interface[];\n  error: ErrorStatus;\n  search: string;\n  selected_school: DistrictRequests_Interface | null;\n  selected_tab: \"ALL\" | \"SUBMITTED\" | \"NON-SUBMITTED\";\n  total_checked: DistrictToTalCount[];\n}\n\nclass _ApproveNewVacantTobeFilled extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_schools: false,\n      selected_school: null,\n      data: [],\n      error: defaultError,\n      search: \"\",\n      selected_tab: \"SUBMITTED\",\n      total_checked: [],\n    };\n  }\n\n  componentDidMount(): void {\n    this.loadApp();\n  }\n\n  loadApp = () => {\n    if (this.props.auth.district === null)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No district assigned to you!\",\n        },\n      });\n\n    this.setState({\n      loading_schools: true,\n    });\n    FC_GetDIstrictRequestsVacant(\n      this.props.auth.district.district_code,\n      (status, data, err) => {\n        if (status) {\n          this.setState({\n            data: data ? data.total_needed : [],\n            total_checked: data ? data.total_checked : [],\n            loading_schools: false,\n          });\n        } else {\n          this.setState({\n            loading_schools: false,\n            data: [],\n            error: {\n              target: \"main-error\",\n              msg: `Error: ${err}`,\n            },\n          });\n        }\n\n        this.clearError();\n      }\n    );\n  };\n\n  clearError = () =>\n    setTimeout(() => {\n      this.setState({\n        error: defaultError,\n      });\n    }, 3000);\n\n  changeTab = (tab: \"ALL\" | \"NON-SUBMITTED\" | \"SUBMITTED\") => {\n    this.setState({\n      selected_tab: tab,\n    });\n  };\n\n  render() {\n    let data_list: DistrictRequests_Interface[] = this.state.data;\n    if (this.state.selected_tab === \"ALL\") data_list = this.state.data;\n    if (this.state.selected_tab === \"SUBMITTED\")\n      data_list = this.state.data.filter((el) => +el.TOTAL >= 1);\n    if (this.state.selected_tab === \"NON-SUBMITTED\")\n      data_list = this.state.data.filter((el) => +el.TOTAL === 0);\n\n    let Results: DistrictRequests_Interface[] = search(\n      data_list,\n      this.state.search,\n      {\n        school_code: true,\n        school_name: true,\n      }\n    );\n    let TotalRejected = 0;\n    let TotalAccepted = 0;\n    let TotalAll = 0;\n\n    let totalSubmitted = this.state.data.filter((el) => +el.TOTAL !== 0).length;\n    let totalNonSubmitted = this.state.data.length - totalSubmitted;\n    let totalSchools = this.state.data.length;\n\n    if (this.state.selected_school !== null && this.state.selected_school)\n      return (\n        <SelectSchoolVacant\n          school={this.state.selected_school}\n          close={() => {\n            this.setState({\n              selected_school: null,\n            });\n            window.scroll(0, 0);\n            this.loadApp();\n          }}\n        />\n      );\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <>\n          <DashboardCard data={this.state.total_checked} />\n\n          <section className=\"sticky top-1 z-50 mx-auto\">\n            <DashboardContainer>\n              <div className=\"flex w-full items-center\">\n                <div className=\"flex-1\">\n                  <Heading size=\"md\">\n                    Vacant posts to be filled {`(Approval)`}\n                  </Heading>\n                  <p className=\"m-0 text-gray-500\">\n                    Choose a school to begin with\n                  </p>\n                </div>\n                <div className=\"flex-1\">\n                  <TextInput\n                    onChange={(e) =>\n                      this.setState({\n                        search: e.target.value,\n                      })\n                    }\n                    value={this.state.search}\n                    error={\"\"}\n                    label={\"\"}\n                    placeholder={\"Search by School code or school name\"}\n                    name={\"\"}\n                    size={\"sm\"}\n                  />\n                </div>\n              </div>\n              <div className=\"border-t flex gap-2 pt-1\">\n                <Button\n                  size=\"sm\"\n                  theme={\n                    this.state.selected_tab === \"SUBMITTED\"\n                      ? \"success\"\n                      : \"primary-light\"\n                  }\n                  onClick={this.changeTab.bind(this, \"SUBMITTED\")}\n                >\n                  Submitted schools\n                  <b className=\"inline-block p-0.1 px-1 ml-1 rounded-lg bg-green-800 text-white text-xs\">\n                    {totalSubmitted}\n                  </b>\n                </Button>\n                <Button\n                  size=\"sm\"\n                  theme={\n                    this.state.selected_tab === \"ALL\"\n                      ? \"primary\"\n                      : \"primary-light\"\n                  }\n                  onClick={this.changeTab.bind(this, \"ALL\")}\n                >\n                  All schools\n                  <b className=\"inline-block p-0.1 px-1 ml-1 rounded-lg bg-blue-800 text-white text-xs\">\n                    {totalSchools}\n                  </b>\n                </Button>\n                <Button\n                  size=\"sm\"\n                  theme={\n                    this.state.selected_tab === \"NON-SUBMITTED\"\n                      ? \"danger\"\n                      : \"primary-light\"\n                  }\n                  onClick={this.changeTab.bind(this, \"NON-SUBMITTED\")}\n                >\n                  Non submitted schools{\" \"}\n                  <b className=\"inline-block p-0.1 px-1 ml-1 rounded-lg bg-red-800 text-white text-xs\">\n                    {totalNonSubmitted}\n                  </b>\n                </Button>\n              </div>\n            </DashboardContainer>\n          </section>\n\n          <DashboardContainer>\n            <div className=\"flex w-full gap-2  pb-2\">\n              <div className=\"flex-1\"></div>\n            </div>\n\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"text-left\">\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">School code</th>\n                  <th className=\"p-2 border\">School name</th>\n                  <th className=\"p-2 border\">Rejected</th>\n                  <th className=\"p-2 border\">Approved</th>\n                  <th className=\"p-2 border\">Total</th>\n                  <th className=\"p-2 border\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading_schools === true ? (\n                  <tr>\n                    <td className=\"py-8 text-center\" colSpan={10}>\n                      <Loading />\n                    </td>\n                  </tr>\n                ) : Results.length === 0 ? (\n                  <tr>\n                    <td className=\"py-8 text-center\" colSpan={10}>\n                      <h1 className=\"text-2xl\">No results found!</h1>\n                    </td>\n                  </tr>\n                ) : (\n                  Results.map((el, i) => {\n                    TotalAccepted = TotalAccepted + +el.APPROVED;\n                    TotalAll = TotalAll + +el.TOTAL;\n                    TotalRejected = TotalRejected + +el.REJECTED;\n\n                    return (\n                      <tr key={i} className=\"hover:bg-yellow-50\">\n                        <td className=\"p-2 border\">{i + 1}</td>\n                        <td className=\"p-2 border\">{el.school_code}</td>\n                        <td className=\"p-2 border\">{el.school_name}</td>\n                        <td className=\"p-2 border font-bold text-red-700\">\n                          {el.REJECTED}\n                        </td>\n                        <td className=\"p-2 border font-bold text-green-700\">\n                          {el.APPROVED}\n                        </td>\n                        <td className=\"p-2 border font-bold\">{el.TOTAL}</td>\n                        <td className=\"p-2 border\">\n                          <Button\n                            size=\"sm\"\n                            theme=\"accent-light\"\n                            className=\"w-full\"\n                            onClick={() => {\n                              this.setState({\n                                selected_school: el,\n                              });\n                              window.scrollTo(0, 0);\n                            }}\n                          >\n                            Select\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n\n                {Results.length >= 2 && this.state.search === \"\" && (\n                  <tr>\n                    <td className=\"p-2\" colSpan={3}></td>\n                    <td className=\"p-2 bg-red-100 border text-red-600 text-xl font-bold\">\n                      {TotalRejected}\n                    </td>\n                    <td className=\"p-2 border bg-green-100 text-green-700 text-xl font-bold\">\n                      {TotalAccepted}\n                    </td>\n                    <td className=\"p-2 border bg-blue-100 text-blue-600 text-xl font-bold\">\n                      {TotalAll}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </DashboardContainer>\n        </>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ApproveNewVacantTobeFilled = connect(\n  mapStateToProps,\n  {}\n)(_ApproveNewVacantTobeFilled);\n"],"sourceRoot":""}