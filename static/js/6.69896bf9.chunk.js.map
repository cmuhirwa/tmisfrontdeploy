{"version":3,"sources":["actions/transfer.action.ts","components/TableLoading/TableLoading.tsx","components/DownloadLink/DownloadLink.tsx","components/Inputs/InputFile.tsx","containers/Trensfer/Dde/LeaveForm.tsx","containers/Trensfer/Dde/TransferRequests.tsx"],"names":["FC_GetAllTransfers","district_id","callBack","dispatch","type","ActionTypes","GET_ALL_TRANSFER","payload","setAxiosToken","axios","get","APP_URL","res","needed_data","data","filter","item","requested_status","errorToText","FC_GetDistricts","district_code","district_name","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","console","log","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","DownloadLink","this_URL","linkFor","APP_URL_FILE","first_id","last_id","href","target","rel","theme","size","title","supportedFileTypes","acceptAllEnum","InputFile","onChange","label","multiple","disabled","accept","ALL","name","Input_className","Label_className","InputContainer_className","MainContainer_className","labelColor","htmlFor","InputSize","connect","React","useState","setError","setSelectedFile","loadingRequest","setLoadingRequest","Alert","fixed","msg","e","files","thisFile","onFileChange","PDF","Button","onClick","setSelectedUserId","status","response_error","isEmptyOrSpaces","setTimeout","TransferRequests","componentDidMount","auth","district","setState","selected_district_id","loading","getTransferById","transfer_id","transfer","allTransfers","find","toString","FC_DisplaySchools","schools","school_name","state","search","this","TextInput","value","placeholder","length","ExportToExcel","fileData","el","approved_school_id","Approved_school_name","approved_school_info","Approved_school_code","school_code","Approved_school_district","position_code","position_name","qualification_name","requested_comment","school_from_name","school_from_info","school_from_code","school_from_district","teacher_id","teacher_comment","teacher_last_name","teacher_full_name","teacher_phone_number","transfer_reason","transfer_type","fileName","btnName","hideActions","colSpan","requested_school_info","Component","basic"],"mappings":"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","file":"static/js/6.69896bf9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  // TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n// import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: [],\n      });\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde/${district_id}`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      // console.log(\" ----- ------  ------\");\n\n      // console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      // console.log(\"=================FC_GetTransferReasons===================\");\n      // console.log({ FC_GetTransferReasons: res });\n      // console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  // callBack(true, null, \"\");\n  // try {\n  // setAxiosToken();\n  // const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n  // console.log(\"=================FC_GetDistricts===================\");\n  // console.log({ FC_GetDistricts: res });\n  // console.log(\"=================FC_GetDistricts===================\");\n\n  // * save data\n  callBack(\n    false,\n    [\n      {\n        district_code: \"11\",\n        district_name: \"Nyarugenge\",\n      },\n      {\n        district_code: \"12\",\n        district_name: \"Gasabo\",\n      },\n      {\n        district_code: \"13\",\n        district_name: \"Kicukiro\",\n      },\n      {\n        district_code: \"21\",\n        district_name: \"Nyanza\",\n      },\n      {\n        district_code: \"22\",\n        district_name: \"Gisagara\",\n      },\n      {\n        district_code: \"23\",\n        district_name: \"Nyaruguru\",\n      },\n      {\n        district_code: \"24\",\n        district_name: \"Huye\",\n      },\n      {\n        district_code: \"25\",\n        district_name: \"Nyamagabe\",\n      },\n      {\n        district_code: \"26\",\n        district_name: \"Ruhango\",\n      },\n      {\n        district_code: \"27\",\n        district_name: \"Muhanga\",\n      },\n      {\n        district_code: \"28\",\n        district_name: \"Kamonyi\",\n      },\n      {\n        district_code: \"31\",\n        district_name: \"Karongi\",\n      },\n      {\n        district_code: \"32\",\n        district_name: \"Rutsiro\",\n      },\n      {\n        district_code: \"33\",\n        district_name: \"Rubavu\",\n      },\n      {\n        district_code: \"34\",\n        district_name: \"Nyabihu\",\n      },\n      {\n        district_code: \"35\",\n        district_name: \"Ngororero\",\n      },\n      {\n        district_code: \"36\",\n        district_name: \"Rusizi\",\n      },\n      {\n        district_code: \"37\",\n        district_name: \"Nyamasheke\",\n      },\n      {\n        district_code: \"41\",\n        district_name: \"Rulindo\",\n      },\n      {\n        district_code: \"42\",\n        district_name: \"Gakenke\",\n      },\n      {\n        district_code: \"43\",\n        district_name: \"Musanze\",\n      },\n      {\n        district_code: \"44\",\n        district_name: \"Burera\",\n      },\n      {\n        district_code: \"45\",\n        district_name: \"Gicumbi\",\n      },\n      {\n        district_code: \"51\",\n        district_name: \"Rwamagana\",\n      },\n      {\n        district_code: \"52\",\n        district_name: \"Nyagatare\",\n      },\n      {\n        district_code: \"53\",\n        district_name: \"Gatsibo\",\n      },\n      {\n        district_code: \"54\",\n        district_name: \"Kayonza\",\n      },\n      {\n        district_code: \"55\",\n        district_name: \"Kirehe\",\n      },\n      {\n        district_code: \"56\",\n        district_name: \"Ngoma\",\n      },\n      {\n        district_code: \"57\",\n        district_name: \"Bugesera\",\n      },\n    ],\n    \"\"\n  );\n  // } catch (error) {\n  //   console.log(error);\n  //   callBack(false, null, errorToText(error));\n  //   callBack(\n  //     false,\n  //     errorToText(error, () => {})\n  //   );\n  // }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport Button from \"../Buttons/Button\";\n\ntype DownloadLinkProps = {\n  linkFor: \"uploaded\" | \"termination\" | \"suspension\" | \"transfer\";\n  first_id: string | number;\n  last_id: string | number;\n  title: string;\n};\n\nconst DownloadLink: React.FC<DownloadLinkProps> = (props) => {\n  const this_URL: string =\n    props.linkFor === \"uploaded\"\n      ? `${APP_URL_FILE}/${props.first_id}`\n      : `${APP_URL}/generateletter/${props.linkFor}/${props.first_id}/${props.last_id}`;\n  return (\n    <a\n      href={this_URL}\n      // className=\"py-2 px-4 text-md w-max font-bold rounded bg-primary-800 hover:bg-opacity-90 text-white flex items-center gap-2\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button\n        theme=\"primary-light\"\n        size=\"sm\"\n        className=\"flex items-center gap-1\"\n      >\n        <ImAttachment />\n        <span>{props.title}</span>\n      </Button>\n    </a>\n  );\n};\n\nexport default DownloadLink;\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\n// import { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\nexport enum supportedFileTypes {\n  PDF = \"PDF\",\n  IMAGES = \"IMAGES\",\n  ANY = \"ANY\",\n}\n\n// export const validateFileType = async (\n//   file: File,\n//   fileType: supportedFileTypes = supportedFileTypes.PDF\n// ) => {\n//   if (\n//     file.type !==\n//       \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" &&\n//     file.type !== \"application/vnd.ms-excel\" &&\n//     file.type !== \"text/csv\"\n//   ) {\n//     return setFormError({\n//       element: \"questions\",\n//       msg: \"Invalid file, Please choose excel file or svg file\",\n//     });\n//   } else {\n//     return null;\n//   }\n// };\n\nexport enum acceptAllEnum {\n  ALL = \"\",\n  IMAGES = \"image/*\",\n  EXCEL = \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n  PDF = \"application/pdf\",\n}\n\ntype InputFileProps = {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  error: string;\n  label: string;\n  disabled?: boolean;\n  type: \"file\" | \"image\";\n  name: string;\n  accept?: acceptAllEnum;\n  multiple?: boolean;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst InputFile: FC<InputFileProps> = ({\n  onChange,\n  error,\n  label,\n  multiple,\n  disabled = false,\n  accept = acceptAllEnum.ALL,\n  name,\n  type,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <input\n            name={name}\n            multiple={multiple}\n            accept={accept}\n            type={type}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputFile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_UploadSignedDocument,\n  FT_UploadSignedDocument,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport InputFile, { acceptAllEnum } from \"../../../components/Inputs/InputFile\";\nimport { isEmptyOrSpaces } from \"../../../utils/functions\";\n\ntype LeaveFormProps = {\n  selectedUserId: string;\n  setSelectedUserId: (value: string) => void;\n\n  // REDUX ========\n  FC_UploadSignedDocument: FT_UploadSignedDocument;\n};\n\nconst LeaveForm: React.FC<LeaveFormProps> = (props) => {\n  const [error, setError] = React.useState<{\n    target: \"main-error\" | \"main-success\" | \"approved_doc\" | \"comment\";\n    msg: string;\n  } | null>(null);\n  // const [comment, setComment] = React.useState<string>(\"\");\n  const [selectedFile, setSelectedFile] = React.useState<File | null>(null);\n  const [loadingRequest, setLoadingRequest] = React.useState<boolean>(false);\n\n  const onFileChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setError(null);\n    // this.setState({ selectedFile: event.target.files[0] });\n\n    // check if the file is available\n    if (e.target.files === null) {\n      setSelectedFile(null);\n      return setError({\n        msg: \"Please select a valid file\",\n        target: \"approved_doc\",\n      });\n    }\n\n    const thisFile = e.target.files[0];\n\n    // check the file type\n    if (thisFile.type !== \"application/pdf\") {\n      setSelectedFile(null);\n      return setError({\n        msg: \"The system accept pdf only\",\n        target: \"approved_doc\",\n      });\n    }\n\n    // check if the size is valued\n    if (thisFile.size <= 0) {\n      setSelectedFile(null);\n      return setError({\n        msg: \"Invalid file, Please choose a real file\",\n        target: \"approved_doc\",\n      });\n    }\n\n    // Add image\n    setSelectedFile(thisFile);\n    setError(null);\n  };\n\n  const RequestHandle = (decision: \"REJECTED\" | \"APPROVED\") => {\n    if (selectedFile === null) {\n      setError({ target: \"approved_doc\", msg: \"Required!\" });\n      return;\n    }\n    // if (isEmptyOrSpaces(comment)) {\n    //   setError({ target: \"comment\", msg: \"Required!\" });\n    //   return;\n    // }\n    props.FC_UploadSignedDocument(\n      props.selectedUserId,\n      selectedFile,\n      (status: boolean, response_error: string) => {\n        setLoadingRequest(status);\n        if (!status && !isEmptyOrSpaces(response_error))\n          setError({ target: \"main-error\", msg: response_error });\n        else if (isEmptyOrSpaces(response_error)) {\n          setError({\n            target: \"main-success\",\n            msg: \"Document uploaded successfully!\",\n          });\n          // setComment(\"\");\n          setSelectedFile(null);\n          setTimeout(() => {\n            props.setSelectedUserId(\"\");\n          }, 1000);\n        }\n      }\n      // (status: boolean, response_error: string) => {\n      //   setLoadingRequest(status);\n      //   if (validation_error) setError(validation_error);\n\n      //   if (response_error) setError(response_error);\n\n      //   if (response_error && response_error.target === \"main-success\") {\n      //     setComment(\"\");\n      //     setSelectedFile(null);\n      //     props.setSelectedUserId(\"\");\n      //   }\n      // }\n    );\n  };\n\n  return (\n    <div className=\"animate__animated animate__zoomIn animate__faster absolute p-1 bg-primary-800 rounded -mt-2 z-40 w-auto mx-2 sm:mx-0 sm:w-80 right-0 pb-2\">\n      {error && error.target === \"main-success\" && (\n        <Alert theme=\"success\" fixed>\n          {error && error.msg}\n        </Alert>\n      )}\n      {error && error.target === \"main-error\" && (\n        <Alert theme=\"danger\" fixed>\n          {error && error.msg}\n        </Alert>\n      )}\n      <div className=\"px-2\">\n        <InputFile\n          disabled={loadingRequest}\n          labelColor=\"text-gray-300\"\n          label=\"Signed document\"\n          name=\"approved_doc\"\n          className=\"p-2\"\n          onChange={(e) => onFileChange(e)}\n          error={error && error.target === \"approved_doc\" ? error.msg : \"\"}\n          type={\"file\"}\n          accept={acceptAllEnum.PDF}\n        />\n      </div>\n      {/* <div className=\"px-2\">\n        <TextArea\n          disabled={loadingRequest}\n          name=\"dde_post_request_comment\"\n          className=\"w-full p-1 rounded\"\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          error={\"\"}\n          labelColor=\"text-gray-300\"\n          label={\"Comment\"}\n          placeholder={\"\"}\n        ></TextArea>\n      </div> */}\n      <div className=\"flex justify-between gap-2 px-2\">\n        <Button\n          theme=\"default\"\n          onClick={() => {\n            props.setSelectedUserId(\"\");\n            // setComment(\"\");\n            setSelectedFile(null);\n          }}\n          disabled={loadingRequest}\n        >\n          Cancel\n        </Button>\n        <div className=\"flex gap-2\">\n          <Button\n            theme=\"success\"\n            disabled={loadingRequest}\n            onClick={(e) => RequestHandle(\"APPROVED\")}\n          >\n            Upload\n          </Button>\n          {/* <Button\n            theme=\"danger\"\n            disabled={loadingRequest}\n            onClick={() => RequestHandle(\"REJECTED\")}\n          >\n            Reject\n          </Button> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { FC_UploadSignedDocument })(LeaveForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../../actions\";\nimport {\n  FC_GetAllTransfers,\n  FT_GetAllTransfer,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DownloadLink from \"../../../components/DownloadLink/DownloadLink\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport { StoreState } from \"../../../reducers\";\nimport { TransferReducerType } from \"../../../reducers/transfer.reducer\";\nimport {\n  SchoolInfoType,\n  TransferRequestType,\n} from \"../../../types/TransferTypes\";\nimport { isEmptyOrSpaces, search } from \"../../../utils/functions\";\nimport LeaveForm from \"./LeaveForm\";\n\ntype TransferRequestsProps = {\n  auth: Auth;\n  basic: Basic;\n  transfer: TransferReducerType;\n  FC_GetAllTransfers: FT_GetAllTransfer;\n  district_code?: string;\n  district_name?: string;\n  hideActions?: boolean;\n};\n\ntype TransferRequestsState = {\n  loading: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\";\n    msg: string;\n  } | null;\n  search: string;\n  selectedUserId: string;\n  selected_district_id: string;\n};\n\nclass TransferRequests extends Component<\n  TransferRequestsProps,\n  TransferRequestsState\n> {\n  constructor(props: TransferRequestsProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: null,\n      search: \"\",\n      selectedUserId: \"\",\n      selected_district_id: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    // if (\n    //   this.props.transfer.allTransfers === null ||\n    //   this.props.transfer.allTransfers.length === 0\n    // ) {\n    let district_id = \"\";\n    if (this.props.district_code) district_id = this.props.district_code;\n    else if (this.props.auth.district?.district_code)\n      district_id = this.props.auth.district?.district_code;\n    else\n      return this.setState({\n        error: { target: \"main-error\", msg: \"No district assigned to you\" },\n      });\n\n    this.setState({\n      selected_district_id: district_id,\n    });\n    this.props.FC_GetAllTransfers(\n      district_id,\n      (status: boolean, data: TransferRequestType[] | null, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && data) this.setState({ loading: status });\n        else if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n      }\n    );\n    // } else if (this.state.loading === true) this.setState({ loading: false });\n  };\n\n  getTransferById = (transfer_id: string): TransferRequestType | undefined => {\n    if (this.props.transfer.allTransfers)\n      return this.props.transfer.allTransfers.find(\n        (item) => item.teacher_transfer_id.toString() === transfer_id\n      );\n    return undefined;\n  };\n\n  FC_DisplaySchools = (schools: SchoolInfoType[]) => {\n    return schools.map((item, index) => (\n      <p>\n        {index + 1} {item.school_name}\n      </p>\n    ));\n  };\n  render() {\n    return (\n      <>\n        {this.state.error !== null && this.state.error.target === \"main-error\" && (\n          <Alert fixed theme=\"danger\">\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"mt-3\">\n          <div className=\"border border-t mt-2 mb-1 flex items-center px-3 rounded\">\n            <div className=\"flex-1 pr-2\">\n              <TextInput\n                error=\"\"\n                label=\"Search\"\n                type=\"search\"\n                name=\"\"\n                onChange={(e) => this.setState({ search: e.target.value })}\n                placeholder=\"Search\"\n                value={this.state.search}\n                size=\"sm\"\n              />\n            </div>\n            <div className=\"p-2\">\n              {this.props.transfer.allTransfers &&\n                this.props.transfer.allTransfers.length >= 1 && (\n                  <ExportToExcel\n                    fileData={this.props.transfer.allTransfers.map((el) => ({\n                      approved_school_id: el.approved_school_id,\n                      Approved_school_name:\n                        el.approved_school_info?.school_name,\n                      Approved_school_code:\n                        el.approved_school_info?.school_code,\n                      Approved_school_district:\n                        el.approved_school_info?.district_name,\n                      position_code: el.position_code,\n                      position_name: el.position_name,\n                      qualification_name: el.qualification_name,\n                      requested_comment: el.requested_comment,\n                      school_from_name: el.school_from_info?.school_name,\n                      school_from_code: el.school_from_info?.school_code,\n                      school_from_district: el.school_from_info?.district_name,\n                      teacher_id: el.teacher_id,\n                      teacher_comment: el.teacher_comment,\n                      teacher_last_name: el.teacher_last_name,\n                      teacher_full_name: el.teacher_full_name,\n                      teacher_phone_number: el.teacher_phone_number,\n                      transfer_reason: el.transfer_reason,\n                      transfer_type: el.transfer_type,\n                    }))}\n                    fileName={`INCOMING TRANSFERS`}\n                    btnName=\"Download EXCEL\"\n                  />\n                )}\n            </div>\n          </div>\n          <div className=\"w-full overflow-x-auto mt-4\">\n            <table className=\"w-full\">\n              <thead className=\"bg-blue-50 text-blue-800 font-bold text-base text-left\">\n                <tr>\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">Full Name</th>\n                  <th className=\"p-2 border\">Phone</th>\n                  <th className=\"p-2 border\">Current School</th>\n                  <th className=\"p-2 border\">Approved School</th>\n                  {/* <th className=\"p-2 border\">Approved Sector</th> */}\n                  <th className=\"p-2 border\">Position</th>\n                  <th className=\"p-2 border\">Qualification</th>\n                  {this.props.hideActions ? null : (\n                    <th className=\"p-2 border\"></th>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={8} />\n                ) : this.props.transfer.allTransfers === null ? (\n                  <tr className=\"border-t border-b\">\n                    <td\n                      colSpan={8}\n                      className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      Something went wrong! Please try again.\n                    </td>\n                  </tr>\n                ) : this.props.transfer.allTransfers.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={8}\n                      className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      No results found\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    this.props.transfer.allTransfers,\n                    this.state.search\n                  ).map((element: TransferRequestType, index: number) => {\n                    return (\n                      <tr\n                        key={element.teacher_transfer_id}\n                        className=\"border-t border-b hover:bg-gray-50\"\n                      >\n                        <td className=\"p-2 border\">{index + 1}</td>\n                        <td className=\"p-2 border\">\n                          {element.teacher_full_name}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.teacher_phone_number}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.school_from_info\n                            ? element.school_from_info.school_name\n                            : \"\"}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.requested_school_info\n                            ? this.FC_DisplaySchools(\n                                element.requested_school_info\n                              )\n                            : \"\"}\n                        </td>\n\n                        <td className=\"p-2 border\">\n                          {element.position_code} {element.position_name}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.qualification_name}\n                        </td>\n                        {/* <td className=\"p-2 border\">\n                          {element.requested_school_info\n                            ? element.requested_school_info.sector_name\n                            : \"\"}\n                        </td> */}\n\n                        {this.props.hideActions ? null : (\n                          <>\n                            {this.state.selectedUserId ===\n                            element.teacher_transfer_id.toString() ? (\n                              <td className=\"p-2 border\">\n                                <LeaveForm\n                                  selectedUserId={this.state.selectedUserId}\n                                  setSelectedUserId={(value: string) =>\n                                    this.setState({ selectedUserId: value })\n                                  }\n                                />\n                              </td>\n                            ) : (\n                              <>\n                                {/* <td className=\"p-2 border\"></td> */}\n                                <td className=\"p-2 border-1 flex gap-2\">\n                                  {element.mayor_letter === null ||\n                                  isEmptyOrSpaces(element.mayor_letter) ? (\n                                    <Button\n                                      size=\"sm\"\n                                      theme=\"success-light\"\n                                      onClick={(e) =>\n                                        this.setState({\n                                          selectedUserId:\n                                            element.teacher_transfer_id.toString(),\n                                        })\n                                      }\n                                    >\n                                      Upload signed letter\n                                    </Button>\n                                  ) : (\n                                    element.requested_status\n                                  )}\n\n                                  {element.mayor_letter === null ||\n                                  isEmptyOrSpaces(element.mayor_letter) ? (\n                                    <DownloadLink\n                                      linkFor=\"transfer\"\n                                      first_id={element.teacher_transfer_id}\n                                      last_id={element.teacher_id}\n                                      title={\"Transfer letter\"}\n                                    />\n                                  ) : (\n                                    element.mayor_letter &&\n                                    !isEmptyOrSpaces(element.mayor_letter) && (\n                                      <DownloadLink\n                                        linkFor=\"uploaded\"\n                                        first_id={element.mayor_letter}\n                                        last_id={\"\"}\n                                        title={\"Transfer letter\"}\n                                      />\n                                    )\n                                  )}\n                                </td>\n                              </>\n                            )}\n                          </>\n                        )}\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  transfer,\n}: StoreState): { auth: Auth; basic: Basic; transfer: TransferReducerType } => {\n  return { auth: auth, basic: basic, transfer };\n};\n\nexport default connect(mapStateToProps, {\n  FC_GetAllTransfers,\n})(TransferRequests);\n"],"sourceRoot":""}