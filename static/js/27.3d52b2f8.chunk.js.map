{"version":3,"sources":["trainingModule/components/ListSettings/ListSettings.tsx","trainingModule/CreateTrainingSettings/CreateSettingsModal.tsx","trainingModule/UpdateSettings/UpdateSettings.tsx","trainingModule/UpdateSettings/UpdateSettingsModal.tsx","trainingModule/OrganizationCategoryList/OrganizationCategoryList.tsx"],"names":["defaultError","target","msg","ListSettings","props","deleteSetting","setting","window","confirm","name","setState","selected_id","id","delete_loading","FC_DeleteSettingType","delete_route","status","data","alert","state","filter","el","loading","search","checkAccess","this","auth","role","access","view","FC_GetSettingType","route","error","setTimeout","title","description","title_key","searchResults","theme","fixed","className","size","openCreate","onClick","onChange","e","value","label","placeholder","length","fileData","fileName","btnName","intervention_area","update_link","update","delete","colSpan","map","i","sub_data_list","is_mandatory","tags_list","itm","openUpdate","bind","disabled","React","Component","CreateSettingsModal","backDrop","Themes","default","close","onClose","backDropClose","widthSizeClass","ModalSize","large","displayClose","padding","undefined","body","footer","component_type","route_name","onCloseModal","onSubmit","isModal","UpdateSettings","GetDetailsToUpdate","GetComponentType","GetSettingsById","key","res","editData","FC_GetAreasIntervention","GetAreasOfIntervention","areas_of_intervention","SettingsRouteType","subarea","topic","Loading","CreateSettingsComponent","update_data","areas","UpdateSettingsModal","Modal","OrganizationCategoryList","connect","useState","create","setCreate","setUpdate","console","log","organization_category","TRNG_ORGANIZATION_CATEGORY_VIEW_URL","create_link","TRNG_ORGANIZATION_CATEGORY_DELETE_URL","UsersAccess","CREATE_ORGANIZATION_CATEGORY","UPDATE_ORGANIZATION_CATEGORY","TRNG_ORGANIZATION_CATEGORY_DELETE","TRNG_ORGANIZATION_CATEGORY_VIEW"],"mappings":"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","file":"static/js/27.3d52b2f8.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Auth,\n  FC_DeleteSettingType,\n  FC_GetSettingType,\n  TrainingSettings_Interface,\n} from \"../../../actions\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { UsersAccess, checkAccess } from \"../../../utils/access\";\nimport { search } from \"../../../utils/functions\";\n\ninterface AccessCrud {\n  create: UsersAccess;\n  update: UsersAccess;\n  delete: UsersAccess;\n  view: UsersAccess;\n}\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  title: string;\n  title_key: string;\n  description: string;\n  route: string;\n  delete_route: string;\n  foreign_key?: string;\n  create_link?: string;\n  update_link?: string;\n  intervention_area?: Boolean;\n  is_mandatory?: Boolean;\n  access: AccessCrud;\n  sub_data_list?: {\n    title: string;\n    key: string;\n  };\n  openCreate?: () => void;\n  openUpdate?: (id: string) => void;\n}\n\nconst defaultError = {\n  target: null,\n  msg: \"\",\n};\n\ninterface AppState {\n  loading: boolean;\n  data: TrainingSettings_Interface[];\n  selected_id: string;\n  delete_loading: boolean;\n  alert: {\n    target: \"MAIN-ERROR\" | \"MAIN-SUCCESS\" | null;\n    msg: string;\n  };\n  search: string;\n}\n\nexport default class ListSettings extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      alert: defaultError,\n      data: [],\n      selected_id: \"\",\n      delete_loading: false,\n      search: \"\",\n    };\n  }\n\n  componentDidMount(): void {\n    if (checkAccess(this.props.auth.role?.access, this.props.access.view)) {\n      FC_GetSettingType(`${this.props.route}`, (status, data, error) => {\n        this.setState({\n          loading: false,\n          data: status ? data : [],\n          alert: !status\n            ? {\n                target: \"MAIN-ERROR\",\n                msg: `Error: ${error}`,\n              }\n            : defaultError,\n        });\n      });\n    }\n  }\n\n  deleteSetting = (setting: TrainingSettings_Interface) => {\n    if (!window.confirm(`Are you sure you want to delete ${setting.name}?`))\n      return;\n\n    this.setState({\n      selected_id: setting.id + \"\",\n      delete_loading: true,\n    });\n\n    FC_DeleteSettingType(\n      `${this.props.delete_route}/${setting.id}`,\n      (status, data, msg) => {\n        if (status) {\n          this.setState({\n            delete_loading: false,\n            alert: {\n              target: \"MAIN-SUCCESS\",\n              msg: `${setting.name} deleted successfully.`,\n            },\n            data: this.state.data.filter(\n              (el) => el.id + \"\" !== setting.id + \"\"\n            ),\n            selected_id: \"\",\n          });\n        } else {\n          this.setState({\n            alert: {\n              target: \"MAIN-ERROR\",\n              msg: `Error: ${msg}`,\n            },\n            delete_loading: false,\n            selected_id: \"\",\n          });\n        }\n      }\n    );\n  };\n\n  cleanAlert() {\n    setTimeout(() => {\n      this.setState({ alert: defaultError });\n    }, 3000);\n  }\n\n  render() {\n    if (!checkAccess(this.props.auth.role?.access, this.props.access.view))\n      return null;\n    const { title, description, title_key } = this.props;\n    let searchResults: TrainingSettings_Interface[] = search(\n      this.state.data,\n      this.state.search,\n      { id: true, name: true, description: true }\n    );\n    return (\n      <>\n        {this.state.alert.target === \"MAIN-ERROR\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.alert.msg}\n          </Alert>\n        )}\n        {this.state.alert.target === \"MAIN-SUCCESS\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.alert.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer>\n          <div className=\"flex items-center\">\n            <div className=\"py-2 flex-1\">\n              <Heading size=\"lg\">{title}</Heading>\n              <p className=\"text-gray-400\">{description}</p>\n            </div>\n            <div className=\"\">\n              {this.props.openCreate && (\n                <Button onClick={this.props.openCreate}>\n                  Add new {title_key}\n                </Button>\n              )}\n            </div>\n          </div>\n        </DashboardContainer>\n        <DashboardContainer>\n          <div className=\"py-2 flex items-center pb-2\">\n            <TextInput\n              onChange={(e) => this.setState({ search: e.target.value })}\n              value={this.state.search}\n              error={\"\"}\n              label={\"\"}\n              placeholder={\"Search\"}\n              name={\"\"}\n              size={\"sm\"}\n            />\n            <div className=\" text-center px-6\">\n              <h2 className=\"text-gray-400\">Total</h2>\n              <h1 className=\"text-blue-600 text-xl font-bold -mt-1\">\n                {this.state.data.length}\n              </h1>\n            </div>\n            {this.state.data.length >= 1 && (\n              <div className=\"\">\n                <ExportToExcel\n                  fileData={this.state.data}\n                  fileName={`Transfer requests candidates`}\n                  btnName=\"Download EXCEL\"\n                />\n              </div>\n            )}\n          </div>\n\n          <table className=\"w-full border\">\n            <thead>\n              <tr>\n                <th className=\"p-2 border w-2\">#</th>\n                <th className=\"p-2 border\">Name</th>\n                {this.props.intervention_area && (\n                  <th className=\"p-2 border\">Intervention Area</th>\n                )}\n                <th className=\"p-2 border\">Description</th>\n                {this.props.update_link &&\n                  checkAccess(\n                    this.props.auth.role?.access,\n                    this.props.access.update\n                  ) && <th className=\"p-2 border\"></th>}\n                {checkAccess(\n                  this.props.auth.role?.access,\n                  this.props.access.delete\n                ) && <th className=\"p-2 border\"></th>}\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.loading ? (\n                <tr>\n                  <td className=\"text-center py-8\" colSpan={30}>\n                    <Loading />\n                  </td>\n                </tr>\n              ) : this.state.data.length === 0 ? (\n                <tr>\n                  <td className=\"text-center py-8\" colSpan={30}>\n                    <h2 className=\"text-3xl  text-gray-600\">\n                      No {this.props.title_key} found!\n                    </h2>\n                  </td>\n                </tr>\n              ) : (\n                searchResults.map((el, i) => (\n                  <tr key={i} className=\"hover:bg-blue-50\">\n                    <td className=\"p-2 border\">{i + 1}</td>\n                    <td className=\"p-2 border\">\n                      <label\n                        className={`${\n                          this.props.sub_data_list\n                            ? \"text-lg font-bold block\"\n                            : \"\"\n                        }`}\n                      >\n                        {el.name}{\" \"}\n                        {this.props.is_mandatory && (\n                          <>\n                            {!el?.is_mandatory ? null : (\n                              <label\n                                className={`p-0.5 px-1 rounded-full text-xs text-blue-600 bg-blue-100`}\n                              >\n                                Mandatory\n                              </label>\n                            )}\n                          </>\n                        )}\n                        {!el.status\n                          ? null\n                          : el?.status === 0 && (\n                              <label\n                                className={`p-0.5 px-1 rounded-full text-xs text-red-600 bg-red-100`}\n                              >\n                                Disabled\n                              </label>\n                            )}\n                      </label>\n\n                      {this.props.sub_data_list && (\n                        <p className=\"text-gray-500\">{el?.description}</p>\n                      )}\n                    </td>\n                    {this.props.intervention_area && (\n                      <td className=\"p-2 border\">{el?.intervention_area}</td>\n                    )}\n                    <td className=\"p-2 border\">\n                      {!this.props.sub_data_list ? (\n                        el?.description\n                      ) : (\n                        <>\n                          <ul>\n                            {el?.tags_list?.map((itm) => (\n                              <li key={itm.id}>{itm.name}</li>\n                            ))}\n                          </ul>\n                        </>\n                      )}\n                    </td>\n                    {/* {this.props.update_link &&\n                      checkAccess(\n                        this.props.auth.role?.access,\n                        this.props.access.update\n                      ) && */}\n                    {this.props.openUpdate && (\n                      <td className=\"p-1 border w-3\">\n                        <Button\n                          onClick={this.props.openUpdate.bind(this, el.id + \"\")}\n                          theme=\"primary-light\"\n                          size=\"sm\"\n                        >\n                          Update\n                        </Button>\n                      </td>\n                    )}\n                    {checkAccess(\n                      this.props.auth.role?.access,\n                      this.props.access.delete\n                    ) && (\n                      <td className=\"p-1 border w-3\">\n                        <Button\n                          theme=\"danger-light\"\n                          size=\"sm\"\n                          disabled={this.state.delete_loading}\n                          loading={\n                            this.state.delete_loading &&\n                            this.state.selected_id + \"\" === el.id + \"\"\n                              ? true\n                              : false\n                          }\n                          onClick={this.deleteSetting.bind(this, el)}\n                        >\n                          Delete\n                        </Button>\n                      </td>\n                    )}\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { SettingsRouteType } from \"./CreateSettings\";\nimport { CreateSettingsComponent } from \"./CreateSettingsComponent\";\n\ninterface CreateSettingsModalProps {\n  route_name: SettingsRouteType;\n  onClose: () => void;\n  onSubmit: () => void;\n}\ninterface CreateSettingsModalState {}\n\nexport class CreateSettingsModal extends Component<\n  CreateSettingsModalProps,\n  CreateSettingsModalState\n> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={this.props.onClose}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={false}\n        padding={{\n          title: undefined,\n          body: undefined,\n          footer: undefined,\n        }}\n      >\n        <CreateSettingsComponent\n          component_type={this.props.route_name}\n          onCloseModal={this.props.onClose}\n          onSubmit={this.props.onSubmit}\n          isModal={true}\n        />\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  GetAreasOfIntervention,\n  GetAreasOfInterventionInterface,\n  GetSettingsById,\n  HandleTrainingSettingsDataInterface,\n} from \"../../actions/training_settings_create_edit\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  GetComponentType,\n  SettingsRouteType,\n} from \"../CreateTrainingSettings/CreateSettings\";\nimport { CreateSettingsComponent } from \"../CreateTrainingSettings/CreateSettingsComponent\";\n\ninterface UpdateSettingsProps {\n  component_type: SettingsRouteType;\n  //   update_data: HandleTrainingSettingsDataInterface;\n  id: string;\n  //   parent_data: { id: string; name: string }[];\n  onSubmit: () => void;\n  isModal?: boolean;\n  onCloseModal?: () => void;\n}\ninterface UpdateSettingsState {\n  loading: boolean;\n  editData: HandleTrainingSettingsDataInterface | null;\n  areas_of_intervention: GetAreasOfInterventionInterface[] | null;\n}\n\nexport class UpdateSettings extends Component<\n  UpdateSettingsProps,\n  UpdateSettingsState\n> {\n  constructor(props: UpdateSettingsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      editData: null,\n      areas_of_intervention: null,\n    };\n  }\n  GetDetailsToUpdate = () => {\n    this.setState({ loading: true });\n    GetComponentType(this.props.component_type) !== null &&\n      GetSettingsById(\n        GetComponentType(this.props.component_type)!.key,\n        this.props.id,\n        (\n          loading: boolean,\n          res: {\n            status: \"success\" | \"error\";\n            msg: string;\n            data: HandleTrainingSettingsDataInterface | null;\n          } | null\n        ) => {\n          this.setState({ loading: loading });\n          if (res !== null && res.status === \"success\") {\n            this.setState({ loading: false, editData: res.data });\n          }\n        }\n      );\n  };\n\n  FC_GetAreasIntervention = () => {\n    this.setState({ loading: true });\n    GetAreasOfIntervention(\n      (\n        loading: boolean,\n        res: {\n          status: \"success\" | \"error\";\n          msg: string;\n          data: GetAreasOfInterventionInterface[];\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (loading === false && res !== null && res.data.length > 0) {\n          this.setState({\n            areas_of_intervention: res.data,\n            loading: false,\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount(): void {\n    this.GetDetailsToUpdate();\n    if (\n      GetComponentType(this.props.component_type) !== null &&\n      (GetComponentType(this.props.component_type)!.key ===\n        SettingsRouteType.subarea ||\n        GetComponentType(this.props.component_type)!.key ===\n          SettingsRouteType.topic)\n    ) {\n      this.FC_GetAreasIntervention();\n    }\n  }\n  render() {\n    if (\n      this.state.editData === null ||\n      this.state.loading === true ||\n      (this.state.areas_of_intervention === null &&\n        GetComponentType(this.props.component_type) !== null &&\n        (GetComponentType(this.props.component_type)!.key ===\n          SettingsRouteType.subarea ||\n          GetComponentType(this.props.component_type)!.key ===\n            SettingsRouteType.topic))\n    ) {\n      return (\n        <div className=\"flex flex-col items-center justify-center bg-white rounded p-4\">\n          <Loading />\n          <div>Loading, please wait...</div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {GetComponentType(this.props.component_type) !== null && (\n          <CreateSettingsComponent\n            component_type={this.props.component_type!}\n            update_data={this.state.editData}\n            onSubmit={this.props.onSubmit}\n            isModal={this.props.isModal}\n            onCloseModal={this.props.onCloseModal}\n            areas={\n              this.state.areas_of_intervention === null\n                ? []\n                : this.state.areas_of_intervention\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { SettingsRouteType } from \"../CreateTrainingSettings/CreateSettings\";\nimport { UpdateSettings } from \"./UpdateSettings\";\n\ninterface UpdateSettingsModalProps {\n  id: string;\n  route_name: SettingsRouteType;\n  onClose: () => void;\n  onSubmit: () => void;\n}\ninterface UpdateSettingsModalState {}\n\nexport class UpdateSettingsModal extends Component<\n  UpdateSettingsModalProps,\n  UpdateSettingsModalState\n> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={this.props.onClose}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={false}\n        padding={{\n          title: undefined,\n          body: undefined,\n          footer: undefined,\n        }}\n      >\n        <UpdateSettings\n          onSubmit={this.props.onSubmit}\n          component_type={this.props.route_name}\n          id={this.props.id}\n          isModal={true}\n          onCloseModal={this.props.onClose}\n        />\n      </Modal>\n    );\n  }\n}\n","import React, { FC, ReactElement, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  TRNG_ORGANIZATION_CATEGORY_DELETE_URL,\n  TRNG_ORGANIZATION_CATEGORY_VIEW_URL,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UsersAccess } from \"../../utils/access\";\nimport ListSettings from \"../components/ListSettings/ListSettings\";\nimport { SettingsRouteType } from \"../CreateTrainingSettings/CreateSettings\";\nimport { CreateSettingsModal } from \"../CreateTrainingSettings/CreateSettingsModal\";\nimport { UpdateSettingsModal } from \"../UpdateSettings/UpdateSettingsModal\";\n\ntype OrganizationCategoryListProps = {\n  auth: Auth;\n};\n\nconst _OrganizationCategoryList: FC<OrganizationCategoryListProps> = ({\n  auth,\n}): ReactElement => {\n  const [create, setCreate] = useState(false);\n  const [update, setUpdate] = useState<string | null>(null);\n  console.log(auth);\n  if (create === true) {\n    return (\n      <CreateSettingsModal\n        onClose={() => {\n          setCreate(false);\n          setUpdate(null);\n        }}\n        onSubmit={() => {\n          setCreate(false);\n          setUpdate(null);\n        }}\n        route_name={SettingsRouteType.organization_category}\n      />\n    );\n  } else {\n    if (update !== null) {\n      return (\n        <UpdateSettingsModal\n          onClose={() => {\n            setCreate(false);\n            setUpdate(null);\n          }}\n          onSubmit={() => {\n            setCreate(false);\n            setUpdate(null);\n          }}\n          route_name={SettingsRouteType.organization_category}\n          id={update}\n        />\n      );\n    }\n  }\n  return (\n    <ListSettings\n      auth={auth}\n      description=\"Training provider category\"\n      route={TRNG_ORGANIZATION_CATEGORY_VIEW_URL}\n      title=\"Training provider category\"\n      title_key=\"training provider category\"\n      create_link=\"/training/settings/create\"\n      update_link=\"/training/settings/update\"\n      delete_route={TRNG_ORGANIZATION_CATEGORY_DELETE_URL}\n      access={{\n        create: UsersAccess.CREATE_ORGANIZATION_CATEGORY,\n        update: UsersAccess.UPDATE_ORGANIZATION_CATEGORY,\n        delete: UsersAccess.TRNG_ORGANIZATION_CATEGORY_DELETE,\n        view: UsersAccess.TRNG_ORGANIZATION_CATEGORY_VIEW,\n      }}\n      openCreate={setCreate.bind(this, true)}\n      openUpdate={(e) => setUpdate(e)}\n    />\n  );\n};\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const OrganizationCategoryList = connect(\n  mapStateToProps,\n  {}\n)(_OrganizationCategoryList);\n"],"sourceRoot":""}