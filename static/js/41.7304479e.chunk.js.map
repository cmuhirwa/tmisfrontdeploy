{"version":3,"sources":["containers/CandidateSwaping/PermutationItem.tsx","containers/RebAprovePermutation/RebAprovePermutation.tsx"],"names":["PermutationItem","permutation","more","approveUser","approveReb","loading","close","useState","expandItem","setExpand","expand","user_1","usersInfo","find","itm","user_id","user_one","user_2","user_two","school_1","schools","school_code","school_one","school_2","school_two","UserComponent","user","school","undefined","className","size","label","value","full_name","inline","staff_code","nid","sex","phone_numbers","marital_status","map","i","school_name","onClick","theme","bind","reb_status","permutation_code","position_code","position_name","qualification_name","role","user_one_date","user_two_date","permutation_status","permutation_id","_RebAprovePermutation","props","componentDidMount","loadData","page","limit","setState","FC_REB_Permutation","status","data","msg","error","target","permutations","approveRebPermutation","loading_approve","FC_REB_APPROVE_Permutation","state","el","console","log","selected_permutation","this","user1","user2","school1","school2","colSpan","title","React","Component","RebAprovePermutation","connect","auth"],"mappings":"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","file":"static/js/41.7304479e.chunk.js","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { MdAccountBox, MdSwapHorizontalCircle } from \"react-icons/md\";\nimport {\n  PermutationItem__Interface,\n  PermutationSchool__Interface,\n  PermutationUser__Interface,\n} from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\n\ntype PermutationItemProps = {\n  permutation: PermutationItem__Interface;\n  more?: boolean;\n  approveReb?: (id: string | null) => void;\n  approveUser?: (id: string | null) => void;\n  loading?: boolean;\n  close?: () => void;\n};\n\nconst PermutationItem: FC<PermutationItemProps> = ({\n  permutation,\n  more = false,\n  approveUser,\n  approveReb,\n  loading = false,\n  close,\n}): ReactElement => {\n  const [expandItem, setExpand] = useState(false);\n\n  let expand = more === true ? true : expandItem;\n  let user_1 = permutation.usersInfo.find(\n    (itm) => itm.user_id === permutation.user_one\n  );\n  let user_2 = permutation.usersInfo.find(\n    (itm) => itm.user_id === permutation.user_two\n  );\n  let school_1 = permutation.schools.find(\n    (itm) => itm.school_code === permutation.school_one\n  );\n  let school_2 = permutation.schools.find(\n    (itm) => itm.school_code === permutation.school_two\n  );\n\n  let UserComponent = (\n    user: PermutationUser__Interface | undefined,\n    school: PermutationSchool__Interface | undefined\n  ) => {\n    if (user === undefined || school === undefined)\n      return <div className=\"p-2 text-center text-lg\">No users found</div>;\n\n    return (\n      <div className={`flex-1 w-full rounded bg-white border`}>\n        <div\n          className={`rounded m-1 border flex ${\n            expand === true ? \"\" : \"items-center\"\n          }`}\n        >\n          <section>\n            <MdAccountBox className=\"text-gray-400\" size={expand ? 80 : 30} />\n          </section>\n          <div className=\"flex-1 pl-2\">\n            {[\n              {\n                label: \"Names: \",\n                value: user.full_name,\n                more: true,\n                inline: false,\n              },\n              {\n                label: \"Staff code: \",\n                value: user.staff_code,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"NID: \",\n                value: user.nid,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"Sex: \",\n                value: user.sex,\n                more: false,\n                inline: true,\n              },\n              {\n                label: \"Phone number: \",\n                value: user.phone_numbers,\n                inline: true,\n                more: false,\n              },\n              {\n                label: \"Martial status: \",\n                value: user.marital_status,\n                inline: true,\n                more: false,\n              },\n            ].map((itm, i) => {\n              if (itm.more === false && expand === false) return null;\n              if (!itm.value) return null;\n              return (\n                <section\n                  key={i}\n                  className={`border-b ${\n                    itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                  }`}\n                >\n                  <span className=\"text-sm text-gray-500 block\">\n                    {itm?.label}\n                  </span>\n                  <h2\n                    className={` ${\n                      itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                    } font-bold block `}\n                  >\n                    {itm?.value}\n                  </h2>\n                </section>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"rounded m-1 border flex items-center mt-3\">\n          <section className=\"px-4\">\n            <FaSchool className=\"text-gray-400\" size={expand ? 50 : 20} />\n          </section>\n          <div className=\"flex-1\">\n            {[\n              {\n                label: \"School code: \",\n                value: school.school_code,\n                inline: true,\n                more: true,\n              },\n              {\n                label: \"School name: \",\n                value: school.school_name,\n                inline: true,\n                more: false,\n              },\n            ].map((itm, i) => {\n              if (itm.more === true && expand === false) return null;\n              if (!itm.value) return null;\n              return (\n                <section\n                  key={i}\n                  className={`border-b ${\n                    itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                  }`}\n                >\n                  <span className=\"text-sm text-gray-500 block\">\n                    {itm?.label}\n                  </span>\n                  <h2\n                    className={` ${\n                      itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                    } font-bold block `}\n                  >\n                    {itm?.value}\n                  </h2>\n                </section>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white p-2 mb-3 rounded animate__animated animate__zoomIn animate__faster\">\n      {close && !loading && (\n        <div className=\"text-right pb-2 border-b mb-2\">\n          <Button\n            className=\"\"\n            onClick={close}\n            // loading={}\n            // size=\"sm\"\n            theme=\"danger-light\"\n          >\n            Close\n          </Button>\n        </div>\n      )}\n      <div\n        className=\"items-center flex flex-col md:flex-row cursor-pointer\"\n        onClick={setExpand.bind(this, !expand)}\n      >\n        {UserComponent(user_1, school_1)}\n        <div className=\"-mx-2 z-40 \">\n          <MdSwapHorizontalCircle\n            className={`rounded ${\n              permutation.reb_status === \"Approved\"\n                ? \"text-green-500\"\n                : \"text-accent-900\"\n            } `}\n            size={50}\n          />\n        </div>\n        {UserComponent(user_2, school_2)}\n      </div>\n      {expand && (\n        <div className=\"pt-3\">\n          <div className=\"p-1 px-2 rounded mt-2 border grid lg:grid-cols-3 gap-1 \">\n            {[\n              {\n                label: \"Permutation Code: \",\n                value: permutation.permutation_code,\n                inline: true,\n              },\n              {\n                label: \"Position: \",\n                value: `${permutation.position_code} - ${permutation.position_name}`,\n                inline: true,\n              },\n              {\n                label: \"Qualification name: \",\n                value: permutation.qualification_name,\n                inline: true,\n              },\n              {\n                label: \"Qualification name: \",\n                value: permutation.role,\n                inline: true,\n              },\n              {\n                label: \"Initiated date: \",\n                value: permutation.user_one_date,\n                inline: true,\n              },\n              {\n                label: \"Accepted date: \",\n                value: permutation.user_two_date,\n                inline: true,\n              },\n            ].map((itm, i) => (\n              <section\n                key={i}\n                className={`border-b border-l pl-2 ${\n                  itm.inline === true ? \"flex py-1 items-center\" : \"\"\n                }`}\n              >\n                <span className=\"text-sm text-gray-500 block\">\n                  {itm?.label}\n                </span>\n                <h2\n                  className={` ${\n                    itm.inline === false ? \"-mt-1\" : \"pl-2\"\n                  } font-bold block `}\n                >\n                  {itm?.value}\n                </h2>\n              </section>\n            ))}\n          </div>\n\n          <div className=\"grid grid-cols-2 pt-3 items-center\">\n            <div className=\"flex gap-1\">\n              {permutation.reb_status && (\n                <section\n                  className={`flex items-center gap-1 px-2 py-0.5 rounded-lg  ${\n                    permutation.permutation_status === \"Accepted\"\n                      ? \"bg-green-100 text-green-900\"\n                      : \"bg-accent-400 text-accent-900\"\n                  }`}\n                >\n                  <span className=\"text-xs opacity-70\">User status</span>\n                  <h5 className={`text  block  font-bold `}>\n                    {permutation.permutation_status}\n                  </h5>\n                </section>\n              )}\n\n              {permutation.reb_status && (\n                <section\n                  className={`flex items-center gap-1 px-2 py-0.5 rounded-lg  ${\n                    permutation.reb_status === \"Approved\"\n                      ? \"bg-green-100 text-green-900\"\n                      : \"bg-accent-400 text-accent-900\"\n                  }`}\n                >\n                  <span className=\"text-xs opacity-70\">REB status</span>\n                  <h5 className={`text  block  font-bold `}>\n                    {permutation.reb_status}\n                  </h5>\n                </section>\n              )}\n            </div>\n            <div className=\"text-right grid gap-2\">\n              {approveUser && (\n                <Button\n                  onClick={approveUser.bind(this, permutation.permutation_id)}\n                  loading={loading}\n                  size=\"lg\"\n                >\n                  Approve permutation\n                </Button>\n              )}\n              {approveReb && (\n                <>\n                  {permutation.reb_status !== \"Approved\" && (\n                    <Button\n                      onClick={approveReb.bind(\n                        this,\n                        permutation.permutation_id\n                      )}\n                      loading={loading}\n                      size=\"lg\"\n                    >\n                      Approve permutation\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PermutationItem;\n","import { stringify } from \"querystring\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_REB_APPROVE_Permutation,\n  FC_REB_Permutation,\n  PermutationItem__Interface,\n} from \"../../actions\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport PermutationItem from \"../CandidateSwaping/PermutationItem\";\n// import Alert, { AlertInterface } from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  permutations: PermutationItem__Interface[];\n  selected_permutation: string;\n  error: {\n    target: \"main-success\" | \"main-error\" | null;\n    msg: string;\n  };\n  page: number;\n  limit: number;\n  loading_approve: string;\n}\n\nclass _RebAprovePermutation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      permutations: [],\n      selected_permutation: \"\",\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      page: 1,\n      limit: 20,\n      loading_approve: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    this.loadData(1, 12);\n  };\n\n  loadData = (page: number, limit: number) => {\n    // janvier\n    this.setState({\n      loading: true,\n    });\n    FC_REB_Permutation(page + \"\", limit + \"\", (status, data, msg) => {\n      if (status === true && data !== null) {\n        this.setState({\n          error: {\n            target: null,\n            msg: \"\",\n          },\n          loading: false,\n          permutations: data?.permutations,\n          limit: 0,\n          page: 0,\n        });\n      } else {\n        this.setState({\n          error: {\n            target: \"main-error\",\n            msg: msg,\n          },\n          loading: false,\n          permutations: [],\n          limit: 0,\n          page: 0,\n        });\n      }\n    });\n  };\n\n  approveRebPermutation = (permutation_id: string | null) => {\n    this.setState({\n      loading_approve: permutation_id + \"\",\n    });\n\n    FC_REB_APPROVE_Permutation(permutation_id + \"\", (status, msg) => {\n      if (status === true) {\n        this.setState({\n          loading_approve: \"\",\n          error: {\n            target: \"main-success\",\n            msg: \"\",\n          },\n          permutations: this.state.permutations.map((el) =>\n            el.permutation_id === permutation_id + \"\"\n              ? { ...el, reb_status: \"Approved\" }\n              : el\n          ),\n        });\n      } else {\n        this.setState({\n          loading_approve: \"\",\n          error: {\n            msg: msg,\n            target: \"main-error\",\n          },\n          permutations: [],\n        });\n      }\n    });\n\n    console.log(permutation_id);\n\n    console.log(\"data are here\");\n  };\n\n  render() {\n    if (this.state.loading === true)\n      return (\n        <div className=\"py-8 text-center\">\n          <Loading />\n          <h4 className=\"text-lg pt-2 text-gray-600\">\n            Loading permutations...\n          </h4>\n        </div>\n      );\n    return (\n      <>\n        <DashboardContainer className=\"p-2 flex\">\n          <section className=\"\">\n            <Heading>Permutations</Heading>\n          </section>\n        </DashboardContainer>\n\n        <div className=\"px-2 container mx-auto\">\n          <>\n            <div className=\"p-1 rounded\">\n              <table className=\" w-full rounded\">\n                <thead>\n                  <tr className=\"bg-white\">\n                    <th className=\"border p-2 text-left\">#</th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      Candidate 1{\" \"}\n                      <span className=\"text-xs bg-yellow-500 px-2 py-0.5 rounded-full\">\n                        Initiator\n                      </span>\n                    </th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      School 1\n                    </th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      Candidate 2\n                    </th>\n                    <th className=\"border p-2 text-left bg-blue-50\">\n                      School 2\n                    </th>\n                    <th className=\"border p-2 text-left\">Users status</th>\n                    <th className=\"border p-2 text-left\">Dates</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {this.state.permutations.map(\n                    (el: PermutationItem__Interface, i) => {\n                      // return <PermutationItem key={i} permutation={el} />;\n                      let user1 = el.usersInfo.find(\n                        (itm) => itm.user_id === el.user_one\n                      );\n                      let user2 = el.usersInfo.find(\n                        (itm) => itm.user_id === el.user_two\n                      );\n\n                      let school1 = el.schools.find(\n                        (itm) => itm.school_code === el.school_one\n                      );\n                      let school2 = el.schools.find(\n                        (itm) => itm.school_code === el.school_two\n                      );\n                      if (this.state.selected_permutation === el.permutation_id)\n                        return (\n                          <tr key={i} className=\"\">\n                            <td colSpan={30} className=\"pt-1\">\n                              <PermutationItem\n                                more\n                                permutation={el}\n                                // approveUser={this.userApprovePermutationUser}\n                                approveReb={this.approveRebPermutation}\n                                loading={\n                                  this.state.loading_approve ===\n                                  el.permutation_id\n                                    ? true\n                                    : false\n                                }\n                                close={() =>\n                                  this.setState({\n                                    selected_permutation: \"\",\n                                  })\n                                }\n                              />\n                            </td>\n                          </tr>\n                        );\n                      return (\n                        <Fragment key={i}>\n                          <tr>\n                            <td className=\"p-1\"></td>\n                          </tr>\n                          <tr\n                            className=\"hover:bg-blue-200 cursor-pointer bg-white my-2\"\n                            onClick={() =>\n                              this.setState({\n                                selected_permutation: el.permutation_id + \"\",\n                              })\n                            }\n                          >\n                            <td className=\"border p-2\">{i + 1}</td>\n                            <td className=\"border p-2 bg-blue-100 bg-opacity-20\">\n                              <h6 className=\"font-bold\">{user1?.full_name}</h6>\n                              <span\n                                title=\"Staff code\"\n                                className=\"text-sm text-gray-400\"\n                              >\n                                {user1?.staff_code}\n                              </span>\n                            </td>\n                            <td className=\"border p-2 bg-blue-200 bg-opacity-20\">\n                              <h6 className=\"font-bold\">\n                                {school1?.school_name}\n                              </h6>\n                              <span\n                                title=\"School code\"\n                                className=\"text-sm text-gray-400\"\n                              >\n                                {el.school_one}\n                              </span>\n                            </td>\n\n                            <td className=\"border p-2 bg-indigo-100 bg-opacity-20\">\n                              <h6 className=\"font-bold\">{user2?.full_name}</h6>\n                              <span\n                                title=\"Staff code\"\n                                className=\"text-sm text-gray-400\"\n                              >\n                                {user2?.staff_code}\n                              </span>\n                            </td>\n                            <td className=\"border p-2 bg-indigo-200 bg-opacity-20\">\n                              <h6 className=\"font-bold\">\n                                {school2?.school_name}\n                              </h6>\n                              <span\n                                title=\"School code\"\n                                className=\"text-sm text-gray-400\"\n                              >\n                                {el.school_two}\n                              </span>\n                            </td>\n\n                            <td className=\"border p-2\">\n                              <h6 className=\"text-sm\">\n                                User: <b>{el.permutation_status}</b>\n                              </h6>\n                              <hr />\n                              <h6 className=\"text-sm\">\n                                REB:{\" \"}\n                                <b\n                                  className={`${\n                                    el.reb_status === \"Approved\"\n                                      ? \"text-green-500\"\n                                      : \"\"\n                                  }`}\n                                >\n                                  {el.reb_status}\n                                </b>\n                              </h6>\n                            </td>\n\n                            <td className=\"border p-2\">\n                              <h6 className=\"text-sm\">\n                                Created: <b>{el.user_one_date}</b>\n                              </h6>\n                              <hr />\n                              <h6 className=\"text-sm\">\n                                User 2: <b>{el.user_two_date}</b>\n                              </h6>\n                              <hr />\n                              <h6 className=\"text-sm\">\n                                REB: <b>{el.user_two_date}</b>\n                              </h6>\n                            </td>\n                          </tr>\n                        </Fragment>\n                      );\n                    }\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const RebAprovePermutation = connect(\n  mapStateToProps,\n  {}\n)(_RebAprovePermutation);\n"],"sourceRoot":""}