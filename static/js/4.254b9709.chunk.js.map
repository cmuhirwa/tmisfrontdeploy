{"version":3,"sources":["actions/transfer.action.ts","types/StaffTermination.ts","components/TableLoading/TableLoading.tsx","components/Inputs/TextArea.tsx","containers/HRTermination/HRTermination.tsx","containers/HRTermination/HRViewTermination.tsx","containers/HRTermination/SuspensionItems.tsx","containers/HRTermination/TerminationItems.tsx","components/DownloadLink/DownloadLink.tsx","components/Inputs/InputFile.tsx"],"names":["FC_GetAllTransfers","district_id","callBack","dispatch","type","ActionTypes","GET_ALL_TRANSFER","payload","setAxiosToken","axios","get","APP_URL","res","needed_data","data","filter","item","requested_status","errorToText","FC_GetDistricts","district_code","district_name","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","console","log","error","FC_UploadSignedDocument","selectedUserId","selectedFile","doc_title","UPLOAD_SIGNED_DOCUMENT","teacher_transfer_id","mayor_letter","TerminationStatusEnum","TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","TextArea","onChange","value","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","labelColor","size","htmlFor","InputSize","HRTabsType","connect","FC_UpdateThisTermination","FC_GetAllTermination","useState","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","thisViewIsFor","thiTermination","requested_to_suspend_from","startDate","setStartDate","requested_to_suspend_to","endDate","setEndDate","uploadedFile","setUploadedFile","upload_percentage","setUpload_percentage","handleResponse","msg","SUSPENDED","isEmptyOrSpaces","status","uploadingPercentage","api_body","change_staff_status_id","decision","decided_to_suspend_from","decided_to_suspend_to","decided_by_comment","setTimeout","fff","Alert","theme","DashboardContainer","Heading","Button","onClick","setThiTermination","techer_name","school_name","school_code","reason_name","requested_by_comment","DATE","requested_by_date","PENDING","PENDING_SUSPENSION","REJECTED","DownloadLink","linkFor","first_id","last_id","title","decided_by_date","teacher_id","TERMINATED","style","width","TextInput","e","target","InputFile","files","thisFile","onFileChange","accept","acceptAllEnum","PDF","window","confirm","SuspensionItems","setThisStatus","setState","thisStatus","filterTerminations","allData","search","result","state","this","suspensionItems","length","InputSelect","loading","colSpan","req","i","setThisTermination","Component","TerminationItems","terminations","HRTermination","setLoading","setError","thisTermination","getTerminationById","allTermination","terminationId","find","componentDidMount","Loading","thisPage","terminationTab","auth","basic","this_URL","APP_URL_FILE","href","rel","supportedFileTypes","multiple","ALL"],"mappings":"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","file":"static/js/4.254b9709.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n  // TransferRequestTypesEnum,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n// import { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface UploadSignedDocumentAction {\n  type: ActionTypes.UPLOAD_SIGNED_DOCUMENT;\n  payload: {\n    teacher_transfer_id: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  district_id: string,\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: [],\n      });\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde/${district_id}`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      const needed_data = res.data.filter(\n        (item) => item.requested_status === \"APPROVED\"\n      );\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: needed_data,\n      });\n      callBack(false, needed_data, \"\");\n    } catch (error) {\n      // console.log(\" ----- ------  ------\");\n\n      // console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      // console.log(\"====================================\");\n      // console.log({ getAllTransfers: res });\n      // console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      // console.log(\"=================FC_GetTransferReasons===================\");\n      // console.log({ FC_GetTransferReasons: res });\n      // console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  // callBack(true, null, \"\");\n  // try {\n  // setAxiosToken();\n  // const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n  // console.log(\"=================FC_GetDistricts===================\");\n  // console.log({ FC_GetDistricts: res });\n  // console.log(\"=================FC_GetDistricts===================\");\n\n  // * save data\n  callBack(\n    false,\n    [\n      {\n        district_code: \"11\",\n        district_name: \"Nyarugenge\",\n      },\n      {\n        district_code: \"12\",\n        district_name: \"Gasabo\",\n      },\n      {\n        district_code: \"13\",\n        district_name: \"Kicukiro\",\n      },\n      {\n        district_code: \"21\",\n        district_name: \"Nyanza\",\n      },\n      {\n        district_code: \"22\",\n        district_name: \"Gisagara\",\n      },\n      {\n        district_code: \"23\",\n        district_name: \"Nyaruguru\",\n      },\n      {\n        district_code: \"24\",\n        district_name: \"Huye\",\n      },\n      {\n        district_code: \"25\",\n        district_name: \"Nyamagabe\",\n      },\n      {\n        district_code: \"26\",\n        district_name: \"Ruhango\",\n      },\n      {\n        district_code: \"27\",\n        district_name: \"Muhanga\",\n      },\n      {\n        district_code: \"28\",\n        district_name: \"Kamonyi\",\n      },\n      {\n        district_code: \"31\",\n        district_name: \"Karongi\",\n      },\n      {\n        district_code: \"32\",\n        district_name: \"Rutsiro\",\n      },\n      {\n        district_code: \"33\",\n        district_name: \"Rubavu\",\n      },\n      {\n        district_code: \"34\",\n        district_name: \"Nyabihu\",\n      },\n      {\n        district_code: \"35\",\n        district_name: \"Ngororero\",\n      },\n      {\n        district_code: \"36\",\n        district_name: \"Rusizi\",\n      },\n      {\n        district_code: \"37\",\n        district_name: \"Nyamasheke\",\n      },\n      {\n        district_code: \"41\",\n        district_name: \"Rulindo\",\n      },\n      {\n        district_code: \"42\",\n        district_name: \"Gakenke\",\n      },\n      {\n        district_code: \"43\",\n        district_name: \"Musanze\",\n      },\n      {\n        district_code: \"44\",\n        district_name: \"Burera\",\n      },\n      {\n        district_code: \"45\",\n        district_name: \"Gicumbi\",\n      },\n      {\n        district_code: \"51\",\n        district_name: \"Rwamagana\",\n      },\n      {\n        district_code: \"52\",\n        district_name: \"Nyagatare\",\n      },\n      {\n        district_code: \"53\",\n        district_name: \"Gatsibo\",\n      },\n      {\n        district_code: \"54\",\n        district_name: \"Kayonza\",\n      },\n      {\n        district_code: \"55\",\n        district_name: \"Kirehe\",\n      },\n      {\n        district_code: \"56\",\n        district_name: \"Ngoma\",\n      },\n      {\n        district_code: \"57\",\n        district_name: \"Bugesera\",\n      },\n    ],\n    \"\"\n  );\n  // } catch (error) {\n  //   console.log(error);\n  //   callBack(false, null, errorToText(error));\n  //   callBack(\n  //     false,\n  //     errorToText(error, () => {})\n  //   );\n  // }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_UploadSignedDocument = (\n  selectedUserId: string,\n  selectedFile: File,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    // await FC_UploadFile(\n    //   selectedFile,\n    //   (\n    //     status: boolean,\n    //     uploadingPercentage: number,\n    //     data: string | null,\n    //     msg: string\n    //   ) => {\n    //     callBack(status, \"\");\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     console.log({ data });\n    //     console.log(\"==================&&&&&&&&&&&&&==================\");\n    //     if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n    //     else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n    //     return;\n    //   }\n    // );\n    console.log(\"==================doc_title==================\");\n    console.log({ doc_title });\n    console.log(\"==================doc_title==================\");\n    // if (!isEmptyOrSpaces(doc_title)) {\n    callBack(true, \"\");\n    // const data = {\n    //   teacher_transfer_id: selectedUserId,\n    //   mayor_letter: selectedFile,\n    // };\n\n    const formData = new FormData();\n    formData.append(\"teacher_transfer_id\", selectedUserId);\n    formData.append(\"mayor_letter\", selectedFile);\n\n    console.log(\"==================*********************==================\");\n    console.log({ doc_title });\n    console.log(\"==================*********************==================\");\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<{ mayor_letter: string; message: string }>(\n        `${APP_URL}/teachertransfers/outgoing`,\n        formData\n      );\n      console.log(\"Uploaded document: \", res.data);\n      dispatch<UploadSignedDocumentAction>({\n        type: ActionTypes.UPLOAD_SIGNED_DOCUMENT,\n        payload: {\n          teacher_transfer_id: selectedUserId,\n          mayor_letter: res.data.mayor_letter,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      callBack(false, errorToText(error));\n    }\n    // }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","export type APITerminationType = {\n  change_staff_status_id: string;\n  teacher_id: string;\n  techer_name: string;\n  school_code: string;\n  school_name: string;\n  reason_name: string;\n  requested_by_comment: string;\n  requested_to_suspend_from: string | null;\n  requested_to_suspend_to: string | null;\n  requested_by_date: string;\n  decided_by_comment: string | null;\n  decided_to_suspend_from: string | null;\n  decided_to_suspend_to: string | null;\n  decided_by_date: string | null;\n  mayor_letter: string | null;\n  status: TerminationStatusEnum;\n};\n\nexport type TerminationReasonType = {\n  termination_reason_id: string;\n  reason_name: string;\n};\n\nexport type SuspensionReasonType = {\n  suspension_reason_id: string;\n  reason_name: string;\n};\n\nexport enum TerminationStatusEnum {\n  PENDING = \"PENDING TERMINATION\",\n  TERMINATED = \"TERMINATED\",\n  PENDING_SUSPENSION = \"PENDING SUSPENTION\",\n  SUSPENDED = \"SUSPENDED\",\n  REJECTED = \"REJECTED\",\n}\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype TextAreaProps = {\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst TextArea: FC<TextAreaProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n  size = \"md\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <textarea\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TextArea;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, FC_GetAllTermination } from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { TerminationReducerType } from \"../../reducers/termination.reducer\";\nimport { APITerminationType } from \"../../types/StaffTermination\";\nimport { isEmptyOrSpaces } from \"../../utils/functions\";\nimport HRViewTermination from \"./HRViewTermination\";\nimport SuspensionItems from \"./SuspensionItems\";\nimport TerminationItems from \"./TerminationItems\";\n\nexport enum HRTabsType {\n  terminationTab = \"Staff Termination\",\n  suspensionTab = \"Staff Suspension\",\n}\n\ntype HRTerminationProps = {\n  auth: Auth;\n  basic: Basic;\n  terminations: TerminationReducerType;\n  FC_GetAllTermination: Function;\n  thisPage: HRTabsType;\n};\n\ntype HRTerminationState = {\n  loading: boolean;\n  error: {\n    target: \"requests-error\" | \"main-success\" | \"main-error\" | null;\n    msg: string;\n  };\n  thisTermination: APITerminationType | null;\n};\n\nclass HRTermination extends Component<HRTerminationProps, HRTerminationState> {\n  constructor(props: HRTerminationProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      thisTermination: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setError = (value: {\n    target: \"requests-error\" | \"main-success\" | \"main-error\" | null;\n    msg: string;\n  }) => {\n    this.setState({ error: value });\n  };\n\n  setThisTermination = (value: APITerminationType | null) => {\n    this.setState({ thisTermination: value });\n  };\n\n  getTerminationById = (\n    allTermination: APITerminationType[],\n    terminationId: string\n  ) => {\n    return allTermination.find(\n      (item) => item.change_staff_status_id === terminationId\n    );\n  };\n\n  componentDidMount = () => {\n    this.props.FC_GetAllTermination(\n      \"hr\",\n      (status: boolean, data: APITerminationType[] | null, msg: string) => {\n        this.setLoading(status);\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setError({\n            target: \"main-error\",\n            msg: msg,\n          });\n      }\n    );\n  };\n\n  render() {\n    if (this.state.loading)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.thisTermination === null ? (\n          <DashboardContainer>\n            <Heading>{this.props.thisPage}</Heading>\n            {/* <div className=\"flex flex-row items-center mt-2\">\n              {Object.values(HRTabsType).map((item, i) => (\n                <div\n                  key={i}\n                  onClick={() =>\n                    !this.state.loading && this.setSelectedTab(item)\n                  }\n                  className={`animate__animated ${\n                    this.state.selectedTab === item\n                      ? \"bg-accent-400 border-accent-900 text-accent-900 animate__zoomIn animate__faster\"\n                      : \"bg-white border-white text-gray-600\"\n                  } hover:bg-accent-100 px-4 py-2 ${\n                    this.state.loading ? \"cursor-wait\" : \"cursor-pointer\"\n                  } font-bold border-b-4 hover:border-accent-900 hover:text-accent-900 rounded-t mt-1 mx-1`}\n                >\n                  {item}\n                </div>\n              ))}\n            </div> */}\n            {this.props.thisPage === HRTabsType.terminationTab ? (\n              <TerminationItems\n                terminations={this.props.terminations.allTermination}\n                loading={this.state.loading}\n                setThisTermination={this.setThisTermination}\n              />\n            ) : (\n              <SuspensionItems\n                suspensionItems={this.props.terminations.allTermination}\n                loading={this.state.loading}\n                setThisTermination={this.setThisTermination}\n              />\n            )}\n          </DashboardContainer>\n        ) : (\n          <HRViewTermination\n            setThiTermination={this.setThisTermination}\n            thiTermination={\n              this.getTerminationById(\n                this.props.terminations.allTermination!,\n                this.state.thisTermination.change_staff_status_id\n              )!\n            }\n            thisViewIsFor={\n              this.props.thisPage === HRTabsType.terminationTab\n                ? \"termination\"\n                : \"suspension\"\n            }\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  terminations,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  terminations: TerminationReducerType;\n} => {\n  return { auth: auth, basic: basic, terminations };\n};\nexport default connect(mapStateToProps, { FC_GetAllTermination })(\n  HRTermination\n);\n","import React, { useState } from \"react\";\n// import { FaFileDownload } from \"react-icons/fa\";\n// import { ImAttachment } from \"react-icons/im\";\nimport { MdOutlineInfo, MdPersonOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_GetAllTermination,\n  FC_UpdateThisTermination,\n  TerminationResponseType,\n} from \"../../actions\";\nimport { FC_UploadFile } from \"../../actions/transfer.action\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport DownloadLink from \"../../components/DownloadLink/DownloadLink\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputFile, { acceptAllEnum } from \"../../components/Inputs/InputFile\";\nimport TextArea from \"../../components/Inputs/TextArea\";\nimport TextInput from \"../../components/Inputs/TextInput\";\n// import { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, isEmptyOrSpaces } from \"../../utils/functions\";\n\ntype HRViewTerminationProps = {\n  setThiTermination: (value: APITerminationType | null) => void;\n  thiTermination: APITerminationType;\n  FC_UpdateThisTermination: Function;\n  FC_GetAllTermination: Function;\n  thisViewIsFor: \"termination\" | \"suspension\";\n};\n\nconst HRViewTermination: React.FC<HRViewTerminationProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<TerminationStatusEnum | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element:\n      | \"main-success\"\n      | \"main-error\"\n      | \"action\"\n      | \"comment\"\n      | \"start_date\"\n      | \"end_date\"\n      | \"approved_doc\";\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const [startDate, setStartDate] = useState<string>(\n    props.thisViewIsFor === \"suspension\" &&\n      props.thiTermination.requested_to_suspend_from\n      ? props.thiTermination.requested_to_suspend_from\n      : \"\"\n  );\n  const [endDate, setEndDate] = useState<string>(\n    props.thisViewIsFor === \"suspension\" &&\n      props.thiTermination.requested_to_suspend_to\n      ? props.thiTermination.requested_to_suspend_to\n      : \"\"\n  );\n\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [upload_percentage, setUpload_percentage] = useState<number>(0);\n\n  // const doUpload = async (uploadedFile: File):string|undefined => {\n  //   let result= await FC_UploadFile(\n  //     uploadedFile,\n  //     (\n  //       status: boolean,\n  //       uploadingPercentage: number,\n  //       data: string | null,\n  //       msg: string\n  //     ) => {\n  //       setLoadingRequest(status);\n  //       if (status) setUpload_percentage(uploadingPercentage);\n  //       if (!status && isEmptyOrSpaces(msg) && data !== null) return data;\n  //       else if (!status && !isEmptyOrSpaces(msg))\n  //         setFormError({\n  //           element: \"main-error\",\n  //           msg: msg,\n  //         });\n  //     }\n  //   );\n  //   return result\n  // };\n\n  const handleResponse = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Suspension start-date validation\n    if (\n      props.thisViewIsFor === \"suspension\" &&\n      actionTaken === TerminationStatusEnum.SUSPENDED &&\n      isEmptyOrSpaces(startDate)\n    ) {\n      setFormError({\n        element: \"start_date\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Suspension end-date validation\n    if (\n      props.thisViewIsFor === \"suspension\" &&\n      actionTaken === TerminationStatusEnum.SUSPENDED &&\n      isEmptyOrSpaces(endDate)\n    ) {\n      setFormError({\n        element: \"end_date\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Document validation\n    if (uploadedFile === null) {\n      setFormError({\n        element: \"approved_doc\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    // Comment validation\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let doc_title: string = \"\";\n    await FC_UploadFile(\n      uploadedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        setLoadingRequest(status);\n        if (status) setUpload_percentage(uploadingPercentage);\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg))\n          setFormError({\n            element: \"main-error\",\n            msg: msg,\n          });\n      }\n    );\n\n    if (!isEmptyOrSpaces(doc_title)) {\n      const api_body: TerminationResponseType = {\n        change_staff_status_id: props.thiTermination.change_staff_status_id,\n        decision: actionTaken,\n        decided_to_suspend_from:\n          props.thisViewIsFor === \"suspension\" &&\n          actionTaken === TerminationStatusEnum.SUSPENDED\n            ? startDate\n            : \"\",\n        decided_to_suspend_to:\n          props.thisViewIsFor === \"suspension\" &&\n          actionTaken === TerminationStatusEnum.SUSPENDED\n            ? endDate\n            : \"\",\n        decided_by_comment: responseMsg,\n        mayor_letter: doc_title,\n      };\n      setLoadingRequest(true);\n      props.FC_UpdateThisTermination(\n        api_body,\n        (status: boolean, msg: string) => {\n          if (status)\n            setFormError({\n              element: \"main-success\",\n              msg: \"Response has been successful sent!\",\n            });\n          // props.FC_GetAllTermination(\n          //   \"hr\",\n          //   (status: boolean, data: APITerminationType[] | null, msg: string) => {\n          //     if (status)\n          //     else\n          //       setFormError({\n          //         element: \"main-error\",\n          //         msg: msg,\n          //       });\n          //   }\n          // );\n          else\n            setFormError({\n              element: \"main-error\",\n              msg: msg,\n            });\n        }\n      );\n\n      setActionTaken(null);\n      setTimeout(() => {\n        setFormError(null);\n        setResponseMsg(\"\");\n        // props.setThiTermination(null);\n      }, 2000);\n      setLoadingRequest(false);\n    }\n  };\n\n  const onFileChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setFormError(null);\n\n    // check if the file is available\n    if (e.target.files === null) {\n      setUploadedFile(null);\n      return setFormError({\n        msg: \"Please select a valid file\",\n        element: \"approved_doc\",\n      });\n    }\n\n    const thisFile = e.target.files[0];\n\n    // check the file type\n    if (thisFile.type !== \"application/pdf\") {\n      setUploadedFile(null);\n      return setFormError({\n        msg: \"The system accept pdf only\",\n        element: \"approved_doc\",\n      });\n    }\n\n    // check if the size is valued\n    if (thisFile.size <= 0) {\n      setUploadedFile(null);\n      return setFormError({\n        msg: `Invalid file, Please choose a real file`,\n        element: \"approved_doc\",\n      });\n    }\n\n    // Add image\n    setUploadedFile(thisFile);\n    setFormError(null);\n  };\n\n  console.log(\"==================props.thiTermination==================\");\n  console.log({ fff: props.thiTermination });\n  console.log(\"==================props.thiTermination==================\");\n\n  return (\n    <>\n      {formError && formError.element === \"main-success\" && (\n        <Alert theme=\"success\">{formError.msg}</Alert>\n      )}\n      {formError && formError.element === \"main-error\" && (\n        <Alert theme=\"danger\">{formError.msg}</Alert>\n      )}\n      <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>View {props.thisViewIsFor} progress</Heading>\n          </div>\n          <div className=\"\">\n            <Button\n              onClick={() => props.setThiTermination(null)}\n              theme=\"default\"\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n        {/* User info ============ */}\n        <div className=\"bg-white p-3 shadow-sm rounded-sm\">\n          <div className=\"flex items-center space-x-2 font-semibold text-gray-900 leading-8\">\n            <span className=\"text-primary-800\">\n              <MdPersonOutline size={25} />\n            </span>\n            <span className=\"tracking-wide\">Staff info</span>\n          </div>\n          <div className=\"text-gray-700\">\n            <div className=\"grid md:grid-cols-2 text-sm\">\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">Full Name</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.techer_name}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">School</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.school_name}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">School code</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.school_code}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* User comment ============ */}\n        <div className=\"bg-white p-3 border rounded\">\n          <div className=\"flex items-center px-2 py-1 bg-gray-200 rounded\">\n            <MdOutlineInfo className=\"w-8\" />\n            <p>{props.thiTermination.reason_name}</p>\n          </div>\n          <div className=\"flex flex-col mt-3\">\n            <span className=\"text-sm text-gray-500\">Comment:</span>\n            <p className=\"text-base\">\n              {props.thiTermination.requested_by_comment}\n            </p>\n          </div>\n          {props.thisViewIsFor === \"suspension\" && (\n            <div className=\"flex flex-row items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">Start date:</span>\n              <p className=\"text-base\">\n                {props.thiTermination.requested_to_suspend_from &&\n                !isEmptyOrSpaces(props.thiTermination.requested_to_suspend_from)\n                  ? DATE(props.thiTermination.requested_to_suspend_from)\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n          {props.thisViewIsFor === \"suspension\" && (\n            <div className=\"flex flex-row items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">End date:</span>\n              <p className=\"text-base\">\n                {props.thiTermination.requested_to_suspend_to &&\n                !isEmptyOrSpaces(props.thiTermination.requested_to_suspend_to)\n                  ? DATE(props.thiTermination.requested_to_suspend_to)\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center gap-2\">\n            <span className=\"text-sm text-gray-500\">Request date:</span>\n            <p className=\"text-base\">\n              {DATE(props.thiTermination.requested_by_date)}\n            </p>\n          </div>\n        </div>\n\n        {/* Feedback ============ */}\n        {props.thiTermination.status !== TerminationStatusEnum.PENDING &&\n          props.thiTermination.status !==\n            TerminationStatusEnum.PENDING_SUSPENSION && (\n            <section>\n              <span className=\"text-sm text-gray-500\">Feedback:</span>\n              <div className=\"bg-white p-3 border rounded\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm text-gray-500\">Decision:</span>\n                  <p className=\"text-base\">{props.thiTermination.status}</p>\n                </div>\n                {props.thisViewIsFor === \"suspension\" && (\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-gray-500\">Start date:</span>\n                    <p className=\"text-base\">\n                      {props.thiTermination.decided_to_suspend_from &&\n                      !isEmptyOrSpaces(\n                        props.thiTermination.decided_to_suspend_from\n                      )\n                        ? DATE(props.thiTermination.decided_to_suspend_from)\n                        : \"-\"}\n                    </p>\n                  </div>\n                )}\n                {props.thisViewIsFor === \"suspension\" && (\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-gray-500\">End date:</span>\n                    <p className=\"text-base\">\n                      {props.thiTermination.decided_to_suspend_to &&\n                      !isEmptyOrSpaces(\n                        props.thiTermination.decided_to_suspend_to\n                      )\n                        ? DATE(props.thiTermination.decided_to_suspend_to)\n                        : \"-\"}\n                    </p>\n                  </div>\n                )}\n                {props.thiTermination.status !==\n                  TerminationStatusEnum.REJECTED &&\n                  props.thiTermination.mayor_letter && (\n                    <DownloadLink\n                      linkFor=\"uploaded\"\n                      first_id={props.thiTermination.mayor_letter}\n                      last_id={\"\"}\n                      title={\"Confirmation letter\"}\n                    />\n                  )}\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm text-gray-500\">Comment:</span>\n                  <p className=\"text-base\">\n                    {props.thiTermination.decided_by_comment}\n                  </p>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <span className=\"text-sm text-gray-500\">Done on:</span>\n                  <p className=\"text-base\">\n                    {props.thiTermination.decided_by_date\n                      ? DATE(props.thiTermination.decided_by_date)\n                      : \"-\"}\n                  </p>\n                </div>\n              </div>\n            </section>\n          )}\n\n        {/* FOOTER INITIAL ========================================== */}\n        {!actionTaken && (\n          <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n            {/* SHOWING STATUS ===================================== */}\n            <div className=\"mx-4 my-4\">\n              <span\n                className={`${\n                  props.thiTermination.status ===\n                    TerminationStatusEnum.PENDING ||\n                  props.thiTermination.status ===\n                    TerminationStatusEnum.PENDING_SUSPENSION\n                    ? \"text-yellow-700\"\n                    : props.thiTermination.status ===\n                      TerminationStatusEnum.REJECTED\n                    ? \"text-red-700\"\n                    : \"text-green-700\"\n                } italic font-semibold`}\n              >\n                {props.thiTermination.status ===\n                  TerminationStatusEnum.PENDING ||\n                props.thiTermination.status ===\n                  TerminationStatusEnum.PENDING_SUSPENSION\n                  ? \"Pending\"\n                  : props.thiTermination.status ===\n                    TerminationStatusEnum.REJECTED\n                  ? \"Canceled\"\n                  : \"Confirmed\"}\n              </span>\n            </div>\n\n            {(props.thiTermination.status === TerminationStatusEnum.PENDING ||\n              props.thiTermination.status ===\n                TerminationStatusEnum.PENDING_SUSPENSION) && (\n              <div className=\"flex items-center gap-2 px-2\">\n                <DownloadLink\n                  first_id={props.thiTermination.change_staff_status_id}\n                  last_id={props.thiTermination.teacher_id}\n                  title={\n                    props.thisViewIsFor === \"suspension\"\n                      ? \"Suspension letter\"\n                      : \"Termination letter\"\n                  }\n                  linkFor={props.thisViewIsFor}\n                />\n                <Button\n                  theme=\"danger\"\n                  type=\"button\"\n                  onClick={() => {\n                    setActionTaken(TerminationStatusEnum.REJECTED);\n                  }}\n                >\n                  Reject\n                </Button>\n                <Button\n                  type=\"button\"\n                  theme=\"success\"\n                  onClick={() => {\n                    setActionTaken(\n                      props.thisViewIsFor === \"termination\"\n                        ? TerminationStatusEnum.TERMINATED\n                        : TerminationStatusEnum.SUSPENDED\n                    );\n                  }}\n                >\n                  Accept\n                </Button>\n              </div>\n            )}\n          </section>\n        )}\n        {/* END FOOTER INITIAL ========================================== */}\n\n        {actionTaken && (\n          <section className=\"my-3 overflow-x-auto\">\n            {upload_percentage !== 0 && (\n              <div className=\"p-2\">\n                <div className=\"bg-accent-400 appearance-none rounded w-full border-bg-accent-800 border-2 transition-all duration-500 ease-in-out\">\n                  <div\n                    className=\"bg-accent-800 rounded-sm text-white text-center py-2 transition-all duration-500 ease-in-out\"\n                    style={{\n                      width: upload_percentage + \"%\",\n                    }}\n                  >\n                    <span className=\"text-gray-700 mx-1\">Uploading...</span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"italic text-gray-700 text-base mx-5\">\n              Selected decision:{\" \"}\n              <span\n                className={`font-semibold text-lg ${\n                  actionTaken === TerminationStatusEnum.TERMINATED ||\n                  actionTaken === TerminationStatusEnum.SUSPENDED\n                    ? \"text-blue-700\"\n                    : \"text-yellow-800\"\n                }`}\n              >\n                {actionTaken === TerminationStatusEnum.TERMINATED ||\n                actionTaken === TerminationStatusEnum.SUSPENDED\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {/* right part */}\n            <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n              <div className=\"w-full px-2\">\n                {props.thisViewIsFor === \"suspension\" &&\n                  actionTaken === TerminationStatusEnum.SUSPENDED && (\n                    <div className=\"flex flex-wrap\">\n                      <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                        <TextInput\n                          disabled={loadingRequest}\n                          label=\"Start date\"\n                          name=\"start_date\"\n                          type=\"date\"\n                          value={startDate}\n                          placeholder={\"Suspension starting date\"}\n                          className=\"p-2\"\n                          onChange={(e) => {\n                            setStartDate(e.target.value);\n                            setFormError(null);\n                          }}\n                          error={\n                            formError && formError.element === \"start_date\"\n                              ? formError.msg\n                              : \"\"\n                          }\n                        />\n                      </div>\n\n                      <div className=\"w-full lg:w-1/2 py-1 px-3\">\n                        <TextInput\n                          disabled={loadingRequest}\n                          label=\"End date\"\n                          name=\"end_date\"\n                          type=\"date\"\n                          value={endDate}\n                          placeholder={\"Suspension ending date\"}\n                          className=\"p-2\"\n                          onChange={(e) => {\n                            setEndDate(e.target.value);\n                            setFormError(null);\n                          }}\n                          error={\n                            formError && formError.element === \"end_date\"\n                              ? formError.msg\n                              : \"\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n                <div className=\"w-full py-1 px-2\">\n                  <InputFile\n                    disabled={loadingRequest}\n                    label=\"Suspension document\"\n                    name=\"approved_doc\"\n                    className=\"p-2\"\n                    onChange={(e) => onFileChange(e)}\n                    error={\n                      formError && formError.element === \"approved_doc\"\n                        ? formError.msg\n                        : \"\"\n                    }\n                    type={\"file\"}\n                    accept={acceptAllEnum.PDF}\n                  />\n                </div>\n                <div className=\"w-full py-1 px-2\">\n                  <TextArea\n                    disabled={loadingRequest}\n                    label=\"Comment\"\n                    name=\"comment\"\n                    value={responseMsg}\n                    placeholder={\"Reason of your decision...\"}\n                    className=\"p-2\"\n                    onChange={(e) => {\n                      setResponseMsg(e.target.value);\n                      setFormError(null);\n                    }}\n                    error={\n                      formError && formError.element === \"comment\"\n                        ? formError.msg\n                        : \"\"\n                    }\n                  />\n                </div>\n                <div className=\"flex items-center gap-1 max-w-full px-2 float-right\">\n                  <Button\n                    theme=\"default\"\n                    onClick={() => {\n                      setResponseMsg(\"\");\n                      setActionTaken(null);\n                      setFormError(null);\n                    }}\n                    disabled={loadingRequest}\n                  >\n                    <span>Back</span>\n                  </Button>\n                  <Button\n                    disabled={loadingRequest}\n                    theme=\"primary\"\n                    onClick={() =>\n                      window.confirm(\n                        `Are you sure you want to ${\n                          actionTaken === TerminationStatusEnum.TERMINATED\n                            ? \"terminate this staff?\"\n                            : actionTaken === TerminationStatusEnum.SUSPENDED\n                            ? \"suspend this staff?\"\n                            : \"rejected this request?\"\n                        }`\n                      ) && handleResponse()\n                    }\n                  >\n                    {loadingRequest ? (\n                      <div className=\"\">Loading...</div>\n                    ) : (\n                      <span>Confirm</span>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </div>\n            {/* end right part */}\n          </section>\n        )}\n      </DashboardContainer>\n    </>\n  );\n};\n\nexport default connect(null, {\n  FC_UpdateThisTermination,\n  FC_GetAllTermination,\n})(HRViewTermination);\n","import React, { Component } from \"react\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, search } from \"../../utils/functions\";\n\ntype SuspensionItemsProps = {\n  suspensionItems: APITerminationType[] | null;\n  loading: boolean;\n  setThisTermination: (value: APITerminationType | null) => void;\n};\ntype SuspensionItemsState = {\n  search: string;\n  thisStatus: TerminationStatusEnum | \"all\";\n};\n\nclass SuspensionItems extends Component<\n  SuspensionItemsProps,\n  SuspensionItemsState\n> {\n  constructor(props: SuspensionItemsProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      thisStatus: \"all\",\n    };\n  }\n\n  setThisStatus = (value: TerminationStatusEnum | \"all\") => {\n    this.setState({ thisStatus: value });\n  };\n\n  filterTerminations = (\n    allData: APITerminationType[],\n    search: TerminationStatusEnum | \"all\"\n  ): APITerminationType[] => {\n    let result: APITerminationType[] = allData;\n    result = allData.filter(\n      (item) =>\n        item.status !== TerminationStatusEnum.PENDING &&\n        item.status !== TerminationStatusEnum.TERMINATED &&\n        item.requested_to_suspend_from !== null\n    );\n    if (search !== \"all\") {\n      result = result.filter((item) => item.status === search);\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n          <div className=\"w-full sm:flex-1 pr-2\">\n            <TextInput\n              error=\"\"\n              label=\"Search\"\n              name=\"\"\n              type=\"search\"\n              onChange={(e) => this.setState({ search: e.target.value })}\n              placeholder=\"Search by name, reason, date, status\"\n              value={this.state.search}\n              size=\"sm\"\n              disabled={\n                this.props.suspensionItems === null ||\n                this.filterTerminations(\n                  this.props.suspensionItems,\n                  this.state.thisStatus\n                ).length === 0\n              }\n            />\n          </div>\n          <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                {\n                  title: \"Pending\",\n                  value: TerminationStatusEnum.PENDING_SUSPENSION,\n                },\n                {\n                  title: \"Suspended\",\n                  value: TerminationStatusEnum.SUSPENDED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div>\n          {/* {this.props.suspensionItems && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.suspensionItems,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n        </div>\n        <div className=\"my-3 w-full overflow-x-auto\">\n          <table className=\"w-full text-left table-auto\">\n            <thead>\n              <tr>\n                <th className=\"p-2\">#</th>\n                <th className=\"p-2\">Names</th>\n                <th className=\"p-2\">School</th>\n                <th className=\"p-2\">Reason</th>\n                <th className=\"p-2\">Date</th>\n                <th className=\"p-2\">Status</th>\n                <th className=\"p-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.loading ? (\n                <TableLoading cols={6} />\n              ) : this.props.suspensionItems === null ||\n                this.filterTerminations(\n                  this.props.suspensionItems,\n                  this.state.thisStatus\n                ).length <= 0 ? (\n                <tr>\n                  <td\n                    colSpan={8}\n                    className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                  >\n                    <Heading size=\"md\" className=\"opacity-60 font-light\">\n                      No results found\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                search(\n                  this.filterTerminations(\n                    this.props.suspensionItems,\n                    this.state.thisStatus\n                  ),\n                  this.state.search\n                ).map((req: APITerminationType, i: number) => {\n                  return (\n                    <tr\n                      className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                      onClick={() => this.props.setThisTermination(req)}\n                      key={i + req.change_staff_status_id}\n                    >\n                      <td className=\"p-2\">{i + 1}</td>\n                      <td className=\"p-2\">{req.techer_name}</td>\n                      <td className=\"p-2\">{req.school_name}</td>\n                      <td className=\"p-2\">{req.reason_name}</td>\n                      <td className=\"p-2\">\n                        {req.status === TerminationStatusEnum.PENDING_SUSPENSION\n                          ? DATE(req.requested_by_date)\n                          : req.decided_by_date && DATE(req.decided_by_date)}\n                      </td>\n                      <td className=\"p-2\">{req.status}</td>\n                      <td className=\"p-1 text-center\">\n                        <Button\n                          // className=\"border border-accent-900 bg-white text-accent-900 group-hover:text-white group-hover:bg-accent-900\"\n                          onClick={() => this.props.setThisTermination(req)}\n                        >\n                          View\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuspensionItems;\n","import React, { Component } from \"react\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, isEmptyOrSpaces, search } from \"../../utils/functions\";\n\ntype TerminationItemsProps = {\n  terminations: APITerminationType[] | null;\n  loading: boolean;\n  setThisTermination: (value: APITerminationType | null) => void;\n};\ntype TerminationItemsState = {\n  search: string;\n  thisStatus: TerminationStatusEnum | \"all\";\n};\n\nclass TerminationItems extends Component<\n  TerminationItemsProps,\n  TerminationItemsState\n> {\n  constructor(props: TerminationItemsProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      thisStatus: \"all\",\n    };\n  }\n\n  setThisStatus = (value: TerminationStatusEnum | \"all\") => {\n    this.setState({ thisStatus: value });\n  };\n\n  filterTerminations = (\n    allData: APITerminationType[],\n    search: TerminationStatusEnum | \"all\"\n  ): APITerminationType[] => {\n    console.log(\"====================================\");\n    console.log({ allData });\n    console.log(\"====================================\");\n\n    let result: APITerminationType[] = allData;\n    result = allData.filter(\n      (item) =>\n        item.status !== TerminationStatusEnum.PENDING_SUSPENSION &&\n        item.status !== TerminationStatusEnum.SUSPENDED &&\n        (item.requested_to_suspend_from === null ||\n          isEmptyOrSpaces(item.requested_to_suspend_from))\n    );\n    if (search !== \"all\") {\n      result = result.filter((item) => item.status === search);\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n          <div className=\"w-full sm:flex-1 pr-2\">\n            <TextInput\n              error=\"\"\n              label=\"Search\"\n              name=\"\"\n              type=\"search\"\n              onChange={(e) => this.setState({ search: e.target.value })}\n              placeholder=\"Search by name, reason, date, status\"\n              value={this.state.search}\n              size=\"sm\"\n              disabled={\n                this.props.terminations === null ||\n                this.filterTerminations(\n                  this.props.terminations,\n                  this.state.thisStatus\n                ).length === 0\n              }\n            />\n          </div>\n          <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                { title: \"Pending\", value: TerminationStatusEnum.PENDING },\n                {\n                  title: \"Terminated\",\n                  value: TerminationStatusEnum.TERMINATED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div>\n          {/* {this.props.terminations && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n        </div>\n        <div className=\"my-3 w-full overflow-x-auto\">\n          <table className=\"w-full text-left table-auto\">\n            <thead>\n              <tr>\n                <th className=\"p-2\">#</th>\n                <th className=\"p-2\">Names</th>\n                <th className=\"p-2\">School</th>\n                <th className=\"p-2\">Reason</th>\n                <th className=\"p-2\">Date</th>\n                <th className=\"p-2\">Status</th>\n                <th className=\"p-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.loading ? (\n                <TableLoading cols={6} />\n              ) : this.props.terminations === null ||\n                this.filterTerminations(\n                  this.props.terminations,\n                  this.state.thisStatus\n                ).length <= 0 ? (\n                <tr>\n                  <td\n                    colSpan={8}\n                    className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                  >\n                    <Heading size=\"md\" className=\"opacity-60 font-light\">\n                      No results found\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                search(\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ),\n                  this.state.search\n                ).map((req: APITerminationType, i: number) => {\n                  return (\n                    <tr\n                      className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                      onClick={() => this.props.setThisTermination(req)}\n                      key={i + req.change_staff_status_id}\n                    >\n                      <td className=\"p-2\">{i + 1}</td>\n                      <td className=\"p-2\">{req.techer_name}</td>\n                      <td className=\"p-2\">{req.school_name}</td>\n                      <td className=\"p-2\">{req.reason_name}</td>\n                      <td className=\"p-2\">\n                        {req.status === TerminationStatusEnum.PENDING\n                          ? DATE(req.requested_by_date)\n                          : req.decided_by_date && DATE(req.decided_by_date)}\n                      </td>\n                      <td className=\"p-2\">{req.status}</td>\n                      <td className=\"p-1 text-center\">\n                        <Button\n                          // className=\"border border-accent-900 bg-white text-accent-900 group-hover:text-white group-hover:bg-accent-900\"\n                          onClick={() => this.props.setThisTermination(req)}\n                        >\n                          View\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TerminationItems;\n","import React from \"react\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport Button from \"../Buttons/Button\";\n\ntype DownloadLinkProps = {\n  linkFor: \"uploaded\" | \"termination\" | \"suspension\" | \"transfer\";\n  first_id: string | number;\n  last_id: string | number;\n  title: string;\n};\n\nconst DownloadLink: React.FC<DownloadLinkProps> = (props) => {\n  const this_URL: string =\n    props.linkFor === \"uploaded\"\n      ? `${APP_URL_FILE}/${props.first_id}`\n      : `${APP_URL}/generateletter/${props.linkFor}/${props.first_id}/${props.last_id}`;\n  return (\n    <a\n      href={this_URL}\n      // className=\"py-2 px-4 text-md w-max font-bold rounded bg-primary-800 hover:bg-opacity-90 text-white flex items-center gap-2\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button\n        theme=\"primary-light\"\n        size=\"sm\"\n        className=\"flex items-center gap-1\"\n      >\n        <ImAttachment />\n        <span>{props.title}</span>\n      </Button>\n    </a>\n  );\n};\n\nexport default DownloadLink;\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\n// import { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\nexport enum supportedFileTypes {\n  PDF = \"PDF\",\n  IMAGES = \"IMAGES\",\n  ANY = \"ANY\",\n}\n\n// export const validateFileType = async (\n//   file: File,\n//   fileType: supportedFileTypes = supportedFileTypes.PDF\n// ) => {\n//   if (\n//     file.type !==\n//       \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" &&\n//     file.type !== \"application/vnd.ms-excel\" &&\n//     file.type !== \"text/csv\"\n//   ) {\n//     return setFormError({\n//       element: \"questions\",\n//       msg: \"Invalid file, Please choose excel file or svg file\",\n//     });\n//   } else {\n//     return null;\n//   }\n// };\n\nexport enum acceptAllEnum {\n  ALL = \"\",\n  IMAGES = \"image/*\",\n  EXCEL = \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n  PDF = \"application/pdf\",\n}\n\ntype InputFileProps = {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  error: string;\n  label: string;\n  disabled?: boolean;\n  type: \"file\" | \"image\";\n  name: string;\n  accept?: acceptAllEnum;\n  multiple?: boolean;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst InputFile: FC<InputFileProps> = ({\n  onChange,\n  error,\n  label,\n  multiple,\n  disabled = false,\n  accept = acceptAllEnum.ALL,\n  name,\n  type,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <input\n            name={name}\n            multiple={multiple}\n            accept={accept}\n            type={type}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputFile;\n"],"sourceRoot":""}