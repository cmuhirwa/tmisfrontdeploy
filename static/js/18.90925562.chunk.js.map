{"version":3,"sources":["components/Inputs/InputSelect.tsx","actions/transfer.action.ts","components/SelectCustom/SelectCustom.tsx","components/Inputs/TextArea.tsx","components/TableLoading/TableLoading.tsx","components/DownloadLink/DownloadLink.tsx","components/Inputs/InputFile.tsx","types/TransferTypes.ts","containers/Trensfer/Teacher/RequestForm.tsx","containers/Trensfer/Teacher/RequestView.tsx","containers/Trensfer/Teacher/index.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","FC_GetAllTransfers","callBack","dispatch","a","setAxiosToken","axios","get","APP_URL","res","console","log","getAllTransfers","type","ActionTypes","GET_ALL_TRANSFER","payload","errorToText","FC_GetMyTransfers","GET_MY_TRANSFER","FC_GetTransferReasons","GET_TRANSFER_REASON","FC_GetDistricts","FC_UploadFile","fileToUpload","number_percentage","formData","FormData","append","post","onUploadProgress","progressEvent","loaded","total","FC_GetSchoolByDistrict_2","district_code","user_id","FC_RespondLeave","selectedUserId","comment","selectedFile","decision","doc_title","status","uploadingPercentage","msg","isEmptyOrSpaces","teacher_transfer_id","outgoing_status","outgoing_dde_comment","mayor_letter","RESPOND_TO_LEAVE","FC_RespondTransfer","approved_school","requested_status","approved_school_id","school_code","requested_comment","RESPOND_TO_TRANSFER","FC_GetAllLeaves","GET_ALL_LEAVES","SelectCustom","loading","id","close","click","useState","searchText","setSearch","dataList","search","e","target","onClick","length","itm","key","TextArea","labelColor","TableLoading","props","displayCols","colsArray","index","cols","push","element","DownloadLink","this_URL","linkFor","APP_URL_FILE","first_id","last_id","href","rel","supportedFileTypes","acceptAllEnum","InputFile","multiple","accept","ALL","TransferRequestTypesEnum","RequestForm","componentDidMount","transferReasons","setState","districts","handleSchools","thisDistrict","auth","user","loadingSchools","schools","newData","filter","item","vacant_posts","getSchoolsForm","result","state","selectedDistrict","forEach","school","school_name","onFileChange","files","thisFile","onSubmitTeacherTransferReq","selectedSchool","thisReason","tranferReason","loadingRequest","upload_percentage","school_from_id","requested_school_id","teacher_reason_id","transfer_reason_id","teacher_comment","teacher_supporting_document","distrct_from_id","substring","district_to_id","transfer_type","INTERNAL","EXTERNAL","academic_year_id","setTimeout","setIsRequestFormOn","selectReason","this","Loading","DashboardContainer","Alert","theme","Heading","Button","el","district_name","reason_name","PDF","Component","connect","transfer","setLoadingRequest","setError","requesteTransferHandler","setTransferId","selectedTransfer","requested_school_name","DATE","teacher_requested_transfer_date","approved_school_name","incoming_decision_date","then","response","leavingRequestHandler","catch","err","outgoing_decision_date","isRequestFormOn","transferId","inMaintenance","isSchoolRequestedAllowed","myTransfers","find","inputSearch","TextInput","colSpan","requested_school_district","teacher_reason","requested","outGoing","RequestTransfer","basic"],"mappings":"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","file":"static/js/18.90925562.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label && (\n          <label\n            htmlFor=\"login-form-email\"\n            className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes, Qualifications } from \".\";\nimport { APP_URL } from \"../config/app.config\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolInfoType,\n  SchoolsType,\n  SchoolsType_2,\n  TransferLeaveType,\n  TransferRequestType,\n} from \"../types/TransferTypes\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { isEmptyOrSpaces } from \"../utils/functions\";\n\nexport type TransferReasonsType = {\n  transfer_reason_id: string;\n  reason_name: string;\n  status: string | null;\n};\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport interface GetAllTransferAction {\n  type: ActionTypes.GET_ALL_TRANSFER;\n  payload: TransferRequestType[] | null;\n}\n\nexport interface GetAllLeavesAction {\n  type: ActionTypes.GET_ALL_LEAVES;\n  payload: TransferLeaveType[] | null;\n}\n\nexport interface GetMyTransferAction {\n  type: ActionTypes.GET_MY_TRANSFER;\n  payload: RequestedTransfer[] | null;\n}\n\nexport interface GetQualificationAction {\n  type: ActionTypes.GET_QUALIFICATION;\n  payload: Qualifications[] | null;\n}\n\nexport interface RespondToLeaveAction {\n  type: ActionTypes.RESPOND_TO_LEAVE;\n  payload: {\n    teacher_transfer_id: string;\n    outgoing_status: \"REJECTED\" | \"APPROVED\";\n    outgoing_dde_comment: string;\n    mayor_letter: string;\n  };\n}\n\nexport interface RespondToTransferAction {\n  type: ActionTypes.RESPOND_TO_TRANSFER;\n  payload: {\n    teacher_transfer_id: string;\n    requested_status: \"REJECTED\" | \"APPROVED\";\n    approved_school: SchoolInfoType;\n    requested_comment: string;\n  };\n}\n\nexport interface GetTransferReasonsAction {\n  type: ActionTypes.GET_TRANSFER_REASON;\n  payload: TransferReasonsType[] | null;\n}\n\n// ------------------------------------\n\nexport type FT_GetAllTransfer = (\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllTransfers = (\n  callBack: (\n    status: boolean,\n    data: TransferRequestType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferRequestType[]>(\n        `${APP_URL}/teachertransfers/requesteddde`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetAllTransferAction>({\n        type: ActionTypes.GET_ALL_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetMyTransfer = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetMyTransfers = (\n  callBack: (\n    status: boolean,\n    data: RequestedTransfer[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<RequestedTransfer[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"====================================\");\n      console.log({ getAllTransfers: res });\n      console.log(\"====================================\");\n\n      // * save data\n      dispatch<GetMyTransferAction>({\n        type: ActionTypes.GET_MY_TRANSFER,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport type FT_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => void;\nexport const FC_GetTransferReasons = (\n  callBack: (status: boolean, msg: string) => void\n) => {\n  callBack(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferReasonsType[]>(\n        `${APP_URL}/teachertransfers/transferreasons`\n      );\n      console.log(\"=================FC_GetTransferReasons===================\");\n      console.log({ FC_GetTransferReasons: res });\n      console.log(\"=================FC_GetTransferReasons===================\");\n\n      // * save data\n      dispatch<GetTransferReasonsAction>({\n        type: ActionTypes.GET_TRANSFER_REASON,\n        payload: res.data,\n      });\n      callBack(false, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_GetDistricts = async (\n  callBack: (status: boolean, data: DistrictTypes[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<DistrictTypes[]>(`${APP_URL}/district`);\n    console.log(\"=================FC_GetDistricts===================\");\n    console.log({ FC_GetDistricts: res });\n    console.log(\"=================FC_GetDistricts===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n    //   callBack(\n    //     false,\n    //     errorToText(error, () => {})\n    //   );\n  }\n};\n\n// file upload function\nexport const FC_UploadFile = async (\n  fileToUpload: File,\n  callBack: (\n    status: boolean,\n    uploadingPercentage: number,\n    data: string | null,\n    msg: string\n  ) => void\n) => {\n  // Validation\n  let number_percentage: number = 0;\n  callBack(true, number_percentage, null, \"\");\n  try {\n    setAxiosToken();\n    const formData = new FormData();\n    formData.append(\"teacher_supporting_document\", fileToUpload);\n    const res = await axios.post<string>(\n      `${APP_URL}/teachertransfers/uploadSupportingDocument`,\n      formData,\n      {\n        onUploadProgress: (progressEvent: any) => {\n          number_percentage =\n            (+progressEvent?.loaded / +progressEvent.total) * 100;\n          callBack(true, number_percentage, null, \"\");\n        },\n      }\n    );\n    console.log(\"Uploaded document: \", res.data);\n    callBack(false, number_percentage, res.data, \"\");\n    // console.log(\"Questions: \", res);\n  } catch (error: any) {\n    console.error(error);\n    callBack(false, number_percentage, \"\", errorToText(error));\n  }\n};\n\n// load school by district\nexport const FC_GetSchoolByDistrict = async (\n  district_code: string,\n  callBack: (status: boolean, data: SchoolsType[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.get<SchoolsType[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`\n    );\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n    console.log({ FC_GetSchoolByDistrict: res });\n    console.log(\"=================FC_GetSchoolByDistrict===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport const FC_GetSchoolByDistrict_2 = async (\n  district_code: string,\n  user_id: string,\n  callBack: (status: boolean, data: SchoolsType_2[] | null, msg: string) => void\n) => {\n  callBack(true, null, \"\");\n  try {\n    setAxiosToken();\n    const res = await axios.post<SchoolsType_2[]>(\n      `${APP_URL}/teachertransfer/getschoolsperdistrict/${district_code}`,\n      {\n        user_id,\n      }\n    );\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n    console.log({ FC_GetSchoolByDistrict_2: res });\n    console.log(\"=================FC_GetSchoolByDistrict_2===================\");\n\n    // * save data\n    callBack(false, res.data, \"\");\n  } catch (error) {\n    console.log(error);\n    callBack(false, null, errorToText(error));\n  }\n};\n\nexport type FT_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetQualifications = (\n  callBack: (\n    status: boolean,\n    data: Qualifications[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<Qualifications[]>(\n        `${APP_URL}/teachertransfers/teacher`\n      );\n      console.log(\"================GET_QUALIFICATION====================\");\n      console.log({ GET_QUALIFICATION: res });\n      console.log(\"================GET_QUALIFICATION====================\");\n\n      // * save data\n      dispatch<GetQualificationAction>({\n        type: ActionTypes.GET_QUALIFICATION,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n\nexport const FC_RespondLeave = (\n  selectedUserId: string,\n  comment: string,\n  selectedFile: File,\n  decision: \"REJECTED\" | \"APPROVED\",\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(true, \"\");\n  let doc_title: string = \"\";\n  // FC_HandleUpload(selectedFile);\n\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    await FC_UploadFile(\n      selectedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        callBack(status, \"\");\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        console.log({ data });\n        console.log(\"==================&&&&&&&&&&&&&==================\");\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg)) callBack(false, msg);\n        return;\n      }\n    );\n    if (!isEmptyOrSpaces(doc_title)) {\n      callBack(true, \"\");\n      const data = {\n        teacher_transfer_id: selectedUserId,\n        outgoing_status: decision,\n        outgoing_dde_comment: comment,\n        mayor_letter: doc_title,\n      };\n\n      console.log(\"==================*********************==================\");\n      console.log({ doc_title });\n      console.log(\"==================*********************==================\");\n\n      try {\n        setAxiosToken();\n        const res = await axios.post<string>(\n          `${APP_URL}/teachertransfers/outgoing`,\n          data\n        );\n        console.log(\"Uploaded document: \", res.data);\n        dispatch<RespondToLeaveAction>({\n          type: ActionTypes.RESPOND_TO_LEAVE,\n          payload: data,\n        });\n        callBack(false, \"\");\n        // console.log(\"Questions: \", res);\n      } catch (error: any) {\n        console.error(error);\n        callBack(false, errorToText(error));\n      }\n    }\n  };\n};\n\nexport type FT_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => void;\nexport const FC_RespondTransfer = (\n  teacher_transfer_id: string,\n  approved_school: SchoolInfoType,\n  decision: \"REJECTED\" | \"APPROVED\",\n  comment: string,\n  callBack: (status: boolean, response_error: string) => void\n) => {\n  callBack(false, \"\");\n  return async (dispatch: Dispatch) => {\n    callBack(true, \"\");\n    const data = {\n      teacher_transfer_id: teacher_transfer_id,\n      requested_status: decision,\n      approved_school_id: approved_school.school_code,\n      requested_comment: comment,\n    };\n\n    try {\n      setAxiosToken();\n      const res = await axios.post<string>(\n        `${APP_URL}/teachertransfers/incoming`,\n        data\n      );\n      console.log(\"FC_RespondTransfer document: \", res.data);\n      dispatch<RespondToTransferAction>({\n        type: ActionTypes.RESPOND_TO_TRANSFER,\n        payload: {\n          teacher_transfer_id: teacher_transfer_id,\n          requested_status: decision,\n          approved_school: approved_school,\n          requested_comment: comment,\n        },\n      });\n      callBack(false, \"\");\n      // console.log(\"Questions: \", res);\n    } catch (error: any) {\n      console.error(error);\n      // callBack(false, number_percentage, \"\", errorToText(error));\n      callBack(false, errorToText(error));\n    }\n  };\n};\n\nexport type FT_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => void;\nexport const FC_GetAllLeaves = (\n  callBack: (\n    status: boolean,\n    data: TransferLeaveType[] | null,\n    msg: string\n  ) => void\n) => {\n  callBack(true, null, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<TransferLeaveType[]>(\n        `${APP_URL}/teachertransfers/leavingdde`\n      );\n      console.log(\"=================FC_GetAllLeaves===================\");\n      console.log({ FC_GetAllLeaves: res });\n      console.log(\"=================FC_GetAllLeaves===================\");\n\n      // * save data\n      dispatch<GetAllLeavesAction>({\n        type: ActionTypes.GET_ALL_LEAVES,\n        payload: res.data,\n      });\n      callBack(false, res.data, \"\");\n    } catch (error) {\n      console.log(error);\n      callBack(false, null, errorToText(error));\n      //   callBack(\n      //     false,\n      //     errorToText(error, () => {})\n      //   );\n    }\n  };\n};\n","import React, { FC, Fragment, ReactElement, useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\n// import Spinner from \"../Loading/Spinner\";\n\nimport { search } from \"../../utils/functions\";\nimport Loading from \"../Loading/Loading\";\ntype SelectCustomProps = {\n  loading: boolean;\n  id: string;\n  title: string;\n  close: Function;\n  data: any;\n  click: Function;\n};\n\nconst SelectCustom: FC<SelectCustomProps> = ({\n  loading,\n  id,\n  title,\n  close,\n  data,\n  click,\n}): ReactElement => {\n  const [searchText, setSearch] = useState(\"\");\n  let dataList = search(data, searchText, {\n    [title]: true,\n  });\n  /* function body */\n  return (\n    <div className=\" bg-gray-100 shadow-lg border-gray-500 border-2 h-64 rounded-md flex flex-col\">\n      <div className=\"p-1 bg-white rounded flex items-center\">\n        <label htmlFor=\"search-input-data\">\n          <MdSearch className=\"text-2xl\" />\n        </label>\n        <input\n          type=\"search\"\n          className=\"py-1 px-1 flex-1\"\n          placeholder=\"Search\"\n          value={searchText}\n          id=\"search-input-data\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        {loading === false && (\n          <button\n            onClick={() => close()}\n            className=\"px-2 py-0.5 rounded text-sm ml-3 bg-red-200 text-red-800\"\n          >\n            Cancel\n          </button>\n        )}\n      </div>\n      <div className=\"flex-1 p-2 overflow-y-auto border-t \">\n        {loading === true ? (\n          <div className=\"my-4\">\n            {/* <Spinner /> */}\n            <div className=\"mx-auto text-center\">\n              <Loading />\n            </div>\n\n            <p className=\"text-center text-gray-500\">Loading</p>\n          </div>\n        ) : (\n          <Fragment>\n            {dataList.length === 0 ? (\n              <section className=\"p-4 text-center\">\n                <h2 className=\"text-lg text-gray-400\">No results found</h2>\n              </section>\n            ) : (\n              dataList.map((itm: any, key: number) => (\n                <button\n                  onClick={() => click(itm)}\n                  className=\"block p-1 border-b w-full text-left border-gray-300 hover:text-white hover:bg-blue-600\"\n                  key={key}\n                  type=\"button\"\n                >\n                  {itm[title]}\n                </button>\n              ))\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default SelectCustom;\n","import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype TextAreaProps = {\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst TextArea: FC<TextAreaProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n  size = \"md\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <textarea\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TextArea;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\n\ntype DownloadLinkProps = {\n  linkFor: \"uploaded\" | \"termination\" | \"suspension\" | \"transfer\";\n  first_id: string | number;\n  last_id: string | number;\n  title: string;\n};\n\nconst DownloadLink: React.FC<DownloadLinkProps> = (props) => {\n  const this_URL: string =\n    props.linkFor === \"uploaded\"\n      ? `${APP_URL_FILE}/${props.first_id}`\n      : `${APP_URL}/generateletter/${props.linkFor}/${props.first_id}/${props.last_id}`;\n  return (\n    <a\n      href={this_URL}\n      className=\"py-2 px-4 text-md w-max font-bold rounded bg-primary-800 hover:bg-opacity-90 text-white flex items-center gap-2\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <ImAttachment />\n      <span>{props.title}</span>\n    </a>\n  );\n};\n\nexport default DownloadLink;\n","import React, { ChangeEvent, useState, FC, ReactElement } from \"react\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\nexport enum supportedFileTypes {\n  PDF = \"PDF\",\n  IMAGES = \"IMAGES\",\n  ANY = \"ANY\",\n}\n\n// export const validateFileType = async (\n//   file: File,\n//   fileType: supportedFileTypes = supportedFileTypes.PDF\n// ) => {\n//   if (\n//     file.type !==\n//       \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" &&\n//     file.type !== \"application/vnd.ms-excel\" &&\n//     file.type !== \"text/csv\"\n//   ) {\n//     return setFormError({\n//       element: \"questions\",\n//       msg: \"Invalid file, Please choose excel file or svg file\",\n//     });\n//   } else {\n//     return null;\n//   }\n// };\n\nexport enum acceptAllEnum {\n  ALL = \"\",\n  IMAGES = \"image/*\",\n  EXCEL = \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n  PDF = \"application/pdf\",\n}\n\ntype InputFileProps = {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  error: string;\n  label: string;\n  disabled?: boolean;\n  type: \"file\" | \"image\";\n  name: string;\n  accept?: acceptAllEnum;\n  multiple?: boolean;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  labelColor?: \"text-gray-300\" | \"text-primary-900 dark:text-primary-100\";\n};\n\nconst InputFile: FC<InputFileProps> = ({\n  onChange,\n  error,\n  label,\n  multiple,\n  disabled = false,\n  accept = acceptAllEnum.ALL,\n  name,\n  type,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  labelColor = \"text-primary-900 dark:text-primary-100\",\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"any-form\"\n            className={`${labelColor} ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <input\n            name={name}\n            multiple={multiple}\n            accept={accept}\n            type={type}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            disabled={disabled}\n          />\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputFile;\n","export type DistrictTypes = {\n  district_code: string;\n  district_name: string;\n};\n\nexport type SchoolsType = {\n  school_id: string;\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  village_id: string;\n  schoollocationid: string;\n  village_name: string;\n  cell_code: string;\n  cell_name: string;\n  sector_code: string;\n  sector_name: string;\n  district_code: string;\n  district_name: string;\n  province_code: string;\n  province_name: string;\n};\n\nexport type SchoolsType_2 = {\n  school_code: string;\n  school_name: string;\n  sector_name: string;\n  vacant_posts: number | string;\n};\n\nexport type TeacherTransferDetails = {\n  teacherTransfer_id: string;\n  req_school_name: string;\n  Approved_school_name: string;\n  district_name: string;\n  sector_name: string;\n  requested_date: string;\n  incoming_decision: string | null; // aho agiye\n  incoming_decision_date: string | null;\n  outgoing_dde_decision: string | null;\n  outgoing_dde_comment: string | null;\n  outgoing_dde_decision_date: string | null; // aho uvuye\n};\n\nexport type requestedDde_old = {\n  teacher_id: string;\n  teacher_transfer_id: string;\n  teacher_full_name: string;\n  teacher_first_name: string;\n  teacher_last_name: string;\n  teacher_phone_number: string;\n  school_from_id: string;\n  school_from_name: string;\n  school_from_district: string;\n  school_from_sector: string;\n  teacher_requested_transfer_date: string;\n  teacher_supporting_document: string;\n  teacher_reason: string;\n  requested_school_id: string;\n  requested_school_code: string;\n  requested_school_name: string;\n  requested_school_district: string;\n  requested_school_sector: string;\n  requested_status: string;\n  incoming_decision_date: string | null;\n  requested_dde_id: string | null;\n  requested_comment: string | null;\n  approved_school_id: string | null;\n  approved_school_name: string | null;\n  approved_school_district: string | null;\n  approved_school_sector: string | null;\n  outgoing_status: string | null;\n  outgoing_decision_date: string | null;\n  outgoinng_dde_id: string | null;\n  outgoing_dde_comment: string | null;\n  teacher_comment: string;\n  qualification_id: string;\n  position_code: string;\n};\n\nexport type requestedDde = {\n  teacher_transfer_id: number;\n  teacher_id: string;\n  teacher_full_name: string;\n  teacher_first_name: string;\n  teacher_last_name: string;\n  teacher_phone_number: string;\n  school_from_id: string;\n  school_from_name: string;\n  school_from_district: string;\n  school_from_sector: string;\n  teacher_reason: string;\n  teacher_supporting_document: string;\n  teacher_requested_transfer_date: string;\n  teacher_comment: string;\n  requested_school_id: string;\n  requested_school_name: string;\n  requested_school_district: string;\n  requested_school_sector: string;\n  requested_status: string;\n  incoming_decision_date: string;\n  requested_dde_id: string;\n  requested_comment: string;\n  approved_school_id: string | null;\n  approved_school_name: string | null;\n  approved_school_district: string | null;\n  approved_school_sector: string | null;\n  outgoing_status: string | null;\n  outgoing_decision_date: string | null;\n  outgoinng_dde_id: string | null;\n  outgoing_dde_comment: string | null;\n  mayor_letter: string | null;\n  qualification_id: string | null;\n  position_code: string | null;\n  qualification_name: string | null;\n  position_name: string | null;\n};\n\nexport type Qualifications = {\n  qualification_id: string;\n  qualification_name: string;\n};\n\nexport type RequestedTransfer = {\n  teacher_transfer_id: string;\n  teacher_supporting_document: string;\n  transfer_type: TransferRequestTypesEnum;\n  requested_school_id: string;\n  requested_school_name: string;\n  requested_school_district: string;\n  requested_school_sector: string;\n  approved_school_id: string | null;\n  approved_school_name: string | null; //REJECTED\n  requested_status: string;\n  teacher_requested_transfer_date: string;\n  teacher_reason: string;\n  requested_comment: string;\n  incoming_decision_date: string;\n  outgoing_status: string | null;\n  outgoing_dde_comment: string | null;\n  outgoing_decision_date: string | null;\n  mayor_letter: string | null;\n};\n\nexport type RequestedToLeave = {\n  teacher_transfer_id: number;\n  teacher_id: string;\n  teacher_full_name: string;\n  teacher_first_name: string;\n  teacher_last_name: string;\n  teacher_phone_number: string;\n  school_from_id: string;\n  school_from_name: string;\n  school_from_district: string;\n  school_from_sector: string;\n  teacher_reason: string;\n  teacher_supporting_document: string;\n  teacher_requested_transfer_date: string;\n  teacher_comment: string;\n  requested_school_id: string;\n  requested_school_name: string;\n  requested_school_district: string;\n  requested_school_sector: string;\n  requested_status: string;\n  incoming_decision_date: string;\n  // requested_dde_id: string;\n  requested_comment: string;\n  approved_school_id: string;\n  approved_school_name: string;\n  approved_school_district: string;\n  approved_school_sector: string;\n  outgoing_status: string;\n  outgoing_decision_date: string | null;\n  outgoinng_dde_id: string | null;\n  outgoing_dde_comment: string | null;\n  mayor_letter: string | null;\n  qualification_id: string | null;\n  position_code: string | null;\n  qualification_name: string | null;\n  position_name: string | null;\n};\n\nexport type RequestedToLeave_old = {\n  full_name: string;\n  position_name: string;\n  outgoing_status: string;\n  qualification_name: string;\n  requested_school_district: string;\n  requested_school_id: string;\n  requested_school_name: string;\n  requested_school_sector: string;\n  teacher_reason: string;\n  teacher_requested_transfer_date: string;\n  teacher_supporting_document: string;\n  teacher_transfer_id: string;\n  mayor_letter: string | null;\n  teacher_id: string;\n};\n\n// ===================== NEW INTERFACES FOR TRANSFER =================\nexport type SchoolInfoType = {\n  school_name: string;\n  school_code: string;\n  sector_name: string;\n  district_name: string;\n};\n\nexport enum TransferRequestTypesEnum {\n  INTERNAL = \"internal\",\n  EXTERNAL = \"external\",\n}\n\nexport type TransferRequestType = {\n  teacher_transfer_id: string;\n  transfer_type: TransferRequestTypesEnum;\n  teacher_id: string;\n  requested_status: string;\n  teacher_supporting_document: string;\n  teacher_requested_transfer_date: string;\n  school_from_id: string;\n  requested_school_id: string;\n  requested_comment: string;\n  teacher_comment: string;\n  incoming_decision_date: string;\n  teacher_reason: string;\n  teacher_full_name: string;\n  teacher_first_name: string;\n  teacher_last_name: string;\n  teacher_phone_number: string;\n  qualification_id: string;\n  position_code: string;\n  qualification_name: string;\n  position_name: string;\n  school_from_info: SchoolInfoType;\n  requested_school_info: SchoolInfoType;\n  approved_school_info: SchoolInfoType | null;\n};\n\nexport type TransferLeaveType = {\n  teacher_transfer_id: string;\n  transfer_type: TransferRequestTypesEnum;\n  teacher_id: string;\n  requested_status: string;\n  approved_school_id: string;\n  teacher_supporting_document: string;\n  teacher_requested_transfer_date: string;\n  requested_comment: string;\n  requested_dde_id: string;\n  school_from_id: string;\n  requested_school_id: string;\n  mayor_letter: string;\n  outgoing_dde_comment: string;\n  outgoing_status: string;\n  teacher_comment: string;\n  incoming_decision_date: string;\n  teacher_reason: string;\n  teacher_full_name: string;\n  teacher_first_name: string;\n  teacher_last_name: string;\n  teacher_phone_number: string;\n  qualification_id: string;\n  position_code: string;\n  qualification_name: string;\n  position_name: string;\n  school_from_info: SchoolInfoType;\n  requested_school_info: SchoolInfoType;\n  approved_school_info: SchoolInfoType;\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../../actions\";\nimport {\n  TransferReasonsType,\n  FC_GetTransferReasons,\n  FT_GetTransferReasons,\n  FC_GetSchoolByDistrict,\n  FC_UploadFile,\n  FC_GetMyTransfers,\n  FT_GetMyTransfer,\n  FC_GetDistricts,\n  FC_GetSchoolByDistrict_2,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport InputFile, { acceptAllEnum } from \"../../../components/Inputs/InputFile\";\nimport InputSelect from \"../../../components/Inputs/InputSelect\";\nimport TextArea from \"../../../components/Inputs/TextArea\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport SelectCustom from \"../../../components/SelectCustom/SelectCustom\";\nimport { APP_URL } from \"../../../config/app.config\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  DistrictTypes,\n  RequestedTransfer,\n  SchoolsType_2,\n  TransferRequestTypesEnum,\n} from \"../../../types/TransferTypes\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isEmptyOrSpaces } from \"../../../utils/functions\";\n\ntype RequestFormProps = {\n  setIsRequestFormOn: (value: boolean) => void;\n\n  // form redux\n  auth: Auth;\n  transferReasons: TransferReasonsType[] | null;\n  FC_GetTransferReasons: FT_GetTransferReasons;\n  FC_GetMyTransfers: FT_GetMyTransfer;\n};\n\ntype RequestFormState = {\n  loading: boolean;\n  error: {\n    target:\n      | \"main-error\"\n      | \"main-success\"\n      | \"reason_id\"\n      | \"approved_doc\"\n      | \"school-code\"\n      | \"comment\";\n    msg: string;\n  } | null;\n  selectedFile: File | null;\n  selectReason: boolean;\n  thisReason: TransferReasonsType | null;\n  districts: DistrictTypes[] | null;\n  selectedDistrict: string;\n  schools: SchoolsType_2[];\n  loadingSchools: boolean;\n  selectedSchool: string;\n  tranferReason: string;\n  loadingRequest: boolean;\n  upload_percentage: number;\n};\n\nclass RequestForm extends Component<RequestFormProps, RequestFormState> {\n  constructor(props: RequestFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: null,\n      selectedFile: null,\n      selectReason: false,\n      thisReason: null,\n      districts: null,\n      selectedDistrict: \"\",\n      schools: [],\n      loadingSchools: false,\n      tranferReason: \"\",\n      selectedSchool: \"\",\n      loadingRequest: false,\n      upload_percentage: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.transferReasons === null)\n      this.props.FC_GetTransferReasons((status: boolean, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n        else this.setState({ loading: status });\n      });\n    else this.setState({ loading: false });\n\n    FC_GetDistricts(\n      (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n        else if (!status && data)\n          this.setState({ loading: status, districts: data });\n      }\n    );\n  };\n\n  handleSchools = (thisDistrict: string) => {\n    if (this.props.auth.user) {\n      FC_GetSchoolByDistrict_2(\n        thisDistrict,\n        this.props.auth.user.user_id,\n        (status: boolean, data: SchoolsType_2[] | null, msg: string) => {\n          this.setState({ loadingSchools: status, schools: [] });\n          if (!status && !isEmptyOrSpaces(msg)) {\n            this.setState({\n              error: {\n                target: \"main-error\",\n                msg: msg,\n              },\n            });\n          } else if (!status && data !== null) {\n            const newData = data.filter((item) => item.vacant_posts > 0);\n            this.setState({ schools: newData });\n          }\n        }\n      );\n    }\n  };\n\n  getSchoolsForm = (): { title: string; value: string }[] => {\n    let result: { title: string; value: string }[] = [\n      {\n        title: `${\n          isEmptyOrSpaces(this.state.selectedDistrict)\n            ? \"Select district to get schools\"\n            : this.state.schools.length > 0\n            ? \"All Schools\"\n            : \"No school with vacant posts on selected district!\"\n        }`,\n        value: \"\",\n      },\n    ];\n    // this.props.auth.user.\n    this.state.schools.forEach((school) => {\n      if (\n        this.props.auth.school &&\n        this.props.auth.school.school_code !== school.school_code\n      )\n        result.push({\n          title: school.school_name + ` (${school.vacant_posts} vacant)`,\n          value: school.school_code,\n        });\n    });\n    return result;\n  };\n\n  onFileChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({ error: null });\n    // this.setState({ selectedFile: event.target.files[0] });\n\n    // check if the file is available\n    if (e.target.files === null)\n      return this.setState({\n        selectedFile: null,\n        error: {\n          msg: \"Please select a valid file\",\n          target: \"approved_doc\",\n        },\n      });\n\n    const thisFile = e.target.files[0];\n\n    // check the file type\n    if (thisFile.type !== \"application/pdf\")\n      return this.setState({\n        selectedFile: null,\n        error: {\n          msg: \"The system accept pdf only\",\n          target: \"approved_doc\",\n        },\n      });\n\n    // check if the size is valued\n    if (thisFile.size <= 0)\n      return this.setState({\n        selectedFile: null,\n        error: {\n          msg: \"Invalid file, Please choose a real file\",\n          target: \"approved_doc\",\n        },\n      });\n\n    // Add image\n    this.setState({\n      selectedFile: thisFile,\n      error: null,\n    });\n  };\n\n  // On file upload (click the upload button)\n  onSubmitTeacherTransferReq = async () => {\n    // Create an object of formData\n\n    // checking errors\n    if (!this.props.auth.school || !this.props.auth.school.school_code) {\n      this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"No school assigned to you!\",\n        },\n      });\n      return;\n    }\n\n    //checking input\n    if (isEmptyOrSpaces(this.state.selectedSchool)) {\n      this.setState({\n        error: {\n          target: \"school-code\",\n          msg: \"Required!\",\n        },\n      });\n      return;\n    }\n\n    //checking input\n    if (this.state.thisReason === null) {\n      this.setState({\n        error: {\n          target: \"reason_id\",\n          msg: \"Required!\",\n        },\n      });\n      return;\n    }\n\n    if (isEmptyOrSpaces(this.state.tranferReason)) {\n      this.setState({\n        error: {\n          target: \"comment\",\n          msg: \"Required!\",\n        },\n      });\n      return;\n    }\n\n    // Document validation\n    if (this.state.selectedFile === null)\n      return this.setState({\n        error: {\n          target: \"approved_doc\",\n          msg: \"Required!\",\n        },\n        loadingRequest: false,\n      });\n\n    let doc_title: string = \"\";\n    await FC_UploadFile(\n      this.state.selectedFile,\n      (\n        status: boolean,\n        uploadingPercentage: number,\n        data: string | null,\n        msg: string\n      ) => {\n        this.setState({\n          loadingRequest: status,\n        });\n        if (status)\n          this.setState({\n            upload_percentage: uploadingPercentage,\n          });\n\n        if (!status && isEmptyOrSpaces(msg) && data !== null) doc_title = data;\n        else if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: {\n              target: \"main-error\",\n              msg: msg,\n            },\n            loadingRequest: false,\n          });\n      }\n    );\n\n    console.log(\"=================doc_title===================\");\n    console.log({ doc_title });\n    console.log(\"=================doc_title===================\");\n\n    // Json Data\n    if (!isEmptyOrSpaces(doc_title)) {\n      const formData = {\n        school_from_id: this.props.auth.school.school_code,\n        requested_school_id: this.state.selectedSchool,\n        teacher_reason_id: this.state.thisReason.transfer_reason_id,\n        teacher_comment: this.state.tranferReason,\n        teacher_supporting_document: doc_title,\n        distrct_from_id: this.props.auth.school.school_code.substring(0, 2),\n        district_to_id: this.state.selectedSchool.substring(0, 2),\n        transfer_type:\n          this.props.auth.school.school_code.substring(0, 2) ===\n          this.state.selectedSchool.substring(0, 2)\n            ? TransferRequestTypesEnum.INTERNAL\n            : TransferRequestTypesEnum.EXTERNAL,\n        academic_year_id: 1,\n      };\n      try {\n        setAxiosToken();\n        const dataRes = await axios.post<RequestedTransfer>(\n          `${APP_URL}/teachertransfers/request`,\n          formData\n        );\n\n        // console.log(\"====================================\");\n        // console.log({ dataRes });\n        // console.log(\"====================================\");\n\n        if (dataRes.status === 200) {\n          this.props.FC_GetMyTransfers(\n            (\n              status: boolean,\n              data: RequestedTransfer[] | null,\n              msg: string\n            ) => {\n              this.setState({ loadingRequest: status });\n\n              if (!status && data) this.setState({ loadingRequest: status });\n              else if (!status && !isEmptyOrSpaces(msg))\n                this.setState({\n                  error: { target: \"main-error\", msg: msg },\n                });\n            }\n          );\n          this.setState({\n            error: {\n              target: \"main-success\",\n              msg: \"Transfer Request Send Successfully!\",\n            },\n          });\n          setTimeout(() => {\n            this.setState({\n              error: null,\n              thisReason: null,\n              selectedDistrict: \"\",\n              selectedSchool: \"\",\n              schools: [],\n              tranferReason: \"\",\n            });\n            this.props.setIsRequestFormOn(false);\n          }, 2000);\n          return;\n        }\n      } catch (error) {\n        //checking input\n        console.error({ error });\n\n        // this.cleanAlert();\n        this.setState({\n          error: {\n            target: \"main-error\",\n            msg: errorToText(error),\n          },\n        });\n        return;\n      }\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.state.districts === null)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    return (\n      <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n        {this.state.error && this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error && this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>Staff transfer request form</Heading>\n          </div>\n          <div className=\"\">\n            <Button\n              onClick={() => this.props.setIsRequestFormOn(false)}\n              theme=\"default\"\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"relative p-6 flex-auto\">\n          <div className=\"flex gap-6\">\n            <InputSelect\n              data={[\n                { title: \"All District\", value: \"\" },\n                ...this.state.districts.map((el) => ({\n                  title: el.district_name,\n                  value: el.district_code,\n                })),\n              ]}\n              error=\"\"\n              name=\"select_district\"\n              onChange={(e) => {\n                this.setState({\n                  selectedDistrict: e.target.value,\n                });\n                this.handleSchools(e.target.value);\n              }}\n              label=\"District\"\n              placeholder=\"Select\"\n              value={this.state.selectedDistrict}\n              size=\"md\"\n            />\n            <InputSelect\n              data={this.getSchoolsForm()}\n              error={\n                this.state.error && this.state.error.target === \"school-code\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n              name=\"select_school\"\n              onChange={(e) =>\n                this.setState({\n                  selectedSchool: e.target.value,\n                })\n              }\n              label=\"Schools\"\n              placeholder=\"Select\"\n              value={this.state.selectedSchool}\n              size=\"md\"\n            />\n          </div>\n\n          {/* ---------------- */}\n          <div className=\"w-full py-1\">\n            <div className={`w-full my-2`}>\n              <label\n                htmlFor=\"login-form-email\"\n                className={`text-primary-900 dark:text-primary-100`}\n              >\n                Transfer reasons\n              </label>\n              {!this.state.selectReason ? (\n                <div className={`rounded relative`}>\n                  <div\n                    className={`w-full text-lg rounded border-2 p-2 px-4 text-md ${\n                      !this.state.thisReason && \"text-gray-500\"\n                    } ${\n                      this.props.transferReasons\n                        ? \"cursor-pointer\"\n                        : \"cursor-wait\"\n                    } ${\n                      this.state.error &&\n                      this.state.error.target === \"reason_id\"\n                        ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                        : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900\"\n                    } px-3`}\n                    onClick={() =>\n                      this.props.transferReasons &&\n                      this.setState({ selectReason: true })\n                    }\n                  >\n                    {this.state.thisReason\n                      ? this.state.thisReason.reason_name\n                      : \"Select transfer reason\"}\n                  </div>\n\n                  {this.state.error &&\n                    this.state.error.target === \"reason_id\" && (\n                      <p className=\"text-sm text-red-600 dark:text-red-500\">\n                        {this.state.error.msg}\n                      </p>\n                    )}\n                </div>\n              ) : (\n                <SelectCustom\n                  title=\"reason_name\"\n                  id=\"transfer_reason_id\"\n                  data={this.props.transferReasons}\n                  loading={this.props.transferReasons === null}\n                  click={(value: any) =>\n                    this.setState({\n                      selectReason: false,\n                      thisReason: value as TransferReasonsType | null,\n                    })\n                  }\n                  close={() => this.setState({ selectReason: true })}\n                />\n              )}\n            </div>\n          </div>\n          {/* ---------------------- */}\n          <div className=\"\">\n            <TextArea\n              label=\"Transfer comment\"\n              value={this.state.tranferReason}\n              name=\"transfer_comment\"\n              onChange={(e) =>\n                this.setState({\n                  tranferReason: e.target.value,\n                })\n              }\n              placeholder=\"Write reason in summary\"\n              size=\"lg\"\n              error={\n                this.state.error && this.state.error.target === \"comment\"\n                  ? this.state.error.msg\n                  : \"\"\n              }\n            />\n            <div className=\"\">\n              <InputFile\n                disabled={this.state.loadingRequest}\n                label=\"Supporting document\"\n                name=\"approved_doc\"\n                className=\"p-2\"\n                onChange={(e) => this.onFileChange(e)}\n                error={\n                  this.state.error && this.state.error.target === \"approved_doc\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                type={\"file\"}\n                accept={acceptAllEnum.PDF}\n              />\n            </div>\n          </div>\n        </div>\n        {/*footer*/}\n        <div className=\"flex items-center justify-end py-3 gap-2 border-t border-solid border-blueGray-200 rounded-b\">\n          <Button\n            theme=\"default\"\n            onClick={() =>\n              this.setState({\n                error: null,\n                thisReason: null,\n                selectedDistrict: \"\",\n                selectedSchool: \"\",\n                schools: [],\n                tranferReason: \"\",\n              })\n            }\n            loading={this.state.loadingRequest}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => this.onSubmitTeacherTransferReq()}\n            loading={this.state.loadingRequest}\n          >\n            Save\n          </Button>\n        </div>\n      </DashboardContainer>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  transfer,\n  auth,\n}: StoreState): {\n  auth: Auth;\n  transferReasons: TransferReasonsType[] | null;\n} => {\n  return { auth, transferReasons: transfer.transferReasons };\n};\nexport default connect(mapStateToProps, {\n  FC_GetTransferReasons,\n  FC_GetMyTransfers,\n})(RequestForm);\n","import axios from \"axios\";\nimport React, { Fragment, useState } from \"react\";\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { MdOutlinePending } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../../actions\";\nimport {\n  FC_GetMyTransfers,\n  FT_GetMyTransfer,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport DownloadLink from \"../../../components/DownloadLink/DownloadLink\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport { APP_URL, APP_URL_FILE } from \"../../../config/app.config\";\nimport { StoreState } from \"../../../reducers\";\nimport { RequestedTransfer, SchoolsType } from \"../../../types/TransferTypes\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { DATE, isEmptyOrSpaces } from \"../../../utils/functions\";\n\ntype RequestViewProps = {\n  selectedTransfer: RequestedTransfer;\n  setTransferId: (value: string) => void;\n\n  //   redux ==========\n  auth: Auth;\n  FC_GetMyTransfers: FT_GetMyTransfer;\n};\n\nconst RequestView: React.FC<RequestViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [error, setError] = useState<{\n    target: \"main-error\" | \"main-success\";\n    msg: string;\n  } | null>(null);\n  // on chacking request transfer Approved\n  const requesteTransferHandler = (value: string | null) => {\n    if (value === null || value === \"PENDING\") {\n      return (\n        <span className={`text-accent-800`}>\n          <MdOutlinePending size={30} className=\"fill-current\" />\n        </span>\n      );\n    }\n    return value === \"APPROVED\" ? (\n      <span className={`text-primary-800`}>\n        <AiOutlineCheckCircle size={30} className=\"fill-current\" />\n      </span>\n    ) : (\n      <span className={`text-red-800`}>\n        <AiOutlineCloseCircle size={30} className=\"fill-current\" />\n      </span>\n    );\n  };\n\n  // Sending Leaving Request Handler\n  const leavingRequestHandler = (value: string) => {\n    setAxiosToken();\n    axios\n      .post(`${APP_URL}/teachertransfers/leaving`, {\n        teacher_transfer_id: value,\n      })\n      .then((response): SchoolsType => response.data)\n      .then((data) => {\n        console.log(\"====================================\");\n        console.log({ leavingRequestHandler: data });\n        console.log(\"====================================\");\n        props.FC_GetMyTransfers(\n          (status: boolean, data: RequestedTransfer[] | null, msg: string) => {\n            setLoadingRequest(status);\n\n            if (!status && data) setLoadingRequest(status);\n            else if (!status && !isEmptyOrSpaces(msg))\n              setError({ target: \"main-error\", msg: msg });\n          }\n        );\n        // let thisTransfer = { ...this.state.selectedTransfer };\n        props.FC_GetMyTransfers(\n          (status: boolean, data: RequestedTransfer[] | null, msg: string) => {\n            setLoadingRequest(status);\n\n            if (!status && data) setLoadingRequest(status);\n            else if (!status && !isEmptyOrSpaces(msg))\n              setError({ target: \"main-error\", msg: msg });\n          }\n        );\n        setError({\n          target: \"main-success\",\n          msg: \"Leaving Request Send Successfully!\",\n        });\n      })\n      .catch((err) => {\n        setError({\n          target: \"main-error\",\n          msg: \"Something went Wrong, Sending Request Failed!\",\n        });\n      });\n  };\n  return (\n    <>\n      {error && error.target === \"main-success\" && (\n        <Alert theme=\"success\">{error.msg}</Alert>\n      )}\n      {error && error.target === \"main-error\" && (\n        <Alert theme=\"danger\">{error.msg}</Alert>\n      )}\n      <DashboardContainer>\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>Request Transfer Progress</Heading>\n          </div>\n          <div className=\"\">\n            <Button onClick={() => props.setTransferId(\"\")} theme=\"default\">\n              Close\n            </Button>\n          </div>\n        </div>\n        <h2 className=\"opacity-60 -mt-1 font-bold text-accent-900 dark:text-accent-800\">\n          {props.selectedTransfer.requested_school_name}\n        </h2>\n        <div className=\"mt-4\">\n          <ul>\n            {/* Request Transfer Send */}\n            <li className=\"flex text-base text-body-color mb-4 \">\n              <div className=\"flex\">\n                <div>\n                  <span className=\"text-primary-800\">\n                    <AiOutlineCheckCircle size={30} className=\"fill-current\" />\n                  </span>\n                </div>\n                <div className=\"ml-2\">\n                  <span className=\"\">\n                    Requested school:{\" \"}\n                    {props.selectedTransfer.requested_school_name}\n                  </span>\n                  <br />\n                  <span className=\"\">\n                    On:{\" \"}\n                    {DATE(\n                      props.selectedTransfer.teacher_requested_transfer_date\n                    )}\n                  </span>{\" \"}\n                  {/* <br />\n                            <span className=\"\">Send Transfer Request</span> */}\n                </div>\n              </div>\n            </li>\n            {/* When Requested districted Appreved or Rejected */}\n            {\n              <li className=\"flex text-base text-body-color mb-4\">\n                <div className=\"flex\">\n                  <div>\n                    {requesteTransferHandler(\n                      props.selectedTransfer.requested_status\n                    )}\n                  </div>\n                  {props.selectedTransfer.requested_status !== \"PENDING\" && (\n                    <div className=\"ml-2\">\n                      <span className=\"\">\n                        Approved school:{\" \"}\n                        {props.selectedTransfer.approved_school_name}\n                      </span>\n                      <br />\n                      <span className=\"\">\n                        On:{\" \"}\n                        {DATE(props.selectedTransfer.incoming_decision_date)}\n                      </span>\n                      <br />\n                    </div>\n                  )}\n                </div>\n              </li>\n            }\n            {/* When Send Requested to Leave School */}\n            {props.selectedTransfer.requested_status !== \"PENDING\" &&\n              props.selectedTransfer.requested_status !== \"REJECTED\" &&\n              props.selectedTransfer.requested_status !== null && (\n                <Fragment>\n                  <li className=\"flex text-base text-body-color mb-4\">\n                    <div className=\"flex\">\n                      {props.selectedTransfer.outgoing_status === null && (\n                        <div>\n                          {\" \"}\n                          <Button\n                            onClick={(e) =>\n                              leavingRequestHandler(\n                                props.selectedTransfer.teacher_transfer_id\n                              )\n                            }\n                          >\n                            Send Leave Request\n                          </Button>\n                        </div>\n                      )}\n                      {props.selectedTransfer.outgoing_status !== null && (\n                        <Fragment>\n                          <div>\n                            <span className=\"text-primary-800\">\n                              <AiOutlineCheckCircle\n                                size={30}\n                                className=\"fill-current\"\n                              />\n                            </span>\n                          </div>\n                          <div className=\"ml-2\">\n                            <span className=\"\">\n                              Requested to leave:{\" \"}\n                              {props.auth.school\n                                ? props.auth.school.school_name\n                                : \"\"}\n                            </span>\n                            <br />\n                            <span className=\"\">\n                              On:{\" \"}\n                              {DATE(\n                                props.selectedTransfer\n                                  .teacher_requested_transfer_date\n                              )}\n                            </span>\n                          </div>\n                        </Fragment>\n                      )}\n                    </div>\n                  </li>\n                  {/* When Dde Commirfmed Requested to Leave School */}\n                  <li className=\"flex text-base text-body-color mb-4\"></li>\n                  {props.selectedTransfer.outgoing_status && (\n                    <li className=\"flex text-base text-body-color mb-4\">\n                      <div className=\"flex\">\n                        <div>\n                          {requesteTransferHandler(\n                            props.selectedTransfer.outgoing_status\n                          )}\n                        </div>\n                        <div className=\"ml-2\">\n                          {props.selectedTransfer.outgoing_status !==\n                            \"PENDING\" && (\n                            <>\n                              <span className=\"\">\n                                Date:{\" \"}\n                                {props.selectedTransfer.outgoing_decision_date}\n                              </span>{\" \"}\n                              <br />\n                            </>\n                          )}\n                          <span className=\"capitalize\">\n                            Leave Request:{\" \"}\n                            {props.selectedTransfer.outgoing_status}\n                          </span>\n                          <br />\n                          {props.auth.user &&\n                            props.selectedTransfer.outgoing_status !==\n                              \"PENDING\" &&\n                            props.selectedTransfer.mayor_letter && (\n                              <DownloadLink\n                                linkFor=\"uploaded\"\n                                first_id={props.selectedTransfer.mayor_letter}\n                                last_id={\"\"}\n                                title={\"Transfer letter\"}\n                              />\n                            )}\n                          {/* <span className=\"\">Current School</span> */}\n                        </div>\n                      </div>\n                    </li>\n                  )}\n                </Fragment>\n              )}\n          </ul>\n        </div>\n      </DashboardContainer>\n    </>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return { auth };\n};\nexport default connect(mapStateToProps, {\n  FC_GetMyTransfers,\n})(RequestView);\n","import React, { Component } from \"react\";\nimport { GrHostMaintenance } from \"react-icons/gr\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Basic } from \"../../../actions\";\nimport {\n  FC_GetMyTransfers,\n  FT_GetMyTransfer,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport { StoreState } from \"../../../reducers\";\nimport { RequestedTransfer } from \"../../../types/TransferTypes\";\nimport { DATE, isEmptyOrSpaces, search } from \"../../../utils/functions\";\nimport RequestForm from \"./RequestForm\";\nimport RequestView from \"./RequestView\";\n\n// status Handler\nconst FC_TransferRequestedStatus = (\n  requested: string | null,\n  outGoing: string | null\n): JSX.Element => {\n  if (requested === \"PENDING\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-accent-800 text-black group-hover:bg-opacity-90\">\n        Transfer in progress\n      </span>\n    );\n  if (requested === \"REJECTED\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-red-700 text-red-50 group-hover:bg-opacity-90\">\n        Transfer rejected\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === null)\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-green-700 text-green-50 group-hover:bg-opacity-90\">\n        Apply for leave\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"PENDING\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-accent-800 text-black group-hover:bg-opacity-90\">\n        Leave in progress\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"APPROVED\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-green-600 text-green-50 group-hover:bg-opacity-90\">\n        Transfer Completed\n      </span>\n    );\n  if (requested === \"APPROVED\" && outGoing === \"REJECTED\")\n    return (\n      <span className=\"font-bold rounded-full py-1 px-2 text-md bg-red-700 text-red-50 group-hover:bg-opacity-90\">\n        Leave rejected\n      </span>\n    );\n\n  return <></>;\n};\n\ntype RequestTransferProps = {\n  myTransfers: RequestedTransfer[] | null;\n  FC_GetMyTransfers: FT_GetMyTransfer;\n  basic: Basic;\n};\n\ntype RequestTransferState = {\n  loading: boolean;\n  loadingRequest: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\";\n    msg: string;\n  } | null;\n  inputSearch: string;\n  transferId: string;\n  isRequestFormOn: boolean;\n  inMaintenance: boolean;\n};\n\nclass index extends Component<RequestTransferProps, RequestTransferState> {\n  constructor(props: RequestTransferProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingRequest: false,\n      error: null,\n      inputSearch: \"\",\n      transferId: \"\",\n      isRequestFormOn: false,\n      inMaintenance: true,\n    };\n  }\n\n  setIsRequestFormOn = (value: boolean) => {\n    this.setState({ isRequestFormOn: value });\n  };\n\n  setTransferId = (value: string) => {\n    this.setState({ transferId: value });\n  };\n\n  componentDidMount = () => {\n    if (this.state.inMaintenance === false) {\n      this.props.FC_GetMyTransfers(\n        (status: boolean, data: RequestedTransfer[] | null, msg: string) => {\n          this.setState({ loading: status });\n\n          if (!status && data) this.setState({ loading: status });\n          else if (!status && !isEmptyOrSpaces(msg))\n            this.setState({\n              error: { target: \"main-error\", msg: msg },\n            });\n        }\n      );\n    }\n  };\n\n  isSchoolRequestedAllowed = (): boolean => {\n    const result =\n      this.props.myTransfers &&\n      this.props.myTransfers.find(\n        (item) => item.outgoing_status !== \"APPROVED\"\n      );\n\n    return result ? false : true;\n  };\n\n  render() {\n    if (this.state.inMaintenance)\n      return (\n        <div className=\"py-10 px-10\">\n          <div className=\"bg-yellow-50 text-yellow-900 border border-yellow-900 rounded flex flex-col items-center justify-center p-6 my-8\">\n            <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n            <div className=\"text-center flex flex-col\">\n              <span className=\"text-2xl md:text-4xl font-extrabold\">\n                Transfer is under maintenance!\n              </span>\n              <span className=\"text-lg\">\n                Transfer request will be open soon!\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    if (this.state.loading)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    if (this.state.isRequestFormOn)\n      return <RequestForm setIsRequestFormOn={this.setIsRequestFormOn} />;\n\n    if (\n      this.props.myTransfers &&\n      this.props.myTransfers.find(\n        (item) => item.teacher_transfer_id === this.state.transferId\n      )\n    )\n      return (\n        <RequestView\n          selectedTransfer={\n            this.props.myTransfers.find(\n              (item) => item.teacher_transfer_id === this.state.transferId\n            )!\n          }\n          setTransferId={this.setTransferId}\n        />\n      );\n\n    return (\n      <>\n        {this.state.error && this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error && this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n        <DashboardContainer>\n          {/* TITLE ======= */}\n          <section className=\"flex flex-col sm:flex-row justify-between\">\n            <div className=\"px-3\">\n              <Heading size=\"lg\">Transfer request(s)</Heading>\n            </div>\n\n            {this.isSchoolRequestedAllowed() && (\n              <Button\n                theme=\"primary-light\"\n                onClick={() => this.setIsRequestFormOn(true)}\n              >\n                Request Transfer\n              </Button>\n            )}\n          </section>\n\n          {/* BODY=================== */}\n          <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n            <div className=\"w-full sm:flex-1 pr-2\">\n              <TextInput\n                error=\"\"\n                label=\"Search\"\n                name=\"\"\n                type=\"search\"\n                onChange={(e) => this.setState({ inputSearch: e.target.value })}\n                placeholder=\"Search by name, reason, date, status\"\n                value={this.state.inputSearch}\n                size=\"sm\"\n                disabled={\n                  this.props.myTransfers === null ||\n                  this.props.myTransfers.length === 0\n                }\n              />\n            </div>\n            {/* <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                { title: \"Pending\", value: TerminationStatusEnum.PENDING },\n                {\n                  title: \"Terminated\",\n                  value: TerminationStatusEnum.TERMINATED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div> */}\n            {/* {this.props.terminations && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n          </div>\n          <div className=\"my-3 w-full overflow-x-auto\">\n            <table className=\"w-full text-left table-auto\">\n              <thead>\n                <tr>\n                  <th className=\"p-2\">#</th>\n                  <th className=\"p-2\">Requested school</th>\n                  <th className=\"p-2\">Requested district</th>\n                  <th className=\"p-2\">Reason</th>\n                  <th className=\"p-2\">Date</th>\n                  <th className=\"p-2\">Status</th>\n                  <th className=\"p-2\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={6} />\n                ) : this.props.myTransfers === null ||\n                  this.props.myTransfers.length <= 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : search(this.props.myTransfers, this.state.inputSearch)\n                    .length === 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  search(this.props.myTransfers, this.state.inputSearch).map(\n                    (transfer: RequestedTransfer, i: number) => {\n                      return (\n                        <tr\n                          className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                          onClick={() =>\n                            this.setState({\n                              transferId: transfer.teacher_transfer_id,\n                            })\n                          }\n                          key={i + transfer.teacher_transfer_id}\n                        >\n                          <td className=\"p-2\">{i + 1}</td>\n                          <td className=\"p-2\">\n                            {transfer.requested_school_name}\n                          </td>\n                          <td className=\"p-2\">\n                            {transfer.requested_school_district}\n                          </td>\n                          <td className=\"p-2\">{transfer.teacher_reason}</td>\n                          <td className=\"p-2\">\n                            {transfer.outgoing_decision_date\n                              ? DATE(transfer.outgoing_decision_date)\n                              : transfer.incoming_decision_date\n                              ? DATE(transfer.incoming_decision_date)\n                              : DATE(transfer.teacher_requested_transfer_date)}\n                          </td>\n                          <td className=\"p-2\">\n                            {FC_TransferRequestedStatus(\n                              transfer.requested_status,\n                              transfer.outgoing_status\n                            )}\n                          </td>\n\n                          {/* <td className=\"p-2\">\n                            {capitalizeFirstLetter(transfer.transfer_type)}{\" \"}\n                            transfer\n                          </td> */}\n\n                          <td className=\"p-1 text-center\">\n                            <Button\n                              theme=\"accent-light\"\n                              onClick={() =>\n                                this.setState({\n                                  transferId: transfer.teacher_transfer_id,\n                                })\n                              }\n                            >\n                              View\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    }\n                  )\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  basic,\n  transfer,\n}: StoreState): {\n  basic: Basic;\n  myTransfers: RequestedTransfer[] | null;\n} => {\n  return { basic, myTransfers: transfer.myTransfers };\n};\n\nexport const RequestTransfer = connect(mapStateToProps, { FC_GetMyTransfers })(\n  index\n);\n"],"sourceRoot":""}