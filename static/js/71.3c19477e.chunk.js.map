{"version":3,"sources":["containers/RegisterForDataValidation/RegisterForDataValidation.tsx"],"names":["_RegisterForDataValidation","props","CheckNidHandler","e","preventDefault","state","nid","length","setState","error","target","msg","loading","user_found","FC_GetUserProfile","status","data","user_details","user_id","clearError","className","this","onClick","theme","fixed","onSubmit","label","name","onChange","value","placeholder","disabled","type","auth","school","userDetails","email","full_name","staff_code","close","district_id","district","district_code","select_district_active","nid_value","assignType","exclude_roles","only_post_for_school","formAccess","first_name","last_name","middle_name","phone_numbers","role_id","country_id","sector_code","school_code","qualification_id","academic_year_id","stakeholder_id","start_date_in_the_school","position_id","required","success","React","Component","RegisterForDataValidation","connect","FC_GetAssignAssets"],"mappings":"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","file":"static/js/71.3c19477e.chunk.js","sourcesContent":["import React from \"react\";\n// import { MdAccountCircle, MdCheckCircle } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  // DistrictList,\n  // FC_GetDistrictList,\n  // FT_GetAssignAssets,\n  FC_GetAssignAssets,\n  FC_GetUserProfile,\n  UserDetailsByNID,\n} from \"../../actions\";\nimport { AssignStuffComponent } from \"../../components/AssignStuffComponent/AssignStuffComponent\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\n// import Loading from \"../../components/Loading/Loading\";\n// import Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\nimport Alert from \"../../components/Alert/Alert\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { AssignStaffToSchool } from \"../UserProfile/AssignStaffToSchool\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: \"main-success\" | \"main-error\" | \"nid\" | null;\n    msg: string;\n  };\n  nid: string;\n  user_details: UserDetailsByNID | null;\n  user_found: \"FOUND\" | \"NOT-FOUND\" | null;\n}\n\nclass _RegisterForDataValidation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: {\n        msg: \"\",\n        target: null,\n      },\n      nid: \"\",\n      user_details: null,\n      user_found: null,\n    };\n  }\n\n  // componentDidMount = () => {};\n\n  CheckNidHandler = (e: any) => {\n    e.preventDefault();\n\n    if (this.state.nid.length <= 4) {\n      return this.setState({\n        error: {\n          target: \"nid\",\n          msg: \"NID or passport is required!\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      user_found: null,\n    });\n\n    FC_GetUserProfile(this.state.nid, (status, data, msg) => {\n      if (status) {\n        this.setState({\n          user_details: data,\n          loading: false,\n          user_found:\n            data !== null && data.user_id !== null ? \"FOUND\" : \"NOT-FOUND\",\n        });\n      } else {\n        this.setState({\n          loading: false,\n          user_found: \"NOT-FOUND\",\n        });\n      }\n    });\n  };\n\n  clearError = () =>\n    this.setState({\n      error: {\n        msg: \"\",\n        target: null,\n      },\n    });\n\n  render() {\n    return (\n      <>\n        <div className=\" bg-white p-2 flex items-center\">\n          {this.state.user_found !== null && (\n            <Button\n              onClick={() =>\n                this.setState({\n                  user_found: null,\n                })\n              }\n              theme=\"default\"\n            >\n              Back\n            </Button>\n          )}\n          <h1 className=\"text-2xl font-bold pl-3\">Create new staff</h1>\n        </div>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed onClick={this.clearError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed onClick={this.clearError}>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer>\n          {this.state.user_found === null && (\n            <form onSubmit={this.CheckNidHandler}>\n              <div className=\"flex\">\n                <div className=\"flex-1\">\n                  <TextInput\n                    error={\n                      this.state.error.target === \"nid\"\n                        ? this.state.error.msg\n                        : \"\"\n                    }\n                    label=\"Nid/Passport\"\n                    name=\"\"\n                    onChange={(e) => this.setState({ nid: e.target.value })}\n                    placeholder=\"Enter NID/Phone number\"\n                    value={this.state.nid}\n                    disabled={this.state.loading}\n                  />\n                </div>\n                <div className=\"pt-8 pl-2\">\n                  <Button loading={this.state.loading} type=\"submit\">\n                    Check Id\n                  </Button>\n                </div>\n              </div>\n            </form>\n          )}\n\n          {this.state.user_found !== null && (\n            <>\n              {this.state.user_found === \"FOUND\" &&\n              this.state.user_details !== null &&\n              this.state.user_details.user_id !== null ? (\n                <div>\n                  {this.props.auth.school !== null ? (\n                    <div className=\"text-center py-4\">\n                      <h1 className=\"text-2xl font-bold\">\n                        Teacher Already in the system and allocated to another\n                        school\n                      </h1>\n                      <p>For more info, call the DDE</p>\n                    </div>\n                  ) : (\n                    <AssignStaffToSchool\n                      user_id={this.state.user_details.user_id}\n                      // userInfo={this.state.userInfo}\n                      userDetails={{\n                        email: this.state.user_details.email\n                          ? this.state.user_details.email\n                          : \"\",\n                        full_name: this.state.user_details?.full_name\n                          ? this.state.user_details?.full_name\n                          : \"\",\n                        nid: this.state.user_details?.nid\n                          ? this.state.user_details?.nid\n                          : \"\",\n                        staff_code: this.state.user_details?.staff_code\n                          ? this.state.user_details?.staff_code\n                          : \"\",\n                      }}\n                      close={() =>\n                        this.setState({\n                          user_found: null,\n                        })\n                      }\n                    />\n                  )}\n                </div>\n              ) : (\n                <div>\n                  <AssignStuffComponent\n                    // district_id={\n                    //   this.props.auth.district?.district_code\n                    //     ? this.props.auth.district?.district_code\n                    //     : \"\"\n                    // }\n                    district_id={\n                      this.props.auth.district?.district_code\n                        ? this.props.auth.district?.district_code\n                        : \"\"\n                    }\n                    select_district_active={true}\n                    nid_value={this.state.nid}\n                    assignType=\"REGISTER\"\n                    exclude_roles={[\"3\", \"4\", \"18\", \"21\", \"22\", \"25\", \"26\"]}\n                    only_post_for_school={true}\n                    user_id={\"\"}\n                    formAccess={{\n                      first_name: true,\n                      last_name: true,\n                      full_name: true,\n                      middle_name: true,\n                      nid: true,\n                      phone_numbers: true,\n                      role_id: true,\n                      country_id: false,\n                      district_code: true,\n                      sector_code: false,\n                      school_code: true,\n                      qualification_id: true,\n                      academic_year_id: true,\n                      stakeholder_id: false,\n                      start_date_in_the_school: true,\n                      position_id: true,\n                    }}\n                    required={{\n                      first_name: true,\n                      last_name: true,\n                      full_name: true,\n                      middle_name: false,\n                      nid: true,\n                      phone_numbers: true,\n                      role_id: true,\n                      country_id: false,\n                      district_code: true,\n                      sector_code: false,\n                      school_code: true,\n                      qualification_id: true,\n                      academic_year_id: true,\n                      stakeholder_id: false,\n                      start_date_in_the_school: true,\n                      position_id: false,\n                    }}\n                    success={(data) => {\n                      //   setStaffCreated(true);\n                      this.setState({\n                        error: {\n                          msg: \"A new staff has been registered\",\n                          target: \"main-success\",\n                        },\n                      });\n                    }}\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const RegisterForDataValidation = connect(mapStateToProps, {\n  FC_GetAssignAssets,\n})(_RegisterForDataValidation);\n"],"sourceRoot":""}