{"version":3,"sources":["components/TableLoading/TableLoading.tsx","types/PlacementReportTypes.ts","containers/Reports/PlacementReport/PlacementReport.tsx"],"names":["TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","SchoolStatusEnum","ActiveStaffStatusEnum","PlacementReportActiveContentKeyInterface","tablePageLimit","defaultPlacementReportActiveContent","key","full_name","title","status","isChangeAllowed","nid","passport","sex","dob","marital_status","phone_numbers","email","qualification","position","subjects","grades","specialization","role","date_of_hire","date_in_school","school_name","school_code","school_category","school_status","district_name","forReportRoles","system","country","district","school","FC_GetStringValue","value","FC_isDateValid","DATE","FC_GetHierarchStrings","teacher_hierarch","courses","course_code","grade_obj","grade_names","grade_codes","group","periods","includes","isEmptyOrSpaces","course_name","grade_code","findIndex","item","JSON","parse","grade_group","length","grade_name","FC_ConvertArrayToString","Number","teaching_period","toString","dateWrapper","Date","isNaN","getDate","TodayDate","_PlacementReport","setDownloading","setState","downloading","setSortProperty","sortProperty","setSortOrder","sortOrder","setSearchInput","searchInput","setReportTitle","reportTitle","setSelectAll","selectAll","setFormError","formError","setSort","thisProperty","state","setGenerateReport","generateReport","setReportContent","reportContent","setCurrentPage","currentPage","loadDataFormAPI","month","academic_id","auth","selected_district","FC_GetReportByDistrict","district_code","msg","data","loading","reportAPIData","console","log","report","error","FC_GetReportBySchoolMonthly","selectedMonth","filter","loadCountryDataAPI","componentDidMount","districtList","FC_GetDistrictList","basic","academic_calender","academic_year_id","placement","academics","FC_GetAcademics","loadingAcademics","updateDataToPrint","academic_year_name","thisDistrict","FC_GetDistrictByCode","arrayNew","n","allData","getUserList","location","sector_name","dataArray","no","undefined","hired_date","start_date_in_the_school","teaching_level","teaching_level_id","education_certificate","education_certificate_id","Object","prototype","hasOwnProperty","call","reportToPrint","resetReportContent","currentState","newArray","updateReportContent","find","result","list","updatedElement","changeSchoolData","name","code","thisData","teacher","thisSchool","generatePages","total_users","totalPages","Math","ceil","tablePageLength","_pages","Array","from","keys","i","slice","jumpToFirst","jumpToLast","moveBack","moveNext","onClick","disabled","random","countTeacherByGender","teachers","gender","toLocaleLowerCase","MONTHS_LIST","getMonth","selectedAcademic","export_type","openSelectDistrict","DT_GetUserList","this","size","theme","el","onChange","e","target","label","placeholder","checkAccess","access","UsersAccess","ALLOW_SELECT_DISTRICT","selectedDistrict","itm","FC_SetAuthDistrict","province_code","displayNumbers","type","id","colSpan","search","sortThisArray","staff_code","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","fileData","fileName","btnName","large","selected_district_code","onSelect","Component","PlacementReport","connect","FC_GetPlacementByDistrict"],"mappings":"+FAAA,gBAoCeA,IA/BmC,SAACC,GACjD,IAAMC,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjBC,EAAQ,EAAGA,EAAQH,EAAMI,KAAMD,IACtCD,EAAUG,KAAKF,GAUjB,OARaD,EAAUI,KAAI,SAACC,GAC1B,OACE,oBAAIC,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsCD,EAI1D,GAGF,EACD,OACE,qCACE,oBAAIC,UAAU,2BAAd,SACGP,KAD2C,KAG9C,oBAAIO,UAAU,2BAAd,SACGP,KAD2C,OAG9C,oBAAIO,UAAU,2BAAd,SACGP,KAD2C,UAKnD,C,mCClCD,gNAQYQ,EAMAC,EA+FAC,EA7GZ,QAMaC,EAAyB,K,SAE1BH,K,oCAAAA,E,2BAAAA,E,iBAAAA,M,cAMAC,K,cAAAA,E,WAAAA,M,cA+FAC,K,YAAAA,E,8BAAAA,E,sBAAAA,E,8BAAAA,E,cAAAA,E,UAAAA,E,UAAAA,E,gCAAAA,E,UAAAA,E,oBAAAA,E,oBAAAA,E,gCAAAA,E,8BAAAA,E,gBAAAA,E,0BAAAA,E,0BAAAA,E,kCAAAA,E,8BAAAA,E,oBAAAA,E,gBAAAA,E,gCAAAA,E,6BAAAA,M,KA2DL,IAAME,EACX,CACE,CACEC,IAAKH,EAAyCI,UAC9CC,MAAO,mBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCQ,IAC9CH,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCS,SAC9CJ,MAAO,kBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCU,IAC9CL,MAAO,MACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCW,IAC9CN,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCY,eAC9CP,MAAO,iBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCa,cAC9CR,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCc,MAC9CT,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCe,cAC9CV,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCgB,SAC9CX,MAAO,WACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCiB,SAC9CZ,MAAO,WACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCkB,OAC9Cb,MAAO,sBACPC,QAAQ,EACRC,iBAAiB,GAInB,CACEJ,IAAKH,EAAyCmB,eAC9Cd,MAAO,iBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCoB,KAC9Cf,MAAO,aACPC,QAAQ,EACRC,iBAAiB,GAInB,CACEJ,IAAKH,EAAyCM,OAC9CD,MAAO,SACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCqB,aAC9ChB,MAAO,eACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCsB,eAC9CjB,MAAO,iBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCuB,YAC9ClB,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCwB,YAC9CnB,MAAO,cACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyCyB,gBAC9CpB,MAAO,kBACPC,QAAQ,EACRC,iBAAiB,GAEnB,CACEJ,IAAKH,EAAyC0B,cAC9CrB,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,GAGnB,CACEJ,IAAKH,EAAyC2B,cAC9CtB,MAAO,gBACPC,QAAQ,EACRC,iBAAiB,IAsHVqB,EAKT,CACFC,OAAQ,CAAC,KAAM,SACfC,QAAS,CAAC,MAAO,IAAK,MAAO,MAAO,YAAa,KAAM,KAAM,SAC7DC,SAAU,CAAC,MAAO,IAAK,iBAAkB,MACzCC,OAAQ,CAAC,eAAgB,UAAW,MA6BzBC,EAAoB,SAACC,GAChC,OAAc,OAAVA,EAAuB,GACvBC,EAAeD,GAAeE,YAAKF,GAChCA,CACR,EAEYG,EAAwB,SACnCC,GAiBA,IAAIC,EAAkB,GACpBC,EAAwB,GACxBtB,EAAiB,GACjBuB,EAKI,CACFC,YAAa,GACbC,YAAa,GACbJ,QAAS,GACTK,MAAO,IAETC,EAAkB,EAEpB,GAAIP,EAAkB,CAAC,IAAD,WACTnC,GACT,IAAMP,EAAU0C,EAAiBnC,GAUjC,GARKqC,EAAYM,SAASlD,EAAQ4C,eAChCA,EAAY9C,KAAKE,EAAQ4C,aACzBD,GAAWQ,YAAgBR,GACvB3C,EAAQoD,YACR,KAAOpD,EAAQoD,aAIhBP,EAAUE,YAAYG,SAASlD,EAAQqD,aAUrC,GACLR,EAAUF,QAAQW,WAAU,SAACC,GAAD,OAAUA,IAASvD,EAAQ4C,WAA3B,KAA2C,EACvE,CACA,IAAIhD,EAAQiD,EAAUF,QAAQW,WAC5B,SAACC,GAAD,OAAUA,IAASvD,EAAQ4C,WAA3B,IAEFC,EAAUG,MAAMpD,IAAU4D,KAAKC,MAAMzD,EAAQ0D,aAAaC,MAC3D,OAhBCd,EAAUE,YAAYjD,KAAKE,EAAQqD,YACnCR,EAAUC,YAAYhD,KAAKE,EAAQ4D,YACnCf,EAAUF,QAAQ7C,KAAKE,EAAQ4C,aAC/BC,EAAUG,MAAMlD,KACd+D,YAAwBL,KAAKC,MAAMzD,EAAQ0D,eAe/CT,GAEEa,OAAO9D,EAAQ+D,iBACbP,KAAKC,MAAMzD,EAAQ0D,aAAaC,MAnClB,EACpB,IAAK,IAAMpD,KAAOmC,EAAmB,EAA1BnC,GAsCX,IAAK,IAAMA,KAAOsC,EAAUF,QAC1BrB,GAAU6B,YAAgB7B,GAAhB,UACHuB,EAAUC,YAAYvC,GADnB,aAC4BsC,EAAUG,MAAMzC,GAD5C,iBAEDsC,EAAUC,YAAYvC,GAFrB,aAE8BsC,EAAUG,MAAMzC,GAF9C,IAIb,CAED,MAAO,CAAEoC,UAASrB,SAAQ2B,QAASA,EAAQe,WAC5C,EAEYzB,EAAiB,SAACD,GAC7B,GAAc,OAAVA,EAAgB,OAAO,EAC3B,IAAI2B,EAAc,IAAIC,KAAK5B,GAC3B,OAAQ6B,MAAMF,EAAYG,UAC3B,C,yXC7eKC,EAAY,IAAIH,KAuCTI,EAAb,kDAIE,WAAY7E,GAA8B,IAAD,8BACvC,cAAMA,IA6BR8E,eAAiB,SAACjC,GAChB,EAAKkC,SAAS,CAAEC,YAAanC,GAC9B,EAhCwC,EAkCzCoC,gBAAkB,SAACpC,GACjB,EAAKkC,SAAS,CAAEG,aAAcrC,GAC/B,EApCwC,EAsCzCsC,aAAe,SAACtC,GACd,EAAKkC,SAAS,CAAEK,UAAWvC,GAC5B,EAxCwC,EA0CzCwC,eAAiB,SAACxC,GAChB,EAAKkC,SAAS,CAAEO,YAAazC,GAC9B,EA5CwC,EA8CzC0C,eAAiB,SAAC1C,GAChB,EAAKkC,SAAS,CAAES,YAAa3C,GAC9B,EAhDwC,EAkDzC4C,aAAe,SAAC5C,GACd,EAAKkC,SAAS,CAAEW,UAAW7C,GAC5B,EApDwC,EAsDzC8C,aAAe,SACb9C,GAKA,EAAKkC,SAAS,CAAEa,UAAW/C,GAC5B,EA7DwC,EA+DzCgD,QAAU,SAACC,GAEP,EAAKC,MAAMb,eAAiBY,GACH,QAAzB,EAAKC,MAAMX,UAEX,EAAKD,aAAa,QAElB,EAAKA,aAAa,OAEpB,EAAKF,gBAAgBa,EACtB,EAzEwC,EA2EzCE,kBAAoB,SAACnD,GACnB,EAAKkC,SAAS,CAAEkB,eAAgBpD,GACjC,EA7EwC,EA+EzCqD,iBAAmB,SAACrD,GAClB,EAAKkC,SAAS,CAAEoB,cAAetD,GAChC,EAjFwC,EAmFzCuD,eAAiB,SAACvD,GAChB,EAAKkC,SAAS,CAAEsB,YAAaxD,GAC9B,EArFwC,EAuFzCyD,gBAAkB,SAACC,EAAeC,GAE9B,EAAKxG,MAAMyG,KAAK/D,UAChB,EAAK1C,MAAMyG,KAAK1E,MACiB,OAAjC,EAAKgE,MAAMW,kBAEXC,aACE,EAAKZ,MAAMW,kBAAkBE,cAC7BJ,EACAD,GACA,SAACtF,EAAQ4F,EAAKC,GACZ,EAAK/B,SAAS,CACZgC,QAAS9F,EACT+F,cAAe,OAEjBC,QAAQC,IACN,iEAEFD,QAAQC,IAAI,CAAEC,OAAQL,IACtBG,QAAQC,IACN,kEAEa,IAAXjG,GAA6B,OAAT6F,EACtB,EAAK/B,SAAS,CACZiC,cAAeF,IAEP7F,GAAWyC,YAAgBmD,IACrCI,QAAQG,MAAM,CAAEnG,SAAQ4F,OAS3B,IAEI,EAAK7G,MAAMyG,KAAK9D,QAAU,EAAK3C,MAAMyG,KAAK1E,KACjDsF,aACE,EAAKrH,MAAMyG,KAAK9D,OAAOR,YACvBqE,EACA,EAAKT,MAAMuB,eACX,SAACrG,EAAQ4F,EAAKC,GACZ,EAAK/B,SAAS,CACZgC,QAAS9F,EACT+F,cAAe,QAEF,IAAX/F,GAA6B,OAAT6F,EAQtB,EAAK/B,SAAS,CACZiC,cAAeF,EAAKS,QAAO,SAACzD,GAAD,OAAUA,EAAKyC,QAAUA,CAAzB,MAEnBtF,GAAWyC,YAAgBmD,IACrCI,QAAQG,MAAM,CAAEnG,SAAQ4F,OAS3B,IAGH,EAAK7G,MAAMyG,KAAK1E,MACiB,OAAjC,EAAKgE,MAAMW,oBACVhD,YAAgB,EAAKqC,MAAMW,kBAAkBE,gBAE9CD,aACE,EAAKZ,MAAMW,kBAAkBE,cAC7BJ,EACAD,GACA,SAACtF,EAAQ4F,EAAKC,GACZ,EAAK/B,SAAS,CACZgC,QAAS9F,EACT+F,cAAe,QASF,IAAX/F,GAA6B,OAAT6F,EACtB,EAAK/B,SAAS,CACZiC,cAAeF,KAEP7F,GAAWyC,YAAgBmD,EAUxC,GAiCN,EAlOwC,EAoOzCW,mBAAqB,SACnBjB,EACAC,EACAI,GAEI,EAAK5G,MAAMyG,KAAK1E,OAAS2B,YAAgBkD,IAC3CD,aACEC,EACAJ,EACAD,GACA,SAACtF,EAAQ4F,EAAKC,GACZ,EAAK/B,SAAS,CACZgC,QAAS9F,EACT+F,cAAe,QASF,IAAX/F,GAA6B,OAAT6F,EACtB,EAAK/B,SAAS,CACZiC,cAAeF,KAEP7F,GAAWyC,YAAgBmD,EAUxC,GAiCN,EAzSwC,EA2SzCY,kBAAoB,WAEa,OAA5B,EAAK1B,MAAM2B,cACyB,KAAnC,EAAK3B,MAAM2B,aAAaxD,QACD,OAAzB,EAAKlE,MAAMyG,KAAK1E,MAEhB4F,aAAmB,SAAC1G,EAAQ6F,EAAMD,GAChC,EAAK9B,SAAS,CACZgC,SAAS,EACTW,aAAc,QAED,IAAXzG,EAQF,EAAK8D,SAAS,CACZgC,SAAS,EACTW,aAAcZ,IAGNpD,YAAgBmD,IAC1B,EAAK9B,SAAS,CACZa,UAAW,CACTrF,QAAS,aACTsG,IAAKA,GAEPE,SAAS,GAGd,IAEC,EAAK/G,MAAM4H,MAAMC,mBACnB,EAAKvB,gBACH,EAAKP,MAAMuB,cACX,EAAKtH,MAAM4H,MAAMC,kBAAkBC,kBAGF,OAAnC,EAAK9H,MAAM+H,UAAUC,WACqB,IAA1C,EAAKhI,MAAM+H,UAAUC,UAAU9D,OAE/B,EAAKlE,MAAMiI,iBACT,SAAChH,EAAiB6F,EAAgCD,GAChD,EAAK9B,SAAS,CAAEmD,iBAAkBjH,GAEnC,IAEA,EAAK8D,SAAS,CAAEmD,kBAAkB,IACvC,EAAKnD,SAAS,CAAE2B,kBAAmB,EAAK1G,MAAMyG,KAAK/D,UACpD,EA/VwC,EAiWzCyF,kBAAoB,WAElB,GAAI,EAAKnI,MAAMyG,KAAK/D,UAAqC,OAAzB,EAAK1C,MAAMyG,KAAK1E,KAAe,CAC7D,IAAIf,EACF,sBACA,EAAKhB,MAAMyG,KAAK/D,SAASJ,cACzB,YACE,EAAKtC,MAAM4H,MAAMC,oBACnB7G,EACEA,EACA,MACA,EAAKhB,MAAM4H,MAAMC,kBAAkBO,mBACnC,eACA,EAAKrC,MAAMuB,eAEf,EAAK/B,eAAevE,EACrB,MAAM,GAAI,EAAKhB,MAAMyG,KAAK9D,QAAmC,OAAzB,EAAK3C,MAAMyG,KAAK1E,KAAe,CAClE,IAAIf,EACF,sBAAwB,EAAKhB,MAAMyG,KAAK9D,OAAOT,YAAc,UAC3D,EAAKlC,MAAM4H,MAAMC,oBACnB7G,EACEA,EACA,MACA,EAAKhB,MAAM4H,MAAMC,kBAAkBO,mBACnC,eACA,EAAKrC,MAAMuB,eAEf,EAAK/B,eAAevE,EACrB,MAAM,GACL,EAAKhB,MAAMyG,KAAK1E,MAChB,EAAKgE,MAAM2B,cACsB,OAAjC,EAAK3B,MAAMW,kBACX,CACA,IAAM2B,EAAeC,YACnB,EAAKvC,MAAM2B,aACX,EAAK3B,MAAMW,kBAAkBE,eAE3B5F,EAAQ,sBAAwB,EAAKhB,MAAMyG,KAAK1E,KAAKA,KACzDf,EAAQqH,EACJrH,EAAQ,MAAQqH,EAAa/F,cAAgB,YAC7CtB,EACA,EAAKhB,MAAM4H,MAAMC,oBACnB7G,EACEA,EACA,MACA,EAAKhB,MAAM4H,MAAMC,kBAAkBO,mBACnC,eACA,EAAKrC,MAAMuB,eAEf,EAAK/B,eAAevE,EACrB,CAED,IAAIuH,EAAoC,GACpCC,EAAY,EACVC,EAAU,EAAKC,cAErB,GAAID,EAAS,CACX,IAAK,IAAM3H,KAAO2H,EAAS,CAAC,IAAD,IACc,QAAvC,UAAAA,EAAQ3H,GAAK6H,gBAAb,eAAuBC,cACrB3B,QAAQC,IAAI,aAAZ,UAA0BuB,EAAQ3H,GAAK6H,gBAAvC,aAA0B,EAAuBC,aAEnD,IAAIC,EAAmC,CACrCC,GAAIN,EACJzH,UAAW0H,EAAQ3H,GAAKC,UAAY0H,EAAQ3H,GAAKC,UAAa,GAC9DI,IAAKsH,EAAQ3H,GAAKK,IAAMsH,EAAQ3H,GAAKK,IAAO,GAC5CC,SAAUqH,EAAQ3H,GAAKM,SAAWqH,EAAQ3H,GAAKM,SAAY,GAC3DC,IAAKoH,EAAQ3H,GAAKO,IAAMoH,EAAQ3H,GAAKO,IAAO,GAC5CC,IAAKwB,YAAe2F,EAAQ3H,GAAKQ,KAAOmH,EAAQ3H,GAAKQ,IAAO,GAC5DC,eAAgBkH,EAAQ3H,GAAKS,eACzBkH,EAAQ3H,GAAKS,eACb,GACJC,cAAeiH,EAAQ3H,GAAKU,cACxBiH,EAAQ3H,GAAKU,cACb,GACJC,MAAOgH,EAAQ3H,GAAKW,MAAQgH,EAAQ3H,GAAKW,MAAS,GAClDC,cAAe+G,EAAQ3H,GAAKY,cACxB+G,EAAQ3H,GAAKY,cACb,GACJC,SAAU8G,EAAQ3H,GAAKa,SAAW8G,EAAQ3H,GAAKa,SAAY,GAC3DC,SAAUoB,YAAsByF,EAAQ3H,GAAKmC,kBAC1CC,QACHrB,OAAQmB,YAAsByF,EAAQ3H,GAAKmC,kBAAkBpB,OAE7DC,eAAgB2G,EAAQ3H,GAAKgB,eACzB2G,EAAQ3H,GAAKgB,eACb,GACJC,KAAM0G,EAAQ3H,GAAKiB,KAAO0G,EAAQ3H,GAAKiB,KAAQ,GAE/Cd,OAAQwH,EAAQ3H,GAAKG,OAASwH,EAAQ3H,GAAKG,OAAU,GACrDe,kBAC8B+G,IAA5BN,EAAQ3H,GAAKkI,WACTpG,YAAkB6F,EAAQ3H,GAAKkI,YAC/B,GACN/G,eAAgBa,YAAe2F,EAAQ3H,GAAKmI,0BACxCR,EAAQ3H,GAAKmI,yBACb,GACJ/G,YAAauG,EAAQ3H,GAAK6B,OACtBC,YAAkB6F,EAAQ3H,GAAK6B,OAAQT,aACvC,GACJC,YAAasG,EAAQ3H,GAAK6B,OACtBC,YAAkB6F,EAAQ3H,GAAK6B,OAAQR,aACvC,GACJC,gBAAiBqG,EAAQ3H,GAAK6B,OAC1BC,YAAkB6F,EAAQ3H,GAAK6B,OAAQP,iBACvC,GACJC,cAAeoG,EAAQ3H,GAAK6B,OACxBC,YAAkB6F,EAAQ3H,GAAK6B,OAAQN,eACvC,GAWJC,cAAemG,EAAQ3H,GAAK6H,SACxB/F,YAAkB6F,EAAQ3H,GAAK6H,SAAUrG,eACzC,GA4CJsG,YAAaH,EAAQ3H,GAAK6H,UACiB,OAAvCF,EAAQ3H,GAAK6H,SAAUC,YACrBhG,YAAkB6F,EAAQ3H,GAAK6H,SAAUC,aAE3C,GAEJM,eAAgBT,EAAQ3H,GAAKqI,kBACzBvG,YAAkB6F,EAAQ3H,GAAKqI,mBAAqB,IACpD,GAEJC,sBAAuBX,EAAQ3H,GAAKuI,yBAChCzG,YAAkB6F,EAAQ3H,GAAKuI,0BAA4B,IAC3D,IAIN,IAAK,IAAMvI,KAAO,EAAKiF,MAAMI,cAEzBmD,OAAOC,UAAUC,eAAeC,KAAK,EAAK1D,MAAMI,cAAerF,KAE1D,EAAKiF,MAAMI,cAAcrF,GAAKG,eAC1B4H,EAAU,EAAK9C,MAAMI,cAAcrF,GAAKA,MAIrDyH,EAASlI,KAAKwI,GACdL,GAED,CACD,EAAKzD,SAAS,CAAE2E,cAAenB,IAC/BA,EAAW,GACXC,EAAI,CACL,CACF,EAtiBwC,EAwiBzCmB,mBAAqB,SAACC,GACpB,IAAIC,EACF,EAAK9D,MAAMI,cACb,IAAK,IAAMrF,KAAO+I,EACZA,EAAS/I,GAAKI,kBAAiB2I,EAAS/I,GAAKG,QAAU2I,GAG7D,EAAK1D,iBAAiB2D,GACtB,EAAKpE,cAAcmE,GACnB,EAAKzB,mBACN,EAljBwC,EAojBzC2B,oBAAsB,SAAChJ,GACrB,IAAIX,EAAgB,EAAK4F,MAAMI,cAActC,WAC3C,SAACC,GAAD,OAAUA,EAAKhD,MAAQA,CAAvB,IAEE+I,EACF,EAAK9D,MAAMI,cACb0D,EAAS1J,GAAOc,QAAU4I,EAAS1J,GAAOc,OAC1C,EAAKiF,iBAAiB2D,GACEA,EAASE,MAAK,SAACjG,GAAD,OAA0B,IAAhBA,EAAK7C,MAAf,IAEpC,EAAKwE,cAAa,GAElB,EAAKA,cAAa,GAIpB,EAAK0C,mBACN,EArkBwC,EAukBzCO,YAAc,WACZ,IAAIsB,EAAwB,GAE5B,GAAiC,OAA7B,EAAKjE,MAAMiB,cAAwB,OAAO,KAC9C,IAAMA,EAAgB,EAAKjB,MAAMiB,cAAcO,QAC7C,SAACzD,GAAD,OAAWA,EAAKyC,MAAQ,EAAKR,MAAMuB,aAAnC,IAEF,IAAK,IAAMxG,KAAOkG,EAAe,CAC/B,IAAMzG,EAAyBwD,KAAKC,MAAMgD,EAAclG,GAAKmJ,MAEvDC,EAAgC,EAAKC,iBAAiB5J,EAAS,CACnE6J,KAAMpD,EAAclG,GAAKoB,YACzBmI,KAAMrD,EAAclG,GAAKqB,cAG3B6H,EAAM,sBAAOA,GAAP,YAAkBE,GACzB,CAMD,OAJAjD,QAAQC,IAAI,mDACZD,QAAQC,IAAI,CAAEwB,YAAasB,IAC3B/C,QAAQC,IAAI,mDAEL8C,CACR,EA9lBwC,EAgmBzCG,iBAAmB,SACjBG,EACA3H,GAEA,IADkB,EACdkH,EAA0B,GADZ,cAEIS,GAFJ,IAElB,2BAAgC,CAAC,IAAtBC,EAAqB,QAC1BC,EAAaD,EAAQ5H,OACrB6H,IACFA,EAAWrI,YAAcQ,EAAO0H,KAChCG,EAAWtI,YAAcS,EAAOyH,MAElCP,EAASxJ,KAAT,2BAAmBkK,GAAnB,IAA4B5H,OAAQ6H,IACrC,CATiB,+BAWlB,OAAOX,CACR,EA/mBwC,EAinBzCY,cAAgB,SAACC,GACf,IAAMC,EAAaC,KAAKC,KAAKH,EAAc,EAAK3E,MAAM+E,iBAElDC,EAASC,MAAMC,KAAKD,MAAML,EAAa,EADjB,GACgCO,QACvD5K,KAAI,SAAC6K,GAAD,OAFmB,EAEAA,CAAnB,IACJC,MAAM,EAAG,GAERT,EAAa,GAAK,EAAK5E,MAAMM,YAAc,IAE3C0E,EADEJ,EAAa,EAAK5E,MAAMM,YAAc,EAC/B,CACP,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YACX,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,GAElBsE,EAAa,EAAK5E,MAAMM,cAAgB,EACxC,CACP,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YACX,EAAKN,MAAMM,YAAc,GAGlB,CACP,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,YAAc,EACzB,EAAKN,MAAMM,cAKjB,IAAIgF,GAAuB,EACzBC,GAAsB,EACtBC,GAAoB,EACpBC,GAAoB,EAetB,OAbIb,EAAa,GAAgC,IAA3B,EAAK5E,MAAMM,cAAmBkF,GAAW,GAE3DZ,EAAa,GAAK,EAAK5E,MAAMM,cAAgBsE,IAC/Ca,GAAW,GAETb,EAAa,GAAK,EAAK5E,MAAMM,YAAc,IAAGgF,GAAc,GAG9DV,EAAa,GACb,EAAK5E,MAAMM,cAAgBsE,GAC3BA,EAAa,EAAK5E,MAAMM,YAAc,IAEtCiF,GAAa,GAEb,sBAAK9K,UAAU,qBAAf,UACG6K,GACC,wBACE7K,UAAU,4GACViL,QAAS,kBAAM,EAAKrF,eAAe,EAA1B,EAFX,SAIE,cAAC,IAAD,CAAqB5F,UAAU,cAGlC+K,GACC,wBACE/K,UAAU,6FACViL,QAAS,kBAAM,EAAKrF,eAAe,EAAKL,MAAMM,YAAc,EAAnD,EAFX,SAIE,cAAC,IAAD,CAAe7F,UAAU,cAG7B,qBAAKA,UAAU,sDAAf,SACGuK,EAAOzK,KAAI,SAACwD,EAAM3D,GAAP,OACV,wBACEK,UAAS,sEACP,EAAKuF,MAAMM,cAAgBvC,EACvB,uDACA,qBAGN4H,SAAU,EAAK3F,MAAMM,cAAgBvC,EACrC2H,QAAS,WACP,EAAKrF,eAAetC,EAErB,EAXH,SAaGA,GAPI8G,KAAKe,SAPF,MAkBbH,GACC,wBACEhL,UAAU,4GACViL,QAAS,WACP,EAAKrF,eAAe,EAAKL,MAAMM,YAAc,EAE9C,EALH,SAOE,cAAC,IAAD,CAAgB7F,UAAU,cAG7B8K,GACC,wBACE9K,UAAU,4GACViL,QAAS,WACP,EAAKrF,eAAeuE,EAErB,EALH,SAOE,cAAC,IAAD,CAAsBnK,UAAU,gBAKzC,EAnuBwC,EAquBzCoL,qBAAuB,SACrBC,EACAC,GAEA,OAAOD,EAAStE,QACd,SAACzD,GAAD,OAAUA,EAAKzC,KAAOyC,EAAKzC,IAAI0K,sBAAwBD,CAAvD,IACA5H,MACH,EAzuBC,EAAK6B,MAAQ,CACXgB,SAAS,EACTmB,kBAAkB,EAClBlD,aAAa,EACbI,UAAW,MACXF,aAAc,GACdI,YAAa,GACbE,YAAa,GACbE,WAAW,EACXO,gBAAgB,EAChBL,UAAW,KACXO,cAAetF,IACf6I,cAAe,KACfpC,cAAe0E,IAAYpH,EAAUqH,YACrCjF,cAAe,KACfX,YAAa,EACbyE,gBAAiBlK,IACjBsL,iBAAkB,EAAKlM,MAAM4H,MAAMC,kBAC/B,EAAK7H,MAAM4H,MAAMC,kBAAkBC,iBACnC,GACJJ,aAAc,KACdhB,kBAAmB1G,EAAMyG,KAAK/D,SAC9ByJ,YAAa,QACbC,oBAAoB,GA1BiB,CA4BxC,CAhCH,0CAkvBE,WAAU,IAAD,EAEoC,EAFpC,OACDC,EAAuCC,KAAK5D,cAClD,OAAqC,OAAjC4D,KAAKvG,MAAMW,kBAEX,qBAAKlG,UAAU,aAAf,SACE,sBAAKA,UAAU,yGAAf,UACE,sBAAKA,UAAU,qBAAf,iCACuB,IACrB,sBAAMA,UAAU,sDAAhB,mBACG8L,KAAKtM,MAAMyG,KAAK/D,gBADnB,aACG,EAA0BJ,mBAG/B,qBAAK9B,UAAU,qBAAf,qEAGA,cAAC,IAAD,CACEiL,QAAS,WACP,EAAK1G,SAAS,CAAE2B,kBAAmB,EAAK1G,MAAMyG,KAAK/D,WACtB,OAA7B,EAAK1C,MAAMyG,KAAK/D,UACd,EAAK8E,mBACH,EAAKzB,MAAMuB,cACX,EAAKvB,MAAMmG,iBACX,EAAKlM,MAAMyG,KAAK/D,SAASkE,cAE9B,EATH,8BAkBN,qCAEE,eAAC,IAAD,WACE,0BAASpG,UAAU,4CAAnB,UACE,sBAAKA,UAAU,OAAf,UACE,eAAC,IAAD,CAAS+L,KAAK,KAAK/L,UAAU,GAA7B,6CACmC,IADnC,UAEG8L,KAAKvG,MAAMW,yBAFd,aAEG,EAA8BpE,iBAGjC,sBAAK9B,UAAU,2DAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,4BAAIuC,YAAK0B,gBAGb,qBAAKjE,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,sBAAMA,UAAU,GAAhB,uBACA,cAAC,IAAD,CACEgM,MACEF,KAAKvG,MAAMgB,SACkB,OAA7BuF,KAAKvG,MAAMiB,eACyB,IAApCsF,KAAKvG,MAAMiB,cAAc9C,OACrB,UACA,UAENwH,SACEY,KAAKvG,MAAMgB,SACkB,OAA7BuF,KAAKvG,MAAMiB,eACyB,IAApCsF,KAAKvG,MAAMiB,cAAc9C,OAE3B1D,UAAS,UACP8L,KAAKvG,MAAMgB,SACkB,OAA7BuF,KAAKvG,MAAMiB,eACyB,IAApCsF,KAAKvG,MAAMiB,cAAc9C,OACrB,qBACA,GALG,SAOTuH,QAAS,WACP,EAAK1G,SAAS,CAAEoH,YAAa,UAC7B,EAAKhE,oBACL,EAAKnC,mBAAkB,EACxB,EAxBH,SA0BE,qBAAKxF,UAAU,0CAAf,SACE,8DAgCZ,yBAASA,UAAU,gFAAnB,SACE,qBAAKA,UAAU,OAAf,SAC4B,OAAzB8L,KAAKtM,MAAMyG,KAAK1E,KACf,qCACE,cAAC,IAAD,CAASwK,KAAK,KAAd,SACGD,KAAKtM,MAAMyG,KAAK9D,OACb2J,KAAKtM,MAAMyG,KAAK9D,OAAOT,YACvB,KAEN,mBAAG1B,UAAU,aAAb,SACG8L,KAAKtM,MAAMyG,KAAK/D,SACb4J,KAAKtM,MAAMyG,KAAK/D,SAASJ,cAAgB,YACzC,QAGmB,OAAzBgK,KAAKtM,MAAMyG,KAAK1E,KAClB,cAAC,IAAD,CAASwK,KAAK,KAAd,SACGD,KAAKtM,MAAMyG,KAAK/D,SACb4J,KAAKtM,MAAMyG,KAAK/D,SAASJ,cAAgB,YACzC,KAGmB,OAAzBgK,KAAKtM,MAAMyG,KAAK1E,MACd,cAAC,IAAD,CAASwK,KAAK,KAAd,SAC4B,OAAzBD,KAAKtM,MAAMyG,KAAK1E,KAAgBuK,KAAKtM,MAAMyG,KAAK1E,KAAO,SAalE,sBAAKvB,UAAU,uGAAf,UACE,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CACEsG,KACEwF,KAAKtM,MAAM+H,UAAUC,UAArB,YAESsE,KAAKtM,MAAM+H,UAAUC,UAAU1H,KAAI,SAACmM,GAAD,MAAS,CAC7CzL,MAAOyL,EAAGrE,mBACVvF,MAAO4J,EAAG3E,iBAF0B,KAKxC,GAENV,MAAM,GACNgD,KAAK,kBACLsC,SAAU,SAACC,GACT,EAAK5H,SAAS,CAAEmH,iBAAkBS,EAAEC,OAAO/J,QAC3C,EAAKyD,gBACH,EAAKP,MAAMuB,cACXqF,EAAEC,OAAO/J,MAEZ,EACDgK,MAAM,kBACNC,YAAY,kBACZjK,MAAOyJ,KAAKvG,MAAMmG,iBAClBK,KAAK,KACLb,SACEY,KAAKvG,MAAMmC,kBACXoE,KAAKvG,MAAMgB,SACwB,OAAnCuF,KAAKtM,MAAM+H,UAAUC,cAID,OAAzBsE,KAAKtM,MAAMyG,KAAK1E,MACfgL,YACET,KAAKtM,MAAMyG,KAAK1E,KAAKiL,OACrBC,IAAYC,wBAEZ,qBAAK1M,UAAU,GAAf,SACE,cAAC,IAAD,CACEsG,KACEwF,KAAKvG,MAAM2B,aAAX,CAEM,CACE1G,MAAO,kBACP6B,MAAO,KAJf,mBAMSyJ,KAAKvG,MAAM2B,aAAapH,KAAI,SAACmM,GAAD,MAAS,CACtCzL,MAAOyL,EAAGnK,cACVO,MAAO4J,EAAG7F,cAFmB,MAKjC,GAENQ,MAAM,GACNgD,KAAK,kBACLsC,SAAU,SAACC,GACT,GAAgC,OAA5B,EAAK5G,MAAM2B,aAAuB,CACpC,IAAMyF,EAAmB,EAAKpH,MAAM2B,aAAaqC,MAC/C,SAACqD,GAAD,OAASA,EAAIxG,gBAAkB+F,EAAEC,OAAO/J,KAAxC,SAEuBkG,IAArBoE,IACF,EAAKpI,SAAS,CACZ2B,kBAAmByG,IAErB,EAAKnN,MAAMqN,mBAAmB,CAC5BzG,cAAeuG,EAAiBvG,cAChCtE,cAAe6K,EAAiB7K,cAChCgL,cAAeH,EAAiBvG,cAAc,KAGnD,CACD,EAAKY,mBACH,EAAKzB,MAAMuB,cACX,EAAKvB,MAAMmG,iBACXS,EAAEC,OAAO/J,MAEZ,EACDgK,MAAM,kBACNC,YAAY,kBACZjK,MACmC,OAAjCyJ,KAAKvG,MAAMW,kBACP,GACA4F,KAAKvG,MAAMW,kBAAkBE,cAEnC2F,KAAK,KACLb,SACEY,KAAKvG,MAAMmC,kBACXoE,KAAKvG,MAAMgB,SACiB,OAA5BuF,KAAKvG,MAAM2B,iBAKrB,qBAAKlH,UAAU,GAAf,SACE,cAAC,IAAD,CACEsG,KAAI,YACCkF,IAAY1L,KAAI,SAACmM,GAAD,MAAS,CAC1BzL,MAAOyL,EACP5J,MAAO4J,EAFU,KAKrBrF,MAAM,GACNgD,KAAK,eACLsC,SAAU,SAACC,GACT,EAAK5H,SAAS,CAAEuC,cAAeqF,EAAEC,OAAO/J,QACxC,EAAKyD,gBACHqG,EAAEC,OAAO/J,MACT,EAAKkD,MAAMmG,iBAEd,EACDW,MAAM,eACNC,YAAY,eACZjK,MAAOyJ,KAAKvG,MAAMuB,cAClBiF,KAAK,KACLb,SACEY,KAAKvG,MAAMmC,kBACXoE,KAAKvG,MAAMgB,SACwB,OAAnCuF,KAAKtM,MAAM+H,UAAUC,iBAK5BqE,GACC,qBAAK7L,UAAU,OAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,sBAAMA,UAAU,wBAAhB,oBACA,oBAAIA,UAAU,mCAAd,SACG+M,YACCjB,KAAKV,qBAAqBS,EAAgB,gBAIhD,sBAAK7L,UAAU,8BAAf,UACE,sBAAMA,UAAU,wBAAhB,kBACA,oBAAIA,UAAU,mCAAd,SACG+M,YACCjB,KAAKV,qBAAqBS,EAAgB,cAIhD,sBAAK7L,UAAU,8BAAf,UACE,sBAAMA,UAAU,wBAAhB,mBACA,oBAAIA,UAAU,mCAAd,SACG+M,YAAelB,EAAenI,wBAuB7C,eAAC,IAAD,WACE,sBAAK1D,UAAU,gFAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CACEqM,MAAM,SACNzC,KAAK,SACLoD,KAAK,SACLd,SAAU,SAACC,GAAD,OAAY,EAAKtH,eAAesH,EAAEC,OAAO/J,MAAzC,EACViK,YAAY,6BACZjK,MAAOyJ,KAAKvG,MAAMT,YAClBoG,UACGW,GAIY,IAHbA,EAAgBjB,MACdkB,KAAKvG,MAAMM,YAAc,EACzBiG,KAAKvG,MAAMM,YAAc,EAAIiG,KAAKvG,MAAM+E,iBACxC5G,OAEJqI,KAAK,KACLnF,MAAM,OAGV,qBAAK5G,UAAU,GAAf,SACE,cAAC,IAAD,CACEsG,KAAM,CACJ,CAAE9F,MAAOJ,IAAe2D,WAAY1B,MAAOjC,KAC3C,CACEI,OAAyB,EAAjBJ,KAAoB2D,WAC5B1B,MAAwB,EAAjBjC,KAET,CACEI,OAAyB,EAAjBJ,KAAoB2D,WAC5B1B,MAAwB,EAAjBjC,KAET,CACEI,OAAyB,EAAjBJ,KAAoB2D,WAC5B1B,MAAwB,EAAjBjC,KAET,CACEI,OAAyB,EAAjBJ,KAAoB2D,WAC5B1B,MAAwB,EAAjBjC,MAGXwG,MAAM,GACNgD,KAAK,aACLsC,SAAU,SAACC,GAAD,OACR,EAAK5H,SAAS,CACZ+F,gBAAiBzG,OAAOsI,EAAEC,OAAO/J,OACjCwD,YAAa,GAHP,EAMVwG,MAAM,OACNC,YAAY,aACZjK,MAAOyJ,KAAKvG,MAAM+E,gBAClByB,KAAK,YAKX,qBAAK/L,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBiN,GAAG,iBAApC,UACE,uBAAOjN,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,aAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,wBACa,cAAC,IAAD,SAGf,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,YAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,uBACY,cAAC,IAAD,SAGd,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,WAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,sBACW,cAAC,IAAD,SAGb,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,YAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,mBACQ,cAAC,IAAD,SAGV,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,MAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,iBACM,cAAC,IAAD,SAGR,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,MAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,iBACM,cAAC,IAAD,SAGR,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,gBAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,2BACgB,cAAC,IAAD,SAGlB,oBAAIA,UAAU,2BAAd,oBACA,oBACEA,UAAU,2BACViL,QAAS,kBAAM,EAAK5F,QAAQ,WAAnB,EAFX,SAIE,sBAAKrF,UAAU,0BAAf,sBACW,cAAC,IAAD,cAKjB,gCACG8L,KAAKvG,MAAMgB,QACV,cAAC,IAAD,CAAc3G,KAAM,KACe,OAAjCkM,KAAKvG,MAAMW,mBACbhD,YAAgB4I,KAAKvG,MAAMW,kBAAkBE,gBAC7C0F,KAAKtM,MAAMyG,KAAK1E,KAChB,6BACE,oBAAI2L,QAAS,GAAIlN,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,sBAAhB,wDAMe,OAAnB6L,EACF,6BACE,oBAAIqB,QAAS,GAAIlN,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,qDAYO,IANXmN,YACAtB,EAAgBjB,MACdkB,KAAKvG,MAAMM,YAAc,EACzBiG,KAAKvG,MAAMM,YAAc,EAAIiG,KAAKvG,MAAM+E,iBAE1CwB,KAAKvG,MAAMT,aACXpB,OACF,6BACE,oBAAIwJ,QAAS,GAAIlN,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,gEAONoN,aACGlK,YAAgB4I,KAAKvG,MAAMb,cAC5ByI,YACEtB,EAAgBjB,MACdkB,KAAKvG,MAAMM,YAAc,EACzBiG,KAAKvG,MAAMM,YAAc,EAAIiG,KAAKvG,MAAM+E,iBAE1CwB,KAAKvG,MAAMT,aAEbgH,KAAKvG,MAAMb,aACXoH,KAAKvG,MAAMX,WACX9E,KAAI,SAACwD,EAAmBqH,GAApB,OACJ,qBAEE3K,UAAS,UACP2K,EAAI,IAAM,EAAI,cAAgB,WADvB,qHAFX,UAME,oBAAI3K,UAAU,YAAd,UACI,EAAKuF,MAAMM,YAAc,GACzB,EAAKN,MAAM+E,gBACXK,EACA,IAEJ,oBAAI3K,UAAU,YAAd,SACGsD,EAAK+J,WAAa/J,EAAK+J,WAAa,KAEvC,oBAAIrN,UAAU,YAAd,SAA2BsD,EAAK3C,IAAM2C,EAAK3C,IAAM,KACjD,oBAAIX,UAAU,YAAd,SACGsD,EAAK1C,SAAW0C,EAAK1C,SAAW,KAEnC,oBAAIZ,UAAU,YAAd,SACGsD,EAAK/C,UAAY+C,EAAK/C,UAAY,KAErC,oBAAIP,UAAU,YAAd,SAA2BsD,EAAKxC,IAAMwC,EAAKxC,IAAM,KACjD,oBAAId,UAAU,YAAd,SAA2BsD,EAAKzC,IAAMyC,EAAKzC,IAAM,KACjD,oBAAIb,UAAU,YAAd,SACGsD,EAAKpC,cAAgBoC,EAAKpC,cAAgB,KAE7C,oBAAIlB,UAAU,YAAd,SACGsD,EAAKnB,OAASmB,EAAKnB,OAAOT,YAAc,KAE3C,oBAAI1B,UAAU,YAAd,SACGsD,EAAKnC,SAAWmC,EAAKnC,SAAW,OA9B9BwJ,EAAI,EAFP,YAyCZmB,KAAKvG,MAAMgB,SACX,qBAAKvG,UAAU,uDAAf,SACG6L,GAAkBC,KAAK7B,cAAc4B,EAAgBnI,aAQ3DoI,KAAKvG,MAAME,gBACV,cAAC,IAAD,CACEjF,MACE,sBAAKR,UAAU,mCAAf,UAC8B,UAA3B8L,KAAKvG,MAAMoG,YACV,cAAC,IAAD,CAAkB3L,UAAU,2BAE5B,cAAC,IAAD,CAAkBA,UAAU,2BAE9B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,sBAAMA,UAAU,oCAAhB,SAC8B,UAA3B8L,KAAKvG,MAAMoG,YACR,0BACA,gCAKZ2B,UAAU,EACVtB,MAAOuB,IAAOC,QACdC,MAAO,kBAAM,EAAKjI,mBAAkB,EAA7B,EACPkI,eAAe,EACfC,eAAgBC,IAAUC,OAC1BC,cAAc,EACdC,QAAS,CAAEvN,OAAO,GA1BpB,SA4BE,sBAAKR,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,cAAC,IAAD,CACEkL,SAAUY,KAAKvG,MAAMgB,QACrB8F,MAAM,eACNzC,KAAK,eACLoD,KAAK,OACL3K,MAAOyJ,KAAKvG,MAAMP,YAClBsH,YAAa,eACbtM,UAAU,MACVkM,SAAU,SAACC,GACT,EAAKhH,aAAa,MAClB,EAAKJ,eAAeoH,EAAEC,OAAO/J,MAC9B,EACDuE,MACEkF,KAAKvG,MAAMH,WACsB,iBAAjC0G,KAAKvG,MAAMH,UAAUrF,QACjB+L,KAAKvG,MAAMH,UAAUiB,IACrB,KAGR,sBAAKrG,UAAU,qBAAf,UACE,mDACA,sBAAKA,UAAU,0DAAf,UACG8L,KAAKvG,MAAMI,cAAc7F,KAAI,SAACwD,EAAM3D,GAAP,OAC5B,sBAEEK,UAAS,kCACPsD,EAAK5C,gBACD,iBACA,sBAENuK,QAAS,kBACP3H,EAAK5C,iBACL,EAAK4I,oBAAoBhG,EAAKhD,IAFvB,EAITE,MACG8C,EAAK5C,gBAEF,GADA,6BAbR,UAiBG4C,EAAK7C,OACJ,cAAC,IAAD,CAAYT,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAOsD,EAAK9C,UArBPb,EAFqB,IA2B9B,sBACEK,UAAS,0CACTQ,MAAO,OAFT,UAIE,cAAC,IAAD,CAAYR,UAAU,0BACtB,mDAGF,sBACEA,UAAS,0CACTQ,MAAO,OAFT,UAIE,cAAC,IAAD,CAAYR,UAAU,0BACtB,sDAEF,sBACEA,UAAS,0CACTQ,MAAO,OAFT,UAIE,cAAC,IAAD,CAAYR,UAAU,0BACtB,uDAKR,sBAAKA,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTiL,QAAS,kBAAM,EAAK9B,mBAAmB,EAAK5D,MAAML,UAAzC,EAFX,UAIG4G,KAAKvG,MAAML,UACV,cAAC,IAAD,CAAYlF,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,kDAGA8L,KAAKvG,MAAMgB,SACXuF,KAAKvG,MAAM2D,eACgB,UAA3B4C,KAAKvG,MAAMoG,aACT,cAAC,IAAD,CACEqC,SAAUlC,KAAKvG,MAAM2D,cACrB+E,SAAUnC,KAAKvG,MAAMP,YACrBkJ,QAAQ,cAGZpC,KAAKvG,MAAMgB,SACXuF,KAAKvG,MAAM2D,eACgB,QAA3B4C,KAAKvG,MAAMoG,aAAyB,yDAOX,IAAlCG,KAAKvG,MAAMqG,oBACV,cAAC,IAAD,CACEpL,MACE,qBAAKR,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,6BAGA,sBAAMA,UAAU,oCAAhB,oEAMNsN,UAAU,EACVtB,MAAOuB,IAAOC,QACdC,MAAO,kBAAM,EAAKjI,mBAAkB,EAA7B,EACPkI,eAAe,EACfC,eAAgBC,IAAUO,MAC1BL,cAAc,EACdC,QAAS,CAAEvN,OAAO,GApBpB,SAsBE,qBAAKR,UAAU,YAAf,SACE,cAAC,IAAD,CACEkH,aAAc4E,KAAKvG,MAAM2B,aACzBkH,uBACmC,OAAjCtC,KAAKvG,MAAMW,kBACP,GACA4F,KAAKvG,MAAMW,kBAAkBE,cAEnCiI,SAAU,SAACnI,GACT,EAAK3B,SAAS,CAAE2B,kBAAmBA,IACnC,EAAK1G,MAAMqN,mBAAmB,CAC5BzG,cAAeF,EAAkBE,cACjCtE,cAAeoE,EAAkBpE,cACjCgL,cAAe5G,EAAkBE,cAAc,KAEjD,EAAKY,mBACH,EAAKzB,MAAMuB,cACX,EAAKvB,MAAMmG,iBACXxF,EAAkBE,cAErB,UAOd,KAt9CH,GAAsCkI,aAi+CzBC,EAAkBC,aARP,SAAC,GAKvB,MAAO,CAAEvI,KAD2D,EAHpEA,KAIqBmB,MAD+C,EAFpEA,MAGmCG,UADiC,EADpEA,UAGD,GAEuD,CACtDkH,8BACAhH,oBACAoF,yBAH6B2B,CAI5BnK,E","file":"static/js/37.3ef9ce0f.chunk.js","sourcesContent":["import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  DATE,\n  FC_ConvertArrayToString,\n  isEmptyOrSpaces,\n} from \"../utils/functions\";\n\nexport const tablePageLimit: number = 100;\n\nexport enum SchoolStatusEnum {\n  GOVERNMENT_AIDED = \"GOVERNMENT_AIDED\",\n  PRIVATE = \"GOVERNMENT_AIDED\",\n  PUBLIC = \"PUBLIC\",\n}\n\nexport enum ActiveStaffStatusEnum {\n  EXIST = \"Exist\",\n  NEW = \"new\",\n}\n\n// export type PlacementReportActiveType = {\n//   _id: string;\n//   district_code: number;\n//   district_name: string;\n//   school_code: number;\n//   school_name: string;\n//   school_category: string;\n//   school_status: SchoolStatusEnum;\n//   staff_category: string;\n//   staff_code: number;\n//   national_id: number;\n//   names: string;\n//   first_name: string;\n//   last_name: string;\n//   middle_name: string;\n//   phone: string;\n//   email: string;\n//   dob: string;\n//   sex: string;\n//   // nationality: string;\n//   marital_status: string;\n//   qualification: string;\n//   position: string;\n//   specialization: string;\n//   // date_in_education: string;\n//   date_to_school: string;\n//   subjects: string;\n//   period: string;\n//   grades: string;\n//   rssb: number;\n//   bank_name: string;\n//   bank_account: number;\n//   status: ActiveStaffStatusEnum;\n// };\n\n// ORIGINAL INTERFACE ================\nexport type reportToPrintListType = {\n  no: number;\n  // staff_code: string;\n  full_name: string;\n  // first_name: string;\n  // last_name: string;\n  nid: string;\n  passport: string;\n  sex: string;\n  dob: string;\n  phone_numbers: string;\n  email: string;\n  marital_status: string;\n  // nationality_id: string;\n  // ROLE INFO ################\n  role: string;\n  qualification: string;\n  position: string;\n  specialization: string;\n  // staff_category: string;\n  // rssb_number: string;\n  // bank_account: string;\n  status: string;\n  // SCHOOL INFO ################\n  school_code: string;\n  school_name: string;\n  school_category: string;\n  school_status: string;\n  // region_code: string;\n  // LOCATION INFO ##############\n  // village_name: string;\n  // cell_name: string;\n  // cell_code: string;\n  // sector_code: string;\n  district_name: string;\n  // district_code: string;\n  // province_name: string;\n  // province_code: string;\n  // SUBJECTS INFO ##############\n  subjects: string;\n  grades: string;\n  // periods: string;\n  // NEW FIELD =====================\n  date_in_school: string;\n  date_of_hire: string;\n  // nationality: string;\n  // middle_name: string;\n  // bank_name: string;\n  sector_name: string;\n  teaching_level: string;\n  education_certificate: string;\n  // END NEW FIELD =================\n};\n\nexport enum PlacementReportActiveContentKeyInterface {\n  role = \"role\",\n  district_name = \"district_name\",\n  full_name = \"full_name\",\n  // first_name = \"first_name\",\n  // last_name = \"last_name\",\n  phone_numbers = \"phone_numbers\",\n  email = \"email\",\n  sex = \"sex\",\n  dob = \"dob\",\n  marital_status = \"marital_status\",\n  nid = \"nid\",\n  passport = \"passport\",\n  // rssb_number = \"rssb_number\",\n  // nationality_id = \"nationality_id\",\n  // bank_account = \"bank_account\",\n  position = \"position\",\n  specialization = \"specialization\",\n  qualification = \"qualification\",\n  // date_in_education = \"date_in_education\",\n  // staff_category = \"staff_category\",\n  // staff_code = \"staff_code\",\n  status = \"status\",\n  school_code = \"school_code\",\n  school_name = \"school_name\",\n\n  school_category = \"school_category\",\n  school_status = \"school_status\",\n  // region_code = \"region_code\",\n  // village_name = \"village_name\",\n  // cell_name = \"cell_name\",\n  // cell_code = \"cell_code\",\n  // sector_name = \"sector_name\",\n  // sector_code = \"sector_code\",\n  // district_name = \"district_name\",\n  // district_code = \"district_code\",\n  // province_name = \"province_name\",\n  // province_code = \"province_code\",\n\n  // SUBJECT FIELDS ================\n  subjects = \"subjects\",\n  grades = \"grades\",\n  // periods = \"periods\",\n\n  // NEW FIELDS ================\n  date_in_school = \"date_in_school\",\n  date_of_hire = \"date_of_hire\",\n  // nationality = \"nationality\",\n  // middle_name = \"middle_name\",\n  // bank_name = \"bank_name\",\n}\n\nexport interface PlacementReportActiveContentInterface {\n  key: PlacementReportActiveContentKeyInterface;\n  title: string;\n  status: boolean;\n  isChangeAllowed: boolean;\n}\n\nexport const defaultPlacementReportActiveContent: PlacementReportActiveContentInterface[] =\n  [\n    {\n      key: PlacementReportActiveContentKeyInterface.full_name,\n      title: \"Staff Full Names\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.nid,\n      title: \"National ID\",\n      status: true,\n      isChangeAllowed: false,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.passport,\n      title: \"Passport Number\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.sex,\n      title: \"Sex\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.dob,\n      title: \"Date of Birth\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.marital_status,\n      title: \"Marital status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.phone_numbers,\n      title: \"Staff Phone\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.email,\n      title: \"Staff Email\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.qualification,\n      title: \"Qualification\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.position,\n      title: \"Position\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.subjects,\n      title: \"Subjects\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.grades,\n      title: \"Grade (No of Group)\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    //* ADD TEACHING LEVEL\n    {\n      key: PlacementReportActiveContentKeyInterface.specialization,\n      title: \"Specialization\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.role,\n      title: \"Staff role\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    //* CERTIFIED / NON-CERTIFIED\n    {\n      key: PlacementReportActiveContentKeyInterface.status,\n      title: \"Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_of_hire,\n      title: \"Date to hire\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.date_in_school,\n      title: \"Date in school\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_name,\n      title: \"School Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_code,\n      title: \"School Code\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_category,\n      title: \"School Category\",\n      status: true,\n      isChangeAllowed: true,\n    },\n    {\n      key: PlacementReportActiveContentKeyInterface.school_status,\n      title: \"School Status\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    {\n      key: PlacementReportActiveContentKeyInterface.district_name,\n      title: \"District Name\",\n      status: true,\n      isChangeAllowed: true,\n    },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.staff_code,\n    //   title: \"Staff code\",\n    //   status: true,\n    //   isChangeAllowed: false,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.first_name,\n    //   title: \"Staff First Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.middle_name,\n    //   title: \"Staff Middle Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.last_name,\n    //   title: \"Staff Last Name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.rssb_number,\n    //   title: \"RSSB\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.bank_name,\n    //   title: \"Bank name\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.bank_account,\n    //   title: \"Bank account\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.district_code,\n    //   title: \"District Code\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.nationality,\n    //   title: \"Nationality\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n    // {\n    //   key: PlacementReportActiveContentKeyInterface.periods,\n    //   title: \"Periods\",\n    //   status: true,\n    //   isChangeAllowed: true,\n    // },\n  ];\n\n// export type reportDefaultListType = {\n//   user_id: string | null;\n//   role_id: number | null;\n//   role: string | null;\n//   first_name: string | null;\n//   full_name: string | null;\n//   last_name: string | null;\n//   phone_numbers: string | null;\n//   email: string | null;\n//   sex: string | null;\n//   dob: string | null;\n//   marital_status: string | null;\n//   nid: string | null;\n//   rssb_number: string | null;\n//   nationality_id: string | null;\n//   bank_account: string | null;\n//   position: string | null;\n//   specialization: string | null;\n//   staff_category: string | null;\n//   staff_code: string | null;\n//   qualification: string | null;\n//   start_date_in_the_school: string | null;\n//   status: string | null;\n//   school: reportSchoolType;\n//   location: reportLocationType;\n// };\n\n// export type reportSchoolType = {\n//   school_id: number;\n//   school_code: string;\n//   school_name: string;\n//   school_category: string;\n//   school_status: string;\n\n//   region_code: string;\n// };\n\n// export type reportLocationType = {\n//   village_id: string;\n//   village_name: string;\n//   cell_name: string;\n//   cell_code: string;\n//   sector_name: string;\n//   sector_code: string;\n//   district_name: string;\n//   district_code: string;\n//   province_name: string;\n//   province_code: string;\n// };\n\nexport const forReportRoles: {\n  system: string[];\n  country: string[];\n  district: string[];\n  school: string[];\n} = {\n  system: [\"26\", \"Admin\"],\n  country: [\"REB\", \"4\", \"RTB\", \"300\", \"MINECOFIN\", \"27\", \"26\", \"Admin\"],\n  district: [\"DDE\", \"3\", \"Human Resource\", \"25\"],\n  school: [\"Head Teacher\", \"Teacher\", \"2\"],\n};\n\nexport type ReportAcademicYearType = {\n  academic_year_id: number;\n  academic_year_name: string;\n  academic_year_description: string;\n  academic_year_start: string;\n  academic_year_end: string;\n  post_request_start: string;\n  post_request_end: string;\n  transfer_request_start: string;\n  transfer_request_end: string;\n  internal_transfer_assessment_start: string;\n  internal_transfer_assessment_end: string;\n  external_transfer_assessment_start: string;\n  external_transfer_assessment_end: string;\n  teacher_recruitment_start: string;\n  teacher_recruitment_end: string;\n  createdB_by: string;\n  created_date: string;\n  updated_by: string;\n  updated_date: string;\n  archive: string;\n  archived_by: string;\n  archived_date: string;\n  status: number;\n};\n\nexport const FC_GetStringValue = (value: string | Date | null): string => {\n  if (value === null) return \"\";\n  if (FC_isDateValid(value)) return DATE(value);\n  return value as string;\n};\n\nexport const FC_GetHierarchStrings = (\n  teacher_hierarch:\n    | {\n        grade_group: string;\n        combination_code: string;\n        combination_name: string;\n        grade_name: string;\n        grade_code: string;\n        course_code: string;\n        course_name: string;\n        teaching_period: string;\n      }[]\n    | null\n): {\n  courses: string;\n  grades: string;\n  periods: string;\n} => {\n  let courses: string = \"\",\n    course_code: string[] = [],\n    grades: string = \"\",\n    grade_obj: {\n      grade_names: string[];\n      grade_codes: string[];\n      courses: string[];\n      group: string[];\n    } = {\n      grade_names: [],\n      grade_codes: [],\n      courses: [],\n      group: [],\n    },\n    periods: number = 0;\n\n  if (teacher_hierarch) {\n    for (const key in teacher_hierarch) {\n      const element = teacher_hierarch[key];\n      // CREATING DISTINCT COURSES ===========\n      if (!course_code.includes(element.course_code)) {\n        course_code.push(element.course_code);\n        courses += isEmptyOrSpaces(courses)\n          ? element.course_name\n          : \", \" + element.course_name;\n      }\n\n      // CREATING OBJECT OF DISTINCT GRADES WITH LENGTH GROUPED BY COURSE ===========\n      if (!grade_obj.grade_codes.includes(element.grade_code)) {\n        grade_obj.grade_codes.push(element.grade_code);\n        grade_obj.grade_names.push(element.grade_name);\n        grade_obj.courses.push(element.course_code);\n        grade_obj.group.push(\n          FC_ConvertArrayToString(JSON.parse(element.grade_group))\n        );\n        // grades += isEmptyOrSpaces(grades)\n        //   ? element.course_name\n        //   : \", \" + element.course_name;\n      } else if (\n        grade_obj.courses.findIndex((item) => item === element.course_code) >= 0\n      ) {\n        let index = grade_obj.courses.findIndex(\n          (item) => item === element.course_code\n        );\n        grade_obj.group[index] += JSON.parse(element.grade_group).length;\n      }\n\n      // GET TOTAL PERIODS MULTIPLIED WITH NUMBER OF GRADE GROUP ===========\n      periods =\n        periods +\n        Number(element.teaching_period) *\n          JSON.parse(element.grade_group).length;\n    }\n\n    // CREATING DISTINCT GRADES ===========\n    for (const key in grade_obj.courses) {\n      grades += isEmptyOrSpaces(grades)\n        ? `${grade_obj.grade_names[key]} (${grade_obj.group[key]})`\n        : `, ${grade_obj.grade_names[key]} (${grade_obj.group[key]})`;\n    }\n  }\n\n  return { courses, grades, periods: periods.toString() };\n};\n\nexport const FC_isDateValid = (value: string | Date | null): boolean => {\n  if (value === null) return false;\n  var dateWrapper = new Date(value);\n  return !isNaN(dateWrapper.getDate());\n};\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { connect } from \"react-redux\";\nimport {\n  API_GetPlacementBySchoolUpdated,\n  Auth,\n  AuthDistrict,\n  Basic,\n  DistrictList,\n  FC_GetAcademics,\n  FC_GetDistrictByCode,\n  FC_GetDistrictList,\n  FC_GetPlacementByDistrict,\n  FC_GetReportByDistrict,\n  FC_GetReportBySchoolMonthly,\n  FC_SetAuthDistrict,\n  FT_GetPlacementByDistrict,\n  Placement,\n  TeacherData,\n} from \"../../../actions\";\nimport DashboardContainer from \"../../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../../components/Heading/Heading\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  DATE,\n  displayNumbers,\n  isEmptyOrSpaces,\n  MONTHS_LIST,\n  search,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport {\n  defaultPlacementReportActiveContent,\n  FC_GetHierarchStrings,\n  FC_GetStringValue,\n  FC_isDateValid,\n  PlacementReportActiveContentInterface,\n  PlacementReportActiveContentKeyInterface,\n  ReportAcademicYearType,\n  reportToPrintListType,\n  tablePageLimit,\n} from \"../../../types/PlacementReportTypes\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport InputSelect from \"../../../components/Inputs/InputSelect\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\nimport Button from \"../../../components/Buttons/Button\";\nimport { BsFileEarmarkPdf } from \"react-icons/bs\";\nimport { SiMicrosoftexcel } from \"react-icons/si\";\nimport { SelectDistrict } from \"../../PlacementBooks/SchoolPlacement/SelectDistrict\";\nimport { UsersAccess, checkAccess } from \"../../../utils/access\";\n\nconst TodayDate = new Date();\n\ninterface PlacementReportProps {\n  // REDUX PROPS ======\n  auth: Auth;\n  basic: Basic;\n  placement: Placement;\n  FC_GetPlacementByDistrict: FT_GetPlacementByDistrict;\n  FC_GetAcademics: Function;\n  FC_SetAuthDistrict: (district: AuthDistrict) => void;\n}\n\ninterface PlacementReportState {\n  loading: boolean;\n  loadingAcademics: boolean;\n  downloading: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  sortProperty: string;\n  searchInput: string;\n  reportTitle: string;\n  selectAll: boolean;\n  generateReport: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  reportContent: PlacementReportActiveContentInterface[];\n  reportToPrint: reportToPrintListType[] | null;\n  selectedMonth: string;\n  reportAPIData: API_GetPlacementBySchoolUpdated[] | null;\n  currentPage: number;\n  tablePageLength: number;\n  selectedAcademic: string;\n  districtList: DistrictList[] | null;\n  selected_district: DistrictList | null;\n  export_type: \"Excel\" | \"PDF\";\n  openSelectDistrict: boolean;\n}\n\nexport class _PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingAcademics: false,\n      downloading: false,\n      sortOrder: \"ASC\",\n      sortProperty: \"\",\n      searchInput: \"\",\n      reportTitle: \"\",\n      selectAll: true,\n      generateReport: false,\n      formError: null,\n      reportContent: defaultPlacementReportActiveContent,\n      reportToPrint: null,\n      selectedMonth: MONTHS_LIST[TodayDate.getMonth()],\n      reportAPIData: null,\n      currentPage: 1,\n      tablePageLength: tablePageLimit,\n      selectedAcademic: this.props.basic.academic_calender\n        ? this.props.basic.academic_calender.academic_year_id\n        : \"\",\n      districtList: null,\n      selected_district: props.auth.district,\n      export_type: \"Excel\",\n      openSelectDistrict: false,\n    };\n  }\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setSortProperty = (value: string) => {\n    this.setState({ sortProperty: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n  };\n\n  setGenerateReport = (value: boolean) => {\n    this.setState({ generateReport: value });\n  };\n\n  setReportContent = (value: PlacementReportActiveContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  loadDataFormAPI = (month: string, academic_id: string) => {\n    if (\n      this.props.auth.district &&\n      this.props.auth.role &&\n      this.state.selected_district !== null\n    )\n      FC_GetReportByDistrict(\n        this.state.selected_district.district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          console.log({ report: data });\n          console.log(\n            \"=================reportsss DISTRICT LEVEL ===================\"\n          );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (this.props.auth.school && this.props.auth.role)\n      FC_GetReportBySchoolMonthly(\n        this.props.auth.school.school_code,\n        academic_id,\n        this.state.selectedMonth,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          if (status === false && data !== null) {\n            // console.log(\n            //   \"=================reportsss SCHOOL LEVEL ===================\"\n            // );\n            // console.log({ report: data });\n            // console.log(\n            //   \"=================reportsss SCHOOL LEVEL ===================\"\n            // );\n            this.setState({\n              reportAPIData: data.filter((item) => item.month === month),\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    else if (\n      this.props.auth.role &&\n      this.state.selected_district !== null &&\n      !isEmptyOrSpaces(this.state.selected_district.district_code)\n    )\n      FC_GetReportByDistrict(\n        this.state.selected_district.district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          // console.log(\n          //   \"=================reportsss DISTRICT LEVEL ===================\"\n          // );\n          // console.log({ report: data });\n          // console.log(\n          //   \"=================reportsss DISTRICT LEVEL ===================\"\n          // );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            // console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    // else if (\n    //   this.props.auth.role &&\n    //   forReportRoles.country.includes(this.props.auth.role.role)\n    // )\n    //   FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n    //     this.setState({\n    //       loading: status,\n    //       reportAPIData: null,\n    //     });\n    //     if (status === false && data !== null) {\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       console.log({ report: data });\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       this.setState({\n    //         reportAPIData: data.filter((item) => item.month === month),\n    //       });\n    //     } else if (!status && !isEmptyOrSpaces(msg)) {\n    //       console.error({ status, msg });\n    //       // this.setState({\n    //       //   loading: false,\n    //       //   error: {\n    //       //     msg: msg,\n    //       //     target: \"main-error\",\n    //       //   },\n    //       // });\n    //     }\n    //   });\n  };\n\n  loadCountryDataAPI = (\n    month: string,\n    academic_id: string,\n    district_code: string\n  ) => {\n    if (this.props.auth.role && !isEmptyOrSpaces(district_code))\n      FC_GetReportByDistrict(\n        district_code,\n        academic_id,\n        month,\n        (status, msg, data) => {\n          this.setState({\n            loading: status,\n            reportAPIData: null,\n          });\n          // console.log(\n          //   \"=================reportsss DISTRICT LEVEL ===================\"\n          // );\n          // console.log({ report: data });\n          // console.log(\n          //   \"=================reportsss DISTRICT LEVEL ===================\"\n          // );\n          if (status === false && data !== null) {\n            this.setState({\n              reportAPIData: data,\n            });\n          } else if (!status && !isEmptyOrSpaces(msg)) {\n            // console.error({ status, msg });\n            // this.setState({\n            //   loading: false,\n            //   error: {\n            //     msg: msg,\n            //     target: \"main-error\",\n            //   },\n            // });\n          }\n        }\n      );\n    // else if (\n    //   this.props.auth.role &&\n    //   forReportRoles.country.includes(this.props.auth.role.role)\n    // )\n    //   FC_GetReportByInstitute(academic_id, month, (status, msg, data) => {\n    //     this.setState({\n    //       loading: status,\n    //       reportAPIData: null,\n    //     });\n    //     if (status === false && data !== null) {\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       console.log({ report: data });\n    //       console.log(\n    //         \"=================reportsss COUNTRY LEVEL ===================\"\n    //       );\n    //       this.setState({\n    //         reportAPIData: data.filter((item) => item.month === month),\n    //       });\n    //     } else if (!status && !isEmptyOrSpaces(msg)) {\n    //       console.error({ status, msg });\n    //       // this.setState({\n    //       //   loading: false,\n    //       //   error: {\n    //       //     msg: msg,\n    //       //     target: \"main-error\",\n    //       //   },\n    //       // });\n    //     }\n    //   });\n  };\n\n  componentDidMount = () => {\n    if (\n      (this.state.districtList === null ||\n        this.state.districtList.length !== 30) &&\n      this.props.auth.role !== null\n    ) {\n      FC_GetDistrictList((status, data, msg) => {\n        this.setState({\n          loading: true,\n          districtList: null,\n        });\n        if (status === true) {\n          // console.log(\n          //   \"================= districts COUNTRY LEVEL ===================\"\n          // );\n          // console.log({ report: data });\n          // console.log(\n          //   \"================= districts COUNTRY LEVEL ===================\"\n          // );\n          this.setState({\n            loading: false,\n            districtList: data,\n            // selected_district: data[0].district_code,\n          });\n        } else if (!isEmptyOrSpaces(msg)) {\n          this.setState({\n            formError: {\n              element: \"main-error\",\n              msg: msg,\n            },\n            loading: false,\n          });\n        }\n      });\n    }\n    if (this.props.basic.academic_calender)\n      this.loadDataFormAPI(\n        this.state.selectedMonth,\n        this.props.basic.academic_calender.academic_year_id\n      );\n    if (\n      this.props.placement.academics === null ||\n      this.props.placement.academics.length === 0\n    )\n      this.props.FC_GetAcademics(\n        (status: boolean, data: ReportAcademicYearType[], msg: string) => {\n          this.setState({ loadingAcademics: status });\n          // if (!status && !isEmptyOrSpaces(msg)) this.setState({});\n        }\n      );\n    else this.setState({ loadingAcademics: false });\n    this.setState({ selected_district: this.props.auth.district });\n  };\n\n  updateDataToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.props.auth.district && this.props.auth.role !== null) {\n      let title =\n        \"Placement Report / \" +\n        this.props.auth.district.district_name +\n        \" district\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (this.props.auth.school && this.props.auth.role !== null) {\n      let title =\n        \"Placement Report / \" + this.props.auth.school.school_name + \" school\";\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    } else if (\n      this.props.auth.role &&\n      this.state.districtList &&\n      this.state.selected_district !== null\n    ) {\n      const thisDistrict = FC_GetDistrictByCode(\n        this.state.districtList,\n        this.state.selected_district.district_code\n      );\n      let title = \"Placement Report / \" + this.props.auth.role.role;\n      title = thisDistrict\n        ? title + \" / \" + thisDistrict.district_name + \" district\"\n        : title;\n      if (this.props.basic.academic_calender) {\n        title =\n          title +\n          \" / \" +\n          this.props.basic.academic_calender.academic_year_name +\n          \" / Month of \" +\n          this.state.selectedMonth;\n      }\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    let arrayNew: reportToPrintListType[] = [];\n    let n: number = 1;\n    const allData = this.getUserList();\n\n    if (allData) {\n      for (const key in allData) {\n        allData[key].location?.sector_name === null &&\n          console.log(\"Test loc: \", allData[key].location?.sector_name);\n        // if (Object.prototype.hasOwnProperty.call(allData, key)) {\n        let dataArray: reportToPrintListType = {\n          no: n,\n          full_name: allData[key].full_name ? allData[key].full_name! : \"\",\n          nid: allData[key].nid ? allData[key].nid! : \"\",\n          passport: allData[key].passport ? allData[key].passport! : \"\",\n          sex: allData[key].sex ? allData[key].sex! : \"\",\n          dob: FC_isDateValid(allData[key].dob) ? allData[key].dob! : \"\",\n          marital_status: allData[key].marital_status\n            ? allData[key].marital_status!\n            : \"\",\n          phone_numbers: allData[key].phone_numbers\n            ? allData[key].phone_numbers!\n            : \"\",\n          email: allData[key].email ? allData[key].email! : \"\",\n          qualification: allData[key].qualification\n            ? allData[key].qualification!\n            : \"\",\n          position: allData[key].position ? allData[key].position! : \"\",\n          subjects: FC_GetHierarchStrings(allData[key].teacher_hierarch)\n            .courses,\n          grades: FC_GetHierarchStrings(allData[key].teacher_hierarch).grades,\n          //* teaching_level: \"Teaching level\",\n          specialization: allData[key].specialization\n            ? allData[key].specialization!\n            : \"\",\n          role: allData[key].role ? allData[key].role! : \"\",\n          //* Certified/uncertified\n          status: allData[key].status ? allData[key].status! : \"\",\n          date_of_hire:\n            allData[key].hired_date !== undefined\n              ? FC_GetStringValue(allData[key].hired_date!)\n              : \"\",\n          date_in_school: FC_isDateValid(allData[key].start_date_in_the_school)\n            ? allData[key].start_date_in_the_school!\n            : \"\",\n          school_name: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_name)\n            : \"\",\n          school_code: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_code)\n            : \"\",\n          school_category: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_category)\n            : \"\",\n          school_status: allData[key].school\n            ? FC_GetStringValue(allData[key].school!.school_status)\n            : \"\",\n          // district_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.district_code)\n          //   : \"\",\n\n          // first_name: allData[key].first_name ? allData[key].first_name! : \"\",\n          // middle_name: allData[key].middle_name\n          //   ? allData[key].middle_name!\n          //   : \"\",\n          // last_name: allData[key].last_name ? allData[key].last_name! : \"\",\n\n          district_name: allData[key].location\n            ? FC_GetStringValue(allData[key].location!.district_name)\n            : \"\",\n\n          // rssb_number: allData[key].rssb_number\n          //   ? allData[key].rssb_number!\n          //   : \"\",\n          // nationality:\n          //   allData[key].nationality !== undefined &&\n          //   allData[key].nationality !== null\n          //     ? allData[key].nationality!\n          //     : \"\",\n          // bank_name: allData[key].bank_name ? allData[key].bank_name! : \"\",\n          // bank_account: allData[key].bank_account\n          //   ? allData[key].bank_account!\n          //   : \"\",\n\n          // staff_category: allData[key].staff_category\n          //   ? allData[key].staff_category!\n          //   : \"\",\n          // staff_code: allData[key].staff_code ? allData[key].staff_code! : \"\",\n\n          // region_code: allData[key].school\n          //   ? FC_GetStringValue(allData[key].school!.region_code)\n          //   : \"\",\n          // village_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.village_name)\n          //   : \"\",\n          // cell_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.cell_name)\n          //   : \"\",\n          // cell_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.cell_code)\n          //   : \"\",\n          // sector_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.sector_name)\n          //   : \"\",\n          // sector_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.sector_code)\n          //   : \"\",\n          // province_name: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.province_name)\n          //   : \"\",\n          // province_code: allData[key].location\n          //   ? FC_GetStringValue(allData[key].location!.province_code)\n          //   : \"\",\n          sector_name: allData[key].location\n            ? allData[key].location!.sector_name !== null\n              ? FC_GetStringValue(allData[key].location!.sector_name!)\n              : \"\"\n            : \"\",\n\n          teaching_level: allData[key].teaching_level_id\n            ? FC_GetStringValue(allData[key].teaching_level_id || \"\")\n            : \"\",\n\n          education_certificate: allData[key].education_certificate_id\n            ? FC_GetStringValue(allData[key].education_certificate_id || \"\")\n            : \"\",\n\n          // periods: FC_GetHierarchStrings(allData[key].teacher_hierarch).periods,\n        };\n        for (const key in this.state.reportContent) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.state.reportContent, key)\n          ) {\n            if (!this.state.reportContent[key].status) {\n              delete dataArray[this.state.reportContent[key].key];\n            }\n          }\n        }\n        arrayNew.push(dataArray);\n        n++;\n        // }\n      }\n      this.setState({ reportToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (newArray[key].isChangeAllowed) newArray[key].status = !currentState;\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateDataToPrint();\n  };\n\n  updateReportContent = (key: PlacementReportActiveContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: PlacementReportActiveContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateDataToPrint();\n  };\n\n  getUserList = (): TeacherData[] | null => {\n    let result: TeacherData[] = [];\n\n    if (this.state.reportAPIData === null) return null;\n    const reportAPIData = this.state.reportAPIData.filter(\n      (item) => (item.month = this.state.selectedMonth)\n    );\n    for (const key in reportAPIData) {\n      const element: TeacherData[] = JSON.parse(reportAPIData[key].list);\n\n      const updatedElement: TeacherData[] = this.changeSchoolData(element, {\n        name: reportAPIData[key].school_name,\n        code: reportAPIData[key].school_code,\n      });\n\n      result = [...result, ...updatedElement];\n    }\n\n    console.log(\"=================getUserList===================\");\n    console.log({ getUserList: result });\n    console.log(\"=================getUserList===================\");\n\n    return result;\n  };\n\n  changeSchoolData = (\n    thisData: TeacherData[],\n    school: { code: string; name: string }\n  ): TeacherData[] => {\n    let newArray: TeacherData[] = [];\n    for (const teacher of thisData) {\n      let thisSchool = teacher.school;\n      if (thisSchool) {\n        thisSchool.school_code = school.code;\n        thisSchool.school_name = school.name;\n      }\n      newArray.push({ ...teacher, school: thisSchool });\n    }\n\n    return newArray;\n  };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / this.state.tablePageLength);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) moveBack = true;\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages)\n      moveNext = true;\n\n    if (totalPages > 3 && this.state.currentPage > 3) jumpToFirst = true;\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    )\n      jumpToLast = true;\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                // this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              // this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              // this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  countTeacherByGender = (\n    teachers: TeacherData[],\n    gender: \"female\" | \"male\"\n  ): number => {\n    return teachers.filter(\n      (item) => item.sex && item.sex.toLocaleLowerCase() === gender\n    ).length;\n  };\n\n  render() {\n    const DT_GetUserList: TeacherData[] | null = this.getUserList();\n    if (this.state.selected_district === null) {\n      return (\n        <div className=\"p-2 md:p-4\">\n          <div className=\"flex flex-col items-center justify-center w-full text-center py-6 border border-primary-300 rounded-md\">\n            <div className=\"font-bold text-2xl\">\n              Placement Report for{\" \"}\n              <span className=\"text-base bg-primary-700 text-white px-1 rounded-md\">\n                {this.props.auth.district?.district_name}\n              </span>\n            </div>\n            <div className=\"text-gray-500 mb-3\">\n              Click the following button to load the placement report\n            </div>\n            <Button\n              onClick={() => {\n                this.setState({ selected_district: this.props.auth.district });\n                this.props.auth.district !== null &&\n                  this.loadCountryDataAPI(\n                    this.state.selectedMonth,\n                    this.state.selectedAcademic,\n                    this.props.auth.district.district_code\n                  );\n              }}\n            >\n              Load Report\n            </Button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <>\n        {/* REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n        <DashboardContainer>\n          <section className=\"flex flex-col sm:flex-row justify-between\">\n            <div className=\"px-3\">\n              <Heading size=\"lg\" className=\"\">\n                Monthly Teacher Placement Report{\" \"}\n                {this.state.selected_district?.district_name}\n              </Heading>\n              {/* <p className=\"opacity-50\">Placement report</p> */}\n              <div className=\"flex flex-row items-center justify-start gap-1 text-base\">\n                <span className=\"text-gray-500\">Done on</span>\n                <p>{DATE(Date())}</p>\n              </div>\n            </div>\n            <div className=\"px-3 float-right\">\n              <div className=\"float-right -mr-2 mt-2\">\n                <div className=\"flex flex-row items-center justify-end font-bold\">\n                  <span className=\"\">Download:</span>\n                  <Button\n                    theme={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"default\"\n                        : \"success\"\n                    }\n                    disabled={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                    }\n                    className={`${\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"cursor-not-allowed\"\n                        : \"\"\n                    } mx-3`}\n                    onClick={() => {\n                      this.setState({ export_type: \"Excel\" });\n                      this.updateDataToPrint();\n                      this.setGenerateReport(true);\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center w-full gap-2\">\n                      <span>Excel format</span>\n                    </div>\n                  </Button>\n                  {/* <Button\n                    theme=\"primary-light\"\n                    disabled={\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                    }\n                    className={`${\n                      this.state.loading ||\n                      this.state.reportAPIData === null ||\n                      this.state.reportAPIData.length === 0\n                        ? \"cursor-not-allowed\"\n                        : \"\"\n                    }`}\n                    onClick={() => {\n                      this.updateDataToPrint();\n                      this.setGenerateReport(true);\n                      this.setState({ export_type: \"PDF\" });\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center w-full gap-2\">\n                      <span>PDF format</span>\n                    </div>\n                  </Button> */}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"flex flex-col sm:flex-row justify-between bg-accent-400 w-max rounded-md mx-2\">\n            <div className=\"px-3\">\n              {this.props.auth.role !== null ? (\n                <>\n                  <Heading size=\"sm\">\n                    {this.props.auth.school\n                      ? this.props.auth.school.school_name\n                      : \"\"}\n                  </Heading>\n                  <p className=\"opacity-50\">\n                    {this.props.auth.district\n                      ? this.props.auth.district.district_name + \" district\"\n                      : \"\"}\n                  </p>\n                </>\n              ) : this.props.auth.role !== null ? (\n                <Heading size=\"sm\">\n                  {this.props.auth.district\n                    ? this.props.auth.district.district_name + \" district\"\n                    : \"\"}\n                </Heading>\n              ) : (\n                this.props.auth.role !== null && (\n                  <Heading size=\"sm\">\n                    {this.props.auth.role !== null ? this.props.auth.role : \"\"}\n                  </Heading>\n                )\n              )}\n            </div>\n          </section>\n\n          {/* END REPORT HEADER WITH TITLE, SESSION, DONE DATE, DISTRICT ================ */}\n\n          {/* *********************************************************************** */}\n\n          {/* FILTER BY ACADEMIC & MONTH ================ */}\n\n          <div className=\"border-t border-gray-400 mt-4 mb-1 flex flex-col md:flex-row items-center justify-between px-3 gap-2\">\n            <div className=\"flex flex-col md:flex-row items-center gap-2\">\n              <div className=\"\">\n                <InputSelect\n                  data={\n                    this.props.placement.academics\n                      ? [\n                          ...this.props.placement.academics.map((el) => ({\n                            title: el.academic_year_name,\n                            value: el.academic_year_id,\n                          })),\n                        ]\n                      : []\n                  }\n                  error=\"\"\n                  name=\"select_academic\"\n                  onChange={(e) => {\n                    this.setState({ selectedAcademic: e.target.value });\n                    this.loadDataFormAPI(\n                      this.state.selectedMonth,\n                      e.target.value\n                    );\n                  }}\n                  label=\"Select academic\"\n                  placeholder=\"Select academic\"\n                  value={this.state.selectedAcademic}\n                  size=\"sm\"\n                  disabled={\n                    this.state.loadingAcademics ||\n                    this.state.loading ||\n                    this.props.placement.academics === null\n                  }\n                />\n              </div>\n              {this.props.auth.role !== null &&\n                checkAccess(\n                  this.props.auth.role.access,\n                  UsersAccess.ALLOW_SELECT_DISTRICT\n                ) && (\n                  <div className=\"\">\n                    <InputSelect\n                      data={\n                        this.state.districtList\n                          ? [\n                              {\n                                title: \"Select district\",\n                                value: \"\",\n                              },\n                              ...this.state.districtList.map((el) => ({\n                                title: el.district_name,\n                                value: el.district_code,\n                              })),\n                            ]\n                          : []\n                      }\n                      error=\"\"\n                      name=\"select_district\"\n                      onChange={(e) => {\n                        if (this.state.districtList !== null) {\n                          const selectedDistrict = this.state.districtList.find(\n                            (itm) => itm.district_code === e.target.value\n                          );\n                          if (selectedDistrict !== undefined) {\n                            this.setState({\n                              selected_district: selectedDistrict,\n                            });\n                            this.props.FC_SetAuthDistrict({\n                              district_code: selectedDistrict.district_code,\n                              district_name: selectedDistrict.district_name,\n                              province_code: selectedDistrict.district_code[0],\n                            });\n                          }\n                        }\n                        this.loadCountryDataAPI(\n                          this.state.selectedMonth,\n                          this.state.selectedAcademic,\n                          e.target.value\n                        );\n                      }}\n                      label=\"Select district\"\n                      placeholder=\"Select district\"\n                      value={\n                        this.state.selected_district === null\n                          ? \"\"\n                          : this.state.selected_district.district_code\n                      }\n                      size=\"sm\"\n                      disabled={\n                        this.state.loadingAcademics ||\n                        this.state.loading ||\n                        this.state.districtList === null\n                      }\n                    />\n                  </div>\n                )}\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    ...MONTHS_LIST.map((el) => ({\n                      title: el,\n                      value: el,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_month\"\n                  onChange={(e) => {\n                    this.setState({ selectedMonth: e.target.value });\n                    this.loadDataFormAPI(\n                      e.target.value,\n                      this.state.selectedAcademic\n                    );\n                  }}\n                  label=\"Select month\"\n                  placeholder=\"Select month\"\n                  value={this.state.selectedMonth}\n                  size=\"sm\"\n                  disabled={\n                    this.state.loadingAcademics ||\n                    this.state.loading ||\n                    this.props.placement.academics === null\n                  }\n                />\n              </div>\n            </div>\n            {DT_GetUserList && (\n              <div className=\"py-1\">\n                <div className=\"flex justify-between space-x-4 text-right\">\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Female</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(\n                        this.countTeacherByGender(DT_GetUserList, \"female\")\n                      )}\n                    </h2>\n                  </div>\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Male</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(\n                        this.countTeacherByGender(DT_GetUserList, \"male\")\n                      )}\n                    </h2>\n                  </div>\n                  <div className=\"flex-1 rounded-lg px-3 py-1\">\n                    <span className=\"text-primary-800 mt-1\">Total</span>\n                    <h2 className=\"text-4xl font-bold text-gray-800\">\n                      {displayNumbers(DT_GetUserList.length)}\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </DashboardContainer>\n        {/* END FILTER BY ACADEMIC & MONTH ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT SUMMARY ================ */}\n        {/* <DashboardContainer>\n          <ReportSummary />\n        </DashboardContainer> */}\n        {/* END REPORT SUMMARY ================ */}\n\n        {/* *********************************************************************** */}\n\n        {/* REPORT CONTENT ================ */}\n        <DashboardContainer>\n          <div className=\"border border-t mt-2 mb-1 flex flex-col md:flex-row items-center px-3 rounded\">\n            <div className=\"flex-1 pr-2\">\n              <TextInput\n                label=\"Search\"\n                name=\"search\"\n                type=\"search\"\n                onChange={(e: any) => this.setSearchInput(e.target.value)}\n                placeholder=\"Search by names, codes,...\"\n                value={this.state.searchInput}\n                disabled={\n                  !DT_GetUserList ||\n                  DT_GetUserList!.slice(\n                    this.state.currentPage - 1,\n                    this.state.currentPage - 1 + this.state.tablePageLength\n                  ).length === 0\n                }\n                size=\"sm\"\n                error=\"\"\n              />\n            </div>\n            <div className=\"\">\n              <InputSelect\n                data={[\n                  { title: tablePageLimit.toString(), value: tablePageLimit },\n                  {\n                    title: (tablePageLimit * 2).toString(),\n                    value: tablePageLimit * 2,\n                  },\n                  {\n                    title: (tablePageLimit * 3).toString(),\n                    value: tablePageLimit * 3,\n                  },\n                  {\n                    title: (tablePageLimit * 4).toString(),\n                    value: tablePageLimit * 4,\n                  },\n                  {\n                    title: (tablePageLimit * 5).toString(),\n                    value: tablePageLimit * 5,\n                  },\n                ]}\n                error=\"\"\n                name=\"page_limit\"\n                onChange={(e) =>\n                  this.setState({\n                    tablePageLength: Number(e.target.value),\n                    currentPage: 1,\n                  })\n                }\n                label=\"Show\"\n                placeholder=\"page limit\"\n                value={this.state.tablePageLength}\n                size=\"sm\"\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_code\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff Code <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"staff_nid\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Staff NID <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"passport\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Passport <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"full_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"dob\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      DOB <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"sex\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Sex <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"qualification\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Qualification <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2 cursor-pointer\">School</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={11} />\n                ) : this.state.selected_district !== null &&\n                  isEmptyOrSpaces(this.state.selected_district.district_code) &&\n                  this.props.auth.role ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-base font-bold\">\n                          Please select district to get data!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : DT_GetUserList === null ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          Something went wrong, try again!\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : search(\n                    DT_GetUserList!.slice(\n                      this.state.currentPage - 1,\n                      this.state.currentPage - 1 + this.state.tablePageLength\n                    ),\n                    this.state.searchInput\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={11} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    !isEmptyOrSpaces(this.state.sortProperty),\n                    search(\n                      DT_GetUserList!.slice(\n                        this.state.currentPage - 1,\n                        this.state.currentPage - 1 + this.state.tablePageLength\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item: TeacherData, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-accent-100 hover:text-accent-700 border-b border-gray-300 hover:border-accent-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">\n                        {(this.state.currentPage - 1) *\n                          this.state.tablePageLength +\n                          i +\n                          1}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.staff_code ? item.staff_code : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.nid ? item.nid : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.passport ? item.passport : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.full_name ? item.full_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.dob ? item.dob : \"\"}</td>\n                      <td className=\"px-2 py-2\">{item.sex ? item.sex : \"\"}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.qualification ? item.qualification : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.school ? item.school.school_name : \"\"}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.position ? item.position : \"\"}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n          {/* pagination ========= */}\n          {!this.state.loading && (\n            <div className=\"flex flex-col items-center mt-3 mb-2 overflow-x-auto\">\n              {DT_GetUserList && this.generatePages(DT_GetUserList!.length)}\n            </div>\n          )}\n        </DashboardContainer>\n        {/* END REPORT CONTENT ================ */}\n\n        {/* ********************************************************************************** */}\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReport && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.export_type === \"Excel\" ? (\n                  <SiMicrosoftexcel className=\"text-5xl text-gray-900\" />\n                ) : (\n                  <BsFileEarmarkPdf className=\"text-5xl text-gray-900\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-900\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    {this.state.export_type === \"Excel\"\n                      ? \"Generating Excel Report\"\n                      : \"Generating PDF Report\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setGenerateReport(false)}\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <TextInput\n                  disabled={this.state.loading}\n                  label=\"Report title\"\n                  name=\"report_title\"\n                  type=\"text\"\n                  value={this.state.reportTitle}\n                  placeholder={\"Report title\"}\n                  className=\"p-2\"\n                  onChange={(e) => {\n                    this.setFormError(null);\n                    this.setReportTitle(e.target.value);\n                  }}\n                  error={\n                    this.state.formError &&\n                    this.state.formError.element === \"report_title\"\n                      ? this.state.formError.msg\n                      : \"\"\n                  }\n                />\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                    {this.state.reportContent.map((item, index) => (\n                      <div\n                        key={index}\n                        className={`flex items-center gap-1 ${\n                          item.isChangeAllowed\n                            ? \"cursor-pointer\"\n                            : \"cursor-not-allowed\"\n                        }`}\n                        onClick={() =>\n                          item.isChangeAllowed &&\n                          this.updateReportContent(item.key)\n                        }\n                        title={\n                          !item.isChangeAllowed\n                            ? \"Required for every report!\"\n                            : \"\"\n                        }\n                      >\n                        {item.status ? (\n                          <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                        ) : (\n                          <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                        )}\n                        <span>{item.title}</span>\n                      </div>\n                    ))}\n\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer `}\n                      title={\" dfd\"}\n                    >\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      <label>Sector name</label>\n                    </div>\n\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer `}\n                      title={\" dfd\"}\n                    >\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      <label>Teaching level</label>\n                    </div>\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer `}\n                      title={\" dfd\"}\n                    >\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      <label>sector</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => this.resetReportContent(this.state.selectAll)}\n                >\n                  {this.state.selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {!this.state.loading &&\n                  this.state.reportToPrint &&\n                  this.state.export_type === \"Excel\" && (\n                    <ExportToExcel\n                      fileData={this.state.reportToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Download\"\n                    />\n                  )}\n                {!this.state.loading &&\n                  this.state.reportToPrint &&\n                  this.state.export_type === \"PDF\" && <div>Export to PDF</div>}\n              </div>\n            </div>\n          </Modal>\n        )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {/* List of districts */}\n        {this.state.openSelectDistrict === true && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <BiCurrentLocation className=\"text-5xl text-gray-900\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-900\">\n                    Choose district\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Choose district you want to view placement report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setGenerateReport(false)}\n            backDropClose={false}\n            widthSizeClass={ModalSize.large}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-3 pb-4\">\n              <SelectDistrict\n                districtList={this.state.districtList}\n                selected_district_code={\n                  this.state.selected_district === null\n                    ? \"\"\n                    : this.state.selected_district.district_code\n                }\n                onSelect={(selected_district: DistrictList) => {\n                  this.setState({ selected_district: selected_district });\n                  this.props.FC_SetAuthDistrict({\n                    district_code: selected_district.district_code,\n                    district_name: selected_district.district_name,\n                    province_code: selected_district.district_code[0],\n                  });\n                  this.loadCountryDataAPI(\n                    this.state.selectedMonth,\n                    this.state.selectedAcademic,\n                    selected_district.district_code\n                  );\n                }}\n              />\n            </div>\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  placement,\n}: StoreState): { auth: Auth; basic: Basic; placement: Placement } => {\n  return { auth: auth, basic: basic, placement: placement };\n};\n\nexport const PlacementReport = connect(mapStateToProps, {\n  FC_GetPlacementByDistrict,\n  FC_GetAcademics,\n  FC_SetAuthDistrict,\n})(_PlacementReport);\n"],"sourceRoot":""}