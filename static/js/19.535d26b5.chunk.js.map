{"version":3,"sources":["components/TableLoading/TableLoading.tsx","components/DownloadLink/DownloadLink.tsx","containers/Trensfer/Dde/LeaveForm.tsx","containers/Trensfer/Dde/TransferRequests.tsx","containers/TransfersReportsCOUNRTY/IncomingTransferReport.tsx"],"names":["TableLoading","props","displayCols","colsArray","index","cols","push","map","element","className","DownloadLink","this_URL","linkFor","APP_URL_FILE","first_id","APP_URL","last_id","href","target","rel","theme","size","title","connect","FC_UploadSignedDocument","React","useState","error","setError","selectedFile","setSelectedFile","loadingRequest","setLoadingRequest","Alert","fixed","msg","InputFile","disabled","labelColor","label","name","onChange","e","files","thisFile","type","onFileChange","accept","acceptAllEnum","PDF","Button","onClick","setSelectedUserId","selectedUserId","status","response_error","isEmptyOrSpaces","setTimeout","TransferRequests","componentDidMount","district_id","district_code","auth","district","setState","selected_district_id","FC_GetAllTransfers","data","loading","getTransferById","transfer_id","transfer","allTransfers","find","item","teacher_transfer_id","toString","FC_DisplaySchools","schools","school_name","state","search","this","TextInput","value","placeholder","length","ExportToExcel","fileData","el","approved_school_id","Approved_school_name","approved_school_info","Approved_school_code","school_code","Approved_school_district","district_name","position_code","position_name","qualification_name","requested_comment","school_from_name","school_from_info","school_from_code","school_from_district","teacher_id","teacher_comment","teacher_last_name","teacher_full_name","teacher_phone_number","transfer_reason","transfer_type","fileName","btnName","hideActions","colSpan","requested_school_info","mayor_letter","requested_status","Component","basic","defaultError","_IncomingTransferReport","loading_district","districts","selected_district","FC_GetDistricts","console","log","selectDistrict","bind","IncomingTransferReport"],"mappings":"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","file":"static/js/19.535d26b5.chunk.js","sourcesContent":["import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport { ImAttachment } from \"react-icons/im\";\nimport { APP_URL, APP_URL_FILE } from \"../../config/app.config\";\nimport Button from \"../Buttons/Button\";\n\ntype DownloadLinkProps = {\n  linkFor: \"uploaded\" | \"termination\" | \"suspension\" | \"transfer\";\n  first_id: string | number;\n  last_id: string | number;\n  title: string;\n};\n\nconst DownloadLink: React.FC<DownloadLinkProps> = (props) => {\n  const this_URL: string =\n    props.linkFor === \"uploaded\"\n      ? `${APP_URL_FILE}/${props.first_id}`\n      : `${APP_URL}/generateletter/${props.linkFor}/${props.first_id}/${props.last_id}`;\n  return (\n    <a\n      href={this_URL}\n      // className=\"py-2 px-4 text-md w-max font-bold rounded bg-primary-800 hover:bg-opacity-90 text-white flex items-center gap-2\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button\n        theme=\"primary-light\"\n        size=\"sm\"\n        className=\"flex items-center gap-1\"\n      >\n        <ImAttachment />\n        <span>{props.title}</span>\n      </Button>\n    </a>\n  );\n};\n\nexport default DownloadLink;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_UploadSignedDocument,\n  FT_UploadSignedDocument,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport InputFile, { acceptAllEnum } from \"../../../components/Inputs/InputFile\";\nimport { isEmptyOrSpaces } from \"../../../utils/functions\";\n\ntype LeaveFormProps = {\n  selectedUserId: string;\n  setSelectedUserId: (value: string) => void;\n\n  // REDUX ========\n  FC_UploadSignedDocument: FT_UploadSignedDocument;\n};\n\nconst LeaveForm: React.FC<LeaveFormProps> = (props) => {\n  const [error, setError] = React.useState<{\n    target: \"main-error\" | \"main-success\" | \"approved_doc\" | \"comment\";\n    msg: string;\n  } | null>(null);\n  // const [comment, setComment] = React.useState<string>(\"\");\n  const [selectedFile, setSelectedFile] = React.useState<File | null>(null);\n  const [loadingRequest, setLoadingRequest] = React.useState<boolean>(false);\n\n  const onFileChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setError(null);\n    // this.setState({ selectedFile: event.target.files[0] });\n\n    // check if the file is available\n    if (e.target.files === null) {\n      setSelectedFile(null);\n      return setError({\n        msg: \"Please select a valid file\",\n        target: \"approved_doc\",\n      });\n    }\n\n    const thisFile = e.target.files[0];\n\n    // check the file type\n    if (thisFile.type !== \"application/pdf\") {\n      setSelectedFile(null);\n      return setError({\n        msg: \"The system accept pdf only\",\n        target: \"approved_doc\",\n      });\n    }\n\n    // check if the size is valued\n    if (thisFile.size <= 0) {\n      setSelectedFile(null);\n      return setError({\n        msg: \"Invalid file, Please choose a real file\",\n        target: \"approved_doc\",\n      });\n    }\n\n    // Add image\n    setSelectedFile(thisFile);\n    setError(null);\n  };\n\n  const RequestHandle = (decision: \"REJECTED\" | \"APPROVED\") => {\n    if (selectedFile === null) {\n      setError({ target: \"approved_doc\", msg: \"Required!\" });\n      return;\n    }\n    // if (isEmptyOrSpaces(comment)) {\n    //   setError({ target: \"comment\", msg: \"Required!\" });\n    //   return;\n    // }\n    props.FC_UploadSignedDocument(\n      props.selectedUserId,\n      selectedFile,\n      (status: boolean, response_error: string) => {\n        setLoadingRequest(status);\n        if (!status && !isEmptyOrSpaces(response_error))\n          setError({ target: \"main-error\", msg: response_error });\n        else if (isEmptyOrSpaces(response_error)) {\n          setError({\n            target: \"main-success\",\n            msg: \"Document uploaded successfully!\",\n          });\n          // setComment(\"\");\n          setSelectedFile(null);\n          setTimeout(() => {\n            props.setSelectedUserId(\"\");\n          }, 1000);\n        }\n      }\n      // (status: boolean, response_error: string) => {\n      //   setLoadingRequest(status);\n      //   if (validation_error) setError(validation_error);\n\n      //   if (response_error) setError(response_error);\n\n      //   if (response_error && response_error.target === \"main-success\") {\n      //     setComment(\"\");\n      //     setSelectedFile(null);\n      //     props.setSelectedUserId(\"\");\n      //   }\n      // }\n    );\n  };\n\n  return (\n    <div className=\"animate__animated animate__zoomIn animate__faster absolute p-1 bg-primary-800 rounded -mt-2 z-40 w-auto mx-2 sm:mx-0 sm:w-80 right-0 pb-2\">\n      {error && error.target === \"main-success\" && (\n        <Alert theme=\"success\" fixed>\n          {error && error.msg}\n        </Alert>\n      )}\n      {error && error.target === \"main-error\" && (\n        <Alert theme=\"danger\" fixed>\n          {error && error.msg}\n        </Alert>\n      )}\n      <div className=\"px-2\">\n        <InputFile\n          disabled={loadingRequest}\n          labelColor=\"text-gray-300\"\n          label=\"Signed document\"\n          name=\"approved_doc\"\n          className=\"p-2\"\n          onChange={(e) => onFileChange(e)}\n          error={error && error.target === \"approved_doc\" ? error.msg : \"\"}\n          type={\"file\"}\n          accept={acceptAllEnum.PDF}\n        />\n      </div>\n      {/* <div className=\"px-2\">\n        <TextArea\n          disabled={loadingRequest}\n          name=\"dde_post_request_comment\"\n          className=\"w-full p-1 rounded\"\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          error={\"\"}\n          labelColor=\"text-gray-300\"\n          label={\"Comment\"}\n          placeholder={\"\"}\n        ></TextArea>\n      </div> */}\n      <div className=\"flex justify-between gap-2 px-2\">\n        <Button\n          theme=\"default\"\n          onClick={() => {\n            props.setSelectedUserId(\"\");\n            // setComment(\"\");\n            setSelectedFile(null);\n          }}\n          disabled={loadingRequest}\n        >\n          Cancel\n        </Button>\n        <div className=\"flex gap-2\">\n          <Button\n            theme=\"success\"\n            disabled={loadingRequest}\n            onClick={(e) => RequestHandle(\"APPROVED\")}\n          >\n            Upload\n          </Button>\n          {/* <Button\n            theme=\"danger\"\n            disabled={loadingRequest}\n            onClick={() => RequestHandle(\"REJECTED\")}\n          >\n            Reject\n          </Button> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { FC_UploadSignedDocument })(LeaveForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic } from \"../../../actions\";\nimport {\n  FC_GetAllTransfers,\n  FT_GetAllTransfer,\n} from \"../../../actions/transfer.action\";\nimport Alert from \"../../../components/Alert/Alert\";\nimport Button from \"../../../components/Buttons/Button\";\nimport DownloadLink from \"../../../components/DownloadLink/DownloadLink\";\nimport ExportToExcel from \"../../../components/GenerateReport/ExportToExcel\";\nimport TextInput from \"../../../components/Inputs/TextInput\";\nimport TableLoading from \"../../../components/TableLoading/TableLoading\";\nimport { StoreState } from \"../../../reducers\";\nimport { TransferReducerType } from \"../../../reducers/transfer.reducer\";\nimport {\n  SchoolInfoType,\n  TransferRequestType,\n} from \"../../../types/TransferTypes\";\nimport { isEmptyOrSpaces, search } from \"../../../utils/functions\";\nimport LeaveForm from \"./LeaveForm\";\n\ntype TransferRequestsProps = {\n  auth: Auth;\n  basic: Basic;\n  transfer: TransferReducerType;\n  FC_GetAllTransfers: FT_GetAllTransfer;\n  district_code?: string;\n  district_name?: string;\n  hideActions?: boolean;\n};\n\ntype TransferRequestsState = {\n  loading: boolean;\n  error: {\n    target: \"main-error\" | \"main-success\";\n    msg: string;\n  } | null;\n  search: string;\n  selectedUserId: string;\n  selected_district_id: string;\n};\n\nclass TransferRequests extends Component<\n  TransferRequestsProps,\n  TransferRequestsState\n> {\n  constructor(props: TransferRequestsProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: null,\n      search: \"\",\n      selectedUserId: \"\",\n      selected_district_id: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    // if (\n    //   this.props.transfer.allTransfers === null ||\n    //   this.props.transfer.allTransfers.length === 0\n    // ) {\n    let district_id = \"\";\n    if (this.props.district_code) district_id = this.props.district_code;\n    else if (this.props.auth.district?.district_code)\n      district_id = this.props.auth.district?.district_code;\n    else\n      return this.setState({\n        error: { target: \"main-error\", msg: \"No district assigned to you\" },\n      });\n\n    this.setState({\n      selected_district_id: district_id,\n    });\n    this.props.FC_GetAllTransfers(\n      district_id,\n      (status: boolean, data: TransferRequestType[] | null, msg: string) => {\n        this.setState({ loading: status });\n\n        if (!status && data) this.setState({ loading: status });\n        else if (!status && !isEmptyOrSpaces(msg))\n          this.setState({\n            error: { target: \"main-error\", msg: msg },\n          });\n      }\n    );\n    // } else if (this.state.loading === true) this.setState({ loading: false });\n  };\n\n  getTransferById = (transfer_id: string): TransferRequestType | undefined => {\n    if (this.props.transfer.allTransfers)\n      return this.props.transfer.allTransfers.find(\n        (item) => item.teacher_transfer_id.toString() === transfer_id\n      );\n    return undefined;\n  };\n\n  FC_DisplaySchools = (schools: SchoolInfoType[]) => {\n    return schools.map((item, index) => (\n      <p>\n        {index + 1} {item.school_name}\n      </p>\n    ));\n  };\n  render() {\n    return (\n      <>\n        {this.state.error !== null && this.state.error.target === \"main-error\" && (\n          <Alert fixed theme=\"danger\">\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"mt-3\">\n          <div className=\"border border-t mt-2 mb-1 flex items-center px-3 rounded\">\n            <div className=\"flex-1 pr-2\">\n              <TextInput\n                error=\"\"\n                label=\"Search\"\n                type=\"search\"\n                name=\"\"\n                onChange={(e) => this.setState({ search: e.target.value })}\n                placeholder=\"Search\"\n                value={this.state.search}\n                size=\"sm\"\n              />\n            </div>\n            <div className=\"p-2\">\n              {this.props.transfer.allTransfers &&\n                this.props.transfer.allTransfers.length >= 1 && (\n                  <ExportToExcel\n                    fileData={this.props.transfer.allTransfers.map((el) => ({\n                      approved_school_id: el.approved_school_id,\n                      Approved_school_name:\n                        el.approved_school_info?.school_name,\n                      Approved_school_code:\n                        el.approved_school_info?.school_code,\n                      Approved_school_district:\n                        el.approved_school_info?.district_name,\n                      position_code: el.position_code,\n                      position_name: el.position_name,\n                      qualification_name: el.qualification_name,\n                      requested_comment: el.requested_comment,\n                      school_from_name: el.school_from_info?.school_name,\n                      school_from_code: el.school_from_info?.school_code,\n                      school_from_district: el.school_from_info?.district_name,\n                      teacher_id: el.teacher_id,\n                      teacher_comment: el.teacher_comment,\n                      teacher_last_name: el.teacher_last_name,\n                      teacher_full_name: el.teacher_full_name,\n                      teacher_phone_number: el.teacher_phone_number,\n                      transfer_reason: el.transfer_reason,\n                      transfer_type: el.transfer_type,\n                    }))}\n                    fileName={`INCOMING TRANSFERS`}\n                    btnName=\"Download EXCEL\"\n                  />\n                )}\n            </div>\n          </div>\n          <div className=\"w-full overflow-x-auto mt-4\">\n            <table className=\"w-full\">\n              <thead className=\"bg-blue-50 text-blue-800 font-bold text-base text-left\">\n                <tr>\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">Full Name</th>\n                  <th className=\"p-2 border\">Phone</th>\n                  <th className=\"p-2 border\">Current School</th>\n                  <th className=\"p-2 border\">Approved School</th>\n                  {/* <th className=\"p-2 border\">Approved Sector</th> */}\n                  <th className=\"p-2 border\">Position</th>\n                  <th className=\"p-2 border\">Qualification</th>\n                  {this.props.hideActions ? null : (\n                    <th className=\"p-2 border\"></th>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loading ? (\n                  <TableLoading cols={8} />\n                ) : this.props.transfer.allTransfers === null ? (\n                  <tr className=\"border-t border-b\">\n                    <td\n                      colSpan={8}\n                      className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      Something went wrong! Please try again.\n                    </td>\n                  </tr>\n                ) : this.props.transfer.allTransfers.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={8}\n                      className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      No results found\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    this.props.transfer.allTransfers,\n                    this.state.search\n                  ).map((element: TransferRequestType, index: number) => {\n                    return (\n                      <tr\n                        key={element.teacher_transfer_id}\n                        className=\"border-t border-b hover:bg-gray-50\"\n                      >\n                        <td className=\"p-2 border\">{index + 1}</td>\n                        <td className=\"p-2 border\">\n                          {element.teacher_full_name}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.teacher_phone_number}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.school_from_info\n                            ? element.school_from_info.school_name\n                            : \"\"}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.requested_school_info\n                            ? this.FC_DisplaySchools(\n                                element.requested_school_info\n                              )\n                            : \"\"}\n                        </td>\n\n                        <td className=\"p-2 border\">\n                          {element.position_code} {element.position_name}\n                        </td>\n                        <td className=\"p-2 border\">\n                          {element.qualification_name}\n                        </td>\n                        {/* <td className=\"p-2 border\">\n                          {element.requested_school_info\n                            ? element.requested_school_info.sector_name\n                            : \"\"}\n                        </td> */}\n\n                        {this.props.hideActions ? null : (\n                          <>\n                            {this.state.selectedUserId ===\n                            element.teacher_transfer_id.toString() ? (\n                              <td className=\"p-2 border\">\n                                <LeaveForm\n                                  selectedUserId={this.state.selectedUserId}\n                                  setSelectedUserId={(value: string) =>\n                                    this.setState({ selectedUserId: value })\n                                  }\n                                />\n                              </td>\n                            ) : (\n                              <>\n                                {/* <td className=\"p-2 border\"></td> */}\n                                <td className=\"p-2 border-1 flex gap-2\">\n                                  {element.mayor_letter === null ||\n                                  isEmptyOrSpaces(element.mayor_letter) ? (\n                                    <Button\n                                      size=\"sm\"\n                                      theme=\"success-light\"\n                                      onClick={(e) =>\n                                        this.setState({\n                                          selectedUserId:\n                                            element.teacher_transfer_id.toString(),\n                                        })\n                                      }\n                                    >\n                                      Upload signed letter\n                                    </Button>\n                                  ) : (\n                                    element.requested_status\n                                  )}\n\n                                  {element.mayor_letter === null ||\n                                  isEmptyOrSpaces(element.mayor_letter) ? (\n                                    <DownloadLink\n                                      linkFor=\"transfer\"\n                                      first_id={element.teacher_transfer_id}\n                                      last_id={element.teacher_id}\n                                      title={\"Transfer letter\"}\n                                    />\n                                  ) : (\n                                    element.mayor_letter &&\n                                    !isEmptyOrSpaces(element.mayor_letter) && (\n                                      <DownloadLink\n                                        linkFor=\"uploaded\"\n                                        first_id={element.mayor_letter}\n                                        last_id={\"\"}\n                                        title={\"Transfer letter\"}\n                                      />\n                                    )\n                                  )}\n                                </td>\n                              </>\n                            )}\n                          </>\n                        )}\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  transfer,\n}: StoreState): { auth: Auth; basic: Basic; transfer: TransferReducerType } => {\n  return { auth: auth, basic: basic, transfer };\n};\n\nexport default connect(mapStateToProps, {\n  FC_GetAllTransfers,\n})(TransferRequests);\n","import React from \"react\";\nimport { MdArrowForward } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n// import { InternalTransfer } from \"../InternalTransfer/InternalTransfer\";\n// import { OutgoingTransfers } from \"../OutgoingTransfers/OutgoingTransfers\";\nimport TransferRequests from \"../Trensfer/Dde/TransferRequests\";\n// import Alert, { AlertInterface } from \"../../components/Alert/Alert\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface ErrorType {\n  target: \"MAIN-ERROR\" | \"MAIN-SUCCESS\" | null;\n  error: string;\n}\n\nconst defaultError: ErrorType = {\n  error: \"\",\n  target: null,\n};\n\ninterface AppState {\n  loading_district: boolean;\n  districts: DistrictTypes[];\n  error: ErrorType;\n  selected_district: DistrictTypes | null;\n}\n\nclass _IncomingTransferReport extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading_district: false,\n      districts: [],\n      error: defaultError,\n      selected_district: null,\n    };\n  }\n\n  selectDistrict(district: DistrictTypes | null) {\n    this.setState({\n      selected_district: district,\n    });\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      loading_district: true,\n      error: defaultError,\n    });\n    FC_GetDistricts((status, data, msg) => {\n      console.log({ status, data, msg });\n\n      if (data !== null) {\n        this.setState({\n          loading_district: false,\n          districts: data,\n        });\n      } else {\n        this.setState({\n          loading_district: false,\n          districts: [],\n          error: {\n            target: \"MAIN-ERROR\",\n            error: `Error: ${msg}`,\n          },\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.selected_district !== null)\n      return (\n        <>\n          <div className=\"sticky top-1 z-50 mx-auto\">\n            <DashboardContainer className=\"flex\">\n              <section>\n                <Button onClick={this.selectDistrict.bind(this, null)}>\n                  Back\n                </Button>\n              </section>\n              <section className=\"text-2xl pl-3 flex-1\">\n                {this.state.selected_district.district_name} district\n              </section>\n            </DashboardContainer>\n          </div>\n          <DashboardContainer>\n            <TransferRequests\n              district_code={this.state.selected_district.district_code}\n              district_name={\n                this.state.selected_district.district_name + \" district\"\n              }\n              hideActions\n            />\n          </DashboardContainer>\n        </>\n      );\n    return (\n      <>\n        <DashboardContainer>\n          <div className=\"w-full flex\">\n            <section className=\"flex-1\">\n              <Heading>Incoming transfers</Heading>\n            </section>\n            <section></section>\n          </div>\n        </DashboardContainer>\n\n        <DashboardContainer>\n          {this.state.loading_district === true ? (\n            <div className=\"py-8 text-center\">\n              <Loading />\n            </div>\n          ) : this.state.districts.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Heading>No results found</Heading>\n            </div>\n          ) : (\n            <div className=\"w-full lg:grid lg:grid-cols-2 gap-2\">\n              {this.state.districts.map((el) => (\n                <div\n                  onClick={this.selectDistrict.bind(this, el)}\n                  key={el.district_code}\n                  className=\"flex px-3 py-1 mb-3 lg:mb-0 hover:text-white hover:bg-yellow-600 hover:bg-opacity-50 rounded-md items-center bg-yellow-50 border-yellow-700 border\"\n                >\n                  <h4 className=\"flex-1 text-lg\">{el.district_name}</h4>\n                  <section className=\"text-2xl text-yellow-600\">\n                    <MdArrowForward />\n                  </section>\n                </div>\n              ))}\n            </div>\n          )}\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const IncomingTransferReport = connect(\n  mapStateToProps,\n  {}\n)(_IncomingTransferReport);\n"],"sourceRoot":""}