{"version":3,"sources":["containers/PermutationsReports/PermutationsReports.tsx"],"names":["_PermutationsReports","props","FilteredData","test","permutations","find","itm","page","state","undefined","permutations_data","item","setState","schools_selected","schools","componentDidMount","districts","loading","FC_GetDistricts","status","data","msg","console","log","auth","district","role","role_id","FC_GetPermutationsByDistrict","district_code","limit","setLoading","FC_GetNationalPermutations","FindUser","user_id","users","user","FindSchool","school_code","school","selected_district_code","selected_school_code","this","className","district_name","value","onChange","e","target","map","i","school_name","placeholder","colSpan","length","user_one","usersInfo","full_name","school_one","user_two","school_two","position_name","qualification_name","Component","PermutationsReports","connect","basic"],"mappings":"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","file":"static/js/70.98c8638d.chunk.js","sourcesContent":["// import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { SiMicrosoftexcel } from \"react-icons/si\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  Basic,\n  PermutationsStore,\n  FC_GetPermutationsByDistrict,\n  FC_GetNationalPermutations,\n} from \"../../actions\";\nimport { FC_GetDistricts } from \"../../actions/transfer.action\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Loading from \"../../components/Loading/Loading\";\n// import { APP_URL } from \"../../config/app.config\";\nimport { StoreState } from \"../../reducers\";\nimport { DistrictTypes } from \"../../types/TransferTypes\";\n\ninterface PermutationUserInfo {\n  user_id: string;\n  first_name: string | null;\n  middle_name: string | null;\n  last_name: string | null;\n  full_name: string;\n  staff_code: string;\n  sex: string;\n  dob: string;\n  marital_status: string;\n  nid: string;\n  email: string;\n  phone_numbers: string;\n}\n\ninterface PermutationSchoolInfo {\n  school_name: string;\n  school_code: string;\n}\n\nexport interface GetPermutations {\n  role_id: string;\n  user_one: string;\n  user_two: string;\n  position_code: string;\n  school_one: string;\n  school_two: string;\n  academic_year_id: string;\n  reb_user_id: string;\n  qualification_id: string;\n  role: string;\n  position_name: string;\n  qualification_name: string;\n  permutation_status: string;\n  reb_status: string;\n  usersInfo: PermutationUserInfo[];\n  schools: PermutationSchoolInfo[];\n}\n\ninterface PermutationsReportsProps {\n  auth: Auth;\n  basic: Basic;\n  permutations: PermutationsStore;\n  FC_GetPermutationsByDistrict: (\n    district_code: string,\n    page: number,\n    limit: number,\n    setLoading: (status: boolean) => void\n  ) => void;\n  FC_GetNationalPermutations: (\n    page: number,\n    limit: number,\n    setLoading: (status: boolean) => void\n  ) => void;\n}\ninterface PermutationsReportsState {\n  loading: boolean;\n  selected_school_code: string | null;\n  selected_district_code: string | null;\n  districts: DistrictTypes[] | null;\n  page: number;\n  limit: number;\n  schools_selected: PermutationSchoolInfo[];\n}\n\nclass _PermutationsReports extends Component<\n  PermutationsReportsProps,\n  PermutationsReportsState\n> {\n  constructor(props: PermutationsReportsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      districts: null,\n      selected_district_code:\n        this.props.auth.district !== null &&\n        this.props.auth.role !== null &&\n        this.props.auth.role.role_id === \"3\"\n          ? this.props.auth.district.district_code\n          : null,\n      selected_school_code: null,\n      page: 1,\n      limit: 1000,\n      schools_selected: [],\n    };\n  }\n\n  FilteredData = () => {\n    let test = this.props.permutations.permutations?.find(\n      (itm) => itm.page === this.state.page\n    );\n    if (test !== undefined) {\n      for (let item of test.permutations_data) {\n        this.setState({\n          schools_selected: [...this.state.schools_selected, ...item.schools],\n        });\n      }\n      return test.permutations_data;\n    } else {\n      return null;\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.state.districts === null) {\n      this.setState({ loading: true });\n      FC_GetDistricts(\n        (status: boolean, data: DistrictTypes[] | null, msg: string) => {\n          console.log({ data });\n\n          if (data !== null) {\n            this.setState({\n              districts: data,\n              loading: false,\n            });\n          }\n          this.setState({ loading: false });\n        }\n      );\n    }\n    // Permutations by district\n    if (\n      this.props.permutations.permutations === null &&\n      this.props.auth.district !== null &&\n      this.props.auth.role !== null &&\n      this.props.auth.role.role_id === \"3\"\n    ) {\n      // DDE\n      this.props.FC_GetPermutationsByDistrict(\n        this.props.auth.district.district_code,\n        this.state.page,\n        this.state.limit,\n        this.setLoading\n      );\n    }\n\n    // // National level\n    if (\n      this.props.auth.role?.role_id === \"4\" &&\n      this.props.permutations.permutations === null\n    ) {\n      // this.setState({ loading: true });\n      this.props.FC_GetNationalPermutations(\n        this.state.page,\n        this.state.limit,\n        (status: boolean) => {\n          this.setState({ loading: status });\n        }\n      );\n    }\n  };\n\n  FindUser = (\n    user_id: string,\n    users: PermutationUserInfo[]\n  ): PermutationUserInfo | null => {\n    let user = users.find((itm) => itm.user_id === user_id);\n    if (user !== undefined) {\n      return user;\n    } else {\n      return null;\n    }\n  };\n\n  FindSchool = (school_code: string, schools: PermutationSchoolInfo[]) => {\n    let school = schools.find((itm) => itm.school_code === school_code);\n    if (school !== undefined) {\n      return school;\n    } else {\n      return null;\n    }\n  };\n\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  render() {\n    if (this.state.districts === null || this.state.loading === true) {\n      return (\n        <DashboardContainer>\n          <div className=\"flex flex-col items-center justify-center gap-3 w-full text-center py-5\">\n            <Loading />\n            <div>Loading permutations...</div>\n          </div>\n        </DashboardContainer>\n      );\n    }\n    return (\n      <DashboardContainer>\n        <div>\n          <div className=\"flex flex-row items-center justify-between gap-3\">\n            <div className=\"text-3xl font-bold flex flex-col\">\n              <span>Permutations report</span>\n              <span className=\"text-base font-light text-gray-600\">\n                List of permutations\n              </span>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              {this.props.auth.district !== null &&\n              this.props.auth.role !== null &&\n              this.props.auth.role.role_id === \"3\" ? (\n                <div className=\"flex flex-col rounded px-3 py-2 bg-gray-100 text-center\">\n                  <span className=\"text-gray-500\">Selected district</span>\n                  <span className=\"font-extrabold\">\n                    {this.props.auth.district.district_name}\n                  </span>\n                </div>\n              ) : (\n                this.props.auth.role !== null &&\n                this.props.auth.role.role_id === \"4\" && (\n                  <div className=\"flex flex-col\">\n                    <span>Filter district</span>\n                    <select\n                      value={\n                        this.state.selected_district_code === null\n                          ? \"\"\n                          : this.state.selected_district_code\n                      }\n                      onChange={(e) =>\n                        this.setState({\n                          selected_district_code: e.target.value,\n                        })\n                      }\n                      className=\"border border-gray-500 rounded px-3 py-2\"\n                    >\n                      <option value=\"\">Choose district</option>\n                      {this.state.districts.map((item, i) => (\n                        <option key={i + 1} value={item.district_code}>\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                )\n              )}\n              {this.props.auth.school !== null &&\n              this.props.auth.role !== null &&\n              this.props.auth.role.role_id === \"2\" ? (\n                <div className=\"flex flex-col rounded px-3 py-2 bg-gray-100 text-center\">\n                  <span className=\"text-gray-500\">Selected school</span>\n                  <span className=\"font-extrabold\">\n                    {this.props.auth.school.school_name}\n                  </span>\n                </div>\n              ) : (\n                <div className=\"flex flex-col\">\n                  <span>Filter School</span>\n                  <select className=\"px-3 py-2 rounded border border-gray-500\">\n                    <option value=\"\">Choose school</option>\n                    {this.state.schools_selected.map((item, i) => (\n                      <option value={item.school_code}>\n                        {item.school_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center w-full mt-2 gap-3\">\n            <input\n              placeholder=\"Search\"\n              className=\"px-3 py-2 rounded border border-gray-500 w-full\"\n            />\n            <div className=\"bg-yellow-100 text-black hover:bg-accent-900 hover:text-white rounded px-3 py-2 flex flex-row items-center gap-2 cursor-pointer\">\n              <div>\n                <SiMicrosoftexcel className=\"text-xl\" />\n              </div>\n              <span>Export</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-5\">\n          <table className=\"w-full rounded\">\n            <thead>\n              <tr className=\"bg-blue-100 rounded-t\">\n                <td className=\"px-3 py-2 text-left\">#</td>\n                <td className=\"px-3 py-2 text-left\">User one</td>\n                <td className=\"px-3 py-2 text-left\">School one</td>\n                <td className=\"px-3 py-2 text-left\">User two</td>\n                <td className=\"px-3 py-2 text-left\">School two</td>\n                <td className=\"px-3 py-2 text-left\">Position</td>\n                <td className=\"px-3 py-2 text-left\">Qualification</td>\n              </tr>\n            </thead>\n            <tbody>\n              {this.FilteredData() === null ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-center p-5 bg-gray-100 rounded-md text-lg\"\n                  >\n                    Loading...\n                  </td>\n                </tr>\n              ) : this.FilteredData()!.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={7}\n                    className=\"text-center p-5 bg-gray-100 rounded-md text-lg\"\n                  >\n                    No data found!\n                  </td>\n                </tr>\n              ) : (\n                this.FilteredData()!.map((item, i) => (\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>\n                      {this.FindUser(item.user_one, item.usersInfo)?.full_name}\n                    </td>\n                    <td>\n                      {\n                        this.FindSchool(item.school_one, item.schools)\n                          ?.school_name\n                      }\n                    </td>\n                    <td>\n                      {this.FindUser(item.user_two, item.usersInfo)?.full_name}\n                    </td>\n                    <td>\n                      {\n                        this.FindSchool(item.school_two, item.schools)\n                          ?.school_name\n                      }\n                    </td>\n                    <td>{item.position_name}</td>\n                    <td>{item.qualification_name}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </DashboardContainer>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  permutations,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  permutations: PermutationsStore;\n} => {\n  return {\n    auth: auth,\n    basic: basic,\n    permutations: permutations,\n  };\n};\n\nexport const PermutationsReports = connect(mapStateToProps, {\n  FC_GetPermutationsByDistrict,\n  FC_GetNationalPermutations,\n})(_PermutationsReports);\n"],"sourceRoot":""}