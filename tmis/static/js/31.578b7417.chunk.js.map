{"version":3,"sources":["containers/HTTermination/HTViewTermination.tsx","containers/HTTermination/SuspensionItems.tsx","containers/HTTermination/TerminationItems.tsx","containers/HTTermination/HTTermination.tsx","containers/HTTermination/Termination.tsx"],"names":["connect","FC_GetAllTermination","props","DashboardContainer","className","Heading","thisViewIsFor","Button","onClick","setThiTermination","theme","size","thiTermination","techer_name","school_name","school_code","reason_name","requested_by_comment","requested_to_suspend_from","isEmptyOrSpaces","DATE","requested_to_suspend_to","requested_by_date","status","TerminationStatusEnum","PENDING","PENDING_SUSPENSION","decided_to_suspend_from","decided_to_suspend_to","REJECTED","mayor_letter","DownloadLink","linkFor","first_id","last_id","title","decided_by_comment","decided_by_date","SuspensionItems","setThisStatus","value","setState","thisStatus","filterTerminations","allData","search","result","filter","item","TERMINATED","state","TextInput","error","label","name","type","onChange","e","target","placeholder","this","disabled","suspensionItems","length","InputSelect","data","SUSPENDED","loading","TableLoading","cols","colSpan","map","req","i","setThisTermination","change_staff_status_id","Component","TerminationItems","console","log","terminations","HTTermination","setLoading","setError","thisTermination","getTerminationById","allTermination","terminationId","find","componentDidMount","msg","Loading","Alert","thisPage","HRTabsType","terminationTab","auth","basic","Termination"],"mappings":"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","file":"static/js/31.578b7417.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaFileDownload } from \"react-icons/fa\";\nimport { MdOutlineInfo, MdPersonOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { FC_GetAllTermination } from \"../../actions\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport DownloadLink from \"../../components/DownloadLink/DownloadLink\";\nimport Heading from \"../../components/Heading/Heading\";\nimport { APP_URL_FILE } from \"../../config/app.config\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, isEmptyOrSpaces } from \"../../utils/functions\";\n\ntype HRViewTerminationProps = {\n  setThiTermination: (value: APITerminationType | null) => void;\n  thiTermination: APITerminationType;\n  FC_GetAllTermination: Function;\n  thisViewIsFor: \"termination\" | \"suspension\";\n};\n\nconst HRViewTermination: React.FC<HRViewTerminationProps> = (props) => {\n  return (\n    <>\n      <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n        <div className=\"py-2 flex items-center\">\n          <div className=\"flex-1\">\n            <Heading>View {props.thisViewIsFor} progress</Heading>\n          </div>\n          <div className=\"\">\n            <Button\n              onClick={() => props.setThiTermination(null)}\n              theme=\"default\"\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-3 shadow-sm rounded-sm\">\n          <div className=\"flex items-center space-x-2 font-semibold text-gray-900 leading-8\">\n            <span className=\"text-primary-800\">\n              <MdPersonOutline size={25} />\n            </span>\n            <span className=\"tracking-wide\">Staff info</span>\n          </div>\n          <div className=\"text-gray-700\">\n            <div className=\"grid md:grid-cols-2 text-sm\">\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">Full Name</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.techer_name}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">School</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.school_name}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2\">\n                <div className=\"px-4 py-2 font-semibold\">School code</div>\n                <div className=\"px-4 py-2\">\n                  {props.thiTermination.school_code}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-3 border rounded\">\n          <div className=\"flex items-center px-2 py-1 bg-gray-200 rounded\">\n            <MdOutlineInfo className=\"w-8\" />\n            <p>{props.thiTermination.reason_name}</p>\n          </div>\n          <div className=\"flex flex-col mt-3\">\n            <span className=\"text-sm text-gray-500\">Comment:</span>\n            <p className=\"text-base\">\n              {props.thiTermination.requested_by_comment}\n            </p>\n          </div>\n          {props.thisViewIsFor === \"suspension\" && (\n            <div className=\"flex flex-row items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">Start date:</span>\n              <p className=\"text-base\">\n                {props.thiTermination.requested_to_suspend_from &&\n                !isEmptyOrSpaces(props.thiTermination.requested_to_suspend_from)\n                  ? DATE(props.thiTermination.requested_to_suspend_from)\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n          {props.thisViewIsFor === \"suspension\" && (\n            <div className=\"flex flex-row items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">End date:</span>\n              <p className=\"text-base\">\n                {props.thiTermination.requested_to_suspend_to &&\n                !isEmptyOrSpaces(props.thiTermination.requested_to_suspend_to)\n                  ? DATE(props.thiTermination.requested_to_suspend_to)\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center gap-2\">\n            <span className=\"text-sm text-gray-500\">Request date:</span>\n            <p className=\"text-base\">\n              {DATE(props.thiTermination.requested_by_date)}\n            </p>\n          </div>\n        </div>\n\n        {props.thiTermination.status !== TerminationStatusEnum.PENDING &&\n          props.thiTermination.status !==\n            TerminationStatusEnum.PENDING_SUSPENSION && (\n            <section>\n              <span className=\"text-sm text-gray-500\">Feedback:</span>\n              <div className=\"bg-white p-3 border rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <span className=\"text-sm text-gray-500\">Decision:</span>\n                  <p className=\"text-base\">{props.thiTermination.status}</p>\n                </div>\n                {props.thisViewIsFor === \"suspension\" && (\n                  <div className=\"flex flex-row items-center gap-2\">\n                    <span className=\"text-sm text-gray-500\">Start date:</span>\n                    <p className=\"text-base\">\n                      {props.thiTermination.decided_to_suspend_from &&\n                      !isEmptyOrSpaces(\n                        props.thiTermination.decided_to_suspend_from\n                      )\n                        ? DATE(props.thiTermination.decided_to_suspend_from)\n                        : \"-\"}\n                    </p>\n                  </div>\n                )}\n                {props.thisViewIsFor === \"suspension\" && (\n                  <div className=\"flex flex-row items-center gap-2\">\n                    <span className=\"text-sm text-gray-500\">End date:</span>\n                    <p className=\"text-base\">\n                      {props.thiTermination.decided_to_suspend_to &&\n                      !isEmptyOrSpaces(\n                        props.thiTermination.decided_to_suspend_to\n                      )\n                        ? DATE(props.thiTermination.decided_to_suspend_to)\n                        : \"-\"}\n                    </p>\n                  </div>\n                )}\n\n                {props.thiTermination.status !==\n                  TerminationStatusEnum.REJECTED &&\n                  props.thiTermination.mayor_letter && (\n                    <DownloadLink\n                      linkFor=\"uploaded\"\n                      first_id={props.thiTermination.mayor_letter}\n                      last_id={\"\"}\n                      title={\"Confirmation letter\"}\n                    />\n                  )}\n\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm text-gray-500\">Comment:</span>\n                  <p className=\"text-base\">\n                    {props.thiTermination.decided_by_comment}\n                  </p>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <span className=\"text-sm text-gray-500\">Done on:</span>\n                  <p className=\"text-base\">\n                    {props.thiTermination.decided_by_date\n                      ? DATE(props.thiTermination.decided_by_date)\n                      : \"-\"}\n                  </p>\n                </div>\n              </div>\n            </section>\n          )}\n\n        {/* FOOTER INITIAL ========================================== */}\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thiTermination.status === TerminationStatusEnum.PENDING ||\n                props.thiTermination.status ===\n                  TerminationStatusEnum.PENDING_SUSPENSION\n                  ? \"text-yellow-700\"\n                  : props.thiTermination.status ===\n                    TerminationStatusEnum.REJECTED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {props.thiTermination.status === TerminationStatusEnum.PENDING ||\n              props.thiTermination.status ===\n                TerminationStatusEnum.PENDING_SUSPENSION\n                ? \"Pending\"\n                : props.thiTermination.status === TerminationStatusEnum.REJECTED\n                ? \"Canceled\"\n                : \"Confirmed\"}\n            </span>\n          </div>\n        </section>\n        {/* END FOOTER INITIAL ========================================== */}\n      </DashboardContainer>\n    </>\n  );\n};\n\nexport default connect(null, {\n  FC_GetAllTermination,\n})(HRViewTermination);\n","import React, { Component } from \"react\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, search } from \"../../utils/functions\";\n\ntype SuspensionItemsProps = {\n  suspensionItems: APITerminationType[] | null;\n  loading: boolean;\n  setThisTermination: (value: APITerminationType | null) => void;\n};\ntype SuspensionItemsState = {\n  search: string;\n  thisStatus: TerminationStatusEnum | \"all\";\n};\n\nclass SuspensionItems extends Component<\n  SuspensionItemsProps,\n  SuspensionItemsState\n> {\n  constructor(props: SuspensionItemsProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      thisStatus: \"all\",\n    };\n  }\n\n  setThisStatus = (value: TerminationStatusEnum | \"all\") => {\n    this.setState({ thisStatus: value });\n  };\n\n  filterTerminations = (\n    allData: APITerminationType[],\n    search: TerminationStatusEnum | \"all\"\n  ): APITerminationType[] => {\n    let result: APITerminationType[] = allData;\n    result = allData.filter(\n      (item) =>\n        item.status !== TerminationStatusEnum.PENDING &&\n        item.status !== TerminationStatusEnum.TERMINATED &&\n        item.requested_to_suspend_from !== null\n    );\n    if (search !== \"all\") {\n      result = result.filter((item) => item.status === search);\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n          <div className=\"w-full sm:flex-1 pr-2\">\n            <TextInput\n              error=\"\"\n              label=\"Search\"\n              name=\"\"\n              type=\"search\"\n              onChange={(e) => this.setState({ search: e.target.value })}\n              placeholder=\"Search by name, reason, date, status\"\n              value={this.state.search}\n              size=\"sm\"\n              disabled={\n                this.props.suspensionItems === null ||\n                this.filterTerminations(\n                  this.props.suspensionItems,\n                  this.state.thisStatus\n                ).length === 0\n              }\n            />\n          </div>\n          <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                {\n                  title: \"Pending\",\n                  value: TerminationStatusEnum.PENDING_SUSPENSION,\n                },\n                {\n                  title: \"Suspended\",\n                  value: TerminationStatusEnum.SUSPENDED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div>\n          {/* {this.props.suspensionItems && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.suspensionItems,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n        </div>\n        <div className=\"my-3 w-full overflow-x-auto\">\n          <table className=\"w-full text-left table-auto\">\n            <thead>\n              <tr>\n                <th className=\"p-2\">#</th>\n                <th className=\"p-2\">Names</th>\n                <th className=\"p-2\">School</th>\n                <th className=\"p-2\">Reason</th>\n                <th className=\"p-2\">Date</th>\n                <th className=\"p-2\">Status</th>\n                <th className=\"p-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.loading ? (\n                <TableLoading cols={6} />\n              ) : this.props.suspensionItems === null ||\n                this.filterTerminations(\n                  this.props.suspensionItems,\n                  this.state.thisStatus\n                ).length <= 0 ? (\n                <tr>\n                  <td\n                    colSpan={8}\n                    className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                  >\n                    <Heading size=\"md\" className=\"opacity-60 font-light\">\n                      No results found\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                search(\n                  this.filterTerminations(\n                    this.props.suspensionItems,\n                    this.state.thisStatus\n                  ),\n                  this.state.search\n                ).map((req: APITerminationType, i: number) => {\n                  return (\n                    <tr\n                      className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                      onClick={() => this.props.setThisTermination(req)}\n                      key={i + req.change_staff_status_id}\n                    >\n                      <td className=\"p-2\">{i + 1}</td>\n                      <td className=\"p-2\">{req.techer_name}</td>\n                      <td className=\"p-2\">{req.school_name}</td>\n                      <td className=\"p-2\">{req.reason_name}</td>\n                      <td className=\"p-2\">\n                        {req.status === TerminationStatusEnum.PENDING_SUSPENSION\n                          ? DATE(req.requested_by_date)\n                          : req.decided_by_date && DATE(req.decided_by_date)}\n                      </td>\n                      <td className=\"p-2\">{req.status}</td>\n                      <td className=\"p-1 text-center\">\n                        <Button\n                          onClick={() => this.props.setThisTermination(req)}\n                        >\n                          View\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuspensionItems;\n","import React, { Component } from \"react\";\nimport Button from \"../../components/Buttons/Button\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport TableLoading from \"../../components/TableLoading/TableLoading\";\nimport {\n  APITerminationType,\n  TerminationStatusEnum,\n} from \"../../types/StaffTermination\";\nimport { DATE, isEmptyOrSpaces, search } from \"../../utils/functions\";\n\ntype TerminationItemsProps = {\n  terminations: APITerminationType[] | null;\n  loading: boolean;\n  setThisTermination: (value: APITerminationType | null) => void;\n};\ntype TerminationItemsState = {\n  search: string;\n  thisStatus: TerminationStatusEnum | \"all\";\n};\n\nclass TerminationItems extends Component<\n  TerminationItemsProps,\n  TerminationItemsState\n> {\n  constructor(props: TerminationItemsProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      thisStatus: \"all\",\n    };\n  }\n\n  setThisStatus = (value: TerminationStatusEnum | \"all\") => {\n    this.setState({ thisStatus: value });\n  };\n\n  filterTerminations = (\n    allData: APITerminationType[],\n    search: TerminationStatusEnum | \"all\"\n  ): APITerminationType[] => {\n    console.log(\"====================================\");\n    console.log({ allData });\n    console.log(\"====================================\");\n\n    let result: APITerminationType[] = allData;\n    result = allData.filter(\n      (item) =>\n        item.status !== TerminationStatusEnum.PENDING_SUSPENSION &&\n        item.status !== TerminationStatusEnum.SUSPENDED &&\n        (item.requested_to_suspend_from === null ||\n          isEmptyOrSpaces(item.requested_to_suspend_from))\n    );\n    if (search !== \"all\") {\n      result = result.filter((item) => item.status === search);\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"border border-t mt-2 mb-1 flex items-center flex-col-reverse sm:flex-row pl-3 pr-2 rounded\">\n          <div className=\"w-full sm:flex-1 pr-2\">\n            <TextInput\n              error=\"\"\n              label=\"Search\"\n              name=\"\"\n              type=\"search\"\n              onChange={(e) => this.setState({ search: e.target.value })}\n              placeholder=\"Search by name, reason, date, status\"\n              value={this.state.search}\n              size=\"sm\"\n              disabled={\n                this.props.terminations === null ||\n                this.filterTerminations(\n                  this.props.terminations,\n                  this.state.thisStatus\n                ).length === 0\n              }\n            />\n          </div>\n          <div className=\"w-full sm:w-auto\">\n            <InputSelect\n              data={[\n                { title: \"All\", value: \"all\" },\n                { title: \"Pending\", value: TerminationStatusEnum.PENDING },\n                {\n                  title: \"Terminated\",\n                  value: TerminationStatusEnum.TERMINATED,\n                },\n                { title: \"Rejected\", value: TerminationStatusEnum.REJECTED },\n              ]}\n              error=\"\"\n              name=\"select_status\"\n              onChange={(e) =>\n                this.setState({\n                  thisStatus: e.target.value as TerminationStatusEnum | \"all\",\n                })\n              }\n              label=\"Status\"\n              placeholder=\"Select status\"\n              value={this.state.thisStatus}\n              size=\"sm\"\n            />\n          </div>\n          {/* {this.props.terminations && (\n            <div className=\"p-2 px-3 ml-3 bg-accent-800 bg-opacity-30 rounded\">\n              <label className=\"\">Results:</label>\n              <h4 className=\"text-2xl -mt-1 font-bold\">\n                {\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ).length\n                }\n              </h4>\n            </div>\n          )} */}\n        </div>\n        <div className=\"my-3 w-full overflow-x-auto\">\n          <table className=\"w-full text-left table-auto\">\n            <thead>\n              <tr>\n                <th className=\"p-2\">#</th>\n                <th className=\"p-2\">Names</th>\n                <th className=\"p-2\">School</th>\n                <th className=\"p-2\">Reason</th>\n                <th className=\"p-2\">Date</th>\n                <th className=\"p-2\">Status</th>\n                <th className=\"p-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.loading ? (\n                <TableLoading cols={6} />\n              ) : this.props.terminations === null ||\n                this.filterTerminations(\n                  this.props.terminations,\n                  this.state.thisStatus\n                ).length <= 0 ? (\n                <tr>\n                  <td\n                    colSpan={8}\n                    className=\"p-8 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                  >\n                    <Heading size=\"md\" className=\"opacity-60 font-light\">\n                      No results found\n                    </Heading>\n                  </td>\n                </tr>\n              ) : (\n                search(\n                  this.filterTerminations(\n                    this.props.terminations,\n                    this.state.thisStatus\n                  ),\n                  this.state.search\n                ).map((req: APITerminationType, i: number) => {\n                  return (\n                    <tr\n                      className=\"group border-b border-t rounded hover:bg-accent-800 hover:bg-opacity-20 cursor-pointer\"\n                      onClick={() => this.props.setThisTermination(req)}\n                      key={i + req.change_staff_status_id}\n                    >\n                      <td className=\"p-2\">{i + 1}</td>\n                      <td className=\"p-2\">{req.techer_name}</td>\n                      <td className=\"p-2\">{req.school_name}</td>\n                      <td className=\"p-2\">{req.reason_name}</td>\n                      <td className=\"p-2\">\n                        {req.status === TerminationStatusEnum.PENDING\n                          ? DATE(req.requested_by_date)\n                          : req.decided_by_date && DATE(req.decided_by_date)}\n                      </td>\n                      <td className=\"p-2\">{req.status}</td>\n                      <td className=\"p-1 text-center\">\n                        <Button\n                          onClick={() => this.props.setThisTermination(req)}\n                        >\n                          View\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TerminationItems;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, Basic, FC_GetAllTermination } from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { TerminationReducerType } from \"../../reducers/termination.reducer\";\nimport { APITerminationType } from \"../../types/StaffTermination\";\nimport { isEmptyOrSpaces } from \"../../utils/functions\";\nimport HRViewTermination from \"./HTViewTermination\";\nimport SuspensionItems from \"./SuspensionItems\";\nimport TerminationItems from \"./TerminationItems\";\nimport { HRTabsType } from \"../HRTermination/HRTermination\";\n\ntype HTTerminationProps = {\n  auth: Auth;\n  basic: Basic;\n  terminations: TerminationReducerType;\n  FC_GetAllTermination: Function;\n  thisPage: HRTabsType;\n};\n\ntype HTTerminationState = {\n  loading: boolean;\n  error: {\n    target: \"requests-error\" | \"main-success\" | \"main-error\" | null;\n    msg: string;\n  };\n  thisTermination: APITerminationType | null;\n};\n\nclass HTTermination extends Component<HTTerminationProps, HTTerminationState> {\n  constructor(props: HTTerminationProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      thisTermination: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setError = (value: {\n    target: \"requests-error\" | \"main-success\" | \"main-error\" | null;\n    msg: string;\n  }) => {\n    this.setState({ error: value });\n  };\n\n  setThisTermination = (value: APITerminationType | null) => {\n    this.setState({ thisTermination: value });\n  };\n\n  getTerminationById = (\n    allTermination: APITerminationType[],\n    terminationId: string\n  ) => {\n    return allTermination.find(\n      (item) => item.change_staff_status_id === terminationId\n    );\n  };\n\n  componentDidMount = () => {\n    this.props.FC_GetAllTermination(\n      \"hd\",\n      (status: boolean, data: APITerminationType[] | null, msg: string) => {\n        this.setLoading(status);\n        if (!status && !isEmptyOrSpaces(msg))\n          this.setError({\n            target: \"main-error\",\n            msg: msg,\n          });\n      }\n    );\n  };\n\n  render() {\n    if (this.state.loading)\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"mx-auto\">\n            <Loading />\n          </div>\n        </div>\n      );\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n        )}\n        {this.state.thisTermination === null ? (\n          <DashboardContainer>\n            <Heading>{this.props.thisPage}</Heading>\n            {/* <div className=\"flex flex-row items-center mt-2\">\n              {Object.values(HRTabsType).map((item, i) => (\n                <div\n                  key={i}\n                  onClick={() =>\n                    !this.state.loading && this.setSelectedTab(item)\n                  }\n                  className={`animate__animated ${\n                    this.state.selectedTab === item\n                      ? \"bg-accent-400 border-accent-900 text-accent-900 animate__zoomIn animate__faster\"\n                      : \"bg-white border-white text-gray-600\"\n                  } hover:bg-accent-100 px-4 py-2 ${\n                    this.state.loading ? \"cursor-wait\" : \"cursor-pointer\"\n                  } font-bold border-b-4 hover:border-accent-900 hover:text-accent-900 rounded-t mt-1 mx-1`}\n                >\n                  {item}\n                </div>\n              ))}\n            </div> */}\n            {this.props.thisPage === HRTabsType.terminationTab ? (\n              <TerminationItems\n                terminations={this.props.terminations.allTermination}\n                loading={this.state.loading}\n                setThisTermination={this.setThisTermination}\n              />\n            ) : (\n              <SuspensionItems\n                suspensionItems={this.props.terminations.allTermination}\n                loading={this.state.loading}\n                setThisTermination={this.setThisTermination}\n              />\n            )}\n          </DashboardContainer>\n        ) : (\n          <HRViewTermination\n            setThiTermination={this.setThisTermination}\n            thiTermination={\n              this.getTerminationById(\n                this.props.terminations.allTermination!,\n                this.state.thisTermination.change_staff_status_id\n              )!\n            }\n            thisViewIsFor={\n              this.props.thisPage === HRTabsType.terminationTab\n                ? \"termination\"\n                : \"suspension\"\n            }\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n  terminations,\n}: StoreState): {\n  auth: Auth;\n  basic: Basic;\n  terminations: TerminationReducerType;\n} => {\n  return { auth: auth, basic: basic, terminations };\n};\nexport default connect(mapStateToProps, { FC_GetAllTermination })(\n  HTTermination\n);\n","import { HRTabsType } from \"../HRTermination/HRTermination\";\nimport HTTermination from \"./HTTermination\";\n\nconst _Termination = () => {\n  return <HTTermination thisPage={HRTabsType.terminationTab} />;\n};\n\nexport const Termination = _Termination;\n"],"sourceRoot":""}