{"version":3,"sources":["components/RegisterTeacherDDE/RegisterTeacherDDE.tsx","containers/RegisterStaff/RegisterStaff.tsx"],"names":["_RegisterTeacherDDE","props","submitLogin","e","preventDefault","basic","academic_calender","setState","error","target","msg","selectSchool","el","school_loading","FC_GetSchoolDetailsRegister","school_code","academic_year_id","status","data","school_details","selected_school","getWaitingList","data_post","total_allowed","loading_waiting_list","waiting_list","open_trs_import","selected_position","selected_total_post_allowed_on_school","FC_GetWaitingList","found_post","find","_id","position_code","trs_found_position","undefined","cleanError","closeTRSModal","input_requesting_number","selected_post_request_id","setTimeout","submitDataRequestTRS","state","trs_found_pos","waiting","auth","district","district_code","substring","post_request_id","province_code","sector_code","academic_id","SendData","available_places","requested_teacher","disability","gender","in_education","loading_candidates_from_trs","FC_RequestTeachersInTRS","err","collected_teachers","collected_candidates_open","SendTeachersInTMIS","loading_send_list_to_tmis","FC_SendRequestedTeachersToTRS","length","loading_assets","loading","district_id","search_school","this","assign_teacher_assets","FC_GetAssignAssets","DashboardContainer","className","Heading","size","title","value","special","map","itm","i","school_name","position_name","Alert","theme","Loading","colSpan","cand","user_info","n_id","fname","lname","phone_number","email","sex","to","Button","type","onClick","onSubmit","TextInput","label","name","onChange","disabled","placeholder","SchoolsList","search","schools","school_category","school_id","school_status","region_code","fixed","bind","school_positions","pos","school_allowed_post","school_allowed_posts","total_exist_on_post","posts","total_vacant_posts","vacant_posts","occupied_number","qualification_name","success","position_id","qualification_id","React","Component","RegisterTeacherDDE","connect","RegisterStaff","useState","accademicInfo","seAcademicInfo","step","setStep","staff_created","setStaffCreated","user","user_id","AssignStuffComponent","assignType","school","exclude_roles","formAccess","first_name","last_name","full_name","middle_name","nid","phone_numbers","role_id","country_id","stakeholder_id","start_date_in_the_school","required"],"mappings":"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","file":"static/js/38.d18ab993.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  Basic,\n  FC_GetAssignAssets,\n  FT_GetAssignAssets,\n  SchoolInterface,\n  FC_GetSchoolDetailsRegister,\n  API_DataGetSchoolRegister,\n  WaitingList,\n  FC_GetWaitingList,\n  RequestInTRS,\n  FC_RequestTeachersInTRS,\n  ReturnedCandidates,\n  FC_SendRequestedTeachersToTRS,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\n// import InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { StoreState } from \"../../reducers\";\nimport { search } from \"../../utils/functions\";\nimport Button from \"../Buttons/Button\";\nimport Heading from \"../Heading/Heading\";\nimport Loading from \"../Loading/Loading\";\n// import SelectCustom from \"../SelectCustom/SelectCustom\";\n\nexport interface AcademicSelectedInfo {\n  school_code: string;\n  school_name: string;\n  qualification_id: string;\n  qualification_name: string;\n  position_id: string;\n  position_name: string;\n}\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n  FC_GetAssignAssets: FT_GetAssignAssets;\n  success: (data: AcademicSelectedInfo) => void;\n  district_id: string;\n  school?: { school_id: string; school_name: string };\n  user_id: string;\n}\n\ninterface AppState {\n  loading_assets: boolean;\n  loading: boolean;\n  error: {\n    target:\n      | \"main-success\"\n      | \"main-error\"\n      | null\n      | \"loading_school\"\n      | \"waiting-list-error\"\n      | \"get-teacher-on-waiting-success\"\n      | \"input-number-error\"\n      | \"send-list-to-tmis-error\"\n      | \"send-list-to-tmis-success\"\n      | \"get-teachers-from-trs-success\"\n      | \"get-teacher-on-waiting-error\";\n    msg: string;\n  };\n  school_loading: boolean;\n  school_details: API_DataGetSchoolRegister | null;\n  district_code: string;\n  selected_school: SchoolInterface | null;\n  search_school: string;\n  waiting_list: WaitingList[];\n  loading_waiting_list: boolean;\n  open_trs_import: boolean;\n  selected_position: SchoolPositionItem | null;\n  trs_found_position: WaitingList | null;\n  selected_total_post_allowed_on_school: number;\n  input_requesting_number: number;\n  loading_candidates_from_trs: boolean;\n  selected_post_request_id: string;\n  collected_teachers: ReturnedCandidates[];\n  collected_candidates_open: boolean;\n  loading_send_list_to_tmis: boolean;\n}\n\nexport interface SchoolPositionItem {\n  position_code: string;\n  position_name: string;\n  qualification_id: string;\n  qualification_name: string;\n}\nclass _RegisterTeacherDDE extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      open_trs_import: false,\n      loading_waiting_list: false,\n      waiting_list: [],\n      loading_assets: true,\n      loading: false,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      district_code: this.props.district_id ? this.props.district_id : \"\",\n      selected_school: null,\n      search_school: \"\",\n      school_loading: true,\n      school_details: null,\n      selected_position: null,\n      trs_found_position: null,\n      selected_total_post_allowed_on_school: 0,\n      input_requesting_number: 0,\n      loading_candidates_from_trs: false,\n      selected_post_request_id: \"\",\n      collected_teachers: [],\n      collected_candidates_open: false,\n      loading_send_list_to_tmis: false,\n    };\n  }\n\n  componentDidMount() {\n    // Load data if they are not found\n    if (\n      this.props.basic.assign_teacher_assets.loading === true ||\n      this.props.basic.assign_teacher_assets.data === null\n    ) {\n      this.props.FC_GetAssignAssets(this.props.district_id, (status, msg) => {\n        if (status === true) {\n          this.setState({\n            error: {\n              target: null,\n              msg: \"\",\n            },\n          });\n        } else {\n          this.setState({\n            error: {\n              target: \"main-error\",\n              msg: msg,\n            },\n          });\n        }\n      });\n    }\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n    // stakeholder_id\n    // qualification_id\n    // school_code\n    // sector_code\n    // role_id\n    // position_id\n    // start_date_in_the_school\n    // country_id\n\n    // if (this.state.nid === \"\")\n    //   return this.setState({\n    //     error: { target: \"nid\", msg: \"Required!\" },\n    //   });\n\n    if (this.props.basic.academic_calender === null)\n      return this.setState({\n        error: {\n          target: \"main-error\",\n          msg: \"You have no academic selected, Please refresh the page.\",\n        },\n      });\n\n    //* Save data\n    // FC_AssignCandidate(SendData, (status, msg) => {\n    //   if (status === true) {\n    //     this.setState({\n    //       loading: false,\n    //       error: {\n    //         target: \"main-success\",\n    //         msg: \"Staff created successfully\",\n    //       },\n    //     });\n    //     this.props.success(SendData);\n    //   } else {\n    //     this.setState({\n    //       loading: false,\n    //       error: {\n    //         target: \"main-error\",\n    //         msg: msg,\n    //       },\n    //     });\n    //   }\n\n    //   setTimeout(() => {\n    //     this.setState({\n    //       error: {\n    //         target: null,\n    //         msg: \"\",\n    //       },\n    //     });\n    //   }, 3000);\n    // });\n  };\n\n  selectSchool = (el: SchoolInterface | null) => {\n    if (el !== null && this.props.basic.academic_calender !== null) {\n      this.setState({ school_loading: true });\n      FC_GetSchoolDetailsRegister(\n        el.school_code,\n        this.props.basic.academic_calender.academic_year_id,\n        (status, data, msg) => {\n          if (status === true) {\n            this.setState({\n              school_loading: false,\n              school_details: data,\n              error: {\n                target: null,\n                msg: \"\",\n              },\n            });\n          } else {\n            this.setState({\n              school_loading: false,\n              school_details: null,\n              error: {\n                target: \"loading_school\",\n                msg: msg,\n              },\n            });\n          }\n        }\n      );\n    }\n    this.setState({ selected_school: el });\n  };\n\n  getWaitingList = (data_post: SchoolPositionItem, total_allowed: number) => {\n    this.setState({\n      loading_waiting_list: true,\n      waiting_list: [],\n      open_trs_import: true,\n      selected_position: data_post,\n      selected_total_post_allowed_on_school: total_allowed,\n    });\n    FC_GetWaitingList((status, data, msg) => {\n      if (status === true && data !== null) {\n        let found_post = data.find(\n          (el) => +el._id === +data_post.position_code\n        );\n\n        this.setState({\n          loading_waiting_list: false,\n          waiting_list: data,\n          trs_found_position: found_post === undefined ? null : found_post,\n        });\n      } else {\n        this.setState({\n          loading_waiting_list: false,\n          waiting_list: [],\n          error: {\n            target: \"waiting-list-error\",\n            msg: msg,\n          },\n          trs_found_position: null,\n        });\n      }\n      this.cleanError();\n    });\n  };\n\n  closeTRSModal = () =>\n    this.setState({\n      loading_waiting_list: false,\n      waiting_list: [],\n      open_trs_import: false,\n      selected_position: null,\n      input_requesting_number: 0,\n      selected_post_request_id: \"\",\n    });\n\n  // clean error\n  cleanError = () =>\n    setTimeout(() => {\n      this.setState({\n        error: {\n          target: null,\n          msg: \"\",\n        },\n      });\n    }, 3000);\n\n  submitDataRequestTRS = (e: any) => {\n    e.preventDefault();\n\n    if (this.state.trs_found_position === undefined) {\n      return this.setState({\n        error: {\n          target: \"input-number-error\",\n          msg: \"Failed to calculate the number\",\n        },\n      });\n    }\n\n    if (this.state.input_requesting_number <= 0) {\n      return this.setState({\n        error: {\n          target: \"input-number-error\",\n          msg: \"The number must be greater than one\",\n        },\n      });\n    }\n\n    let trs_found_pos =\n      this.state.trs_found_position === null\n        ? 0\n        : this.state.trs_found_position.waiting;\n    //* Validation\n    if (\n      this.state.input_requesting_number >\n        +this.state.selected_total_post_allowed_on_school ||\n      this.state.trs_found_position === undefined ||\n      this.state.input_requesting_number > trs_found_pos\n    ) {\n      return this.setState({\n        error: {\n          target: \"input-number-error\",\n          msg: \"The number must not be above the vacant post or the available candidates in waiting list\",\n        },\n      });\n    }\n\n    if (\n      this.props.auth.district === null ||\n      // this.state.selected_post_request_id === \"\" ||\n      this.state.selected_school === null ||\n      this.state.selected_position === null\n    )\n      return this.setState({\n        error: {\n          target: \"input-number-error\",\n          msg: \"This post does not fit the requirements, please restart the process or refresh the browser\",\n        },\n      });\n\n    // this.props.auth.district\n    let district_code = this.state.selected_school.school_code.substring(0, 2);\n    let post_request_id = this.state.selected_post_request_id;\n    let school_code = this.state.selected_school.school_code;\n    let position_code = this.state.selected_position?.position_code;\n    let province_code = this.state.selected_school.school_code.substring(0, 1); //\n    let sector_code = this.state.selected_school.school_code.substring(0, 4);\n    let academic_id = this.props.basic.academic_calender?.academic_year_id;\n\n    let SendData = {\n      available_places: [\n        {\n          position_code: position_code,\n          requested_teacher: this.state.input_requesting_number,\n        },\n      ],\n      disability: false,\n      district_code: district_code,\n      gender: \"\",\n      in_education: false,\n      post_request_id: post_request_id,\n      school_code: school_code,\n      province_code: province_code,\n      sector_code: sector_code,\n      academic_year_id: academic_id,\n    } as RequestInTRS;\n    //\n    this.setState({\n      loading_candidates_from_trs: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    FC_RequestTeachersInTRS(position_code, SendData, (status, data, err) => {\n      if (status === true && data !== null) {\n        this.setState({\n          loading_candidates_from_trs: false,\n          error: {\n            target: \"input-number-error\",\n            msg: err,\n          },\n          collected_teachers: data,\n          // loading_send_list_to_tmis: true,\n          collected_candidates_open: true,\n        });\n\n        this.SendTeachersInTMIS(data);\n      } else {\n        this.setState({\n          loading_candidates_from_trs: false,\n          error: {\n            target: \"input-number-error\",\n            msg: err,\n          },\n        });\n      }\n    });\n  };\n\n  SendTeachersInTMIS = (data: ReturnedCandidates[]) => {\n    this.setState({\n      loading_send_list_to_tmis: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    FC_SendRequestedTeachersToTRS(data, (status, data, msg) => {\n      if (status === true) {\n        this.setState({\n          loading_send_list_to_tmis: false,\n          error: {\n            target: \"send-list-to-tmis-success\",\n            msg: \"Registration process completed successfully\",\n          },\n        });\n      } else {\n        this.setState({\n          loading_send_list_to_tmis: false,\n          error: {\n            target: \"send-list-to-tmis-error\",\n            msg: \"Failed to complete the registration process.\",\n          },\n        });\n\n        setTimeout(() => {\n          if (this.state.collected_teachers.length > 0) {\n            this.SendTeachersInTMIS(this.state.collected_teachers);\n          }\n        }, 2000);\n      }\n    });\n  };\n\n  render() {\n    // Render the list\n    if (this.state.collected_candidates_open === true)\n      return (\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          <div className=\"flex border-b p-2\">\n            <div className=\"flex-1 text-center\">\n              <Heading size=\"md\">New Candidates list form TRS</Heading>\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <div className=\"grid grid-cols-2 gap-3 w-full\">\n              {[\n                {\n                  title: \"Total vacant post\",\n                  value: this.state.selected_total_post_allowed_on_school,\n                  special: false,\n                },\n\n                {\n                  title: \"Position code\",\n                  value: this.state.selected_position?.position_code,\n                  special: false,\n                },\n              ].map((itm, i) => (\n                <div\n                  key={i}\n                  className={`bg-gray-50 py-1 px-2 border rounded flex-1 `}\n                >\n                  <span className=\"text-gray-500 block\">{itm.title}:</span>{\" \"}\n                  <b>{itm.value}</b>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3 w-full mt-2\">\n              {[\n                {\n                  title: \"School name\",\n                  value: this.state.selected_school?.school_name,\n                  special: false,\n                },\n                {\n                  title: \"Position name\",\n                  value: this.state.selected_position?.position_name,\n                  special: false,\n                },\n              ].map((itm, i) => (\n                <div\n                  key={i}\n                  className={`bg-gray-50 py-1 px-2 border rounded flex-1 `}\n                >\n                  <span className=\"text-gray-500 block\">{itm.title}:</span>{\" \"}\n                  <b>{itm.value}</b>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <div className=\"pb\">\n              {this.state.loading_send_list_to_tmis === true && (\n                <Alert theme=\"info\">\n                  <div className=\"flex gap-2\">\n                    <Loading />{\" \"}\n                    <p className=\"pl-4\">\n                      Completing the process, don't close the window\n                    </p>\n                  </div>\n                </Alert>\n              )}\n\n              {this.state.error.target === \"send-list-to-tmis-success\" && (\n                <Alert theme=\"success\">{this.state.error.msg}</Alert>\n              )}\n              {this.state.error.target === \"send-list-to-tmis-error\" && (\n                <div>\n                  <Alert theme=\"danger\">\n                    {this.state.error.msg}, please wait\n                  </Alert>\n                </div>\n              )}\n            </div>\n            <table className=\"w-full\">\n              <thead>\n                <tr>\n                  <th className=\"p-2 border\">#</th>\n                  <th className=\"p-2 border\">NID</th>\n                  <th className=\"p-2 border\">Names</th>\n                  <th className=\"p-2 border\">Phone</th>\n                  <th className=\"p-2 border\">Email</th>\n                  <th className=\"p-2 border\">Gender</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.collected_teachers.length <= 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"py-5 text-center\">\n                      <Heading>No candidates found!</Heading>\n                      <p>NO results found</p>\n                    </td>\n                  </tr>\n                ) : (\n                  this.state.collected_teachers.map((cand, i) => (\n                    <tr key={i}>\n                      <td className=\"p-2 border\">{i + 1}</td>\n                      <td className=\"p-2 border\">{cand?.user_info?.n_id}</td>\n                      <td className=\"p-2 border\">\n                        {cand?.user_info?.user_info?.fname}{\" \"}\n                        {cand?.user_info?.user_info?.lname}\n                      </td>\n                      <td className=\"p-2 border\">\n                        {cand?.user_info?.phone_number}\n                      </td>\n                      <td className=\"p-2 border\">{cand?.user_info?.email}</td>\n                      <td className=\"p-2 border\">\n                        {cand?.user_info?.user_info?.sex}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n            <div className=\"p-2 text-right\">\n              {this.state.loading_send_list_to_tmis === false && (\n                <Link to=\"/redirect-register\">\n                  <Button type=\"button\">\n                    Add candidates to others position\n                  </Button>\n                </Link>\n              )}\n            </div>\n          </div>\n        </DashboardContainer>\n      );\n\n    // Import teachers from trs\n    if (this.state.open_trs_import === true)\n      return (\n        <DashboardContainer>\n          <div className=\"flex border-b p-2\">\n            <div className=\"flex-1\">\n              <Heading>Register Teachers form TRS</Heading>\n            </div>\n            <div className=\"\">\n              <Button theme=\"danger-light\" onClick={this.closeTRSModal}>\n                Close\n              </Button>\n            </div>\n          </div>\n          <div className=\"p-2\">\n            {this.state.error.target === \"waiting-list-error\" && (\n              <Alert theme=\"danger\" className=\"my-3\">\n                {this.state.error.msg}\n              </Alert>\n            )}\n            {this.state.loading_waiting_list === true ? (\n              <div className=\"text-6xl text-center animate__animated animate__zoomIn py-3\">\n                <Heading size=\"sm\">\n                  Checking in <b>TRS</b> waiting list\n                </Heading>\n                <Loading className=\"mx-auto block text-center\" />\n              </div>\n            ) : this.state.trs_found_position === null ? (\n              <div className=\"py-8 text-center\">\n                <Heading size=\"md\" className=\"text-center\">\n                  No candidate found on <br />\n                  <b className=\"text-blue-400\">\n                    {this.state.selected_position?.position_name}\n                  </b>\n                </Heading>\n                <Heading size=\"sm\">From Teacher Recruitment System</Heading>\n              </div>\n            ) : (\n              <div className=\"w-full\">\n                <div className=\"grid grid-cols-3 gap-3 w-full\">\n                  {[\n                    {\n                      title: \" Total teachers in waiting list\",\n                      value: this.state.trs_found_position.waiting,\n                      special: true,\n                    },\n                    {\n                      title: \"Total vacant post\",\n                      value: this.state.selected_total_post_allowed_on_school,\n                      special: false,\n                    },\n\n                    {\n                      title: \"Position code\",\n                      value: this.state.selected_position?.position_code,\n                      special: false,\n                    },\n                  ].map((itm, i) => (\n                    <div\n                      key={i}\n                      className={`bg-gray-50 py-1 px-2 border rounded flex-1 `}\n                    >\n                      <span className=\"text-gray-500 block\">{itm.title}:</span>{\" \"}\n                      <b>{itm.value}</b>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-3 w-full mt-2\">\n                  {[\n                    {\n                      title: \"School name\",\n                      value: this.state.selected_school?.school_name,\n                      special: false,\n                    },\n                    {\n                      title: \"Position name\",\n                      value: this.state.selected_position?.position_name,\n                      special: false,\n                    },\n                  ].map((itm, i) => (\n                    <div\n                      key={i}\n                      className={`bg-gray-50 py-1 px-2 border rounded flex-1 `}\n                    >\n                      <span className=\"text-gray-500 block\">{itm.title}:</span>{\" \"}\n                      <b>{itm.value}</b>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"p-1 pt-5\">\n                  <form\n                    className=\"max-w-sm\"\n                    onSubmit={this.submitDataRequestTRS}\n                  >\n                    {this.state.error.target ===\n                      \"get-teachers-from-trs-success\" && (\n                      <Alert theme=\"success\">{this.state.error.msg}</Alert>\n                    )}\n                    <TextInput\n                      error={\n                        this.state.error.target === \"input-number-error\"\n                          ? this.state.error.msg\n                          : \"\"\n                      }\n                      label=\"Type the number of teachers you need\"\n                      name=\"\"\n                      type=\"number\"\n                      onChange={(e) =>\n                        this.setState({\n                          input_requesting_number: +e.target.value,\n                          error: {\n                            target: null,\n                            msg: \"\",\n                          },\n                        })\n                      }\n                      disabled={this.state.loading_candidates_from_trs}\n                      value={this.state.input_requesting_number}\n                      placeholder=\"Number of posts you want\"\n                    />\n                    <Button loading={this.state.loading_candidates_from_trs}>\n                      Request and Register teacher{\"(\"}s{\")\"} from TRS\n                    </Button>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </DashboardContainer>\n      );\n\n    // laoding\n    if (\n      this.props.basic.assign_teacher_assets.loading === true ||\n      this.props.basic.assign_teacher_assets.data === null\n    )\n      return (\n        <DashboardContainer>\n          <div className=\"py-6 mx-auto text-center\">\n            <Loading />\n          </div>\n        </DashboardContainer>\n      );\n\n    let SchoolsList: SchoolInterface[] = search(\n      this.props.basic.assign_teacher_assets.data.schools,\n      this.state.search_school,\n      {\n        school_code: true,\n        school_name: true,\n        school_category: true,\n        school_id: true,\n        school_status: true,\n        region_code: true,\n      }\n    );\n    if (this.props.district_id === undefined)\n      return <Alert theme=\"danger\">No district found!</Alert>;\n\n    return (\n      <>\n        {this.state.error.target === \"main-error\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer className=\"animate__animated animate__zoomIn animate__faster\">\n          {this.state.selected_school !== null ? (\n            <div className=\"p-2\">\n              <div className=\"flex\">\n                <div className=\" mr-2\">\n                  <Button\n                    size=\"sm\"\n                    theme=\"primary\"\n                    onClick={this.selectSchool.bind(this, null)}\n                  >\n                    Back\n                  </Button>\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"\">\n                    <h2 className=\"text-2xl  mb-2\">School details</h2>\n                    <p>\n                      School code:{\" \"}\n                      <b>{this.state.selected_school.school_code}</b>\n                    </p>\n                    <p>\n                      School name:{\" \"}\n                      <b>{this.state.selected_school.school_name}</b>\n                    </p>\n                    <p>\n                      School status:{\" \"}\n                      <b>{this.state.selected_school.school_status}</b>\n                    </p>\n                    <p>\n                      School category:{\" \"}\n                      <b>{this.state.selected_school.school_category}</b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <hr className=\"my-2\" />\n\n              {this.state.school_loading === true ? (\n                <Loading />\n              ) : (\n                <div className=\"animate__animated animate__zoomIn animate__faster p-2\">\n                  <Heading size=\"md\">Available positions</Heading>\n                  <table className=\"w-full\">\n                    <thead>\n                      <tr className=\"text-left\">\n                        <th className=\"p-1 border text-left\">#</th>\n                        <th className=\"p-1 border text-left\">Position code</th>\n                        <th className=\"p-1 border text-left\">Position name</th>\n                        <th className=\"p-1 border text-left\">Qualification</th>\n                        <th className=\"p-1 border text-left\">Existing posts</th>\n                        <th className=\"p-1 border text-left\">Occupied posts</th>\n                        <th className=\"p-1 border text-left\">Vacant post</th>\n                        <th className=\"p-1 border text-left w-44\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {!this.state.school_details ? (\n                        <tr>\n                          <td colSpan={6} className=\"p-3 text-center\">\n                            <Heading size=\"md\">No post found</Heading>\n                            <p>No post found</p>\n                          </td>\n                        </tr>\n                      ) : this.state.school_details.school_positions.length <=\n                        0 ? (\n                        <tr>\n                          <td\n                            colSpan={7}\n                            className=\"text-center py-6 opacity-60\"\n                          >\n                            <Heading>No post found!</Heading>\n                          </td>\n                        </tr>\n                      ) : (\n                        this.state.school_details.school_positions.map(\n                          (pos, i) => {\n                            // let occupied_school_position =\n                            //   this.state.school_details?.occupied_school_positions.find(\n                            //     (el) => el.position_code === pos.position_code\n                            //   );\n\n                            // Data is here\n                            let school_allowed_post =\n                              this.state.school_details?.school_allowed_posts.find(\n                                (el) => el.position_code === pos.position_code\n                              );\n\n                            // let total_allowed_number =\n                            //   school_allowed_post === undefined\n                            //     ? 0\n                            //     : +school_allowed_post.allowed_number;\n                            // let occupied_position =\n                            //   occupied_school_position === undefined\n                            //     ? 0\n                            //     : +occupied_school_position.occupied_number;\n\n                            // let total =\n                            //   total_allowed_number - occupied_position;\n\n                            // let total_exist_on_post =\n                            //   occupied_school_position === undefined\n                            //     ? 0\n                            //     : occupied_school_position.occupied_number;\n                            let total_exist_on_post =\n                              school_allowed_post === undefined\n                                ? 0\n                                : school_allowed_post.posts;\n\n                            let total_vacant_posts =\n                              school_allowed_post === undefined\n                                ? 0\n                                : +school_allowed_post.vacant_posts;\n\n                            let total_allowed =\n                              school_allowed_post === undefined\n                                ? 0\n                                : school_allowed_post.occupied_number;\n\n                            return (\n                              <tr\n                                key={i}\n                                className=\"hover:bg-blue-600 hover:bg-opacity-20\"\n                              >\n                                <td className=\"p-2 text-center border\">\n                                  {i + 1}\n                                </td>\n                                <td className=\"p-2 border\">\n                                  {pos.position_code}\n                                </td>\n                                <td className=\"p-2 border\">\n                                  {pos.position_name}\n                                </td>\n                                <td className=\"p-2 border\">\n                                  {pos.qualification_name}\n                                </td>\n                                <td className=\"p-2 border\">\n                                  {total_exist_on_post}\n                                </td>\n                                <td className=\"p-2 border\">{total_allowed}</td>\n                                <td className=\"p-2 border\">\n                                  {total_vacant_posts > 0\n                                    ? total_vacant_posts\n                                    : 0}\n                                </td>\n                                <td className=\"p-2 border\">\n                                  {/* {total_vacant_posts >= 1 && ( */}\n                                  <>\n                                    <Button\n                                      className=\"w-full\"\n                                      size=\"sm\"\n                                      theme=\"accent-light\"\n                                      onClick={() => {\n                                        if (\n                                          this.state.selected_school !== null\n                                        ) {\n                                          this.props.success({\n                                            position_id: pos.position_code,\n                                            position_name: pos.position_name,\n                                            qualification_id:\n                                              pos.qualification_id,\n                                            qualification_name:\n                                              pos.qualification_name,\n                                            school_code:\n                                              this.state.selected_school\n                                                .school_code,\n                                            school_name:\n                                              this.state.selected_school\n                                                .school_name,\n                                          });\n                                        }\n                                      }}\n                                    >\n                                      Register new staff\n                                    </Button>\n                                    {/* <Button\n                                        theme=\"success-light\"\n                                        size=\"sm\"\n                                        className=\"w-full mt-1\"\n                                        onClick={this.getWaitingList.bind(\n                                          this,\n                                          pos,\n                                          +total_vacant_posts\n                                        )}\n                                      >\n                                        Import from TRS\n                                      </Button> */}\n                                  </>\n                                  {/* )} */}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        )\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"py-2\">\n              <h2 className=\"text-2xl\">Select a school</h2>\n              <div className=\"p-1\">\n                <TextInput\n                  onChange={(e) =>\n                    this.setState({ search_school: e.target.value })\n                  }\n                  value={this.state.search_school}\n                  error={\"\"}\n                  label={\"Search school\"}\n                  placeholder={\"Search by school name,...\"}\n                  name={\"\"}\n                />\n              </div>\n\n              <table className=\"w-full\">\n                <thead>\n                  <tr>\n                    <th className=\"p-1 border\">#</th>\n                    <th className=\"p-1 border\">school name</th>\n                    <th className=\"p-1 border\">School</th>\n                    <th className=\"p-1 border\">Category</th>\n                    <th className=\"p-1 border\">Total</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {SchoolsList.length <= 0 ? (\n                    <tr>\n                      <td>\n                        <h2>Creative data are here</h2>\n                      </td>\n                    </tr>\n                  ) : (\n                    SchoolsList.map((itm, i) => {\n                      return (\n                        <tr\n                          key={i}\n                          className=\"hover:bg-blue-500 hover:bg-opacity-20\"\n                        >\n                          <td className=\"border p-1\">{i + 1}</td>\n                          <td className=\"border p-1\">{itm.school_code}</td>\n                          <td className=\"border p-1\">{itm.school_name}</td>\n                          <td className=\"border p-1\">{itm.school_category}</td>\n                          <td className=\"border p-1 w-32\">\n                            <Button\n                              size=\"sm\"\n                              theme=\"accent-light\"\n                              className=\"w-full\"\n                              onClick={this.selectSchool.bind(this, itm)}\n                            >\n                              Select school\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const RegisterTeacherDDE = connect(mapStateToProps, {\n  FC_GetAssignAssets,\n})(_RegisterTeacherDDE);\n","import React, { FC, ReactElement, useState } from \"react\";\nimport { MdAccountCircle, MdCheckCircle, MdSchool } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Basic } from \"../../actions\";\nimport { Auth } from \"../../actions/auth.action\";\nimport Alert from \"../../components/Alert/Alert\";\nimport { AssignStuffComponent } from \"../../components/AssignStuffComponent/AssignStuffComponent\";\nimport Button from \"../../components/Buttons/Button\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\n// import { RegisterStuffComponent } from \"../../components/RegisterStuffComponent/RegisterStuffComponent\";\nimport {\n  AcademicSelectedInfo,\n  RegisterTeacherDDE,\n} from \"../../components/RegisterTeacherDDE/RegisterTeacherDDE\";\nimport { StoreState } from \"../../reducers\";\n\ntype RegisterStaffProps = {\n  auth: Auth;\n  basic: Basic;\n};\n\nconst _RegisterStaff: FC<RegisterStaffProps> = ({\n  auth,\n  basic,\n}): ReactElement => {\n  const [accademicInfo, seAcademicInfo] = useState<AcademicSelectedInfo | null>(\n    null\n  );\n  const [step, setStep] = useState(1);\n  const [staff_created, setStaffCreated] = useState(false);\n\n  if (!auth.user)\n    return <div className=\"p-4 text-center\">No profile found!</div>;\n\n  if (staff_created)\n    return (\n      <DashboardContainer className=\"p-3 animate__animated animate__zoomIn animate\">\n        <div className=\"py-4 text-center\">\n          <MdCheckCircle className=\"mx-auto text-8xl text-green-500\" />\n          <h1 className=\"text-3xl mt-2 \">The candidate has been created</h1>\n          {/* <p className=\"mt-2\">The candidate has been created </p> */}\n          <Button\n            theme=\"accent\"\n            onClick={() => {\n              seAcademicInfo(null);\n              setStep(1);\n              setStaffCreated(false);\n            }}\n            className=\"px-4 mt-3\"\n          >\n            Add new teacher\n          </Button>\n        </div>\n      </DashboardContainer>\n    );\n\n  return (\n    <>\n      <DashboardContainer className=\"p-3\">\n        <div className=\"px-3\">\n          <Heading size=\"lg\">Staff registration</Heading>\n          <p className=\"opacity-50\">Staff registration process</p>\n\n          <div className=\"flex  pt-2 gap-2 \">\n            <div\n              className={`flex-1  ${\n                step === 1\n                  ? \"text-accent-900 bg-accent-800 bg-opacity-10\"\n                  : \"opacity-40 hover:bg-accent-800 hover:bg-opacity-60 cursor-pointer\"\n              }`}\n              onClick={() => {\n                if (step === 2) {\n                  seAcademicInfo(null);\n                  setStep(1);\n                }\n              }}\n            >\n              <div className=\" flex items-center border p-1 rounded\">\n                <div className=\"pr-2\">\n                  <MdSchool className=\"text-5xl\" />\n                </div>\n                <div className=\"\">\n                  <h2 className=\"text-xl\">Step 1</h2>\n                  <h2 className=\"text-md font-bold -mt-1\">\n                    Choose School & Vacant post\n                  </h2>\n                </div>\n              </div>\n            </div>\n            <div\n              className={`flex-1 ${\n                step === 2\n                  ? \"text-accent-900 bg-accent-800 bg-opacity-10\"\n                  : \"opacity-40\"\n              }`}\n            >\n              <div className=\"flex items-center border p-1 rounded\">\n                <div className=\"pr-2\">\n                  <MdAccountCircle className=\"text-5xl\" />\n                </div>\n                <div className=\"\">\n                  <h2 className=\"text-xl\">Step 2</h2>\n                  <h2 className=\"text-md font-bold -mt-1\">\n                    Assign teacher to school\n                  </h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </DashboardContainer>\n\n      {step === 1 ? (\n        <>\n          {auth.district?.district_code === undefined ? (\n            <Alert theme=\"danger\">No district assigned to you</Alert>\n          ) : (\n            <RegisterTeacherDDE\n              district_id={auth.district?.district_code}\n              user_id={\"\"}\n              success={(data) => {\n                seAcademicInfo(data);\n                setStep(2);\n              }}\n            />\n          )}\n        </>\n      ) : (\n        <div>\n          {auth.district === null ? (\n            <div className=\"py-3 text-center\">\n              <h4 className=\"text-2xl text-red-500\">\n                You are not assigned to any district\n              </h4>\n            </div>\n          ) : (\n            <div>\n              {accademicInfo === null ? (\n                <Alert theme=\"danger\">\n                  PLease select a school and a position\n                </Alert>\n              ) : (\n                <>\n                  <DashboardContainer>\n                    <div className=\"flex py-2\">\n                      <div className=\"px-2 pr-4\">\n                        <MdSchool className=\"text-6xl\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <p>\n                          <span className=\"mr-1 inline-block opacity-30\">\n                            Shool code:{\" \"}\n                          </span>\n                          <b className=\"text-lg -mt-1 font-bold\">\n                            {accademicInfo.school_code}\n                          </b>\n                        </p>\n\n                        <p>\n                          <span className=\"mr-1 inline-block opacity-30\">\n                            School Name:\n                          </span>\n                          <b className=\"text-lg -mt-1 font-bold\">\n                            {accademicInfo.school_name}\n                          </b>\n                        </p>\n                      </div>\n                      <div className=\"flex-1\">\n                        <p>\n                          <span className=\"mr-1 inline-block opacity-30\">\n                            Position:\n                          </span>\n                          <b className=\"text-lg -mt-1 font-bold\">\n                            {accademicInfo.position_name}\n                          </b>\n                        </p>\n\n                        <p>\n                          <span className=\"mr-1 inline-block opacity-30\">\n                            Qualification:\n                          </span>\n                          <b className=\"text-lg -mt-1 font-bold\">\n                            {accademicInfo.qualification_name}\n                          </b>\n                        </p>\n                      </div>\n                    </div>\n                  </DashboardContainer>\n\n                  <AssignStuffComponent\n                    district_id={auth.district?.district_code}\n                    assignType=\"REGISTER\"\n                    school={{\n                      school_id: accademicInfo.school_code,\n                      school_name: accademicInfo.school_name,\n                    }}\n                    exclude_roles={[\"3\", \"4\", \"18\", \"21\", \"22\", \"25\", \"26\"]}\n                    position_code={accademicInfo.position_id}\n                    qualification_id={accademicInfo.qualification_id}\n                    user_id={\"\"}\n                    formAccess={{\n                      first_name: true,\n                      last_name: true,\n                      full_name: true,\n                      middle_name: true,\n                      nid: true,\n                      phone_numbers: true,\n                      role_id: true,\n                      country_id: false,\n                      district_code: true,\n                      sector_code: false,\n                      school_code: true,\n                      qualification_id: true,\n                      academic_year_id: true,\n                      stakeholder_id: false,\n                      start_date_in_the_school: true,\n                      position_id: true,\n                    }}\n                    required={{\n                      first_name: false,\n                      last_name: false,\n                      full_name: false,\n                      middle_name: false,\n                      nid: true,\n                      phone_numbers: true,\n                      role_id: true,\n                      country_id: false,\n                      district_code: true,\n                      sector_code: false,\n                      school_code: true,\n                      qualification_id: true,\n                      academic_year_id: true,\n                      stakeholder_id: false,\n                      start_date_in_the_school: true,\n                      position_id: true,\n                    }}\n                    success={(data) => {\n                      setStaffCreated(true);\n                    }}\n                  />\n                </>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const RegisterStaff = connect(mapStateToProps, {})(_RegisterStaff);\n"],"sourceRoot":""}