{"version":3,"sources":["components/Inputs/InputSelect.tsx","components/CountDownCard/CountDownCard.tsx","components/TableEditModal/TableEditModal.tsx","containers/DistrictPostDistribution/DistrictPostDistribution.tsx"],"names":["InputSelect","onChange","value","error","label","placeholder","disabled","name","Input_className","Label_className","InputContainer_className","MainContainer_className","size","data","className","htmlFor","InputSize","map","level","i","title","Card","remain","total","TextInput","onChangeComment","comment","placeholderComment","max","onSave","onCancel","loading","minValue","useState","valid_error","setValidError","type","autoFocus","min","id","onClick","isNaN","setTimeout","undefined","theme","_DistrictPostDistribution","props","submitLogin","e","preventDefault","selectRequest","request","state","selected_request_id","setState","selected_comment","dde_distribution_comment","post_request_id","selected_value","dde_post_distribution","cancelRequest","target","msg","saveRequest","basic","academic_calender","academic_id","academic_year_id","FC_SaveDistributionSchool","district_code","position_code","qualification_id","status","console","log","academic_distributed","cleanAlert","remain_post_by_levels","itm","findData","total_distributed","find","el","remaining_limits","requests","req","message","componentDidMount","RenderPageAccess","auth","role","access","UsersAccess","DDE_DISTRIBUTION","startApp","district","district_id","loading_requests","FC_GetDistributionSchools","limits","qualifications","qual","FindRemail","qualification_title","qualification_name","selected_level","selected_auto_level","search","this","RequestsList","filter","district_name","fixed","length","colSpan","Qualification","school_name","position_name","existing_post","head_teacher_post_request","dde_post_request","bind","shortString","React","Component","DistrictPostDistribution","connect"],"mappings":"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","file":"static/js/18.bda65e2c.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, ReactElement } from \"react\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype InputSelectProps = {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  data: { title: string; value: string | number }[];\n};\n\nconst InputSelect: FC<InputSelectProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  data,\n}): ReactElement => {\n  /* function body */\n  return (\n    <>\n      <div className={`w-full my-2 ${MainContainer_className}`}>\n        <label\n          htmlFor=\"login-form-email\"\n          className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n        >\n          {label}\n        </label>\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <select\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                     w-full text-lg rounded border-2 \n                     ${InputSize(size)}\n                     ${\n                       error !== \"\"\n                         ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                         : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                     }\n                     px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            // className=\"p-2 border-2 bg-white border-primary-900 rounded w-full\"\n          >\n            {data.map((level, i) => (\n              <option key={i} value={level.value}>\n                {level.title}\n              </option>\n            ))}\n          </select>\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default InputSelect;\n","import React, { FC, ReactElement } from \"react\";\n\ntype CardProps = {\n  title: string;\n  remain: number;\n  total: number;\n};\n\nconst Card: FC<CardProps> = ({ title, remain, total }): ReactElement => {\n  return (\n    <>\n      <div className=\" bg-primary-800 rounded text-center mr-4 overflow-hidden w-40\">\n        <div className=\"p-2 pb-1\">\n          <h4 className=\"text-white font-bold m-0\">{title}</h4>\n          <div className=\"-mt-0.5\">\n            <label className=\"text-sm text-gray-400\">Remaining:</label>\n            <h1 className=\"text-2xl -mt-2 font-bold text-white\">{remain}</h1>\n          </div>\n        </div>\n\n        <div className=\"bg-blue-300  text-black px-2 py-1\">\n          <label className=\"text-sm\">\n            Total: <b>{total}</b>\n          </label>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Card;\n","import React, { ChangeEvent, FC, ReactElement, useState } from \"react\";\nimport Button from \"../Buttons/Button\";\n\ntype TextInputProps = {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  onChangeComment: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  value: string;\n  comment: string;\n  error: string;\n  placeholderComment: string;\n  max?: number;\n  onSave: () => void;\n  onCancel: () => void;\n  loading: boolean;\n  minValue?: string;\n};\n\nconst TextInput: FC<TextInputProps> = ({\n  onChange,\n  onChangeComment,\n  value,\n  comment,\n  error,\n  placeholderComment,\n  max,\n  onSave,\n  onCancel,\n  loading,\n  minValue,\n}): ReactElement => {\n  const [valid_error, setValidError] = useState(\"\");\n\n  const Validate = () => {\n    if (!isNaN(+value) && value !== \"\") {\n      if (minValue !== undefined && +value < +minValue) {\n        setValidError(`The minimum value is ${minValue}`);\n        setTimeout(() => {\n          setValidError(\"\");\n        }, 2000);\n      } else {\n        onSave();\n        setValidError(\"\");\n      }\n    } else {\n      setValidError(\"Valid number is required\");\n      setTimeout(() => {\n        setValidError(\"\");\n      }, 2000);\n    }\n  };\n\n  /* function body */\n  return (\n    <>\n      <td className=\" border  w-20 relative\">\n        <input\n          type=\"number\"\n          className=\"w-full p-1 border-4 rounded-t border-primary-800 font-bold bg-transparent\"\n          value={value}\n          onChange={onChange}\n          max={max}\n          autoFocus\n          min={minValue}\n        />\n        <div className=\"animate__animated animate__zoomIn animate__faster absolute p-1 bg-primary-800 rounded-b -mt-0.5 rounded-tl  z-40 w-80 right-0 \">\n          {valid_error !== \"\" && (\n            <div className=\"bg-red-200 text-red-800 px-2 animate__animated animate__bounceIn  py-1 rounded text-sm\">\n              {valid_error}\n            </div>\n          )}\n\n          {error !== \"\" && (\n            <div className=\"bg-red-200 text-red-800 px-2 animate__animated animate__bounceIn  py-1 rounded text-sm\">\n              {error}\n            </div>\n          )}\n\n          <label\n            className=\"px-1 text-sm text-gray-300\"\n            htmlFor=\"selected_comment\"\n          >\n            Comment\n          </label>\n          <div className=\"px-1\">\n            <textarea\n              disabled={loading}\n              id=\"selected_comment\"\n              className=\"w-full p-1 rounded bg-white dark:bg-primary-900 dark:text-white\"\n              value={comment}\n              onChange={onChangeComment}\n              placeholder={placeholderComment}\n            ></textarea>\n          </div>\n          <div className=\"flex gap-2 px-1 pb-1\">\n            <Button\n              loading={loading}\n              onClick={Validate}\n              theme=\"success\"\n              disabled={loading}\n            >\n              Save change\n            </Button>\n\n            {loading === false && (\n              <Button\n                loading={loading}\n                onClick={onCancel}\n                theme=\"danger\"\n                // disabled={loading}\n              >\n                Cancel\n              </Button>\n            )}\n          </div>\n        </div>\n      </td>\n    </>\n  );\n};\nexport default TextInput;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  AcademicDDEDistribution,\n  Auth,\n  Basic,\n  FC_GetDistributionSchools,\n  FC_SaveDistributionSchool,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport CountDownCard from \"../../components/CountDownCard/CountDownCard\";\nimport DashboardContainer from \"../../components/DashboardContainer/DashboardContainer\";\nimport Heading from \"../../components/Heading/Heading\";\nimport InputSelect from \"../../components/Inputs/InputSelect\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport Loading from \"../../components/Loading/Loading\";\nimport TableEditModal from \"../../components/TableEditModal/TableEditModal\";\nimport { StoreState } from \"../../reducers\";\nimport { RenderPageAccess, UsersAccess } from \"../../utils/access\";\nimport { search, shortString } from \"../../utils/functions\";\ninterface RemainPostsByQualification {\n  qualification_id: string;\n  qualification_title: string;\n  total: number;\n  remain: number;\n}\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  basic: Basic;\n}\n\ninterface AppState {\n  loading: boolean;\n  error: {\n    target:\n      | \"requests-error\"\n      | \"loading-update-error\"\n      | \"main\"\n      | \"main-success\"\n      | \"update-error\"\n      | null;\n    msg: string;\n  };\n  requests: AcademicDDEDistribution[];\n  remain_post_by_levels: RemainPostsByQualification[];\n  loading_requests: boolean;\n  selected_level: string;\n  selected_request_id: string;\n  selected_value: string;\n  selected_comment: string;\n  selected_auto_level: string;\n  search: string;\n}\n\nclass _DistrictPostDistribution extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      requests: [],\n      remain_post_by_levels: [],\n      error: {\n        target: null,\n        msg: \"\",\n      },\n      loading_requests: false,\n      selected_level: \"\",\n      selected_request_id: \"\",\n      selected_value: \"0\",\n      selected_comment: \"\",\n      selected_auto_level: \"\",\n      search: \"\",\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n  };\n\n  selectRequest = (request: AcademicDDEDistribution) => {\n    if (this.state.selected_request_id === \"\") {\n      this.setState({\n        selected_comment: request.dde_distribution_comment,\n        selected_request_id: request.post_request_id,\n        selected_value: request.dde_post_distribution + \"\",\n      });\n    }\n  };\n\n  cancelRequest = () =>\n    this.setState({\n      selected_comment: \"\",\n      selected_request_id: \"\",\n      selected_value: \"0\",\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n\n  cleanAlert() {\n    setTimeout(() => {\n      this.setState({\n        error: {\n          target: null,\n          msg: \"\",\n        },\n      });\n    }, 2000);\n  }\n\n  saveRequest = (request: AcademicDDEDistribution): void => {\n    if (this.props.basic.academic_calender === null) return;\n    let academic_id = this.props.basic.academic_calender.academic_year_id;\n\n    this.setState({\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    FC_SaveDistributionSchool(\n      {\n        academic_year_id: academic_id,\n        dde_distribution_comment: this.state.selected_comment,\n        district_code: request.district_code,\n        dde_post_distribution: +this.state.selected_value,\n        position_code: request.position_code,\n        post_request_id: request.post_request_id,\n        qualification_id: request.qualification_id,\n      },\n      (status, data, msg) => {\n        console.log({ status, data, msg });\n\n        if (status === true && data !== null) {\n          if (data.academic_distributed !== null) {\n            this.cleanAlert();\n            this.setState({\n              loading: false,\n              error: {\n                target: \"main-success\",\n                msg: \"Post updated successful\",\n              },\n              remain_post_by_levels: this.state.remain_post_by_levels.map(\n                (itm) => {\n                  let findData = data.total_distributed.find(\n                    (el) => el.qualification_id === itm.qualification_id\n                  );\n                  return {\n                    ...itm,\n                    remain:\n                      findData === undefined ? 0 : +findData.remaining_limits,\n                  };\n                }\n              ),\n              requests:\n                data.academic_distributed === null\n                  ? this.state.requests\n                  : this.state.requests.map((req) =>\n                      req.post_request_id ===\n                      data.academic_distributed?.post_request_id\n                        ? {\n                            ...req,\n                            dde_post_distribution:\n                              +data.academic_distributed.dde_post_distribution,\n                            dde_distribution_comment:\n                              data.academic_distributed\n                                .dde_distribution_comment,\n                          }\n                        : req\n                    ),\n              selected_comment: \"\",\n              selected_value: \"\",\n              selected_request_id: \"\",\n            });\n          } else {\n            this.setState({\n              loading: false,\n              error: {\n                target: \"update-error\",\n                msg: data.message,\n              },\n            });\n          }\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: \"update-error\",\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    RenderPageAccess(\n      this.props.auth.role?.access,\n      UsersAccess.DDE_DISTRIBUTION,\n      () => {\n        this.startApp();\n      }\n    );\n  };\n\n  startApp = () => {\n    if (this.props.basic.academic_calender === null) {\n      this.setState({\n        error: {\n          target: \"main\",\n          msg: \"Failed to load data, please reload data\",\n        },\n      });\n    } else if (this.props.auth.district === null) {\n      this.setState({\n        error: {\n          target: \"main\",\n          msg: \"No district assigned to you\",\n        },\n      });\n    } else {\n      let academic_id = this.props.basic.academic_calender.academic_year_id;\n      let district_id = this.props.auth.district.district_code;\n      // console.log({ academic_id: academic_id, district_id: district_id });\n\n      this.setState({\n        loading_requests: true,\n      });\n\n      //* Request\n      FC_GetDistributionSchools(\n        { academic_id: academic_id, district_id: district_id },\n        (status, data, msg) => {\n          if (status === true && data !== null) {\n            console.log({ status, data, msg });\n\n            this.setState({\n              loading_requests: false,\n              requests: data.academic_distributed.map((itm) => ({\n                ...itm,\n                limits: +itm.dde_post_distribution,\n                dde_distribution_comment:\n                  itm.dde_distribution_comment === null\n                    ? \"\"\n                    : itm.dde_distribution_comment,\n              })),\n              remain_post_by_levels: this.props.basic.qualifications.map(\n                (qual) => {\n                  let FindRemail = data.total_distributed.find(\n                    (itm) => itm.qualification_id === qual.qualification_id\n                  );\n                  return {\n                    qualification_id: qual.qualification_id,\n                    qualification_title: qual.qualification_name,\n                    remain:\n                      FindRemail === undefined\n                        ? 0\n                        : +FindRemail.remaining_limits,\n                    total: FindRemail === undefined ? 0 : +FindRemail.limits,\n                  } as RemainPostsByQualification;\n                }\n              ),\n            });\n          } else {\n            this.setState({\n              loading_requests: false,\n              error: {\n                msg: msg,\n                target: \"requests-error\",\n              },\n            });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.state.loading_requests === true) {\n      return (\n        <DashboardContainer>\n          <div className=\"py-4 flex items-center justify-center\">\n            <Loading />\n          </div>\n        </DashboardContainer>\n      );\n    }\n\n    let RequestsList =\n      this.state.selected_level === \"\"\n        ? this.state.requests\n        : this.state.requests.filter(\n            (itm) => itm.qualification_id === this.state.selected_level\n          );\n\n    RequestsList = search(RequestsList, this.state.search, {\n      district_name: true,\n    });\n\n    return (\n      <>\n        {this.state.error.target === \"main-success\" && (\n          <Alert theme=\"success\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <DashboardContainer>\n          {this.state.error.target === \"main\" && (\n            <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n          )}\n          {this.state.error.target === \"loading-update-error\" && (\n            <Alert theme=\"danger\">{this.state.error.msg}</Alert>\n          )}\n\n          <Heading>\n            {this.props.auth.district?.district_name} district Distribution\n          </Heading>\n          <div className=\"flex mt-2\">\n            <div className=\"flex-1\">\n              <p className=\"opacity-60\">Distribution</p>\n              <div className=\"flex overflow-x-hidden\">\n                {this.state.remain_post_by_levels.map((level, i) => {\n                  if (i >= 5) return null;\n                  return (\n                    <CountDownCard\n                      key={i}\n                      remain={level.remain}\n                      title={level.qualification_title}\n                      total={level.total}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n\n            <div className=\"\"></div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"border border-t mt-2 mb-1 flex items-center px-3 rounded\">\n              <div className=\"flex-1 pr-2\">\n                <TextInput\n                  error=\"\"\n                  label=\"Search\"\n                  name=\"\"\n                  onChange={(e) => this.setState({ search: e.target.value })}\n                  placeholder=\"Search by district name\"\n                  value={this.state.search}\n                  size=\"sm\"\n                />\n              </div>\n              <div className=\"\">\n                <InputSelect\n                  data={[\n                    { title: \"All qualifications\", value: \"\" },\n                    ...this.props.basic.qualifications.map((el) => ({\n                      title: el.qualification_name,\n                      value: el.qualification_id,\n                    })),\n                  ]}\n                  error=\"\"\n                  name=\"select_level\"\n                  onChange={(e) =>\n                    this.setState({ selected_level: e.target.value })\n                  }\n                  label=\"Qualification\"\n                  placeholder=\"Select\"\n                  value={this.state.selected_level}\n                  size=\"sm\"\n                />\n              </div>\n            </div>\n            <table className=\"w-full text-left table-auto\">\n              <thead>\n                <tr>\n                  <th className=\"p-1 border\">#</th>\n                  <th className=\"p-1 border\">School name</th>\n                  <th className=\"p-1 border\">Post name</th>\n                  <th className=\"p-1 border\">Qualification</th>\n                  <th className=\"p-1 border\">\n                    Existing post{\"(\"}s{\")\"}\n                  </th>\n                  <th className=\"p-1 border \">School Post Requests</th>\n                  <th className=\"p-1 border\">DDE post requests</th>\n                  <th className=\"p-1 border text-green-800\">\n                    Post distribution\n                  </th>\n                  <th className=\"p-1 border\">Total posts</th>\n                  <th className=\"p-1 border\">Comment</th>\n                </tr>\n              </thead>\n              <tbody>\n                {RequestsList.length <= 0 ? (\n                  <tr>\n                    <td\n                      colSpan={6}\n                      className=\"p-6 border rounded border-opacity-25 animate__animated animate__fadeIn text-center\"\n                    >\n                      <Heading size=\"md\">No results found</Heading>\n                    </td>\n                  </tr>\n                ) : (\n                  RequestsList.map((req, i) => {\n                    let Qualification = this.props.basic.qualifications.find(\n                      (itm) => itm.qualification_id === req.qualification_id\n                    );\n                    return (\n                      <Fragment key={i}>\n                        <tr className=\"border rounded hover:bg-blue-500 hover:bg-opacity-20\">\n                          <td className=\"p-2 border\" key={i}>\n                            {i + 1}\n                          </td>\n                          <td className=\"p-2 border\">{req.school_name}</td>\n                          <td className=\"p-2 border\">{req.position_name}</td>\n                          <td className=\"p-2 border\">\n                            {Qualification?.qualification_name}\n                          </td>\n                          <td className=\"p-2 border\">{req.existing_post}</td>\n                          <td className=\"p-2 border  text-black\">\n                            {req.head_teacher_post_request}\n                          </td>\n                          <td className=\"p-2 border\">{req.dde_post_request}</td>\n\n                          {this.state.selected_request_id ===\n                          req.post_request_id ? (\n                            <>\n                              <TableEditModal\n                                error={\n                                  this.state.error.target === \"update-error\"\n                                    ? this.state.error.msg\n                                    : \"\"\n                                }\n                                comment={this.state.selected_comment}\n                                onChangeComment={(e) =>\n                                  this.setState({\n                                    selected_comment: e.target.value,\n                                  })\n                                }\n                                loading={this.state.loading}\n                                onCancel={this.cancelRequest.bind(this)}\n                                onChange={(e) =>\n                                  this.setState({\n                                    selected_value: e.target.value,\n                                  })\n                                }\n                                onSave={this.saveRequest.bind(this, req)}\n                                placeholderComment=\"Add comment\"\n                                value={this.state.selected_value}\n                                minValue={\"0\"}\n                              />\n                            </>\n                          ) : (\n                            <td\n                              className=\"p-2 border w-20 font-bold bg-green-100 bg-opacity-40 text-green-800 cursor-pointer\"\n                              onClick={this.selectRequest.bind(this, req)}\n                            >\n                              {req.dde_post_distribution}\n                            </td>\n                          )}\n                          <td className=\"p-2 border w-20 font-bold\">\n                            {+req.dde_post_distribution + +req.existing_post}\n                          </td>\n\n                          <td\n                            className=\"p-2 border\"\n                            title={req.dde_distribution_comment}\n                          >\n                            {shortString(req.dde_distribution_comment, 20)}\n                          </td>\n                        </tr>\n                      </Fragment>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </DashboardContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  basic,\n}: StoreState): { auth: Auth; basic: Basic } => {\n  return { auth: auth, basic: basic };\n};\n\nexport const DistrictPostDistribution = connect(\n  mapStateToProps,\n  {}\n)(_DistrictPostDistribution);\n"],"sourceRoot":""}