{"version":3,"sources":["containers/Login/Login.tsx"],"names":["_App","props","submitLogin","e","preventDefault","state","username","length","setState","error","target","msg","password","loading","FC_Login","auth_status","console","log","FC_AddBasicInfo","info_status","this","auth","isAuthenticated","to","theme","fixed","className","onSubmit","label","name","onChange","value","placeholder","disabled","type","full","React","Component","Login","connect"],"mappings":"yTAiCMA,E,kDACJ,WAAYC,GAAkB,IAAD,8BAC3B,cAAMA,IAaRC,YAAc,SAACC,GAIb,OAHAA,EAAEC,iBAGE,EAAKC,MAAMC,SAASC,QAAU,EACzB,EAAKC,SAAS,CACnBC,MAAO,CACLC,OAAQ,WACRC,IAAK,6CAMP,EAAKN,MAAMO,SAASL,QAAU,EACzB,EAAKC,SAAS,CACnBC,MAAO,CACLC,OAAQ,WACRC,IAAK,iDAKX,EAAKH,SAAS,CACZK,SAAS,EACTJ,MAAO,CACLC,OAAQ,KACRC,IAAK,WAGT,EAAKV,MAAMa,SACT,CACEF,SAAU,EAAKP,MAAMO,SACrBN,SAAU,EAAKD,MAAMC,WAEvB,SAACS,EAAaJ,GACZK,QAAQC,IAAI,CAAEF,cAAaJ,SAEP,IAAhBI,EACF,EAAKd,MAAMiB,iBAAgB,SAACC,EAAaR,OAMzC,EAAKH,SAAS,CACZC,MAAO,CACLC,OAAQ,OACRC,IAAKA,GAEPE,SAAS,SA7DjB,EAAKR,MAAQ,CACXC,SAAU,GACVM,SAAU,GACVC,SAAS,EACTJ,MAAO,CACLC,OAAQ,KACRC,IAAK,KATkB,E,0CAuE7B,WAAU,IAAD,OACP,OAAwC,IAApCS,KAAKnB,MAAMoB,KAAKC,gBACX,cAAC,IAAD,CAAUC,GAAG,eAGpB,qCAC+B,SAA5BH,KAAKf,MAAMI,MAAMC,QAChB,cAAC,IAAD,CAAOc,MAAM,SAASC,OAAK,EAA3B,SACGL,KAAKf,MAAMI,MAAME,MAItB,qBAAKe,UAAU,8DAAf,SACE,qBAAKA,UAAU,oFAAf,SACE,uBAAMC,SAAUP,KAAKlB,YAArB,UACE,oBAAIwB,UAAU,oFAAd,wBAIA,cAAC,IAAD,CACEjB,MAC8B,aAA5BW,KAAKf,MAAMI,MAAMC,OACbU,KAAKf,MAAMI,MAAME,IACjB,GAENiB,MAAM,QACNC,KAAK,QACLC,SAAU,SAAC3B,GAAD,OACR,EAAKK,SAAS,CACZF,SAAUH,EAAEO,OAAOqB,MACnBtB,MAAO,CACLC,OAAQ,KACRC,IAAK,OAIXqB,YAAY,cACZD,MAAOX,KAAKf,MAAMC,SAClB2B,SAAUb,KAAKf,MAAMQ,QACrBqB,KAAK,WAGP,cAAC,IAAD,CACEzB,MAC8B,aAA5BW,KAAKf,MAAMI,MAAMC,OACbU,KAAKf,MAAMI,MAAME,IACjB,GAENiB,MAAM,WACNC,KAAK,WACLC,SAAU,SAAC3B,GAAD,OACR,EAAKK,SAAS,CACZI,SAAUT,EAAEO,OAAOqB,MACnBtB,MAAO,CACLC,OAAQ,KACRC,IAAK,OAIXqB,YAAY,WACZD,MAAOX,KAAKf,MAAMO,SAClBqB,SAAUb,KAAKf,MAAMQ,QACrBqB,KAAK,aAGP,qBAAKR,UAAU,OAAf,SACE,cAAC,IAAD,CAAQS,MAAI,EAACtB,QAASO,KAAKf,MAAMQ,QAAjC,qBAKF,qBAAKa,UAAU,mBAAf,SACE,cAAC,IAAD,CAAMH,GAAG,mBAAmBG,UAAU,kBAAtC,mD,GAhJGU,IAAMC,WAgKZC,EAAQC,aAJG,SAAC,GACvB,MAAO,CAAElB,KADuD,EAAvCA,QAImB,CAC5CP,aACAI,qBAFmBqB,CAGlBvC","file":"static/js/36.5e6a63be.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  FC_AddBasicInfo,\n  FC_Login,\n  FT_AddBasicInfo,\n  FT_Login,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { StoreState } from \"../../reducers\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  FC_Login: FT_Login;\n  FC_AddBasicInfo: FT_AddBasicInfo;\n}\n\ninterface AppState {\n  username: string;\n  password: string;\n  loading: boolean;\n  error: {\n    target: \"username\" | \"password\" | \"main\" | null;\n    msg: string;\n  };\n}\n\nclass _App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n\n    //* Validation\n    if (this.state.username.length <= 4) {\n      return this.setState({\n        error: {\n          target: \"username\",\n          msg: \"Phone must not be lass than 4 character\",\n        },\n      });\n    }\n\n    //* Validation\n    if (this.state.password.length <= 4) {\n      return this.setState({\n        error: {\n          target: \"password\",\n          msg: \"Password must not be lass than 4 character\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    this.props.FC_Login(\n      {\n        password: this.state.password,\n        username: this.state.username,\n      },\n      (auth_status, msg) => {\n        console.log({ auth_status, msg });\n\n        if (auth_status === true) {\n          this.props.FC_AddBasicInfo((info_status, msg) => {\n            if (info_status === true) {\n              // this.props.FC_AddBasicInfo((status, msg) => {});\n            }\n          });\n        } else {\n          this.setState({\n            error: {\n              target: \"main\",\n              msg: msg,\n            },\n            loading: false,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.auth.isAuthenticated === true) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <>\n        {this.state.error.target === \"main\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"min-h-screen bg-gray-100 dark:bg-dark-900 flex items-center\">\n          <div className=\"bg-white py-10 rounded border mt-5  dark:bg-dark-800 w-full max-w-md mx-auto px-5\">\n            <form onSubmit={this.submitLogin}>\n              <h1 className=\"text-center text-3xl mb-6 text-primary-800 dark:text-primary-dark  font-extrabold\">\n                TMIS Login\n              </h1>\n\n              <TextInput\n                error={\n                  this.state.error.target === \"username\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label=\"Phone\"\n                name=\"phone\"\n                onChange={(e) =>\n                  this.setState({\n                    username: e.target.value,\n                    error: {\n                      target: null,\n                      msg: \"\",\n                    },\n                  })\n                }\n                placeholder=\"25070000000\"\n                value={this.state.username}\n                disabled={this.state.loading}\n                type=\"number\"\n              />\n\n              <TextInput\n                error={\n                  this.state.error.target === \"password\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label=\"Password\"\n                name=\"password\"\n                onChange={(e) =>\n                  this.setState({\n                    password: e.target.value,\n                    error: {\n                      target: null,\n                      msg: \"\",\n                    },\n                  })\n                }\n                placeholder=\"Password\"\n                value={this.state.password}\n                disabled={this.state.loading}\n                type=\"password\"\n              />\n\n              <div className=\"mt-5\">\n                <Button full loading={this.state.loading}>\n                  Login\n                </Button>\n              </div>\n\n              <div className=\"mt-4 text-center\">\n                <Link to=\"/forget-password\" className=\" cursor-pointer\">\n                  Forget your password?\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const Login = connect(mapStateToProps, {\n  FC_Login,\n  FC_AddBasicInfo,\n})(_App);\n"],"sourceRoot":""}